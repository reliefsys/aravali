

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Thu Apr 26 18:34:25 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F18877
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     6                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	stringtext2,global,class=STRCODE,delta=2
     9                           	psect	stringtext3,global,class=STRCODE,delta=2
    10                           	psect	stringtext4,global,class=STRCODE,delta=2
    11                           	psect	stringtext5,global,class=STRCODE,delta=2
    12                           	psect	stringtext6,global,class=STRCODE,delta=2
    13                           	psect	stringtext7,global,class=STRCODE,delta=2
    14                           	psect	stringtext8,global,class=STRCODE,delta=2
    15                           	psect	stringtext9,global,class=STRCODE,delta=2
    16                           	psect	stringtext10,global,class=STRCODE,delta=2
    17                           	psect	stringtext11,global,class=STRCODE,delta=2
    18                           	psect	stringtext12,global,class=STRCODE,delta=2
    19                           	psect	stringtext13,global,class=STRCODE,delta=2
    20                           	psect	stringtext14,global,class=STRCODE,delta=2
    21                           	psect	stringtext15,global,class=STRCODE,delta=2
    22                           	psect	stringtext16,global,class=STRCODE,delta=2
    23                           	psect	stringtext17,global,class=STRCODE,delta=2
    24                           	psect	stringtext18,global,class=STRCODE,delta=2
    25                           	psect	cinit,global,class=CODE,merge=1,delta=2
    26                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
    27                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    28                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    29                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    30                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    31                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    32                           	psect	inittext,global,class=CODE,delta=2
    33                           	psect	clrtext,global,class=CODE,delta=2
    34                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    35                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    36                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    37                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    38                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    39                           	psect	swtext1,local,class=CONST,delta=2
    40                           	psect	swtext2,local,class=CONST,delta=2
    41                           	psect	swtext3,local,class=CONST,delta=2
    42                           	psect	text1,local,class=CODE,merge=1,delta=2
    43                           	psect	text2,local,class=CODE,merge=1,delta=2
    44                           	psect	swtext4,local,class=CONST,delta=2
    45                           	psect	text3,local,class=CODE,merge=1,delta=2
    46                           	psect	text4,local,class=CODE,merge=1,delta=2
    47                           	psect	text5,local,class=CODE,merge=1,delta=2
    48                           	psect	text6,local,class=CODE,merge=1,delta=2
    49                           	psect	text7,local,class=CODE,merge=1,delta=2
    50                           	psect	text8,local,class=CODE,merge=1,delta=2
    51                           	psect	text9,local,class=CODE,merge=1,delta=2
    52                           	psect	text10,local,class=CODE,merge=1,delta=2
    53                           	psect	text11,local,class=CODE,merge=1,delta=2
    54                           	psect	text12,local,class=CODE,merge=1,delta=2
    55                           	psect	text13,local,class=CODE,merge=1,delta=2
    56                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    57                           	psect	text15,local,class=CODE,merge=1,delta=2
    58                           	psect	text16,local,class=CODE,merge=1,delta=2
    59                           	psect	text17,local,class=CODE,merge=1,delta=2
    60                           	psect	text18,local,class=CODE,merge=1,delta=2
    61                           	psect	text19,local,class=CODE,merge=1,delta=2
    62                           	psect	text20,local,class=CODE,merge=1,delta=2
    63                           	psect	text21,local,class=CODE,merge=1,delta=2
    64                           	psect	text22,local,class=CODE,merge=1,delta=2
    65                           	psect	text23,local,class=CODE,merge=1,delta=2
    66                           	psect	text24,local,class=CODE,merge=1,delta=2
    67                           	psect	text25,local,class=CODE,merge=1,delta=2
    68                           	psect	text26,local,class=CODE,merge=1,delta=2
    69                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    70                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    71                           	psect	text29,local,class=CODE,merge=1,delta=2
    72                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    73                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    74                           	psect	text32,local,class=CODE,merge=1,delta=2,group=1
    75                           	psect	text33,local,class=CODE,merge=1,delta=2,group=1
    76                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    77                           	psect	text35,local,class=CODE,merge=1,delta=2
    78                           	psect	text36,local,class=CODE,merge=1,delta=2
    79                           	psect	text37,local,class=CODE,merge=1,delta=2
    80                           	psect	text38,local,class=CODE,merge=1,delta=2
    81                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    82                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
    83                           	psect	text41,local,class=CODE,merge=1,delta=2
    84                           	psect	text42,local,class=CODE,merge=1,delta=2
    85                           	psect	text43,local,class=CODE,merge=1,delta=2,group=2
    86                           	psect	text44,local,class=CODE,merge=1,delta=2
    87                           	psect	text45,local,class=CODE,merge=1,delta=2
    88                           	psect	text46,local,class=CODE,merge=1,delta=2
    89                           	psect	text47,local,class=CODE,merge=1,delta=2
    90                           	psect	text48,local,class=CODE,merge=1,delta=2
    91                           	psect	text49,local,class=CODE,merge=1,delta=2
    92                           	psect	text50,local,class=CODE,merge=1,delta=2
    93                           	psect	text51,local,class=CODE,merge=1,delta=2
    94                           	psect	text52,local,class=CODE,merge=1,delta=2
    95                           	psect	text53,local,class=CODE,merge=1,delta=2
    96                           	psect	text54,local,class=CODE,merge=1,delta=2
    97                           	psect	text55,local,class=CODE,merge=1,delta=2
    98                           	psect	text56,local,class=CODE,merge=1,delta=2
    99                           	psect	text57,local,class=CODE,merge=1,delta=2
   100                           	psect	text58,local,class=CODE,merge=1,delta=2
   101                           	psect	text59,local,class=CODE,merge=1,delta=2
   102                           	psect	text60,local,class=CODE,merge=1,delta=2
   103                           	psect	text61,local,class=CODE,merge=1,delta=2
   104                           	psect	intentry,global,class=CODE,delta=2
   105                           	psect	text63,local,class=CODE,merge=1,delta=2
   106                           	psect	text64,local,class=CODE,merge=1,delta=2
   107                           	psect	text65,local,class=CODE,merge=1,delta=2
   108                           	psect	text66,local,class=CODE,merge=1,delta=2
   109                           	psect	text67,local,class=CODE,merge=1,delta=2
   110                           	psect	maintext_split_1,global,class=CODE,merge=1,split=1,delta=2
   111                           	psect	maintext_split_2,global,class=CODE,merge=1,split=1,delta=2
   112                           	dabs	1,0x7E,2
   113  0000                     
   114                           ; Version 1.44
   115                           ; Generated 14/09/2017 GMT
   116                           ; 
   117                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   118                           ; All rights reserved.
   119                           ; 
   120                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   121                           ; 
   122                           ; Redistribution and use in source and binary forms, with or without modification, are
   123                           ; permitted provided that the following conditions are met:
   124                           ; 
   125                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   126                           ;        conditions and the following disclaimer.
   127                           ; 
   128                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   129                           ;        of conditions and the following disclaimer in the documentation and/or other
   130                           ;        materials provided with the distribution.
   131                           ; 
   132                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   133                           ;        software without specific prior written permission.
   134                           ; 
   135                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   136                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   137                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   138                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   139                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   140                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   141                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   142                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   143                           ; 
   144                           ; 
   145                           ; Code-generator required, PIC16F18877 Definitions
   146                           ; 
   147                           ; SFR Addresses
   148  0000                     	;# 
   149  0001                     	;# 
   150  0002                     	;# 
   151  0003                     	;# 
   152  0004                     	;# 
   153  0005                     	;# 
   154  0006                     	;# 
   155  0007                     	;# 
   156  0008                     	;# 
   157  0009                     	;# 
   158  000A                     	;# 
   159  000B                     	;# 
   160  000C                     	;# 
   161  000D                     	;# 
   162  000E                     	;# 
   163  000F                     	;# 
   164  0010                     	;# 
   165  0011                     	;# 
   166  0012                     	;# 
   167  0013                     	;# 
   168  0014                     	;# 
   169  0015                     	;# 
   170  0016                     	;# 
   171  0017                     	;# 
   172  0018                     	;# 
   173  0019                     	;# 
   174  001A                     	;# 
   175  001C                     	;# 
   176  001C                     	;# 
   177  001D                     	;# 
   178  001D                     	;# 
   179  001E                     	;# 
   180  001F                     	;# 
   181  008C                     	;# 
   182  008C                     	;# 
   183  008D                     	;# 
   184  008E                     	;# 
   185  008E                     	;# 
   186  008F                     	;# 
   187  0090                     	;# 
   188  0090                     	;# 
   189  0091                     	;# 
   190  0093                     	;# 
   191  0094                     	;# 
   192  0095                     	;# 
   193  0096                     	;# 
   194  0097                     	;# 
   195  0098                     	;# 
   196  0099                     	;# 
   197  009A                     	;# 
   198  009B                     	;# 
   199  009C                     	;# 
   200  009D                     	;# 
   201  009E                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  0110                     	;# 
   208  0110                     	;# 
   209  0111                     	;# 
   210  0112                     	;# 
   211  0112                     	;# 
   212  0113                     	;# 
   213  0114                     	;# 
   214  0114                     	;# 
   215  0115                     	;# 
   216  0116                     	;# 
   217  0116                     	;# 
   218  0117                     	;# 
   219  0119                     	;# 
   220  0119                     	;# 
   221  0119                     	;# 
   222  011A                     	;# 
   223  011A                     	;# 
   224  011A                     	;# 
   225  011B                     	;# 
   226  011B                     	;# 
   227  011B                     	;# 
   228  011B                     	;# 
   229  011B                     	;# 
   230  011C                     	;# 
   231  011C                     	;# 
   232  011C                     	;# 
   233  011D                     	;# 
   234  011D                     	;# 
   235  011D                     	;# 
   236  011E                     	;# 
   237  011E                     	;# 
   238  011E                     	;# 
   239  011F                     	;# 
   240  011F                     	;# 
   241  011F                     	;# 
   242  011F                     	;# 
   243  011F                     	;# 
   244  018C                     	;# 
   245  018D                     	;# 
   246  018E                     	;# 
   247  018F                     	;# 
   248  0190                     	;# 
   249  0191                     	;# 
   250  0192                     	;# 
   251  0196                     	;# 
   252  0197                     	;# 
   253  0198                     	;# 
   254  0199                     	;# 
   255  019A                     	;# 
   256  019B                     	;# 
   257  019C                     	;# 
   258  020C                     	;# 
   259  020C                     	;# 
   260  020D                     	;# 
   261  020E                     	;# 
   262  020F                     	;# 
   263  020F                     	;# 
   264  0210                     	;# 
   265  0210                     	;# 
   266  0211                     	;# 
   267  0211                     	;# 
   268  0212                     	;# 
   269  0212                     	;# 
   270  0213                     	;# 
   271  0214                     	;# 
   272  0215                     	;# 
   273  0215                     	;# 
   274  0216                     	;# 
   275  0216                     	;# 
   276  0217                     	;# 
   277  0217                     	;# 
   278  0218                     	;# 
   279  0218                     	;# 
   280  0219                     	;# 
   281  021A                     	;# 
   282  021B                     	;# 
   283  021B                     	;# 
   284  021C                     	;# 
   285  021C                     	;# 
   286  021D                     	;# 
   287  021D                     	;# 
   288  021E                     	;# 
   289  021F                     	;# 
   290  028C                     	;# 
   291  028C                     	;# 
   292  028D                     	;# 
   293  028D                     	;# 
   294  028E                     	;# 
   295  028F                     	;# 
   296  0290                     	;# 
   297  0290                     	;# 
   298  0291                     	;# 
   299  0292                     	;# 
   300  0292                     	;# 
   301  0293                     	;# 
   302  0293                     	;# 
   303  0294                     	;# 
   304  0295                     	;# 
   305  0296                     	;# 
   306  0296                     	;# 
   307  0297                     	;# 
   308  0298                     	;# 
   309  0298                     	;# 
   310  0299                     	;# 
   311  0299                     	;# 
   312  029A                     	;# 
   313  029B                     	;# 
   314  029C                     	;# 
   315  029C                     	;# 
   316  029D                     	;# 
   317  030C                     	;# 
   318  030C                     	;# 
   319  030D                     	;# 
   320  030E                     	;# 
   321  030F                     	;# 
   322  0310                     	;# 
   323  0310                     	;# 
   324  0311                     	;# 
   325  0312                     	;# 
   326  0313                     	;# 
   327  0314                     	;# 
   328  0314                     	;# 
   329  0315                     	;# 
   330  0316                     	;# 
   331  0317                     	;# 
   332  0318                     	;# 
   333  0318                     	;# 
   334  0319                     	;# 
   335  031A                     	;# 
   336  031B                     	;# 
   337  031C                     	;# 
   338  031C                     	;# 
   339  031D                     	;# 
   340  031E                     	;# 
   341  031F                     	;# 
   342  038C                     	;# 
   343  038D                     	;# 
   344  038E                     	;# 
   345  0390                     	;# 
   346  0391                     	;# 
   347  0392                     	;# 
   348  040C                     	;# 
   349  040D                     	;# 
   350  040E                     	;# 
   351  040F                     	;# 
   352  0410                     	;# 
   353  0411                     	;# 
   354  0416                     	;# 
   355  0416                     	;# 
   356  0417                     	;# 
   357  0418                     	;# 
   358  0418                     	;# 
   359  0419                     	;# 
   360  041A                     	;# 
   361  041A                     	;# 
   362  041B                     	;# 
   363  041C                     	;# 
   364  041C                     	;# 
   365  041D                     	;# 
   366  041E                     	;# 
   367  041F                     	;# 
   368  048C                     	;# 
   369  048C                     	;# 
   370  048D                     	;# 
   371  048E                     	;# 
   372  048F                     	;# 
   373  048F                     	;# 
   374  0490                     	;# 
   375  0491                     	;# 
   376  0492                     	;# 
   377  0492                     	;# 
   378  0493                     	;# 
   379  0494                     	;# 
   380  0495                     	;# 
   381  0495                     	;# 
   382  0496                     	;# 
   383  0497                     	;# 
   384  0498                     	;# 
   385  0499                     	;# 
   386  049A                     	;# 
   387  049B                     	;# 
   388  049C                     	;# 
   389  049D                     	;# 
   390  050C                     	;# 
   391  050C                     	;# 
   392  050D                     	;# 
   393  050E                     	;# 
   394  050F                     	;# 
   395  050F                     	;# 
   396  0510                     	;# 
   397  0511                     	;# 
   398  0512                     	;# 
   399  0512                     	;# 
   400  0513                     	;# 
   401  0514                     	;# 
   402  0515                     	;# 
   403  0515                     	;# 
   404  0516                     	;# 
   405  0517                     	;# 
   406  0518                     	;# 
   407  0519                     	;# 
   408  051A                     	;# 
   409  051B                     	;# 
   410  051C                     	;# 
   411  051D                     	;# 
   412  058C                     	;# 
   413  058C                     	;# 
   414  058D                     	;# 
   415  058E                     	;# 
   416  058F                     	;# 
   417  058F                     	;# 
   418  0590                     	;# 
   419  0591                     	;# 
   420  0592                     	;# 
   421  0593                     	;# 
   422  060C                     	;# 
   423  060D                     	;# 
   424  060E                     	;# 
   425  060F                     	;# 
   426  0610                     	;# 
   427  0611                     	;# 
   428  0612                     	;# 
   429  0613                     	;# 
   430  0614                     	;# 
   431  0616                     	;# 
   432  0617                     	;# 
   433  0618                     	;# 
   434  0619                     	;# 
   435  061A                     	;# 
   436  061B                     	;# 
   437  061C                     	;# 
   438  061D                     	;# 
   439  061E                     	;# 
   440  068C                     	;# 
   441  068D                     	;# 
   442  068E                     	;# 
   443  068F                     	;# 
   444  0690                     	;# 
   445  0691                     	;# 
   446  0692                     	;# 
   447  0693                     	;# 
   448  0694                     	;# 
   449  070C                     	;# 
   450  070D                     	;# 
   451  070E                     	;# 
   452  070F                     	;# 
   453  0710                     	;# 
   454  0711                     	;# 
   455  0712                     	;# 
   456  0713                     	;# 
   457  0714                     	;# 
   458  0716                     	;# 
   459  0717                     	;# 
   460  0718                     	;# 
   461  0719                     	;# 
   462  071A                     	;# 
   463  071B                     	;# 
   464  071C                     	;# 
   465  071D                     	;# 
   466  071E                     	;# 
   467  0796                     	;# 
   468  0797                     	;# 
   469  0798                     	;# 
   470  0799                     	;# 
   471  079A                     	;# 
   472  079B                     	;# 
   473  080C                     	;# 
   474  080D                     	;# 
   475  080E                     	;# 
   476  080F                     	;# 
   477  0810                     	;# 
   478  0811                     	;# 
   479  0812                     	;# 
   480  0813                     	;# 
   481  0814                     	;# 
   482  081A                     	;# 
   483  081B                     	;# 
   484  081C                     	;# 
   485  081D                     	;# 
   486  081E                     	;# 
   487  081F                     	;# 
   488  088C                     	;# 
   489  088D                     	;# 
   490  088E                     	;# 
   491  088F                     	;# 
   492  0890                     	;# 
   493  0891                     	;# 
   494  0892                     	;# 
   495  0893                     	;# 
   496  0895                     	;# 
   497  0896                     	;# 
   498  0897                     	;# 
   499  0898                     	;# 
   500  0899                     	;# 
   501  089A                     	;# 
   502  089B                     	;# 
   503  090C                     	;# 
   504  090E                     	;# 
   505  090F                     	;# 
   506  091F                     	;# 
   507  098F                     	;# 
   508  098F                     	;# 
   509  0990                     	;# 
   510  0991                     	;# 
   511  0992                     	;# 
   512  0993                     	;# 
   513  0994                     	;# 
   514  0995                     	;# 
   515  0996                     	;# 
   516  0997                     	;# 
   517  1E0F                     	;# 
   518  1E10                     	;# 
   519  1E11                     	;# 
   520  1E12                     	;# 
   521  1E13                     	;# 
   522  1E14                     	;# 
   523  1E15                     	;# 
   524  1E16                     	;# 
   525  1E17                     	;# 
   526  1E18                     	;# 
   527  1E19                     	;# 
   528  1E1A                     	;# 
   529  1E1B                     	;# 
   530  1E1C                     	;# 
   531  1E1D                     	;# 
   532  1E1E                     	;# 
   533  1E1F                     	;# 
   534  1E20                     	;# 
   535  1E21                     	;# 
   536  1E22                     	;# 
   537  1E23                     	;# 
   538  1E24                     	;# 
   539  1E25                     	;# 
   540  1E26                     	;# 
   541  1E27                     	;# 
   542  1E28                     	;# 
   543  1E29                     	;# 
   544  1E2A                     	;# 
   545  1E2B                     	;# 
   546  1E2C                     	;# 
   547  1E2D                     	;# 
   548  1E2E                     	;# 
   549  1E2F                     	;# 
   550  1E30                     	;# 
   551  1E31                     	;# 
   552  1E32                     	;# 
   553  1E33                     	;# 
   554  1E34                     	;# 
   555  1E35                     	;# 
   556  1E36                     	;# 
   557  1E37                     	;# 
   558  1E8F                     	;# 
   559  1E90                     	;# 
   560  1E91                     	;# 
   561  1E92                     	;# 
   562  1E93                     	;# 
   563  1E94                     	;# 
   564  1E95                     	;# 
   565  1E96                     	;# 
   566  1E97                     	;# 
   567  1E9C                     	;# 
   568  1E9D                     	;# 
   569  1E9E                     	;# 
   570  1EA1                     	;# 
   571  1EA2                     	;# 
   572  1EA3                     	;# 
   573  1EA4                     	;# 
   574  1EA5                     	;# 
   575  1EA9                     	;# 
   576  1EAA                     	;# 
   577  1EAB                     	;# 
   578  1EAC                     	;# 
   579  1EB1                     	;# 
   580  1EB2                     	;# 
   581  1EB3                     	;# 
   582  1EB8                     	;# 
   583  1EB9                     	;# 
   584  1EBA                     	;# 
   585  1EBB                     	;# 
   586  1EBC                     	;# 
   587  1EBD                     	;# 
   588  1EBE                     	;# 
   589  1EC3                     	;# 
   590  1EC5                     	;# 
   591  1EC6                     	;# 
   592  1EC7                     	;# 
   593  1EC8                     	;# 
   594  1EC9                     	;# 
   595  1ECA                     	;# 
   596  1ECB                     	;# 
   597  1ECC                     	;# 
   598  1F10                     	;# 
   599  1F11                     	;# 
   600  1F12                     	;# 
   601  1F13                     	;# 
   602  1F14                     	;# 
   603  1F15                     	;# 
   604  1F16                     	;# 
   605  1F17                     	;# 
   606  1F18                     	;# 
   607  1F19                     	;# 
   608  1F1A                     	;# 
   609  1F1B                     	;# 
   610  1F1C                     	;# 
   611  1F1D                     	;# 
   612  1F1E                     	;# 
   613  1F1F                     	;# 
   614  1F20                     	;# 
   615  1F21                     	;# 
   616  1F22                     	;# 
   617  1F23                     	;# 
   618  1F24                     	;# 
   619  1F25                     	;# 
   620  1F26                     	;# 
   621  1F27                     	;# 
   622  1F28                     	;# 
   623  1F29                     	;# 
   624  1F2A                     	;# 
   625  1F2B                     	;# 
   626  1F2C                     	;# 
   627  1F2D                     	;# 
   628  1F2E                     	;# 
   629  1F2F                     	;# 
   630  1F30                     	;# 
   631  1F31                     	;# 
   632  1F32                     	;# 
   633  1F38                     	;# 
   634  1F39                     	;# 
   635  1F3A                     	;# 
   636  1F3B                     	;# 
   637  1F3C                     	;# 
   638  1F3D                     	;# 
   639  1F3E                     	;# 
   640  1F3F                     	;# 
   641  1F40                     	;# 
   642  1F41                     	;# 
   643  1F43                     	;# 
   644  1F44                     	;# 
   645  1F45                     	;# 
   646  1F46                     	;# 
   647  1F47                     	;# 
   648  1F48                     	;# 
   649  1F49                     	;# 
   650  1F4A                     	;# 
   651  1F4B                     	;# 
   652  1F4C                     	;# 
   653  1F4E                     	;# 
   654  1F4F                     	;# 
   655  1F50                     	;# 
   656  1F51                     	;# 
   657  1F52                     	;# 
   658  1F53                     	;# 
   659  1F54                     	;# 
   660  1F55                     	;# 
   661  1F56                     	;# 
   662  1F57                     	;# 
   663  1F59                     	;# 
   664  1F5A                     	;# 
   665  1F5B                     	;# 
   666  1F5C                     	;# 
   667  1F5D                     	;# 
   668  1F61                     	;# 
   669  1F62                     	;# 
   670  1F64                     	;# 
   671  1F65                     	;# 
   672  1F66                     	;# 
   673  1F67                     	;# 
   674  1F68                     	;# 
   675  1F69                     	;# 
   676  1F6A                     	;# 
   677  1F6B                     	;# 
   678  1F6C                     	;# 
   679  1F6D                     	;# 
   680  1FE4                     	;# 
   681  1FE5                     	;# 
   682  1FE6                     	;# 
   683  1FE7                     	;# 
   684  1FE8                     	;# 
   685  1FE9                     	;# 
   686  1FEA                     	;# 
   687  1FEB                     	;# 
   688  1FED                     	;# 
   689  1FEE                     	;# 
   690  1FEF                     	;# 
   691  0000                     	;# 
   692  0001                     	;# 
   693  0002                     	;# 
   694  0003                     	;# 
   695  0004                     	;# 
   696  0005                     	;# 
   697  0006                     	;# 
   698  0007                     	;# 
   699  0008                     	;# 
   700  0009                     	;# 
   701  000A                     	;# 
   702  000B                     	;# 
   703  000C                     	;# 
   704  000D                     	;# 
   705  000E                     	;# 
   706  000F                     	;# 
   707  0010                     	;# 
   708  0011                     	;# 
   709  0012                     	;# 
   710  0013                     	;# 
   711  0014                     	;# 
   712  0015                     	;# 
   713  0016                     	;# 
   714  0017                     	;# 
   715  0018                     	;# 
   716  0019                     	;# 
   717  001A                     	;# 
   718  001C                     	;# 
   719  001C                     	;# 
   720  001D                     	;# 
   721  001D                     	;# 
   722  001E                     	;# 
   723  001F                     	;# 
   724  008C                     	;# 
   725  008C                     	;# 
   726  008D                     	;# 
   727  008E                     	;# 
   728  008E                     	;# 
   729  008F                     	;# 
   730  0090                     	;# 
   731  0090                     	;# 
   732  0091                     	;# 
   733  0093                     	;# 
   734  0094                     	;# 
   735  0095                     	;# 
   736  0096                     	;# 
   737  0097                     	;# 
   738  0098                     	;# 
   739  0099                     	;# 
   740  009A                     	;# 
   741  009B                     	;# 
   742  009C                     	;# 
   743  009D                     	;# 
   744  009E                     	;# 
   745  010C                     	;# 
   746  010D                     	;# 
   747  010E                     	;# 
   748  010E                     	;# 
   749  010F                     	;# 
   750  0110                     	;# 
   751  0110                     	;# 
   752  0111                     	;# 
   753  0112                     	;# 
   754  0112                     	;# 
   755  0113                     	;# 
   756  0114                     	;# 
   757  0114                     	;# 
   758  0115                     	;# 
   759  0116                     	;# 
   760  0116                     	;# 
   761  0117                     	;# 
   762  0119                     	;# 
   763  0119                     	;# 
   764  0119                     	;# 
   765  011A                     	;# 
   766  011A                     	;# 
   767  011A                     	;# 
   768  011B                     	;# 
   769  011B                     	;# 
   770  011B                     	;# 
   771  011B                     	;# 
   772  011B                     	;# 
   773  011C                     	;# 
   774  011C                     	;# 
   775  011C                     	;# 
   776  011D                     	;# 
   777  011D                     	;# 
   778  011D                     	;# 
   779  011E                     	;# 
   780  011E                     	;# 
   781  011E                     	;# 
   782  011F                     	;# 
   783  011F                     	;# 
   784  011F                     	;# 
   785  011F                     	;# 
   786  011F                     	;# 
   787  018C                     	;# 
   788  018D                     	;# 
   789  018E                     	;# 
   790  018F                     	;# 
   791  0190                     	;# 
   792  0191                     	;# 
   793  0192                     	;# 
   794  0196                     	;# 
   795  0197                     	;# 
   796  0198                     	;# 
   797  0199                     	;# 
   798  019A                     	;# 
   799  019B                     	;# 
   800  019C                     	;# 
   801  020C                     	;# 
   802  020C                     	;# 
   803  020D                     	;# 
   804  020E                     	;# 
   805  020F                     	;# 
   806  020F                     	;# 
   807  0210                     	;# 
   808  0210                     	;# 
   809  0211                     	;# 
   810  0211                     	;# 
   811  0212                     	;# 
   812  0212                     	;# 
   813  0213                     	;# 
   814  0214                     	;# 
   815  0215                     	;# 
   816  0215                     	;# 
   817  0216                     	;# 
   818  0216                     	;# 
   819  0217                     	;# 
   820  0217                     	;# 
   821  0218                     	;# 
   822  0218                     	;# 
   823  0219                     	;# 
   824  021A                     	;# 
   825  021B                     	;# 
   826  021B                     	;# 
   827  021C                     	;# 
   828  021C                     	;# 
   829  021D                     	;# 
   830  021D                     	;# 
   831  021E                     	;# 
   832  021F                     	;# 
   833  028C                     	;# 
   834  028C                     	;# 
   835  028D                     	;# 
   836  028D                     	;# 
   837  028E                     	;# 
   838  028F                     	;# 
   839  0290                     	;# 
   840  0290                     	;# 
   841  0291                     	;# 
   842  0292                     	;# 
   843  0292                     	;# 
   844  0293                     	;# 
   845  0293                     	;# 
   846  0294                     	;# 
   847  0295                     	;# 
   848  0296                     	;# 
   849  0296                     	;# 
   850  0297                     	;# 
   851  0298                     	;# 
   852  0298                     	;# 
   853  0299                     	;# 
   854  0299                     	;# 
   855  029A                     	;# 
   856  029B                     	;# 
   857  029C                     	;# 
   858  029C                     	;# 
   859  029D                     	;# 
   860  030C                     	;# 
   861  030C                     	;# 
   862  030D                     	;# 
   863  030E                     	;# 
   864  030F                     	;# 
   865  0310                     	;# 
   866  0310                     	;# 
   867  0311                     	;# 
   868  0312                     	;# 
   869  0313                     	;# 
   870  0314                     	;# 
   871  0314                     	;# 
   872  0315                     	;# 
   873  0316                     	;# 
   874  0317                     	;# 
   875  0318                     	;# 
   876  0318                     	;# 
   877  0319                     	;# 
   878  031A                     	;# 
   879  031B                     	;# 
   880  031C                     	;# 
   881  031C                     	;# 
   882  031D                     	;# 
   883  031E                     	;# 
   884  031F                     	;# 
   885  038C                     	;# 
   886  038D                     	;# 
   887  038E                     	;# 
   888  0390                     	;# 
   889  0391                     	;# 
   890  0392                     	;# 
   891  040C                     	;# 
   892  040D                     	;# 
   893  040E                     	;# 
   894  040F                     	;# 
   895  0410                     	;# 
   896  0411                     	;# 
   897  0416                     	;# 
   898  0416                     	;# 
   899  0417                     	;# 
   900  0418                     	;# 
   901  0418                     	;# 
   902  0419                     	;# 
   903  041A                     	;# 
   904  041A                     	;# 
   905  041B                     	;# 
   906  041C                     	;# 
   907  041C                     	;# 
   908  041D                     	;# 
   909  041E                     	;# 
   910  041F                     	;# 
   911  048C                     	;# 
   912  048C                     	;# 
   913  048D                     	;# 
   914  048E                     	;# 
   915  048F                     	;# 
   916  048F                     	;# 
   917  0490                     	;# 
   918  0491                     	;# 
   919  0492                     	;# 
   920  0492                     	;# 
   921  0493                     	;# 
   922  0494                     	;# 
   923  0495                     	;# 
   924  0495                     	;# 
   925  0496                     	;# 
   926  0497                     	;# 
   927  0498                     	;# 
   928  0499                     	;# 
   929  049A                     	;# 
   930  049B                     	;# 
   931  049C                     	;# 
   932  049D                     	;# 
   933  050C                     	;# 
   934  050C                     	;# 
   935  050D                     	;# 
   936  050E                     	;# 
   937  050F                     	;# 
   938  050F                     	;# 
   939  0510                     	;# 
   940  0511                     	;# 
   941  0512                     	;# 
   942  0512                     	;# 
   943  0513                     	;# 
   944  0514                     	;# 
   945  0515                     	;# 
   946  0515                     	;# 
   947  0516                     	;# 
   948  0517                     	;# 
   949  0518                     	;# 
   950  0519                     	;# 
   951  051A                     	;# 
   952  051B                     	;# 
   953  051C                     	;# 
   954  051D                     	;# 
   955  058C                     	;# 
   956  058C                     	;# 
   957  058D                     	;# 
   958  058E                     	;# 
   959  058F                     	;# 
   960  058F                     	;# 
   961  0590                     	;# 
   962  0591                     	;# 
   963  0592                     	;# 
   964  0593                     	;# 
   965  060C                     	;# 
   966  060D                     	;# 
   967  060E                     	;# 
   968  060F                     	;# 
   969  0610                     	;# 
   970  0611                     	;# 
   971  0612                     	;# 
   972  0613                     	;# 
   973  0614                     	;# 
   974  0616                     	;# 
   975  0617                     	;# 
   976  0618                     	;# 
   977  0619                     	;# 
   978  061A                     	;# 
   979  061B                     	;# 
   980  061C                     	;# 
   981  061D                     	;# 
   982  061E                     	;# 
   983  068C                     	;# 
   984  068D                     	;# 
   985  068E                     	;# 
   986  068F                     	;# 
   987  0690                     	;# 
   988  0691                     	;# 
   989  0692                     	;# 
   990  0693                     	;# 
   991  0694                     	;# 
   992  070C                     	;# 
   993  070D                     	;# 
   994  070E                     	;# 
   995  070F                     	;# 
   996  0710                     	;# 
   997  0711                     	;# 
   998  0712                     	;# 
   999  0713                     	;# 
  1000  0714                     	;# 
  1001  0716                     	;# 
  1002  0717                     	;# 
  1003  0718                     	;# 
  1004  0719                     	;# 
  1005  071A                     	;# 
  1006  071B                     	;# 
  1007  071C                     	;# 
  1008  071D                     	;# 
  1009  071E                     	;# 
  1010  0796                     	;# 
  1011  0797                     	;# 
  1012  0798                     	;# 
  1013  0799                     	;# 
  1014  079A                     	;# 
  1015  079B                     	;# 
  1016  080C                     	;# 
  1017  080D                     	;# 
  1018  080E                     	;# 
  1019  080F                     	;# 
  1020  0810                     	;# 
  1021  0811                     	;# 
  1022  0812                     	;# 
  1023  0813                     	;# 
  1024  0814                     	;# 
  1025  081A                     	;# 
  1026  081B                     	;# 
  1027  081C                     	;# 
  1028  081D                     	;# 
  1029  081E                     	;# 
  1030  081F                     	;# 
  1031  088C                     	;# 
  1032  088D                     	;# 
  1033  088E                     	;# 
  1034  088F                     	;# 
  1035  0890                     	;# 
  1036  0891                     	;# 
  1037  0892                     	;# 
  1038  0893                     	;# 
  1039  0895                     	;# 
  1040  0896                     	;# 
  1041  0897                     	;# 
  1042  0898                     	;# 
  1043  0899                     	;# 
  1044  089A                     	;# 
  1045  089B                     	;# 
  1046  090C                     	;# 
  1047  090E                     	;# 
  1048  090F                     	;# 
  1049  091F                     	;# 
  1050  098F                     	;# 
  1051  098F                     	;# 
  1052  0990                     	;# 
  1053  0991                     	;# 
  1054  0992                     	;# 
  1055  0993                     	;# 
  1056  0994                     	;# 
  1057  0995                     	;# 
  1058  0996                     	;# 
  1059  0997                     	;# 
  1060  1E0F                     	;# 
  1061  1E10                     	;# 
  1062  1E11                     	;# 
  1063  1E12                     	;# 
  1064  1E13                     	;# 
  1065  1E14                     	;# 
  1066  1E15                     	;# 
  1067  1E16                     	;# 
  1068  1E17                     	;# 
  1069  1E18                     	;# 
  1070  1E19                     	;# 
  1071  1E1A                     	;# 
  1072  1E1B                     	;# 
  1073  1E1C                     	;# 
  1074  1E1D                     	;# 
  1075  1E1E                     	;# 
  1076  1E1F                     	;# 
  1077  1E20                     	;# 
  1078  1E21                     	;# 
  1079  1E22                     	;# 
  1080  1E23                     	;# 
  1081  1E24                     	;# 
  1082  1E25                     	;# 
  1083  1E26                     	;# 
  1084  1E27                     	;# 
  1085  1E28                     	;# 
  1086  1E29                     	;# 
  1087  1E2A                     	;# 
  1088  1E2B                     	;# 
  1089  1E2C                     	;# 
  1090  1E2D                     	;# 
  1091  1E2E                     	;# 
  1092  1E2F                     	;# 
  1093  1E30                     	;# 
  1094  1E31                     	;# 
  1095  1E32                     	;# 
  1096  1E33                     	;# 
  1097  1E34                     	;# 
  1098  1E35                     	;# 
  1099  1E36                     	;# 
  1100  1E37                     	;# 
  1101  1E8F                     	;# 
  1102  1E90                     	;# 
  1103  1E91                     	;# 
  1104  1E92                     	;# 
  1105  1E93                     	;# 
  1106  1E94                     	;# 
  1107  1E95                     	;# 
  1108  1E96                     	;# 
  1109  1E97                     	;# 
  1110  1E9C                     	;# 
  1111  1E9D                     	;# 
  1112  1E9E                     	;# 
  1113  1EA1                     	;# 
  1114  1EA2                     	;# 
  1115  1EA3                     	;# 
  1116  1EA4                     	;# 
  1117  1EA5                     	;# 
  1118  1EA9                     	;# 
  1119  1EAA                     	;# 
  1120  1EAB                     	;# 
  1121  1EAC                     	;# 
  1122  1EB1                     	;# 
  1123  1EB2                     	;# 
  1124  1EB3                     	;# 
  1125  1EB8                     	;# 
  1126  1EB9                     	;# 
  1127  1EBA                     	;# 
  1128  1EBB                     	;# 
  1129  1EBC                     	;# 
  1130  1EBD                     	;# 
  1131  1EBE                     	;# 
  1132  1EC3                     	;# 
  1133  1EC5                     	;# 
  1134  1EC6                     	;# 
  1135  1EC7                     	;# 
  1136  1EC8                     	;# 
  1137  1EC9                     	;# 
  1138  1ECA                     	;# 
  1139  1ECB                     	;# 
  1140  1ECC                     	;# 
  1141  1F10                     	;# 
  1142  1F11                     	;# 
  1143  1F12                     	;# 
  1144  1F13                     	;# 
  1145  1F14                     	;# 
  1146  1F15                     	;# 
  1147  1F16                     	;# 
  1148  1F17                     	;# 
  1149  1F18                     	;# 
  1150  1F19                     	;# 
  1151  1F1A                     	;# 
  1152  1F1B                     	;# 
  1153  1F1C                     	;# 
  1154  1F1D                     	;# 
  1155  1F1E                     	;# 
  1156  1F1F                     	;# 
  1157  1F20                     	;# 
  1158  1F21                     	;# 
  1159  1F22                     	;# 
  1160  1F23                     	;# 
  1161  1F24                     	;# 
  1162  1F25                     	;# 
  1163  1F26                     	;# 
  1164  1F27                     	;# 
  1165  1F28                     	;# 
  1166  1F29                     	;# 
  1167  1F2A                     	;# 
  1168  1F2B                     	;# 
  1169  1F2C                     	;# 
  1170  1F2D                     	;# 
  1171  1F2E                     	;# 
  1172  1F2F                     	;# 
  1173  1F30                     	;# 
  1174  1F31                     	;# 
  1175  1F32                     	;# 
  1176  1F38                     	;# 
  1177  1F39                     	;# 
  1178  1F3A                     	;# 
  1179  1F3B                     	;# 
  1180  1F3C                     	;# 
  1181  1F3D                     	;# 
  1182  1F3E                     	;# 
  1183  1F3F                     	;# 
  1184  1F40                     	;# 
  1185  1F41                     	;# 
  1186  1F43                     	;# 
  1187  1F44                     	;# 
  1188  1F45                     	;# 
  1189  1F46                     	;# 
  1190  1F47                     	;# 
  1191  1F48                     	;# 
  1192  1F49                     	;# 
  1193  1F4A                     	;# 
  1194  1F4B                     	;# 
  1195  1F4C                     	;# 
  1196  1F4E                     	;# 
  1197  1F4F                     	;# 
  1198  1F50                     	;# 
  1199  1F51                     	;# 
  1200  1F52                     	;# 
  1201  1F53                     	;# 
  1202  1F54                     	;# 
  1203  1F55                     	;# 
  1204  1F56                     	;# 
  1205  1F57                     	;# 
  1206  1F59                     	;# 
  1207  1F5A                     	;# 
  1208  1F5B                     	;# 
  1209  1F5C                     	;# 
  1210  1F5D                     	;# 
  1211  1F61                     	;# 
  1212  1F62                     	;# 
  1213  1F64                     	;# 
  1214  1F65                     	;# 
  1215  1F66                     	;# 
  1216  1F67                     	;# 
  1217  1F68                     	;# 
  1218  1F69                     	;# 
  1219  1F6A                     	;# 
  1220  1F6B                     	;# 
  1221  1F6C                     	;# 
  1222  1F6D                     	;# 
  1223  1FE4                     	;# 
  1224  1FE5                     	;# 
  1225  1FE6                     	;# 
  1226  1FE7                     	;# 
  1227  1FE8                     	;# 
  1228  1FE9                     	;# 
  1229  1FEA                     	;# 
  1230  1FEB                     	;# 
  1231  1FED                     	;# 
  1232  1FEE                     	;# 
  1233  1FEF                     	;# 
  1234  0000                     	;# 
  1235  0001                     	;# 
  1236  0002                     	;# 
  1237  0003                     	;# 
  1238  0004                     	;# 
  1239  0005                     	;# 
  1240  0006                     	;# 
  1241  0007                     	;# 
  1242  0008                     	;# 
  1243  0009                     	;# 
  1244  000A                     	;# 
  1245  000B                     	;# 
  1246  000C                     	;# 
  1247  000D                     	;# 
  1248  000E                     	;# 
  1249  000F                     	;# 
  1250  0010                     	;# 
  1251  0011                     	;# 
  1252  0012                     	;# 
  1253  0013                     	;# 
  1254  0014                     	;# 
  1255  0015                     	;# 
  1256  0016                     	;# 
  1257  0017                     	;# 
  1258  0018                     	;# 
  1259  0019                     	;# 
  1260  001A                     	;# 
  1261  001C                     	;# 
  1262  001C                     	;# 
  1263  001D                     	;# 
  1264  001D                     	;# 
  1265  001E                     	;# 
  1266  001F                     	;# 
  1267  008C                     	;# 
  1268  008C                     	;# 
  1269  008D                     	;# 
  1270  008E                     	;# 
  1271  008E                     	;# 
  1272  008F                     	;# 
  1273  0090                     	;# 
  1274  0090                     	;# 
  1275  0091                     	;# 
  1276  0093                     	;# 
  1277  0094                     	;# 
  1278  0095                     	;# 
  1279  0096                     	;# 
  1280  0097                     	;# 
  1281  0098                     	;# 
  1282  0099                     	;# 
  1283  009A                     	;# 
  1284  009B                     	;# 
  1285  009C                     	;# 
  1286  009D                     	;# 
  1287  009E                     	;# 
  1288  010C                     	;# 
  1289  010D                     	;# 
  1290  010E                     	;# 
  1291  010E                     	;# 
  1292  010F                     	;# 
  1293  0110                     	;# 
  1294  0110                     	;# 
  1295  0111                     	;# 
  1296  0112                     	;# 
  1297  0112                     	;# 
  1298  0113                     	;# 
  1299  0114                     	;# 
  1300  0114                     	;# 
  1301  0115                     	;# 
  1302  0116                     	;# 
  1303  0116                     	;# 
  1304  0117                     	;# 
  1305  0119                     	;# 
  1306  0119                     	;# 
  1307  0119                     	;# 
  1308  011A                     	;# 
  1309  011A                     	;# 
  1310  011A                     	;# 
  1311  011B                     	;# 
  1312  011B                     	;# 
  1313  011B                     	;# 
  1314  011B                     	;# 
  1315  011B                     	;# 
  1316  011C                     	;# 
  1317  011C                     	;# 
  1318  011C                     	;# 
  1319  011D                     	;# 
  1320  011D                     	;# 
  1321  011D                     	;# 
  1322  011E                     	;# 
  1323  011E                     	;# 
  1324  011E                     	;# 
  1325  011F                     	;# 
  1326  011F                     	;# 
  1327  011F                     	;# 
  1328  011F                     	;# 
  1329  011F                     	;# 
  1330  018C                     	;# 
  1331  018D                     	;# 
  1332  018E                     	;# 
  1333  018F                     	;# 
  1334  0190                     	;# 
  1335  0191                     	;# 
  1336  0192                     	;# 
  1337  0196                     	;# 
  1338  0197                     	;# 
  1339  0198                     	;# 
  1340  0199                     	;# 
  1341  019A                     	;# 
  1342  019B                     	;# 
  1343  019C                     	;# 
  1344  020C                     	;# 
  1345  020C                     	;# 
  1346  020D                     	;# 
  1347  020E                     	;# 
  1348  020F                     	;# 
  1349  020F                     	;# 
  1350  0210                     	;# 
  1351  0210                     	;# 
  1352  0211                     	;# 
  1353  0211                     	;# 
  1354  0212                     	;# 
  1355  0212                     	;# 
  1356  0213                     	;# 
  1357  0214                     	;# 
  1358  0215                     	;# 
  1359  0215                     	;# 
  1360  0216                     	;# 
  1361  0216                     	;# 
  1362  0217                     	;# 
  1363  0217                     	;# 
  1364  0218                     	;# 
  1365  0218                     	;# 
  1366  0219                     	;# 
  1367  021A                     	;# 
  1368  021B                     	;# 
  1369  021B                     	;# 
  1370  021C                     	;# 
  1371  021C                     	;# 
  1372  021D                     	;# 
  1373  021D                     	;# 
  1374  021E                     	;# 
  1375  021F                     	;# 
  1376  028C                     	;# 
  1377  028C                     	;# 
  1378  028D                     	;# 
  1379  028D                     	;# 
  1380  028E                     	;# 
  1381  028F                     	;# 
  1382  0290                     	;# 
  1383  0290                     	;# 
  1384  0291                     	;# 
  1385  0292                     	;# 
  1386  0292                     	;# 
  1387  0293                     	;# 
  1388  0293                     	;# 
  1389  0294                     	;# 
  1390  0295                     	;# 
  1391  0296                     	;# 
  1392  0296                     	;# 
  1393  0297                     	;# 
  1394  0298                     	;# 
  1395  0298                     	;# 
  1396  0299                     	;# 
  1397  0299                     	;# 
  1398  029A                     	;# 
  1399  029B                     	;# 
  1400  029C                     	;# 
  1401  029C                     	;# 
  1402  029D                     	;# 
  1403  030C                     	;# 
  1404  030C                     	;# 
  1405  030D                     	;# 
  1406  030E                     	;# 
  1407  030F                     	;# 
  1408  0310                     	;# 
  1409  0310                     	;# 
  1410  0311                     	;# 
  1411  0312                     	;# 
  1412  0313                     	;# 
  1413  0314                     	;# 
  1414  0314                     	;# 
  1415  0315                     	;# 
  1416  0316                     	;# 
  1417  0317                     	;# 
  1418  0318                     	;# 
  1419  0318                     	;# 
  1420  0319                     	;# 
  1421  031A                     	;# 
  1422  031B                     	;# 
  1423  031C                     	;# 
  1424  031C                     	;# 
  1425  031D                     	;# 
  1426  031E                     	;# 
  1427  031F                     	;# 
  1428  038C                     	;# 
  1429  038D                     	;# 
  1430  038E                     	;# 
  1431  0390                     	;# 
  1432  0391                     	;# 
  1433  0392                     	;# 
  1434  040C                     	;# 
  1435  040D                     	;# 
  1436  040E                     	;# 
  1437  040F                     	;# 
  1438  0410                     	;# 
  1439  0411                     	;# 
  1440  0416                     	;# 
  1441  0416                     	;# 
  1442  0417                     	;# 
  1443  0418                     	;# 
  1444  0418                     	;# 
  1445  0419                     	;# 
  1446  041A                     	;# 
  1447  041A                     	;# 
  1448  041B                     	;# 
  1449  041C                     	;# 
  1450  041C                     	;# 
  1451  041D                     	;# 
  1452  041E                     	;# 
  1453  041F                     	;# 
  1454  048C                     	;# 
  1455  048C                     	;# 
  1456  048D                     	;# 
  1457  048E                     	;# 
  1458  048F                     	;# 
  1459  048F                     	;# 
  1460  0490                     	;# 
  1461  0491                     	;# 
  1462  0492                     	;# 
  1463  0492                     	;# 
  1464  0493                     	;# 
  1465  0494                     	;# 
  1466  0495                     	;# 
  1467  0495                     	;# 
  1468  0496                     	;# 
  1469  0497                     	;# 
  1470  0498                     	;# 
  1471  0499                     	;# 
  1472  049A                     	;# 
  1473  049B                     	;# 
  1474  049C                     	;# 
  1475  049D                     	;# 
  1476  050C                     	;# 
  1477  050C                     	;# 
  1478  050D                     	;# 
  1479  050E                     	;# 
  1480  050F                     	;# 
  1481  050F                     	;# 
  1482  0510                     	;# 
  1483  0511                     	;# 
  1484  0512                     	;# 
  1485  0512                     	;# 
  1486  0513                     	;# 
  1487  0514                     	;# 
  1488  0515                     	;# 
  1489  0515                     	;# 
  1490  0516                     	;# 
  1491  0517                     	;# 
  1492  0518                     	;# 
  1493  0519                     	;# 
  1494  051A                     	;# 
  1495  051B                     	;# 
  1496  051C                     	;# 
  1497  051D                     	;# 
  1498  058C                     	;# 
  1499  058C                     	;# 
  1500  058D                     	;# 
  1501  058E                     	;# 
  1502  058F                     	;# 
  1503  058F                     	;# 
  1504  0590                     	;# 
  1505  0591                     	;# 
  1506  0592                     	;# 
  1507  0593                     	;# 
  1508  060C                     	;# 
  1509  060D                     	;# 
  1510  060E                     	;# 
  1511  060F                     	;# 
  1512  0610                     	;# 
  1513  0611                     	;# 
  1514  0612                     	;# 
  1515  0613                     	;# 
  1516  0614                     	;# 
  1517  0616                     	;# 
  1518  0617                     	;# 
  1519  0618                     	;# 
  1520  0619                     	;# 
  1521  061A                     	;# 
  1522  061B                     	;# 
  1523  061C                     	;# 
  1524  061D                     	;# 
  1525  061E                     	;# 
  1526  068C                     	;# 
  1527  068D                     	;# 
  1528  068E                     	;# 
  1529  068F                     	;# 
  1530  0690                     	;# 
  1531  0691                     	;# 
  1532  0692                     	;# 
  1533  0693                     	;# 
  1534  0694                     	;# 
  1535  070C                     	;# 
  1536  070D                     	;# 
  1537  070E                     	;# 
  1538  070F                     	;# 
  1539  0710                     	;# 
  1540  0711                     	;# 
  1541  0712                     	;# 
  1542  0713                     	;# 
  1543  0714                     	;# 
  1544  0716                     	;# 
  1545  0717                     	;# 
  1546  0718                     	;# 
  1547  0719                     	;# 
  1548  071A                     	;# 
  1549  071B                     	;# 
  1550  071C                     	;# 
  1551  071D                     	;# 
  1552  071E                     	;# 
  1553  0796                     	;# 
  1554  0797                     	;# 
  1555  0798                     	;# 
  1556  0799                     	;# 
  1557  079A                     	;# 
  1558  079B                     	;# 
  1559  080C                     	;# 
  1560  080D                     	;# 
  1561  080E                     	;# 
  1562  080F                     	;# 
  1563  0810                     	;# 
  1564  0811                     	;# 
  1565  0812                     	;# 
  1566  0813                     	;# 
  1567  0814                     	;# 
  1568  081A                     	;# 
  1569  081B                     	;# 
  1570  081C                     	;# 
  1571  081D                     	;# 
  1572  081E                     	;# 
  1573  081F                     	;# 
  1574  088C                     	;# 
  1575  088D                     	;# 
  1576  088E                     	;# 
  1577  088F                     	;# 
  1578  0890                     	;# 
  1579  0891                     	;# 
  1580  0892                     	;# 
  1581  0893                     	;# 
  1582  0895                     	;# 
  1583  0896                     	;# 
  1584  0897                     	;# 
  1585  0898                     	;# 
  1586  0899                     	;# 
  1587  089A                     	;# 
  1588  089B                     	;# 
  1589  090C                     	;# 
  1590  090E                     	;# 
  1591  090F                     	;# 
  1592  091F                     	;# 
  1593  098F                     	;# 
  1594  098F                     	;# 
  1595  0990                     	;# 
  1596  0991                     	;# 
  1597  0992                     	;# 
  1598  0993                     	;# 
  1599  0994                     	;# 
  1600  0995                     	;# 
  1601  0996                     	;# 
  1602  0997                     	;# 
  1603  1E0F                     	;# 
  1604  1E10                     	;# 
  1605  1E11                     	;# 
  1606  1E12                     	;# 
  1607  1E13                     	;# 
  1608  1E14                     	;# 
  1609  1E15                     	;# 
  1610  1E16                     	;# 
  1611  1E17                     	;# 
  1612  1E18                     	;# 
  1613  1E19                     	;# 
  1614  1E1A                     	;# 
  1615  1E1B                     	;# 
  1616  1E1C                     	;# 
  1617  1E1D                     	;# 
  1618  1E1E                     	;# 
  1619  1E1F                     	;# 
  1620  1E20                     	;# 
  1621  1E21                     	;# 
  1622  1E22                     	;# 
  1623  1E23                     	;# 
  1624  1E24                     	;# 
  1625  1E25                     	;# 
  1626  1E26                     	;# 
  1627  1E27                     	;# 
  1628  1E28                     	;# 
  1629  1E29                     	;# 
  1630  1E2A                     	;# 
  1631  1E2B                     	;# 
  1632  1E2C                     	;# 
  1633  1E2D                     	;# 
  1634  1E2E                     	;# 
  1635  1E2F                     	;# 
  1636  1E30                     	;# 
  1637  1E31                     	;# 
  1638  1E32                     	;# 
  1639  1E33                     	;# 
  1640  1E34                     	;# 
  1641  1E35                     	;# 
  1642  1E36                     	;# 
  1643  1E37                     	;# 
  1644  1E8F                     	;# 
  1645  1E90                     	;# 
  1646  1E91                     	;# 
  1647  1E92                     	;# 
  1648  1E93                     	;# 
  1649  1E94                     	;# 
  1650  1E95                     	;# 
  1651  1E96                     	;# 
  1652  1E97                     	;# 
  1653  1E9C                     	;# 
  1654  1E9D                     	;# 
  1655  1E9E                     	;# 
  1656  1EA1                     	;# 
  1657  1EA2                     	;# 
  1658  1EA3                     	;# 
  1659  1EA4                     	;# 
  1660  1EA5                     	;# 
  1661  1EA9                     	;# 
  1662  1EAA                     	;# 
  1663  1EAB                     	;# 
  1664  1EAC                     	;# 
  1665  1EB1                     	;# 
  1666  1EB2                     	;# 
  1667  1EB3                     	;# 
  1668  1EB8                     	;# 
  1669  1EB9                     	;# 
  1670  1EBA                     	;# 
  1671  1EBB                     	;# 
  1672  1EBC                     	;# 
  1673  1EBD                     	;# 
  1674  1EBE                     	;# 
  1675  1EC3                     	;# 
  1676  1EC5                     	;# 
  1677  1EC6                     	;# 
  1678  1EC7                     	;# 
  1679  1EC8                     	;# 
  1680  1EC9                     	;# 
  1681  1ECA                     	;# 
  1682  1ECB                     	;# 
  1683  1ECC                     	;# 
  1684  1F10                     	;# 
  1685  1F11                     	;# 
  1686  1F12                     	;# 
  1687  1F13                     	;# 
  1688  1F14                     	;# 
  1689  1F15                     	;# 
  1690  1F16                     	;# 
  1691  1F17                     	;# 
  1692  1F18                     	;# 
  1693  1F19                     	;# 
  1694  1F1A                     	;# 
  1695  1F1B                     	;# 
  1696  1F1C                     	;# 
  1697  1F1D                     	;# 
  1698  1F1E                     	;# 
  1699  1F1F                     	;# 
  1700  1F20                     	;# 
  1701  1F21                     	;# 
  1702  1F22                     	;# 
  1703  1F23                     	;# 
  1704  1F24                     	;# 
  1705  1F25                     	;# 
  1706  1F26                     	;# 
  1707  1F27                     	;# 
  1708  1F28                     	;# 
  1709  1F29                     	;# 
  1710  1F2A                     	;# 
  1711  1F2B                     	;# 
  1712  1F2C                     	;# 
  1713  1F2D                     	;# 
  1714  1F2E                     	;# 
  1715  1F2F                     	;# 
  1716  1F30                     	;# 
  1717  1F31                     	;# 
  1718  1F32                     	;# 
  1719  1F38                     	;# 
  1720  1F39                     	;# 
  1721  1F3A                     	;# 
  1722  1F3B                     	;# 
  1723  1F3C                     	;# 
  1724  1F3D                     	;# 
  1725  1F3E                     	;# 
  1726  1F3F                     	;# 
  1727  1F40                     	;# 
  1728  1F41                     	;# 
  1729  1F43                     	;# 
  1730  1F44                     	;# 
  1731  1F45                     	;# 
  1732  1F46                     	;# 
  1733  1F47                     	;# 
  1734  1F48                     	;# 
  1735  1F49                     	;# 
  1736  1F4A                     	;# 
  1737  1F4B                     	;# 
  1738  1F4C                     	;# 
  1739  1F4E                     	;# 
  1740  1F4F                     	;# 
  1741  1F50                     	;# 
  1742  1F51                     	;# 
  1743  1F52                     	;# 
  1744  1F53                     	;# 
  1745  1F54                     	;# 
  1746  1F55                     	;# 
  1747  1F56                     	;# 
  1748  1F57                     	;# 
  1749  1F59                     	;# 
  1750  1F5A                     	;# 
  1751  1F5B                     	;# 
  1752  1F5C                     	;# 
  1753  1F5D                     	;# 
  1754  1F61                     	;# 
  1755  1F62                     	;# 
  1756  1F64                     	;# 
  1757  1F65                     	;# 
  1758  1F66                     	;# 
  1759  1F67                     	;# 
  1760  1F68                     	;# 
  1761  1F69                     	;# 
  1762  1F6A                     	;# 
  1763  1F6B                     	;# 
  1764  1F6C                     	;# 
  1765  1F6D                     	;# 
  1766  1FE4                     	;# 
  1767  1FE5                     	;# 
  1768  1FE6                     	;# 
  1769  1FE7                     	;# 
  1770  1FE8                     	;# 
  1771  1FE9                     	;# 
  1772  1FEA                     	;# 
  1773  1FEB                     	;# 
  1774  1FED                     	;# 
  1775  1FEE                     	;# 
  1776  1FEF                     	;# 
  1777  0000                     	;# 
  1778  0001                     	;# 
  1779  0002                     	;# 
  1780  0003                     	;# 
  1781  0004                     	;# 
  1782  0005                     	;# 
  1783  0006                     	;# 
  1784  0007                     	;# 
  1785  0008                     	;# 
  1786  0009                     	;# 
  1787  000A                     	;# 
  1788  000B                     	;# 
  1789  000C                     	;# 
  1790  000D                     	;# 
  1791  000E                     	;# 
  1792  000F                     	;# 
  1793  0010                     	;# 
  1794  0011                     	;# 
  1795  0012                     	;# 
  1796  0013                     	;# 
  1797  0014                     	;# 
  1798  0015                     	;# 
  1799  0016                     	;# 
  1800  0017                     	;# 
  1801  0018                     	;# 
  1802  0019                     	;# 
  1803  001A                     	;# 
  1804  001C                     	;# 
  1805  001C                     	;# 
  1806  001D                     	;# 
  1807  001D                     	;# 
  1808  001E                     	;# 
  1809  001F                     	;# 
  1810  008C                     	;# 
  1811  008C                     	;# 
  1812  008D                     	;# 
  1813  008E                     	;# 
  1814  008E                     	;# 
  1815  008F                     	;# 
  1816  0090                     	;# 
  1817  0090                     	;# 
  1818  0091                     	;# 
  1819  0093                     	;# 
  1820  0094                     	;# 
  1821  0095                     	;# 
  1822  0096                     	;# 
  1823  0097                     	;# 
  1824  0098                     	;# 
  1825  0099                     	;# 
  1826  009A                     	;# 
  1827  009B                     	;# 
  1828  009C                     	;# 
  1829  009D                     	;# 
  1830  009E                     	;# 
  1831  010C                     	;# 
  1832  010D                     	;# 
  1833  010E                     	;# 
  1834  010E                     	;# 
  1835  010F                     	;# 
  1836  0110                     	;# 
  1837  0110                     	;# 
  1838  0111                     	;# 
  1839  0112                     	;# 
  1840  0112                     	;# 
  1841  0113                     	;# 
  1842  0114                     	;# 
  1843  0114                     	;# 
  1844  0115                     	;# 
  1845  0116                     	;# 
  1846  0116                     	;# 
  1847  0117                     	;# 
  1848  0119                     	;# 
  1849  0119                     	;# 
  1850  0119                     	;# 
  1851  011A                     	;# 
  1852  011A                     	;# 
  1853  011A                     	;# 
  1854  011B                     	;# 
  1855  011B                     	;# 
  1856  011B                     	;# 
  1857  011B                     	;# 
  1858  011B                     	;# 
  1859  011C                     	;# 
  1860  011C                     	;# 
  1861  011C                     	;# 
  1862  011D                     	;# 
  1863  011D                     	;# 
  1864  011D                     	;# 
  1865  011E                     	;# 
  1866  011E                     	;# 
  1867  011E                     	;# 
  1868  011F                     	;# 
  1869  011F                     	;# 
  1870  011F                     	;# 
  1871  011F                     	;# 
  1872  011F                     	;# 
  1873  018C                     	;# 
  1874  018D                     	;# 
  1875  018E                     	;# 
  1876  018F                     	;# 
  1877  0190                     	;# 
  1878  0191                     	;# 
  1879  0192                     	;# 
  1880  0196                     	;# 
  1881  0197                     	;# 
  1882  0198                     	;# 
  1883  0199                     	;# 
  1884  019A                     	;# 
  1885  019B                     	;# 
  1886  019C                     	;# 
  1887  020C                     	;# 
  1888  020C                     	;# 
  1889  020D                     	;# 
  1890  020E                     	;# 
  1891  020F                     	;# 
  1892  020F                     	;# 
  1893  0210                     	;# 
  1894  0210                     	;# 
  1895  0211                     	;# 
  1896  0211                     	;# 
  1897  0212                     	;# 
  1898  0212                     	;# 
  1899  0213                     	;# 
  1900  0214                     	;# 
  1901  0215                     	;# 
  1902  0215                     	;# 
  1903  0216                     	;# 
  1904  0216                     	;# 
  1905  0217                     	;# 
  1906  0217                     	;# 
  1907  0218                     	;# 
  1908  0218                     	;# 
  1909  0219                     	;# 
  1910  021A                     	;# 
  1911  021B                     	;# 
  1912  021B                     	;# 
  1913  021C                     	;# 
  1914  021C                     	;# 
  1915  021D                     	;# 
  1916  021D                     	;# 
  1917  021E                     	;# 
  1918  021F                     	;# 
  1919  028C                     	;# 
  1920  028C                     	;# 
  1921  028D                     	;# 
  1922  028D                     	;# 
  1923  028E                     	;# 
  1924  028F                     	;# 
  1925  0290                     	;# 
  1926  0290                     	;# 
  1927  0291                     	;# 
  1928  0292                     	;# 
  1929  0292                     	;# 
  1930  0293                     	;# 
  1931  0293                     	;# 
  1932  0294                     	;# 
  1933  0295                     	;# 
  1934  0296                     	;# 
  1935  0296                     	;# 
  1936  0297                     	;# 
  1937  0298                     	;# 
  1938  0298                     	;# 
  1939  0299                     	;# 
  1940  0299                     	;# 
  1941  029A                     	;# 
  1942  029B                     	;# 
  1943  029C                     	;# 
  1944  029C                     	;# 
  1945  029D                     	;# 
  1946  030C                     	;# 
  1947  030C                     	;# 
  1948  030D                     	;# 
  1949  030E                     	;# 
  1950  030F                     	;# 
  1951  0310                     	;# 
  1952  0310                     	;# 
  1953  0311                     	;# 
  1954  0312                     	;# 
  1955  0313                     	;# 
  1956  0314                     	;# 
  1957  0314                     	;# 
  1958  0315                     	;# 
  1959  0316                     	;# 
  1960  0317                     	;# 
  1961  0318                     	;# 
  1962  0318                     	;# 
  1963  0319                     	;# 
  1964  031A                     	;# 
  1965  031B                     	;# 
  1966  031C                     	;# 
  1967  031C                     	;# 
  1968  031D                     	;# 
  1969  031E                     	;# 
  1970  031F                     	;# 
  1971  038C                     	;# 
  1972  038D                     	;# 
  1973  038E                     	;# 
  1974  0390                     	;# 
  1975  0391                     	;# 
  1976  0392                     	;# 
  1977  040C                     	;# 
  1978  040D                     	;# 
  1979  040E                     	;# 
  1980  040F                     	;# 
  1981  0410                     	;# 
  1982  0411                     	;# 
  1983  0416                     	;# 
  1984  0416                     	;# 
  1985  0417                     	;# 
  1986  0418                     	;# 
  1987  0418                     	;# 
  1988  0419                     	;# 
  1989  041A                     	;# 
  1990  041A                     	;# 
  1991  041B                     	;# 
  1992  041C                     	;# 
  1993  041C                     	;# 
  1994  041D                     	;# 
  1995  041E                     	;# 
  1996  041F                     	;# 
  1997  048C                     	;# 
  1998  048C                     	;# 
  1999  048D                     	;# 
  2000  048E                     	;# 
  2001  048F                     	;# 
  2002  048F                     	;# 
  2003  0490                     	;# 
  2004  0491                     	;# 
  2005  0492                     	;# 
  2006  0492                     	;# 
  2007  0493                     	;# 
  2008  0494                     	;# 
  2009  0495                     	;# 
  2010  0495                     	;# 
  2011  0496                     	;# 
  2012  0497                     	;# 
  2013  0498                     	;# 
  2014  0499                     	;# 
  2015  049A                     	;# 
  2016  049B                     	;# 
  2017  049C                     	;# 
  2018  049D                     	;# 
  2019  050C                     	;# 
  2020  050C                     	;# 
  2021  050D                     	;# 
  2022  050E                     	;# 
  2023  050F                     	;# 
  2024  050F                     	;# 
  2025  0510                     	;# 
  2026  0511                     	;# 
  2027  0512                     	;# 
  2028  0512                     	;# 
  2029  0513                     	;# 
  2030  0514                     	;# 
  2031  0515                     	;# 
  2032  0515                     	;# 
  2033  0516                     	;# 
  2034  0517                     	;# 
  2035  0518                     	;# 
  2036  0519                     	;# 
  2037  051A                     	;# 
  2038  051B                     	;# 
  2039  051C                     	;# 
  2040  051D                     	;# 
  2041  058C                     	;# 
  2042  058C                     	;# 
  2043  058D                     	;# 
  2044  058E                     	;# 
  2045  058F                     	;# 
  2046  058F                     	;# 
  2047  0590                     	;# 
  2048  0591                     	;# 
  2049  0592                     	;# 
  2050  0593                     	;# 
  2051  060C                     	;# 
  2052  060D                     	;# 
  2053  060E                     	;# 
  2054  060F                     	;# 
  2055  0610                     	;# 
  2056  0611                     	;# 
  2057  0612                     	;# 
  2058  0613                     	;# 
  2059  0614                     	;# 
  2060  0616                     	;# 
  2061  0617                     	;# 
  2062  0618                     	;# 
  2063  0619                     	;# 
  2064  061A                     	;# 
  2065  061B                     	;# 
  2066  061C                     	;# 
  2067  061D                     	;# 
  2068  061E                     	;# 
  2069  068C                     	;# 
  2070  068D                     	;# 
  2071  068E                     	;# 
  2072  068F                     	;# 
  2073  0690                     	;# 
  2074  0691                     	;# 
  2075  0692                     	;# 
  2076  0693                     	;# 
  2077  0694                     	;# 
  2078  070C                     	;# 
  2079  070D                     	;# 
  2080  070E                     	;# 
  2081  070F                     	;# 
  2082  0710                     	;# 
  2083  0711                     	;# 
  2084  0712                     	;# 
  2085  0713                     	;# 
  2086  0714                     	;# 
  2087  0716                     	;# 
  2088  0717                     	;# 
  2089  0718                     	;# 
  2090  0719                     	;# 
  2091  071A                     	;# 
  2092  071B                     	;# 
  2093  071C                     	;# 
  2094  071D                     	;# 
  2095  071E                     	;# 
  2096  0796                     	;# 
  2097  0797                     	;# 
  2098  0798                     	;# 
  2099  0799                     	;# 
  2100  079A                     	;# 
  2101  079B                     	;# 
  2102  080C                     	;# 
  2103  080D                     	;# 
  2104  080E                     	;# 
  2105  080F                     	;# 
  2106  0810                     	;# 
  2107  0811                     	;# 
  2108  0812                     	;# 
  2109  0813                     	;# 
  2110  0814                     	;# 
  2111  081A                     	;# 
  2112  081B                     	;# 
  2113  081C                     	;# 
  2114  081D                     	;# 
  2115  081E                     	;# 
  2116  081F                     	;# 
  2117  088C                     	;# 
  2118  088D                     	;# 
  2119  088E                     	;# 
  2120  088F                     	;# 
  2121  0890                     	;# 
  2122  0891                     	;# 
  2123  0892                     	;# 
  2124  0893                     	;# 
  2125  0895                     	;# 
  2126  0896                     	;# 
  2127  0897                     	;# 
  2128  0898                     	;# 
  2129  0899                     	;# 
  2130  089A                     	;# 
  2131  089B                     	;# 
  2132  090C                     	;# 
  2133  090E                     	;# 
  2134  090F                     	;# 
  2135  091F                     	;# 
  2136  098F                     	;# 
  2137  098F                     	;# 
  2138  0990                     	;# 
  2139  0991                     	;# 
  2140  0992                     	;# 
  2141  0993                     	;# 
  2142  0994                     	;# 
  2143  0995                     	;# 
  2144  0996                     	;# 
  2145  0997                     	;# 
  2146  1E0F                     	;# 
  2147  1E10                     	;# 
  2148  1E11                     	;# 
  2149  1E12                     	;# 
  2150  1E13                     	;# 
  2151  1E14                     	;# 
  2152  1E15                     	;# 
  2153  1E16                     	;# 
  2154  1E17                     	;# 
  2155  1E18                     	;# 
  2156  1E19                     	;# 
  2157  1E1A                     	;# 
  2158  1E1B                     	;# 
  2159  1E1C                     	;# 
  2160  1E1D                     	;# 
  2161  1E1E                     	;# 
  2162  1E1F                     	;# 
  2163  1E20                     	;# 
  2164  1E21                     	;# 
  2165  1E22                     	;# 
  2166  1E23                     	;# 
  2167  1E24                     	;# 
  2168  1E25                     	;# 
  2169  1E26                     	;# 
  2170  1E27                     	;# 
  2171  1E28                     	;# 
  2172  1E29                     	;# 
  2173  1E2A                     	;# 
  2174  1E2B                     	;# 
  2175  1E2C                     	;# 
  2176  1E2D                     	;# 
  2177  1E2E                     	;# 
  2178  1E2F                     	;# 
  2179  1E30                     	;# 
  2180  1E31                     	;# 
  2181  1E32                     	;# 
  2182  1E33                     	;# 
  2183  1E34                     	;# 
  2184  1E35                     	;# 
  2185  1E36                     	;# 
  2186  1E37                     	;# 
  2187  1E8F                     	;# 
  2188  1E90                     	;# 
  2189  1E91                     	;# 
  2190  1E92                     	;# 
  2191  1E93                     	;# 
  2192  1E94                     	;# 
  2193  1E95                     	;# 
  2194  1E96                     	;# 
  2195  1E97                     	;# 
  2196  1E9C                     	;# 
  2197  1E9D                     	;# 
  2198  1E9E                     	;# 
  2199  1EA1                     	;# 
  2200  1EA2                     	;# 
  2201  1EA3                     	;# 
  2202  1EA4                     	;# 
  2203  1EA5                     	;# 
  2204  1EA9                     	;# 
  2205  1EAA                     	;# 
  2206  1EAB                     	;# 
  2207  1EAC                     	;# 
  2208  1EB1                     	;# 
  2209  1EB2                     	;# 
  2210  1EB3                     	;# 
  2211  1EB8                     	;# 
  2212  1EB9                     	;# 
  2213  1EBA                     	;# 
  2214  1EBB                     	;# 
  2215  1EBC                     	;# 
  2216  1EBD                     	;# 
  2217  1EBE                     	;# 
  2218  1EC3                     	;# 
  2219  1EC5                     	;# 
  2220  1EC6                     	;# 
  2221  1EC7                     	;# 
  2222  1EC8                     	;# 
  2223  1EC9                     	;# 
  2224  1ECA                     	;# 
  2225  1ECB                     	;# 
  2226  1ECC                     	;# 
  2227  1F10                     	;# 
  2228  1F11                     	;# 
  2229  1F12                     	;# 
  2230  1F13                     	;# 
  2231  1F14                     	;# 
  2232  1F15                     	;# 
  2233  1F16                     	;# 
  2234  1F17                     	;# 
  2235  1F18                     	;# 
  2236  1F19                     	;# 
  2237  1F1A                     	;# 
  2238  1F1B                     	;# 
  2239  1F1C                     	;# 
  2240  1F1D                     	;# 
  2241  1F1E                     	;# 
  2242  1F1F                     	;# 
  2243  1F20                     	;# 
  2244  1F21                     	;# 
  2245  1F22                     	;# 
  2246  1F23                     	;# 
  2247  1F24                     	;# 
  2248  1F25                     	;# 
  2249  1F26                     	;# 
  2250  1F27                     	;# 
  2251  1F28                     	;# 
  2252  1F29                     	;# 
  2253  1F2A                     	;# 
  2254  1F2B                     	;# 
  2255  1F2C                     	;# 
  2256  1F2D                     	;# 
  2257  1F2E                     	;# 
  2258  1F2F                     	;# 
  2259  1F30                     	;# 
  2260  1F31                     	;# 
  2261  1F32                     	;# 
  2262  1F38                     	;# 
  2263  1F39                     	;# 
  2264  1F3A                     	;# 
  2265  1F3B                     	;# 
  2266  1F3C                     	;# 
  2267  1F3D                     	;# 
  2268  1F3E                     	;# 
  2269  1F3F                     	;# 
  2270  1F40                     	;# 
  2271  1F41                     	;# 
  2272  1F43                     	;# 
  2273  1F44                     	;# 
  2274  1F45                     	;# 
  2275  1F46                     	;# 
  2276  1F47                     	;# 
  2277  1F48                     	;# 
  2278  1F49                     	;# 
  2279  1F4A                     	;# 
  2280  1F4B                     	;# 
  2281  1F4C                     	;# 
  2282  1F4E                     	;# 
  2283  1F4F                     	;# 
  2284  1F50                     	;# 
  2285  1F51                     	;# 
  2286  1F52                     	;# 
  2287  1F53                     	;# 
  2288  1F54                     	;# 
  2289  1F55                     	;# 
  2290  1F56                     	;# 
  2291  1F57                     	;# 
  2292  1F59                     	;# 
  2293  1F5A                     	;# 
  2294  1F5B                     	;# 
  2295  1F5C                     	;# 
  2296  1F5D                     	;# 
  2297  1F61                     	;# 
  2298  1F62                     	;# 
  2299  1F64                     	;# 
  2300  1F65                     	;# 
  2301  1F66                     	;# 
  2302  1F67                     	;# 
  2303  1F68                     	;# 
  2304  1F69                     	;# 
  2305  1F6A                     	;# 
  2306  1F6B                     	;# 
  2307  1F6C                     	;# 
  2308  1F6D                     	;# 
  2309  1FE4                     	;# 
  2310  1FE5                     	;# 
  2311  1FE6                     	;# 
  2312  1FE7                     	;# 
  2313  1FE8                     	;# 
  2314  1FE9                     	;# 
  2315  1FEA                     	;# 
  2316  1FEB                     	;# 
  2317  1FED                     	;# 
  2318  1FEE                     	;# 
  2319  1FEF                     	;# 
  2320  0000                     	;# 
  2321  0001                     	;# 
  2322  0002                     	;# 
  2323  0003                     	;# 
  2324  0004                     	;# 
  2325  0005                     	;# 
  2326  0006                     	;# 
  2327  0007                     	;# 
  2328  0008                     	;# 
  2329  0009                     	;# 
  2330  000A                     	;# 
  2331  000B                     	;# 
  2332  000C                     	;# 
  2333  000D                     	;# 
  2334  000E                     	;# 
  2335  000F                     	;# 
  2336  0010                     	;# 
  2337  0011                     	;# 
  2338  0012                     	;# 
  2339  0013                     	;# 
  2340  0014                     	;# 
  2341  0015                     	;# 
  2342  0016                     	;# 
  2343  0017                     	;# 
  2344  0018                     	;# 
  2345  0019                     	;# 
  2346  001A                     	;# 
  2347  001C                     	;# 
  2348  001C                     	;# 
  2349  001D                     	;# 
  2350  001D                     	;# 
  2351  001E                     	;# 
  2352  001F                     	;# 
  2353  008C                     	;# 
  2354  008C                     	;# 
  2355  008D                     	;# 
  2356  008E                     	;# 
  2357  008E                     	;# 
  2358  008F                     	;# 
  2359  0090                     	;# 
  2360  0090                     	;# 
  2361  0091                     	;# 
  2362  0093                     	;# 
  2363  0094                     	;# 
  2364  0095                     	;# 
  2365  0096                     	;# 
  2366  0097                     	;# 
  2367  0098                     	;# 
  2368  0099                     	;# 
  2369  009A                     	;# 
  2370  009B                     	;# 
  2371  009C                     	;# 
  2372  009D                     	;# 
  2373  009E                     	;# 
  2374  010C                     	;# 
  2375  010D                     	;# 
  2376  010E                     	;# 
  2377  010E                     	;# 
  2378  010F                     	;# 
  2379  0110                     	;# 
  2380  0110                     	;# 
  2381  0111                     	;# 
  2382  0112                     	;# 
  2383  0112                     	;# 
  2384  0113                     	;# 
  2385  0114                     	;# 
  2386  0114                     	;# 
  2387  0115                     	;# 
  2388  0116                     	;# 
  2389  0116                     	;# 
  2390  0117                     	;# 
  2391  0119                     	;# 
  2392  0119                     	;# 
  2393  0119                     	;# 
  2394  011A                     	;# 
  2395  011A                     	;# 
  2396  011A                     	;# 
  2397  011B                     	;# 
  2398  011B                     	;# 
  2399  011B                     	;# 
  2400  011B                     	;# 
  2401  011B                     	;# 
  2402  011C                     	;# 
  2403  011C                     	;# 
  2404  011C                     	;# 
  2405  011D                     	;# 
  2406  011D                     	;# 
  2407  011D                     	;# 
  2408  011E                     	;# 
  2409  011E                     	;# 
  2410  011E                     	;# 
  2411  011F                     	;# 
  2412  011F                     	;# 
  2413  011F                     	;# 
  2414  011F                     	;# 
  2415  011F                     	;# 
  2416  018C                     	;# 
  2417  018D                     	;# 
  2418  018E                     	;# 
  2419  018F                     	;# 
  2420  0190                     	;# 
  2421  0191                     	;# 
  2422  0192                     	;# 
  2423  0196                     	;# 
  2424  0197                     	;# 
  2425  0198                     	;# 
  2426  0199                     	;# 
  2427  019A                     	;# 
  2428  019B                     	;# 
  2429  019C                     	;# 
  2430  020C                     	;# 
  2431  020C                     	;# 
  2432  020D                     	;# 
  2433  020E                     	;# 
  2434  020F                     	;# 
  2435  020F                     	;# 
  2436  0210                     	;# 
  2437  0210                     	;# 
  2438  0211                     	;# 
  2439  0211                     	;# 
  2440  0212                     	;# 
  2441  0212                     	;# 
  2442  0213                     	;# 
  2443  0214                     	;# 
  2444  0215                     	;# 
  2445  0215                     	;# 
  2446  0216                     	;# 
  2447  0216                     	;# 
  2448  0217                     	;# 
  2449  0217                     	;# 
  2450  0218                     	;# 
  2451  0218                     	;# 
  2452  0219                     	;# 
  2453  021A                     	;# 
  2454  021B                     	;# 
  2455  021B                     	;# 
  2456  021C                     	;# 
  2457  021C                     	;# 
  2458  021D                     	;# 
  2459  021D                     	;# 
  2460  021E                     	;# 
  2461  021F                     	;# 
  2462  028C                     	;# 
  2463  028C                     	;# 
  2464  028D                     	;# 
  2465  028D                     	;# 
  2466  028E                     	;# 
  2467  028F                     	;# 
  2468  0290                     	;# 
  2469  0290                     	;# 
  2470  0291                     	;# 
  2471  0292                     	;# 
  2472  0292                     	;# 
  2473  0293                     	;# 
  2474  0293                     	;# 
  2475  0294                     	;# 
  2476  0295                     	;# 
  2477  0296                     	;# 
  2478  0296                     	;# 
  2479  0297                     	;# 
  2480  0298                     	;# 
  2481  0298                     	;# 
  2482  0299                     	;# 
  2483  0299                     	;# 
  2484  029A                     	;# 
  2485  029B                     	;# 
  2486  029C                     	;# 
  2487  029C                     	;# 
  2488  029D                     	;# 
  2489  030C                     	;# 
  2490  030C                     	;# 
  2491  030D                     	;# 
  2492  030E                     	;# 
  2493  030F                     	;# 
  2494  0310                     	;# 
  2495  0310                     	;# 
  2496  0311                     	;# 
  2497  0312                     	;# 
  2498  0313                     	;# 
  2499  0314                     	;# 
  2500  0314                     	;# 
  2501  0315                     	;# 
  2502  0316                     	;# 
  2503  0317                     	;# 
  2504  0318                     	;# 
  2505  0318                     	;# 
  2506  0319                     	;# 
  2507  031A                     	;# 
  2508  031B                     	;# 
  2509  031C                     	;# 
  2510  031C                     	;# 
  2511  031D                     	;# 
  2512  031E                     	;# 
  2513  031F                     	;# 
  2514  038C                     	;# 
  2515  038D                     	;# 
  2516  038E                     	;# 
  2517  0390                     	;# 
  2518  0391                     	;# 
  2519  0392                     	;# 
  2520  040C                     	;# 
  2521  040D                     	;# 
  2522  040E                     	;# 
  2523  040F                     	;# 
  2524  0410                     	;# 
  2525  0411                     	;# 
  2526  0416                     	;# 
  2527  0416                     	;# 
  2528  0417                     	;# 
  2529  0418                     	;# 
  2530  0418                     	;# 
  2531  0419                     	;# 
  2532  041A                     	;# 
  2533  041A                     	;# 
  2534  041B                     	;# 
  2535  041C                     	;# 
  2536  041C                     	;# 
  2537  041D                     	;# 
  2538  041E                     	;# 
  2539  041F                     	;# 
  2540  048C                     	;# 
  2541  048C                     	;# 
  2542  048D                     	;# 
  2543  048E                     	;# 
  2544  048F                     	;# 
  2545  048F                     	;# 
  2546  0490                     	;# 
  2547  0491                     	;# 
  2548  0492                     	;# 
  2549  0492                     	;# 
  2550  0493                     	;# 
  2551  0494                     	;# 
  2552  0495                     	;# 
  2553  0495                     	;# 
  2554  0496                     	;# 
  2555  0497                     	;# 
  2556  0498                     	;# 
  2557  0499                     	;# 
  2558  049A                     	;# 
  2559  049B                     	;# 
  2560  049C                     	;# 
  2561  049D                     	;# 
  2562  050C                     	;# 
  2563  050C                     	;# 
  2564  050D                     	;# 
  2565  050E                     	;# 
  2566  050F                     	;# 
  2567  050F                     	;# 
  2568  0510                     	;# 
  2569  0511                     	;# 
  2570  0512                     	;# 
  2571  0512                     	;# 
  2572  0513                     	;# 
  2573  0514                     	;# 
  2574  0515                     	;# 
  2575  0515                     	;# 
  2576  0516                     	;# 
  2577  0517                     	;# 
  2578  0518                     	;# 
  2579  0519                     	;# 
  2580  051A                     	;# 
  2581  051B                     	;# 
  2582  051C                     	;# 
  2583  051D                     	;# 
  2584  058C                     	;# 
  2585  058C                     	;# 
  2586  058D                     	;# 
  2587  058E                     	;# 
  2588  058F                     	;# 
  2589  058F                     	;# 
  2590  0590                     	;# 
  2591  0591                     	;# 
  2592  0592                     	;# 
  2593  0593                     	;# 
  2594  060C                     	;# 
  2595  060D                     	;# 
  2596  060E                     	;# 
  2597  060F                     	;# 
  2598  0610                     	;# 
  2599  0611                     	;# 
  2600  0612                     	;# 
  2601  0613                     	;# 
  2602  0614                     	;# 
  2603  0616                     	;# 
  2604  0617                     	;# 
  2605  0618                     	;# 
  2606  0619                     	;# 
  2607  061A                     	;# 
  2608  061B                     	;# 
  2609  061C                     	;# 
  2610  061D                     	;# 
  2611  061E                     	;# 
  2612  068C                     	;# 
  2613  068D                     	;# 
  2614  068E                     	;# 
  2615  068F                     	;# 
  2616  0690                     	;# 
  2617  0691                     	;# 
  2618  0692                     	;# 
  2619  0693                     	;# 
  2620  0694                     	;# 
  2621  070C                     	;# 
  2622  070D                     	;# 
  2623  070E                     	;# 
  2624  070F                     	;# 
  2625  0710                     	;# 
  2626  0711                     	;# 
  2627  0712                     	;# 
  2628  0713                     	;# 
  2629  0714                     	;# 
  2630  0716                     	;# 
  2631  0717                     	;# 
  2632  0718                     	;# 
  2633  0719                     	;# 
  2634  071A                     	;# 
  2635  071B                     	;# 
  2636  071C                     	;# 
  2637  071D                     	;# 
  2638  071E                     	;# 
  2639  0796                     	;# 
  2640  0797                     	;# 
  2641  0798                     	;# 
  2642  0799                     	;# 
  2643  079A                     	;# 
  2644  079B                     	;# 
  2645  080C                     	;# 
  2646  080D                     	;# 
  2647  080E                     	;# 
  2648  080F                     	;# 
  2649  0810                     	;# 
  2650  0811                     	;# 
  2651  0812                     	;# 
  2652  0813                     	;# 
  2653  0814                     	;# 
  2654  081A                     	;# 
  2655  081B                     	;# 
  2656  081C                     	;# 
  2657  081D                     	;# 
  2658  081E                     	;# 
  2659  081F                     	;# 
  2660  088C                     	;# 
  2661  088D                     	;# 
  2662  088E                     	;# 
  2663  088F                     	;# 
  2664  0890                     	;# 
  2665  0891                     	;# 
  2666  0892                     	;# 
  2667  0893                     	;# 
  2668  0895                     	;# 
  2669  0896                     	;# 
  2670  0897                     	;# 
  2671  0898                     	;# 
  2672  0899                     	;# 
  2673  089A                     	;# 
  2674  089B                     	;# 
  2675  090C                     	;# 
  2676  090E                     	;# 
  2677  090F                     	;# 
  2678  091F                     	;# 
  2679  098F                     	;# 
  2680  098F                     	;# 
  2681  0990                     	;# 
  2682  0991                     	;# 
  2683  0992                     	;# 
  2684  0993                     	;# 
  2685  0994                     	;# 
  2686  0995                     	;# 
  2687  0996                     	;# 
  2688  0997                     	;# 
  2689  1E0F                     	;# 
  2690  1E10                     	;# 
  2691  1E11                     	;# 
  2692  1E12                     	;# 
  2693  1E13                     	;# 
  2694  1E14                     	;# 
  2695  1E15                     	;# 
  2696  1E16                     	;# 
  2697  1E17                     	;# 
  2698  1E18                     	;# 
  2699  1E19                     	;# 
  2700  1E1A                     	;# 
  2701  1E1B                     	;# 
  2702  1E1C                     	;# 
  2703  1E1D                     	;# 
  2704  1E1E                     	;# 
  2705  1E1F                     	;# 
  2706  1E20                     	;# 
  2707  1E21                     	;# 
  2708  1E22                     	;# 
  2709  1E23                     	;# 
  2710  1E24                     	;# 
  2711  1E25                     	;# 
  2712  1E26                     	;# 
  2713  1E27                     	;# 
  2714  1E28                     	;# 
  2715  1E29                     	;# 
  2716  1E2A                     	;# 
  2717  1E2B                     	;# 
  2718  1E2C                     	;# 
  2719  1E2D                     	;# 
  2720  1E2E                     	;# 
  2721  1E2F                     	;# 
  2722  1E30                     	;# 
  2723  1E31                     	;# 
  2724  1E32                     	;# 
  2725  1E33                     	;# 
  2726  1E34                     	;# 
  2727  1E35                     	;# 
  2728  1E36                     	;# 
  2729  1E37                     	;# 
  2730  1E8F                     	;# 
  2731  1E90                     	;# 
  2732  1E91                     	;# 
  2733  1E92                     	;# 
  2734  1E93                     	;# 
  2735  1E94                     	;# 
  2736  1E95                     	;# 
  2737  1E96                     	;# 
  2738  1E97                     	;# 
  2739  1E9C                     	;# 
  2740  1E9D                     	;# 
  2741  1E9E                     	;# 
  2742  1EA1                     	;# 
  2743  1EA2                     	;# 
  2744  1EA3                     	;# 
  2745  1EA4                     	;# 
  2746  1EA5                     	;# 
  2747  1EA9                     	;# 
  2748  1EAA                     	;# 
  2749  1EAB                     	;# 
  2750  1EAC                     	;# 
  2751  1EB1                     	;# 
  2752  1EB2                     	;# 
  2753  1EB3                     	;# 
  2754  1EB8                     	;# 
  2755  1EB9                     	;# 
  2756  1EBA                     	;# 
  2757  1EBB                     	;# 
  2758  1EBC                     	;# 
  2759  1EBD                     	;# 
  2760  1EBE                     	;# 
  2761  1EC3                     	;# 
  2762  1EC5                     	;# 
  2763  1EC6                     	;# 
  2764  1EC7                     	;# 
  2765  1EC8                     	;# 
  2766  1EC9                     	;# 
  2767  1ECA                     	;# 
  2768  1ECB                     	;# 
  2769  1ECC                     	;# 
  2770  1F10                     	;# 
  2771  1F11                     	;# 
  2772  1F12                     	;# 
  2773  1F13                     	;# 
  2774  1F14                     	;# 
  2775  1F15                     	;# 
  2776  1F16                     	;# 
  2777  1F17                     	;# 
  2778  1F18                     	;# 
  2779  1F19                     	;# 
  2780  1F1A                     	;# 
  2781  1F1B                     	;# 
  2782  1F1C                     	;# 
  2783  1F1D                     	;# 
  2784  1F1E                     	;# 
  2785  1F1F                     	;# 
  2786  1F20                     	;# 
  2787  1F21                     	;# 
  2788  1F22                     	;# 
  2789  1F23                     	;# 
  2790  1F24                     	;# 
  2791  1F25                     	;# 
  2792  1F26                     	;# 
  2793  1F27                     	;# 
  2794  1F28                     	;# 
  2795  1F29                     	;# 
  2796  1F2A                     	;# 
  2797  1F2B                     	;# 
  2798  1F2C                     	;# 
  2799  1F2D                     	;# 
  2800  1F2E                     	;# 
  2801  1F2F                     	;# 
  2802  1F30                     	;# 
  2803  1F31                     	;# 
  2804  1F32                     	;# 
  2805  1F38                     	;# 
  2806  1F39                     	;# 
  2807  1F3A                     	;# 
  2808  1F3B                     	;# 
  2809  1F3C                     	;# 
  2810  1F3D                     	;# 
  2811  1F3E                     	;# 
  2812  1F3F                     	;# 
  2813  1F40                     	;# 
  2814  1F41                     	;# 
  2815  1F43                     	;# 
  2816  1F44                     	;# 
  2817  1F45                     	;# 
  2818  1F46                     	;# 
  2819  1F47                     	;# 
  2820  1F48                     	;# 
  2821  1F49                     	;# 
  2822  1F4A                     	;# 
  2823  1F4B                     	;# 
  2824  1F4C                     	;# 
  2825  1F4E                     	;# 
  2826  1F4F                     	;# 
  2827  1F50                     	;# 
  2828  1F51                     	;# 
  2829  1F52                     	;# 
  2830  1F53                     	;# 
  2831  1F54                     	;# 
  2832  1F55                     	;# 
  2833  1F56                     	;# 
  2834  1F57                     	;# 
  2835  1F59                     	;# 
  2836  1F5A                     	;# 
  2837  1F5B                     	;# 
  2838  1F5C                     	;# 
  2839  1F5D                     	;# 
  2840  1F61                     	;# 
  2841  1F62                     	;# 
  2842  1F64                     	;# 
  2843  1F65                     	;# 
  2844  1F66                     	;# 
  2845  1F67                     	;# 
  2846  1F68                     	;# 
  2847  1F69                     	;# 
  2848  1F6A                     	;# 
  2849  1F6B                     	;# 
  2850  1F6C                     	;# 
  2851  1F6D                     	;# 
  2852  1FE4                     	;# 
  2853  1FE5                     	;# 
  2854  1FE6                     	;# 
  2855  1FE7                     	;# 
  2856  1FE8                     	;# 
  2857  1FE9                     	;# 
  2858  1FEA                     	;# 
  2859  1FEB                     	;# 
  2860  1FED                     	;# 
  2861  1FEE                     	;# 
  2862  1FEF                     	;# 
  2863  0000                     	;# 
  2864  0001                     	;# 
  2865  0002                     	;# 
  2866  0003                     	;# 
  2867  0004                     	;# 
  2868  0005                     	;# 
  2869  0006                     	;# 
  2870  0007                     	;# 
  2871  0008                     	;# 
  2872  0009                     	;# 
  2873  000A                     	;# 
  2874  000B                     	;# 
  2875  000C                     	;# 
  2876  000D                     	;# 
  2877  000E                     	;# 
  2878  000F                     	;# 
  2879  0010                     	;# 
  2880  0011                     	;# 
  2881  0012                     	;# 
  2882  0013                     	;# 
  2883  0014                     	;# 
  2884  0015                     	;# 
  2885  0016                     	;# 
  2886  0017                     	;# 
  2887  0018                     	;# 
  2888  0019                     	;# 
  2889  001A                     	;# 
  2890  001C                     	;# 
  2891  001C                     	;# 
  2892  001D                     	;# 
  2893  001D                     	;# 
  2894  001E                     	;# 
  2895  001F                     	;# 
  2896  008C                     	;# 
  2897  008C                     	;# 
  2898  008D                     	;# 
  2899  008E                     	;# 
  2900  008E                     	;# 
  2901  008F                     	;# 
  2902  0090                     	;# 
  2903  0090                     	;# 
  2904  0091                     	;# 
  2905  0093                     	;# 
  2906  0094                     	;# 
  2907  0095                     	;# 
  2908  0096                     	;# 
  2909  0097                     	;# 
  2910  0098                     	;# 
  2911  0099                     	;# 
  2912  009A                     	;# 
  2913  009B                     	;# 
  2914  009C                     	;# 
  2915  009D                     	;# 
  2916  009E                     	;# 
  2917  010C                     	;# 
  2918  010D                     	;# 
  2919  010E                     	;# 
  2920  010E                     	;# 
  2921  010F                     	;# 
  2922  0110                     	;# 
  2923  0110                     	;# 
  2924  0111                     	;# 
  2925  0112                     	;# 
  2926  0112                     	;# 
  2927  0113                     	;# 
  2928  0114                     	;# 
  2929  0114                     	;# 
  2930  0115                     	;# 
  2931  0116                     	;# 
  2932  0116                     	;# 
  2933  0117                     	;# 
  2934  0119                     	;# 
  2935  0119                     	;# 
  2936  0119                     	;# 
  2937  011A                     	;# 
  2938  011A                     	;# 
  2939  011A                     	;# 
  2940  011B                     	;# 
  2941  011B                     	;# 
  2942  011B                     	;# 
  2943  011B                     	;# 
  2944  011B                     	;# 
  2945  011C                     	;# 
  2946  011C                     	;# 
  2947  011C                     	;# 
  2948  011D                     	;# 
  2949  011D                     	;# 
  2950  011D                     	;# 
  2951  011E                     	;# 
  2952  011E                     	;# 
  2953  011E                     	;# 
  2954  011F                     	;# 
  2955  011F                     	;# 
  2956  011F                     	;# 
  2957  011F                     	;# 
  2958  011F                     	;# 
  2959  018C                     	;# 
  2960  018D                     	;# 
  2961  018E                     	;# 
  2962  018F                     	;# 
  2963  0190                     	;# 
  2964  0191                     	;# 
  2965  0192                     	;# 
  2966  0196                     	;# 
  2967  0197                     	;# 
  2968  0198                     	;# 
  2969  0199                     	;# 
  2970  019A                     	;# 
  2971  019B                     	;# 
  2972  019C                     	;# 
  2973  020C                     	;# 
  2974  020C                     	;# 
  2975  020D                     	;# 
  2976  020E                     	;# 
  2977  020F                     	;# 
  2978  020F                     	;# 
  2979  0210                     	;# 
  2980  0210                     	;# 
  2981  0211                     	;# 
  2982  0211                     	;# 
  2983  0212                     	;# 
  2984  0212                     	;# 
  2985  0213                     	;# 
  2986  0214                     	;# 
  2987  0215                     	;# 
  2988  0215                     	;# 
  2989  0216                     	;# 
  2990  0216                     	;# 
  2991  0217                     	;# 
  2992  0217                     	;# 
  2993  0218                     	;# 
  2994  0218                     	;# 
  2995  0219                     	;# 
  2996  021A                     	;# 
  2997  021B                     	;# 
  2998  021B                     	;# 
  2999  021C                     	;# 
  3000  021C                     	;# 
  3001  021D                     	;# 
  3002  021D                     	;# 
  3003  021E                     	;# 
  3004  021F                     	;# 
  3005  028C                     	;# 
  3006  028C                     	;# 
  3007  028D                     	;# 
  3008  028D                     	;# 
  3009  028E                     	;# 
  3010  028F                     	;# 
  3011  0290                     	;# 
  3012  0290                     	;# 
  3013  0291                     	;# 
  3014  0292                     	;# 
  3015  0292                     	;# 
  3016  0293                     	;# 
  3017  0293                     	;# 
  3018  0294                     	;# 
  3019  0295                     	;# 
  3020  0296                     	;# 
  3021  0296                     	;# 
  3022  0297                     	;# 
  3023  0298                     	;# 
  3024  0298                     	;# 
  3025  0299                     	;# 
  3026  0299                     	;# 
  3027  029A                     	;# 
  3028  029B                     	;# 
  3029  029C                     	;# 
  3030  029C                     	;# 
  3031  029D                     	;# 
  3032  030C                     	;# 
  3033  030C                     	;# 
  3034  030D                     	;# 
  3035  030E                     	;# 
  3036  030F                     	;# 
  3037  0310                     	;# 
  3038  0310                     	;# 
  3039  0311                     	;# 
  3040  0312                     	;# 
  3041  0313                     	;# 
  3042  0314                     	;# 
  3043  0314                     	;# 
  3044  0315                     	;# 
  3045  0316                     	;# 
  3046  0317                     	;# 
  3047  0318                     	;# 
  3048  0318                     	;# 
  3049  0319                     	;# 
  3050  031A                     	;# 
  3051  031B                     	;# 
  3052  031C                     	;# 
  3053  031C                     	;# 
  3054  031D                     	;# 
  3055  031E                     	;# 
  3056  031F                     	;# 
  3057  038C                     	;# 
  3058  038D                     	;# 
  3059  038E                     	;# 
  3060  0390                     	;# 
  3061  0391                     	;# 
  3062  0392                     	;# 
  3063  040C                     	;# 
  3064  040D                     	;# 
  3065  040E                     	;# 
  3066  040F                     	;# 
  3067  0410                     	;# 
  3068  0411                     	;# 
  3069  0416                     	;# 
  3070  0416                     	;# 
  3071  0417                     	;# 
  3072  0418                     	;# 
  3073  0418                     	;# 
  3074  0419                     	;# 
  3075  041A                     	;# 
  3076  041A                     	;# 
  3077  041B                     	;# 
  3078  041C                     	;# 
  3079  041C                     	;# 
  3080  041D                     	;# 
  3081  041E                     	;# 
  3082  041F                     	;# 
  3083  048C                     	;# 
  3084  048C                     	;# 
  3085  048D                     	;# 
  3086  048E                     	;# 
  3087  048F                     	;# 
  3088  048F                     	;# 
  3089  0490                     	;# 
  3090  0491                     	;# 
  3091  0492                     	;# 
  3092  0492                     	;# 
  3093  0493                     	;# 
  3094  0494                     	;# 
  3095  0495                     	;# 
  3096  0495                     	;# 
  3097  0496                     	;# 
  3098  0497                     	;# 
  3099  0498                     	;# 
  3100  0499                     	;# 
  3101  049A                     	;# 
  3102  049B                     	;# 
  3103  049C                     	;# 
  3104  049D                     	;# 
  3105  050C                     	;# 
  3106  050C                     	;# 
  3107  050D                     	;# 
  3108  050E                     	;# 
  3109  050F                     	;# 
  3110  050F                     	;# 
  3111  0510                     	;# 
  3112  0511                     	;# 
  3113  0512                     	;# 
  3114  0512                     	;# 
  3115  0513                     	;# 
  3116  0514                     	;# 
  3117  0515                     	;# 
  3118  0515                     	;# 
  3119  0516                     	;# 
  3120  0517                     	;# 
  3121  0518                     	;# 
  3122  0519                     	;# 
  3123  051A                     	;# 
  3124  051B                     	;# 
  3125  051C                     	;# 
  3126  051D                     	;# 
  3127  058C                     	;# 
  3128  058C                     	;# 
  3129  058D                     	;# 
  3130  058E                     	;# 
  3131  058F                     	;# 
  3132  058F                     	;# 
  3133  0590                     	;# 
  3134  0591                     	;# 
  3135  0592                     	;# 
  3136  0593                     	;# 
  3137  060C                     	;# 
  3138  060D                     	;# 
  3139  060E                     	;# 
  3140  060F                     	;# 
  3141  0610                     	;# 
  3142  0611                     	;# 
  3143  0612                     	;# 
  3144  0613                     	;# 
  3145  0614                     	;# 
  3146  0616                     	;# 
  3147  0617                     	;# 
  3148  0618                     	;# 
  3149  0619                     	;# 
  3150  061A                     	;# 
  3151  061B                     	;# 
  3152  061C                     	;# 
  3153  061D                     	;# 
  3154  061E                     	;# 
  3155  068C                     	;# 
  3156  068D                     	;# 
  3157  068E                     	;# 
  3158  068F                     	;# 
  3159  0690                     	;# 
  3160  0691                     	;# 
  3161  0692                     	;# 
  3162  0693                     	;# 
  3163  0694                     	;# 
  3164  070C                     	;# 
  3165  070D                     	;# 
  3166  070E                     	;# 
  3167  070F                     	;# 
  3168  0710                     	;# 
  3169  0711                     	;# 
  3170  0712                     	;# 
  3171  0713                     	;# 
  3172  0714                     	;# 
  3173  0716                     	;# 
  3174  0717                     	;# 
  3175  0718                     	;# 
  3176  0719                     	;# 
  3177  071A                     	;# 
  3178  071B                     	;# 
  3179  071C                     	;# 
  3180  071D                     	;# 
  3181  071E                     	;# 
  3182  0796                     	;# 
  3183  0797                     	;# 
  3184  0798                     	;# 
  3185  0799                     	;# 
  3186  079A                     	;# 
  3187  079B                     	;# 
  3188  080C                     	;# 
  3189  080D                     	;# 
  3190  080E                     	;# 
  3191  080F                     	;# 
  3192  0810                     	;# 
  3193  0811                     	;# 
  3194  0812                     	;# 
  3195  0813                     	;# 
  3196  0814                     	;# 
  3197  081A                     	;# 
  3198  081B                     	;# 
  3199  081C                     	;# 
  3200  081D                     	;# 
  3201  081E                     	;# 
  3202  081F                     	;# 
  3203  088C                     	;# 
  3204  088D                     	;# 
  3205  088E                     	;# 
  3206  088F                     	;# 
  3207  0890                     	;# 
  3208  0891                     	;# 
  3209  0892                     	;# 
  3210  0893                     	;# 
  3211  0895                     	;# 
  3212  0896                     	;# 
  3213  0897                     	;# 
  3214  0898                     	;# 
  3215  0899                     	;# 
  3216  089A                     	;# 
  3217  089B                     	;# 
  3218  090C                     	;# 
  3219  090E                     	;# 
  3220  090F                     	;# 
  3221  091F                     	;# 
  3222  098F                     	;# 
  3223  098F                     	;# 
  3224  0990                     	;# 
  3225  0991                     	;# 
  3226  0992                     	;# 
  3227  0993                     	;# 
  3228  0994                     	;# 
  3229  0995                     	;# 
  3230  0996                     	;# 
  3231  0997                     	;# 
  3232  1E0F                     	;# 
  3233  1E10                     	;# 
  3234  1E11                     	;# 
  3235  1E12                     	;# 
  3236  1E13                     	;# 
  3237  1E14                     	;# 
  3238  1E15                     	;# 
  3239  1E16                     	;# 
  3240  1E17                     	;# 
  3241  1E18                     	;# 
  3242  1E19                     	;# 
  3243  1E1A                     	;# 
  3244  1E1B                     	;# 
  3245  1E1C                     	;# 
  3246  1E1D                     	;# 
  3247  1E1E                     	;# 
  3248  1E1F                     	;# 
  3249  1E20                     	;# 
  3250  1E21                     	;# 
  3251  1E22                     	;# 
  3252  1E23                     	;# 
  3253  1E24                     	;# 
  3254  1E25                     	;# 
  3255  1E26                     	;# 
  3256  1E27                     	;# 
  3257  1E28                     	;# 
  3258  1E29                     	;# 
  3259  1E2A                     	;# 
  3260  1E2B                     	;# 
  3261  1E2C                     	;# 
  3262  1E2D                     	;# 
  3263  1E2E                     	;# 
  3264  1E2F                     	;# 
  3265  1E30                     	;# 
  3266  1E31                     	;# 
  3267  1E32                     	;# 
  3268  1E33                     	;# 
  3269  1E34                     	;# 
  3270  1E35                     	;# 
  3271  1E36                     	;# 
  3272  1E37                     	;# 
  3273  1E8F                     	;# 
  3274  1E90                     	;# 
  3275  1E91                     	;# 
  3276  1E92                     	;# 
  3277  1E93                     	;# 
  3278  1E94                     	;# 
  3279  1E95                     	;# 
  3280  1E96                     	;# 
  3281  1E97                     	;# 
  3282  1E9C                     	;# 
  3283  1E9D                     	;# 
  3284  1E9E                     	;# 
  3285  1EA1                     	;# 
  3286  1EA2                     	;# 
  3287  1EA3                     	;# 
  3288  1EA4                     	;# 
  3289  1EA5                     	;# 
  3290  1EA9                     	;# 
  3291  1EAA                     	;# 
  3292  1EAB                     	;# 
  3293  1EAC                     	;# 
  3294  1EB1                     	;# 
  3295  1EB2                     	;# 
  3296  1EB3                     	;# 
  3297  1EB8                     	;# 
  3298  1EB9                     	;# 
  3299  1EBA                     	;# 
  3300  1EBB                     	;# 
  3301  1EBC                     	;# 
  3302  1EBD                     	;# 
  3303  1EBE                     	;# 
  3304  1EC3                     	;# 
  3305  1EC5                     	;# 
  3306  1EC6                     	;# 
  3307  1EC7                     	;# 
  3308  1EC8                     	;# 
  3309  1EC9                     	;# 
  3310  1ECA                     	;# 
  3311  1ECB                     	;# 
  3312  1ECC                     	;# 
  3313  1F10                     	;# 
  3314  1F11                     	;# 
  3315  1F12                     	;# 
  3316  1F13                     	;# 
  3317  1F14                     	;# 
  3318  1F15                     	;# 
  3319  1F16                     	;# 
  3320  1F17                     	;# 
  3321  1F18                     	;# 
  3322  1F19                     	;# 
  3323  1F1A                     	;# 
  3324  1F1B                     	;# 
  3325  1F1C                     	;# 
  3326  1F1D                     	;# 
  3327  1F1E                     	;# 
  3328  1F1F                     	;# 
  3329  1F20                     	;# 
  3330  1F21                     	;# 
  3331  1F22                     	;# 
  3332  1F23                     	;# 
  3333  1F24                     	;# 
  3334  1F25                     	;# 
  3335  1F26                     	;# 
  3336  1F27                     	;# 
  3337  1F28                     	;# 
  3338  1F29                     	;# 
  3339  1F2A                     	;# 
  3340  1F2B                     	;# 
  3341  1F2C                     	;# 
  3342  1F2D                     	;# 
  3343  1F2E                     	;# 
  3344  1F2F                     	;# 
  3345  1F30                     	;# 
  3346  1F31                     	;# 
  3347  1F32                     	;# 
  3348  1F38                     	;# 
  3349  1F39                     	;# 
  3350  1F3A                     	;# 
  3351  1F3B                     	;# 
  3352  1F3C                     	;# 
  3353  1F3D                     	;# 
  3354  1F3E                     	;# 
  3355  1F3F                     	;# 
  3356  1F40                     	;# 
  3357  1F41                     	;# 
  3358  1F43                     	;# 
  3359  1F44                     	;# 
  3360  1F45                     	;# 
  3361  1F46                     	;# 
  3362  1F47                     	;# 
  3363  1F48                     	;# 
  3364  1F49                     	;# 
  3365  1F4A                     	;# 
  3366  1F4B                     	;# 
  3367  1F4C                     	;# 
  3368  1F4E                     	;# 
  3369  1F4F                     	;# 
  3370  1F50                     	;# 
  3371  1F51                     	;# 
  3372  1F52                     	;# 
  3373  1F53                     	;# 
  3374  1F54                     	;# 
  3375  1F55                     	;# 
  3376  1F56                     	;# 
  3377  1F57                     	;# 
  3378  1F59                     	;# 
  3379  1F5A                     	;# 
  3380  1F5B                     	;# 
  3381  1F5C                     	;# 
  3382  1F5D                     	;# 
  3383  1F61                     	;# 
  3384  1F62                     	;# 
  3385  1F64                     	;# 
  3386  1F65                     	;# 
  3387  1F66                     	;# 
  3388  1F67                     	;# 
  3389  1F68                     	;# 
  3390  1F69                     	;# 
  3391  1F6A                     	;# 
  3392  1F6B                     	;# 
  3393  1F6C                     	;# 
  3394  1F6D                     	;# 
  3395  1FE4                     	;# 
  3396  1FE5                     	;# 
  3397  1FE6                     	;# 
  3398  1FE7                     	;# 
  3399  1FE8                     	;# 
  3400  1FE9                     	;# 
  3401  1FEA                     	;# 
  3402  1FEB                     	;# 
  3403  1FED                     	;# 
  3404  1FEE                     	;# 
  3405  1FEF                     	;# 
  3406  0000                     	;# 
  3407  0001                     	;# 
  3408  0002                     	;# 
  3409  0003                     	;# 
  3410  0004                     	;# 
  3411  0005                     	;# 
  3412  0006                     	;# 
  3413  0007                     	;# 
  3414  0008                     	;# 
  3415  0009                     	;# 
  3416  000A                     	;# 
  3417  000B                     	;# 
  3418  000C                     	;# 
  3419  000D                     	;# 
  3420  000E                     	;# 
  3421  000F                     	;# 
  3422  0010                     	;# 
  3423  0011                     	;# 
  3424  0012                     	;# 
  3425  0013                     	;# 
  3426  0014                     	;# 
  3427  0015                     	;# 
  3428  0016                     	;# 
  3429  0017                     	;# 
  3430  0018                     	;# 
  3431  0019                     	;# 
  3432  001A                     	;# 
  3433  001C                     	;# 
  3434  001C                     	;# 
  3435  001D                     	;# 
  3436  001D                     	;# 
  3437  001E                     	;# 
  3438  001F                     	;# 
  3439  008C                     	;# 
  3440  008C                     	;# 
  3441  008D                     	;# 
  3442  008E                     	;# 
  3443  008E                     	;# 
  3444  008F                     	;# 
  3445  0090                     	;# 
  3446  0090                     	;# 
  3447  0091                     	;# 
  3448  0093                     	;# 
  3449  0094                     	;# 
  3450  0095                     	;# 
  3451  0096                     	;# 
  3452  0097                     	;# 
  3453  0098                     	;# 
  3454  0099                     	;# 
  3455  009A                     	;# 
  3456  009B                     	;# 
  3457  009C                     	;# 
  3458  009D                     	;# 
  3459  009E                     	;# 
  3460  010C                     	;# 
  3461  010D                     	;# 
  3462  010E                     	;# 
  3463  010E                     	;# 
  3464  010F                     	;# 
  3465  0110                     	;# 
  3466  0110                     	;# 
  3467  0111                     	;# 
  3468  0112                     	;# 
  3469  0112                     	;# 
  3470  0113                     	;# 
  3471  0114                     	;# 
  3472  0114                     	;# 
  3473  0115                     	;# 
  3474  0116                     	;# 
  3475  0116                     	;# 
  3476  0117                     	;# 
  3477  0119                     	;# 
  3478  0119                     	;# 
  3479  0119                     	;# 
  3480  011A                     	;# 
  3481  011A                     	;# 
  3482  011A                     	;# 
  3483  011B                     	;# 
  3484  011B                     	;# 
  3485  011B                     	;# 
  3486  011B                     	;# 
  3487  011B                     	;# 
  3488  011C                     	;# 
  3489  011C                     	;# 
  3490  011C                     	;# 
  3491  011D                     	;# 
  3492  011D                     	;# 
  3493  011D                     	;# 
  3494  011E                     	;# 
  3495  011E                     	;# 
  3496  011E                     	;# 
  3497  011F                     	;# 
  3498  011F                     	;# 
  3499  011F                     	;# 
  3500  011F                     	;# 
  3501  011F                     	;# 
  3502  018C                     	;# 
  3503  018D                     	;# 
  3504  018E                     	;# 
  3505  018F                     	;# 
  3506  0190                     	;# 
  3507  0191                     	;# 
  3508  0192                     	;# 
  3509  0196                     	;# 
  3510  0197                     	;# 
  3511  0198                     	;# 
  3512  0199                     	;# 
  3513  019A                     	;# 
  3514  019B                     	;# 
  3515  019C                     	;# 
  3516  020C                     	;# 
  3517  020C                     	;# 
  3518  020D                     	;# 
  3519  020E                     	;# 
  3520  020F                     	;# 
  3521  020F                     	;# 
  3522  0210                     	;# 
  3523  0210                     	;# 
  3524  0211                     	;# 
  3525  0211                     	;# 
  3526  0212                     	;# 
  3527  0212                     	;# 
  3528  0213                     	;# 
  3529  0214                     	;# 
  3530  0215                     	;# 
  3531  0215                     	;# 
  3532  0216                     	;# 
  3533  0216                     	;# 
  3534  0217                     	;# 
  3535  0217                     	;# 
  3536  0218                     	;# 
  3537  0218                     	;# 
  3538  0219                     	;# 
  3539  021A                     	;# 
  3540  021B                     	;# 
  3541  021B                     	;# 
  3542  021C                     	;# 
  3543  021C                     	;# 
  3544  021D                     	;# 
  3545  021D                     	;# 
  3546  021E                     	;# 
  3547  021F                     	;# 
  3548  028C                     	;# 
  3549  028C                     	;# 
  3550  028D                     	;# 
  3551  028D                     	;# 
  3552  028E                     	;# 
  3553  028F                     	;# 
  3554  0290                     	;# 
  3555  0290                     	;# 
  3556  0291                     	;# 
  3557  0292                     	;# 
  3558  0292                     	;# 
  3559  0293                     	;# 
  3560  0293                     	;# 
  3561  0294                     	;# 
  3562  0295                     	;# 
  3563  0296                     	;# 
  3564  0296                     	;# 
  3565  0297                     	;# 
  3566  0298                     	;# 
  3567  0298                     	;# 
  3568  0299                     	;# 
  3569  0299                     	;# 
  3570  029A                     	;# 
  3571  029B                     	;# 
  3572  029C                     	;# 
  3573  029C                     	;# 
  3574  029D                     	;# 
  3575  030C                     	;# 
  3576  030C                     	;# 
  3577  030D                     	;# 
  3578  030E                     	;# 
  3579  030F                     	;# 
  3580  0310                     	;# 
  3581  0310                     	;# 
  3582  0311                     	;# 
  3583  0312                     	;# 
  3584  0313                     	;# 
  3585  0314                     	;# 
  3586  0314                     	;# 
  3587  0315                     	;# 
  3588  0316                     	;# 
  3589  0317                     	;# 
  3590  0318                     	;# 
  3591  0318                     	;# 
  3592  0319                     	;# 
  3593  031A                     	;# 
  3594  031B                     	;# 
  3595  031C                     	;# 
  3596  031C                     	;# 
  3597  031D                     	;# 
  3598  031E                     	;# 
  3599  031F                     	;# 
  3600  038C                     	;# 
  3601  038D                     	;# 
  3602  038E                     	;# 
  3603  0390                     	;# 
  3604  0391                     	;# 
  3605  0392                     	;# 
  3606  040C                     	;# 
  3607  040D                     	;# 
  3608  040E                     	;# 
  3609  040F                     	;# 
  3610  0410                     	;# 
  3611  0411                     	;# 
  3612  0416                     	;# 
  3613  0416                     	;# 
  3614  0417                     	;# 
  3615  0418                     	;# 
  3616  0418                     	;# 
  3617  0419                     	;# 
  3618  041A                     	;# 
  3619  041A                     	;# 
  3620  041B                     	;# 
  3621  041C                     	;# 
  3622  041C                     	;# 
  3623  041D                     	;# 
  3624  041E                     	;# 
  3625  041F                     	;# 
  3626  048C                     	;# 
  3627  048C                     	;# 
  3628  048D                     	;# 
  3629  048E                     	;# 
  3630  048F                     	;# 
  3631  048F                     	;# 
  3632  0490                     	;# 
  3633  0491                     	;# 
  3634  0492                     	;# 
  3635  0492                     	;# 
  3636  0493                     	;# 
  3637  0494                     	;# 
  3638  0495                     	;# 
  3639  0495                     	;# 
  3640  0496                     	;# 
  3641  0497                     	;# 
  3642  0498                     	;# 
  3643  0499                     	;# 
  3644  049A                     	;# 
  3645  049B                     	;# 
  3646  049C                     	;# 
  3647  049D                     	;# 
  3648  050C                     	;# 
  3649  050C                     	;# 
  3650  050D                     	;# 
  3651  050E                     	;# 
  3652  050F                     	;# 
  3653  050F                     	;# 
  3654  0510                     	;# 
  3655  0511                     	;# 
  3656  0512                     	;# 
  3657  0512                     	;# 
  3658  0513                     	;# 
  3659  0514                     	;# 
  3660  0515                     	;# 
  3661  0515                     	;# 
  3662  0516                     	;# 
  3663  0517                     	;# 
  3664  0518                     	;# 
  3665  0519                     	;# 
  3666  051A                     	;# 
  3667  051B                     	;# 
  3668  051C                     	;# 
  3669  051D                     	;# 
  3670  058C                     	;# 
  3671  058C                     	;# 
  3672  058D                     	;# 
  3673  058E                     	;# 
  3674  058F                     	;# 
  3675  058F                     	;# 
  3676  0590                     	;# 
  3677  0591                     	;# 
  3678  0592                     	;# 
  3679  0593                     	;# 
  3680  060C                     	;# 
  3681  060D                     	;# 
  3682  060E                     	;# 
  3683  060F                     	;# 
  3684  0610                     	;# 
  3685  0611                     	;# 
  3686  0612                     	;# 
  3687  0613                     	;# 
  3688  0614                     	;# 
  3689  0616                     	;# 
  3690  0617                     	;# 
  3691  0618                     	;# 
  3692  0619                     	;# 
  3693  061A                     	;# 
  3694  061B                     	;# 
  3695  061C                     	;# 
  3696  061D                     	;# 
  3697  061E                     	;# 
  3698  068C                     	;# 
  3699  068D                     	;# 
  3700  068E                     	;# 
  3701  068F                     	;# 
  3702  0690                     	;# 
  3703  0691                     	;# 
  3704  0692                     	;# 
  3705  0693                     	;# 
  3706  0694                     	;# 
  3707  070C                     	;# 
  3708  070D                     	;# 
  3709  070E                     	;# 
  3710  070F                     	;# 
  3711  0710                     	;# 
  3712  0711                     	;# 
  3713  0712                     	;# 
  3714  0713                     	;# 
  3715  0714                     	;# 
  3716  0716                     	;# 
  3717  0717                     	;# 
  3718  0718                     	;# 
  3719  0719                     	;# 
  3720  071A                     	;# 
  3721  071B                     	;# 
  3722  071C                     	;# 
  3723  071D                     	;# 
  3724  071E                     	;# 
  3725  0796                     	;# 
  3726  0797                     	;# 
  3727  0798                     	;# 
  3728  0799                     	;# 
  3729  079A                     	;# 
  3730  079B                     	;# 
  3731  080C                     	;# 
  3732  080D                     	;# 
  3733  080E                     	;# 
  3734  080F                     	;# 
  3735  0810                     	;# 
  3736  0811                     	;# 
  3737  0812                     	;# 
  3738  0813                     	;# 
  3739  0814                     	;# 
  3740  081A                     	;# 
  3741  081B                     	;# 
  3742  081C                     	;# 
  3743  081D                     	;# 
  3744  081E                     	;# 
  3745  081F                     	;# 
  3746  088C                     	;# 
  3747  088D                     	;# 
  3748  088E                     	;# 
  3749  088F                     	;# 
  3750  0890                     	;# 
  3751  0891                     	;# 
  3752  0892                     	;# 
  3753  0893                     	;# 
  3754  0895                     	;# 
  3755  0896                     	;# 
  3756  0897                     	;# 
  3757  0898                     	;# 
  3758  0899                     	;# 
  3759  089A                     	;# 
  3760  089B                     	;# 
  3761  090C                     	;# 
  3762  090E                     	;# 
  3763  090F                     	;# 
  3764  091F                     	;# 
  3765  098F                     	;# 
  3766  098F                     	;# 
  3767  0990                     	;# 
  3768  0991                     	;# 
  3769  0992                     	;# 
  3770  0993                     	;# 
  3771  0994                     	;# 
  3772  0995                     	;# 
  3773  0996                     	;# 
  3774  0997                     	;# 
  3775  1E0F                     	;# 
  3776  1E10                     	;# 
  3777  1E11                     	;# 
  3778  1E12                     	;# 
  3779  1E13                     	;# 
  3780  1E14                     	;# 
  3781  1E15                     	;# 
  3782  1E16                     	;# 
  3783  1E17                     	;# 
  3784  1E18                     	;# 
  3785  1E19                     	;# 
  3786  1E1A                     	;# 
  3787  1E1B                     	;# 
  3788  1E1C                     	;# 
  3789  1E1D                     	;# 
  3790  1E1E                     	;# 
  3791  1E1F                     	;# 
  3792  1E20                     	;# 
  3793  1E21                     	;# 
  3794  1E22                     	;# 
  3795  1E23                     	;# 
  3796  1E24                     	;# 
  3797  1E25                     	;# 
  3798  1E26                     	;# 
  3799  1E27                     	;# 
  3800  1E28                     	;# 
  3801  1E29                     	;# 
  3802  1E2A                     	;# 
  3803  1E2B                     	;# 
  3804  1E2C                     	;# 
  3805  1E2D                     	;# 
  3806  1E2E                     	;# 
  3807  1E2F                     	;# 
  3808  1E30                     	;# 
  3809  1E31                     	;# 
  3810  1E32                     	;# 
  3811  1E33                     	;# 
  3812  1E34                     	;# 
  3813  1E35                     	;# 
  3814  1E36                     	;# 
  3815  1E37                     	;# 
  3816  1E8F                     	;# 
  3817  1E90                     	;# 
  3818  1E91                     	;# 
  3819  1E92                     	;# 
  3820  1E93                     	;# 
  3821  1E94                     	;# 
  3822  1E95                     	;# 
  3823  1E96                     	;# 
  3824  1E97                     	;# 
  3825  1E9C                     	;# 
  3826  1E9D                     	;# 
  3827  1E9E                     	;# 
  3828  1EA1                     	;# 
  3829  1EA2                     	;# 
  3830  1EA3                     	;# 
  3831  1EA4                     	;# 
  3832  1EA5                     	;# 
  3833  1EA9                     	;# 
  3834  1EAA                     	;# 
  3835  1EAB                     	;# 
  3836  1EAC                     	;# 
  3837  1EB1                     	;# 
  3838  1EB2                     	;# 
  3839  1EB3                     	;# 
  3840  1EB8                     	;# 
  3841  1EB9                     	;# 
  3842  1EBA                     	;# 
  3843  1EBB                     	;# 
  3844  1EBC                     	;# 
  3845  1EBD                     	;# 
  3846  1EBE                     	;# 
  3847  1EC3                     	;# 
  3848  1EC5                     	;# 
  3849  1EC6                     	;# 
  3850  1EC7                     	;# 
  3851  1EC8                     	;# 
  3852  1EC9                     	;# 
  3853  1ECA                     	;# 
  3854  1ECB                     	;# 
  3855  1ECC                     	;# 
  3856  1F10                     	;# 
  3857  1F11                     	;# 
  3858  1F12                     	;# 
  3859  1F13                     	;# 
  3860  1F14                     	;# 
  3861  1F15                     	;# 
  3862  1F16                     	;# 
  3863  1F17                     	;# 
  3864  1F18                     	;# 
  3865  1F19                     	;# 
  3866  1F1A                     	;# 
  3867  1F1B                     	;# 
  3868  1F1C                     	;# 
  3869  1F1D                     	;# 
  3870  1F1E                     	;# 
  3871  1F1F                     	;# 
  3872  1F20                     	;# 
  3873  1F21                     	;# 
  3874  1F22                     	;# 
  3875  1F23                     	;# 
  3876  1F24                     	;# 
  3877  1F25                     	;# 
  3878  1F26                     	;# 
  3879  1F27                     	;# 
  3880  1F28                     	;# 
  3881  1F29                     	;# 
  3882  1F2A                     	;# 
  3883  1F2B                     	;# 
  3884  1F2C                     	;# 
  3885  1F2D                     	;# 
  3886  1F2E                     	;# 
  3887  1F2F                     	;# 
  3888  1F30                     	;# 
  3889  1F31                     	;# 
  3890  1F32                     	;# 
  3891  1F38                     	;# 
  3892  1F39                     	;# 
  3893  1F3A                     	;# 
  3894  1F3B                     	;# 
  3895  1F3C                     	;# 
  3896  1F3D                     	;# 
  3897  1F3E                     	;# 
  3898  1F3F                     	;# 
  3899  1F40                     	;# 
  3900  1F41                     	;# 
  3901  1F43                     	;# 
  3902  1F44                     	;# 
  3903  1F45                     	;# 
  3904  1F46                     	;# 
  3905  1F47                     	;# 
  3906  1F48                     	;# 
  3907  1F49                     	;# 
  3908  1F4A                     	;# 
  3909  1F4B                     	;# 
  3910  1F4C                     	;# 
  3911  1F4E                     	;# 
  3912  1F4F                     	;# 
  3913  1F50                     	;# 
  3914  1F51                     	;# 
  3915  1F52                     	;# 
  3916  1F53                     	;# 
  3917  1F54                     	;# 
  3918  1F55                     	;# 
  3919  1F56                     	;# 
  3920  1F57                     	;# 
  3921  1F59                     	;# 
  3922  1F5A                     	;# 
  3923  1F5B                     	;# 
  3924  1F5C                     	;# 
  3925  1F5D                     	;# 
  3926  1F61                     	;# 
  3927  1F62                     	;# 
  3928  1F64                     	;# 
  3929  1F65                     	;# 
  3930  1F66                     	;# 
  3931  1F67                     	;# 
  3932  1F68                     	;# 
  3933  1F69                     	;# 
  3934  1F6A                     	;# 
  3935  1F6B                     	;# 
  3936  1F6C                     	;# 
  3937  1F6D                     	;# 
  3938  1FE4                     	;# 
  3939  1FE5                     	;# 
  3940  1FE6                     	;# 
  3941  1FE7                     	;# 
  3942  1FE8                     	;# 
  3943  1FE9                     	;# 
  3944  1FEA                     	;# 
  3945  1FEB                     	;# 
  3946  1FED                     	;# 
  3947  1FEE                     	;# 
  3948  1FEF                     	;# 
  3949  0000                     	;# 
  3950  0001                     	;# 
  3951  0002                     	;# 
  3952  0003                     	;# 
  3953  0004                     	;# 
  3954  0005                     	;# 
  3955  0006                     	;# 
  3956  0007                     	;# 
  3957  0008                     	;# 
  3958  0009                     	;# 
  3959  000A                     	;# 
  3960  000B                     	;# 
  3961  000C                     	;# 
  3962  000D                     	;# 
  3963  000E                     	;# 
  3964  000F                     	;# 
  3965  0010                     	;# 
  3966  0011                     	;# 
  3967  0012                     	;# 
  3968  0013                     	;# 
  3969  0014                     	;# 
  3970  0015                     	;# 
  3971  0016                     	;# 
  3972  0017                     	;# 
  3973  0018                     	;# 
  3974  0019                     	;# 
  3975  001A                     	;# 
  3976  001C                     	;# 
  3977  001C                     	;# 
  3978  001D                     	;# 
  3979  001D                     	;# 
  3980  001E                     	;# 
  3981  001F                     	;# 
  3982  008C                     	;# 
  3983  008C                     	;# 
  3984  008D                     	;# 
  3985  008E                     	;# 
  3986  008E                     	;# 
  3987  008F                     	;# 
  3988  0090                     	;# 
  3989  0090                     	;# 
  3990  0091                     	;# 
  3991  0093                     	;# 
  3992  0094                     	;# 
  3993  0095                     	;# 
  3994  0096                     	;# 
  3995  0097                     	;# 
  3996  0098                     	;# 
  3997  0099                     	;# 
  3998  009A                     	;# 
  3999  009B                     	;# 
  4000  009C                     	;# 
  4001  009D                     	;# 
  4002  009E                     	;# 
  4003  010C                     	;# 
  4004  010D                     	;# 
  4005  010E                     	;# 
  4006  010E                     	;# 
  4007  010F                     	;# 
  4008  0110                     	;# 
  4009  0110                     	;# 
  4010  0111                     	;# 
  4011  0112                     	;# 
  4012  0112                     	;# 
  4013  0113                     	;# 
  4014  0114                     	;# 
  4015  0114                     	;# 
  4016  0115                     	;# 
  4017  0116                     	;# 
  4018  0116                     	;# 
  4019  0117                     	;# 
  4020  0119                     	;# 
  4021  0119                     	;# 
  4022  0119                     	;# 
  4023  011A                     	;# 
  4024  011A                     	;# 
  4025  011A                     	;# 
  4026  011B                     	;# 
  4027  011B                     	;# 
  4028  011B                     	;# 
  4029  011B                     	;# 
  4030  011B                     	;# 
  4031  011C                     	;# 
  4032  011C                     	;# 
  4033  011C                     	;# 
  4034  011D                     	;# 
  4035  011D                     	;# 
  4036  011D                     	;# 
  4037  011E                     	;# 
  4038  011E                     	;# 
  4039  011E                     	;# 
  4040  011F                     	;# 
  4041  011F                     	;# 
  4042  011F                     	;# 
  4043  011F                     	;# 
  4044  011F                     	;# 
  4045  018C                     	;# 
  4046  018D                     	;# 
  4047  018E                     	;# 
  4048  018F                     	;# 
  4049  0190                     	;# 
  4050  0191                     	;# 
  4051  0192                     	;# 
  4052  0196                     	;# 
  4053  0197                     	;# 
  4054  0198                     	;# 
  4055  0199                     	;# 
  4056  019A                     	;# 
  4057  019B                     	;# 
  4058  019C                     	;# 
  4059  020C                     	;# 
  4060  020C                     	;# 
  4061  020D                     	;# 
  4062  020E                     	;# 
  4063  020F                     	;# 
  4064  020F                     	;# 
  4065  0210                     	;# 
  4066  0210                     	;# 
  4067  0211                     	;# 
  4068  0211                     	;# 
  4069  0212                     	;# 
  4070  0212                     	;# 
  4071  0213                     	;# 
  4072  0214                     	;# 
  4073  0215                     	;# 
  4074  0215                     	;# 
  4075  0216                     	;# 
  4076  0216                     	;# 
  4077  0217                     	;# 
  4078  0217                     	;# 
  4079  0218                     	;# 
  4080  0218                     	;# 
  4081  0219                     	;# 
  4082  021A                     	;# 
  4083  021B                     	;# 
  4084  021B                     	;# 
  4085  021C                     	;# 
  4086  021C                     	;# 
  4087  021D                     	;# 
  4088  021D                     	;# 
  4089  021E                     	;# 
  4090  021F                     	;# 
  4091  028C                     	;# 
  4092  028C                     	;# 
  4093  028D                     	;# 
  4094  028D                     	;# 
  4095  028E                     	;# 
  4096  028F                     	;# 
  4097  0290                     	;# 
  4098  0290                     	;# 
  4099  0291                     	;# 
  4100  0292                     	;# 
  4101  0292                     	;# 
  4102  0293                     	;# 
  4103  0293                     	;# 
  4104  0294                     	;# 
  4105  0295                     	;# 
  4106  0296                     	;# 
  4107  0296                     	;# 
  4108  0297                     	;# 
  4109  0298                     	;# 
  4110  0298                     	;# 
  4111  0299                     	;# 
  4112  0299                     	;# 
  4113  029A                     	;# 
  4114  029B                     	;# 
  4115  029C                     	;# 
  4116  029C                     	;# 
  4117  029D                     	;# 
  4118  030C                     	;# 
  4119  030C                     	;# 
  4120  030D                     	;# 
  4121  030E                     	;# 
  4122  030F                     	;# 
  4123  0310                     	;# 
  4124  0310                     	;# 
  4125  0311                     	;# 
  4126  0312                     	;# 
  4127  0313                     	;# 
  4128  0314                     	;# 
  4129  0314                     	;# 
  4130  0315                     	;# 
  4131  0316                     	;# 
  4132  0317                     	;# 
  4133  0318                     	;# 
  4134  0318                     	;# 
  4135  0319                     	;# 
  4136  031A                     	;# 
  4137  031B                     	;# 
  4138  031C                     	;# 
  4139  031C                     	;# 
  4140  031D                     	;# 
  4141  031E                     	;# 
  4142  031F                     	;# 
  4143  038C                     	;# 
  4144  038D                     	;# 
  4145  038E                     	;# 
  4146  0390                     	;# 
  4147  0391                     	;# 
  4148  0392                     	;# 
  4149  040C                     	;# 
  4150  040D                     	;# 
  4151  040E                     	;# 
  4152  040F                     	;# 
  4153  0410                     	;# 
  4154  0411                     	;# 
  4155  0416                     	;# 
  4156  0416                     	;# 
  4157  0417                     	;# 
  4158  0418                     	;# 
  4159  0418                     	;# 
  4160  0419                     	;# 
  4161  041A                     	;# 
  4162  041A                     	;# 
  4163  041B                     	;# 
  4164  041C                     	;# 
  4165  041C                     	;# 
  4166  041D                     	;# 
  4167  041E                     	;# 
  4168  041F                     	;# 
  4169  048C                     	;# 
  4170  048C                     	;# 
  4171  048D                     	;# 
  4172  048E                     	;# 
  4173  048F                     	;# 
  4174  048F                     	;# 
  4175  0490                     	;# 
  4176  0491                     	;# 
  4177  0492                     	;# 
  4178  0492                     	;# 
  4179  0493                     	;# 
  4180  0494                     	;# 
  4181  0495                     	;# 
  4182  0495                     	;# 
  4183  0496                     	;# 
  4184  0497                     	;# 
  4185  0498                     	;# 
  4186  0499                     	;# 
  4187  049A                     	;# 
  4188  049B                     	;# 
  4189  049C                     	;# 
  4190  049D                     	;# 
  4191  050C                     	;# 
  4192  050C                     	;# 
  4193  050D                     	;# 
  4194  050E                     	;# 
  4195  050F                     	;# 
  4196  050F                     	;# 
  4197  0510                     	;# 
  4198  0511                     	;# 
  4199  0512                     	;# 
  4200  0512                     	;# 
  4201  0513                     	;# 
  4202  0514                     	;# 
  4203  0515                     	;# 
  4204  0515                     	;# 
  4205  0516                     	;# 
  4206  0517                     	;# 
  4207  0518                     	;# 
  4208  0519                     	;# 
  4209  051A                     	;# 
  4210  051B                     	;# 
  4211  051C                     	;# 
  4212  051D                     	;# 
  4213  058C                     	;# 
  4214  058C                     	;# 
  4215  058D                     	;# 
  4216  058E                     	;# 
  4217  058F                     	;# 
  4218  058F                     	;# 
  4219  0590                     	;# 
  4220  0591                     	;# 
  4221  0592                     	;# 
  4222  0593                     	;# 
  4223  060C                     	;# 
  4224  060D                     	;# 
  4225  060E                     	;# 
  4226  060F                     	;# 
  4227  0610                     	;# 
  4228  0611                     	;# 
  4229  0612                     	;# 
  4230  0613                     	;# 
  4231  0614                     	;# 
  4232  0616                     	;# 
  4233  0617                     	;# 
  4234  0618                     	;# 
  4235  0619                     	;# 
  4236  061A                     	;# 
  4237  061B                     	;# 
  4238  061C                     	;# 
  4239  061D                     	;# 
  4240  061E                     	;# 
  4241  068C                     	;# 
  4242  068D                     	;# 
  4243  068E                     	;# 
  4244  068F                     	;# 
  4245  0690                     	;# 
  4246  0691                     	;# 
  4247  0692                     	;# 
  4248  0693                     	;# 
  4249  0694                     	;# 
  4250  070C                     	;# 
  4251  070D                     	;# 
  4252  070E                     	;# 
  4253  070F                     	;# 
  4254  0710                     	;# 
  4255  0711                     	;# 
  4256  0712                     	;# 
  4257  0713                     	;# 
  4258  0714                     	;# 
  4259  0716                     	;# 
  4260  0717                     	;# 
  4261  0718                     	;# 
  4262  0719                     	;# 
  4263  071A                     	;# 
  4264  071B                     	;# 
  4265  071C                     	;# 
  4266  071D                     	;# 
  4267  071E                     	;# 
  4268  0796                     	;# 
  4269  0797                     	;# 
  4270  0798                     	;# 
  4271  0799                     	;# 
  4272  079A                     	;# 
  4273  079B                     	;# 
  4274  080C                     	;# 
  4275  080D                     	;# 
  4276  080E                     	;# 
  4277  080F                     	;# 
  4278  0810                     	;# 
  4279  0811                     	;# 
  4280  0812                     	;# 
  4281  0813                     	;# 
  4282  0814                     	;# 
  4283  081A                     	;# 
  4284  081B                     	;# 
  4285  081C                     	;# 
  4286  081D                     	;# 
  4287  081E                     	;# 
  4288  081F                     	;# 
  4289  088C                     	;# 
  4290  088D                     	;# 
  4291  088E                     	;# 
  4292  088F                     	;# 
  4293  0890                     	;# 
  4294  0891                     	;# 
  4295  0892                     	;# 
  4296  0893                     	;# 
  4297  0895                     	;# 
  4298  0896                     	;# 
  4299  0897                     	;# 
  4300  0898                     	;# 
  4301  0899                     	;# 
  4302  089A                     	;# 
  4303  089B                     	;# 
  4304  090C                     	;# 
  4305  090E                     	;# 
  4306  090F                     	;# 
  4307  091F                     	;# 
  4308  098F                     	;# 
  4309  098F                     	;# 
  4310  0990                     	;# 
  4311  0991                     	;# 
  4312  0992                     	;# 
  4313  0993                     	;# 
  4314  0994                     	;# 
  4315  0995                     	;# 
  4316  0996                     	;# 
  4317  0997                     	;# 
  4318  1E0F                     	;# 
  4319  1E10                     	;# 
  4320  1E11                     	;# 
  4321  1E12                     	;# 
  4322  1E13                     	;# 
  4323  1E14                     	;# 
  4324  1E15                     	;# 
  4325  1E16                     	;# 
  4326  1E17                     	;# 
  4327  1E18                     	;# 
  4328  1E19                     	;# 
  4329  1E1A                     	;# 
  4330  1E1B                     	;# 
  4331  1E1C                     	;# 
  4332  1E1D                     	;# 
  4333  1E1E                     	;# 
  4334  1E1F                     	;# 
  4335  1E20                     	;# 
  4336  1E21                     	;# 
  4337  1E22                     	;# 
  4338  1E23                     	;# 
  4339  1E24                     	;# 
  4340  1E25                     	;# 
  4341  1E26                     	;# 
  4342  1E27                     	;# 
  4343  1E28                     	;# 
  4344  1E29                     	;# 
  4345  1E2A                     	;# 
  4346  1E2B                     	;# 
  4347  1E2C                     	;# 
  4348  1E2D                     	;# 
  4349  1E2E                     	;# 
  4350  1E2F                     	;# 
  4351  1E30                     	;# 
  4352  1E31                     	;# 
  4353  1E32                     	;# 
  4354  1E33                     	;# 
  4355  1E34                     	;# 
  4356  1E35                     	;# 
  4357  1E36                     	;# 
  4358  1E37                     	;# 
  4359  1E8F                     	;# 
  4360  1E90                     	;# 
  4361  1E91                     	;# 
  4362  1E92                     	;# 
  4363  1E93                     	;# 
  4364  1E94                     	;# 
  4365  1E95                     	;# 
  4366  1E96                     	;# 
  4367  1E97                     	;# 
  4368  1E9C                     	;# 
  4369  1E9D                     	;# 
  4370  1E9E                     	;# 
  4371  1EA1                     	;# 
  4372  1EA2                     	;# 
  4373  1EA3                     	;# 
  4374  1EA4                     	;# 
  4375  1EA5                     	;# 
  4376  1EA9                     	;# 
  4377  1EAA                     	;# 
  4378  1EAB                     	;# 
  4379  1EAC                     	;# 
  4380  1EB1                     	;# 
  4381  1EB2                     	;# 
  4382  1EB3                     	;# 
  4383  1EB8                     	;# 
  4384  1EB9                     	;# 
  4385  1EBA                     	;# 
  4386  1EBB                     	;# 
  4387  1EBC                     	;# 
  4388  1EBD                     	;# 
  4389  1EBE                     	;# 
  4390  1EC3                     	;# 
  4391  1EC5                     	;# 
  4392  1EC6                     	;# 
  4393  1EC7                     	;# 
  4394  1EC8                     	;# 
  4395  1EC9                     	;# 
  4396  1ECA                     	;# 
  4397  1ECB                     	;# 
  4398  1ECC                     	;# 
  4399  1F10                     	;# 
  4400  1F11                     	;# 
  4401  1F12                     	;# 
  4402  1F13                     	;# 
  4403  1F14                     	;# 
  4404  1F15                     	;# 
  4405  1F16                     	;# 
  4406  1F17                     	;# 
  4407  1F18                     	;# 
  4408  1F19                     	;# 
  4409  1F1A                     	;# 
  4410  1F1B                     	;# 
  4411  1F1C                     	;# 
  4412  1F1D                     	;# 
  4413  1F1E                     	;# 
  4414  1F1F                     	;# 
  4415  1F20                     	;# 
  4416  1F21                     	;# 
  4417  1F22                     	;# 
  4418  1F23                     	;# 
  4419  1F24                     	;# 
  4420  1F25                     	;# 
  4421  1F26                     	;# 
  4422  1F27                     	;# 
  4423  1F28                     	;# 
  4424  1F29                     	;# 
  4425  1F2A                     	;# 
  4426  1F2B                     	;# 
  4427  1F2C                     	;# 
  4428  1F2D                     	;# 
  4429  1F2E                     	;# 
  4430  1F2F                     	;# 
  4431  1F30                     	;# 
  4432  1F31                     	;# 
  4433  1F32                     	;# 
  4434  1F38                     	;# 
  4435  1F39                     	;# 
  4436  1F3A                     	;# 
  4437  1F3B                     	;# 
  4438  1F3C                     	;# 
  4439  1F3D                     	;# 
  4440  1F3E                     	;# 
  4441  1F3F                     	;# 
  4442  1F40                     	;# 
  4443  1F41                     	;# 
  4444  1F43                     	;# 
  4445  1F44                     	;# 
  4446  1F45                     	;# 
  4447  1F46                     	;# 
  4448  1F47                     	;# 
  4449  1F48                     	;# 
  4450  1F49                     	;# 
  4451  1F4A                     	;# 
  4452  1F4B                     	;# 
  4453  1F4C                     	;# 
  4454  1F4E                     	;# 
  4455  1F4F                     	;# 
  4456  1F50                     	;# 
  4457  1F51                     	;# 
  4458  1F52                     	;# 
  4459  1F53                     	;# 
  4460  1F54                     	;# 
  4461  1F55                     	;# 
  4462  1F56                     	;# 
  4463  1F57                     	;# 
  4464  1F59                     	;# 
  4465  1F5A                     	;# 
  4466  1F5B                     	;# 
  4467  1F5C                     	;# 
  4468  1F5D                     	;# 
  4469  1F61                     	;# 
  4470  1F62                     	;# 
  4471  1F64                     	;# 
  4472  1F65                     	;# 
  4473  1F66                     	;# 
  4474  1F67                     	;# 
  4475  1F68                     	;# 
  4476  1F69                     	;# 
  4477  1F6A                     	;# 
  4478  1F6B                     	;# 
  4479  1F6C                     	;# 
  4480  1F6D                     	;# 
  4481  1FE4                     	;# 
  4482  1FE5                     	;# 
  4483  1FE6                     	;# 
  4484  1FE7                     	;# 
  4485  1FE8                     	;# 
  4486  1FE9                     	;# 
  4487  1FEA                     	;# 
  4488  1FEB                     	;# 
  4489  1FED                     	;# 
  4490  1FEE                     	;# 
  4491  1FEF                     	;# 
  4492  0000                     	;# 
  4493  0001                     	;# 
  4494  0002                     	;# 
  4495  0003                     	;# 
  4496  0004                     	;# 
  4497  0005                     	;# 
  4498  0006                     	;# 
  4499  0007                     	;# 
  4500  0008                     	;# 
  4501  0009                     	;# 
  4502  000A                     	;# 
  4503  000B                     	;# 
  4504  000C                     	;# 
  4505  000D                     	;# 
  4506  000E                     	;# 
  4507  000F                     	;# 
  4508  0010                     	;# 
  4509  0011                     	;# 
  4510  0012                     	;# 
  4511  0013                     	;# 
  4512  0014                     	;# 
  4513  0015                     	;# 
  4514  0016                     	;# 
  4515  0017                     	;# 
  4516  0018                     	;# 
  4517  0019                     	;# 
  4518  001A                     	;# 
  4519  001C                     	;# 
  4520  001C                     	;# 
  4521  001D                     	;# 
  4522  001D                     	;# 
  4523  001E                     	;# 
  4524  001F                     	;# 
  4525  008C                     	;# 
  4526  008C                     	;# 
  4527  008D                     	;# 
  4528  008E                     	;# 
  4529  008E                     	;# 
  4530  008F                     	;# 
  4531  0090                     	;# 
  4532  0090                     	;# 
  4533  0091                     	;# 
  4534  0093                     	;# 
  4535  0094                     	;# 
  4536  0095                     	;# 
  4537  0096                     	;# 
  4538  0097                     	;# 
  4539  0098                     	;# 
  4540  0099                     	;# 
  4541  009A                     	;# 
  4542  009B                     	;# 
  4543  009C                     	;# 
  4544  009D                     	;# 
  4545  009E                     	;# 
  4546  010C                     	;# 
  4547  010D                     	;# 
  4548  010E                     	;# 
  4549  010E                     	;# 
  4550  010F                     	;# 
  4551  0110                     	;# 
  4552  0110                     	;# 
  4553  0111                     	;# 
  4554  0112                     	;# 
  4555  0112                     	;# 
  4556  0113                     	;# 
  4557  0114                     	;# 
  4558  0114                     	;# 
  4559  0115                     	;# 
  4560  0116                     	;# 
  4561  0116                     	;# 
  4562  0117                     	;# 
  4563  0119                     	;# 
  4564  0119                     	;# 
  4565  0119                     	;# 
  4566  011A                     	;# 
  4567  011A                     	;# 
  4568  011A                     	;# 
  4569  011B                     	;# 
  4570  011B                     	;# 
  4571  011B                     	;# 
  4572  011B                     	;# 
  4573  011B                     	;# 
  4574  011C                     	;# 
  4575  011C                     	;# 
  4576  011C                     	;# 
  4577  011D                     	;# 
  4578  011D                     	;# 
  4579  011D                     	;# 
  4580  011E                     	;# 
  4581  011E                     	;# 
  4582  011E                     	;# 
  4583  011F                     	;# 
  4584  011F                     	;# 
  4585  011F                     	;# 
  4586  011F                     	;# 
  4587  011F                     	;# 
  4588  018C                     	;# 
  4589  018D                     	;# 
  4590  018E                     	;# 
  4591  018F                     	;# 
  4592  0190                     	;# 
  4593  0191                     	;# 
  4594  0192                     	;# 
  4595  0196                     	;# 
  4596  0197                     	;# 
  4597  0198                     	;# 
  4598  0199                     	;# 
  4599  019A                     	;# 
  4600  019B                     	;# 
  4601  019C                     	;# 
  4602  020C                     	;# 
  4603  020C                     	;# 
  4604  020D                     	;# 
  4605  020E                     	;# 
  4606  020F                     	;# 
  4607  020F                     	;# 
  4608  0210                     	;# 
  4609  0210                     	;# 
  4610  0211                     	;# 
  4611  0211                     	;# 
  4612  0212                     	;# 
  4613  0212                     	;# 
  4614  0213                     	;# 
  4615  0214                     	;# 
  4616  0215                     	;# 
  4617  0215                     	;# 
  4618  0216                     	;# 
  4619  0216                     	;# 
  4620  0217                     	;# 
  4621  0217                     	;# 
  4622  0218                     	;# 
  4623  0218                     	;# 
  4624  0219                     	;# 
  4625  021A                     	;# 
  4626  021B                     	;# 
  4627  021B                     	;# 
  4628  021C                     	;# 
  4629  021C                     	;# 
  4630  021D                     	;# 
  4631  021D                     	;# 
  4632  021E                     	;# 
  4633  021F                     	;# 
  4634  028C                     	;# 
  4635  028C                     	;# 
  4636  028D                     	;# 
  4637  028D                     	;# 
  4638  028E                     	;# 
  4639  028F                     	;# 
  4640  0290                     	;# 
  4641  0290                     	;# 
  4642  0291                     	;# 
  4643  0292                     	;# 
  4644  0292                     	;# 
  4645  0293                     	;# 
  4646  0293                     	;# 
  4647  0294                     	;# 
  4648  0295                     	;# 
  4649  0296                     	;# 
  4650  0296                     	;# 
  4651  0297                     	;# 
  4652  0298                     	;# 
  4653  0298                     	;# 
  4654  0299                     	;# 
  4655  0299                     	;# 
  4656  029A                     	;# 
  4657  029B                     	;# 
  4658  029C                     	;# 
  4659  029C                     	;# 
  4660  029D                     	;# 
  4661  030C                     	;# 
  4662  030C                     	;# 
  4663  030D                     	;# 
  4664  030E                     	;# 
  4665  030F                     	;# 
  4666  0310                     	;# 
  4667  0310                     	;# 
  4668  0311                     	;# 
  4669  0312                     	;# 
  4670  0313                     	;# 
  4671  0314                     	;# 
  4672  0314                     	;# 
  4673  0315                     	;# 
  4674  0316                     	;# 
  4675  0317                     	;# 
  4676  0318                     	;# 
  4677  0318                     	;# 
  4678  0319                     	;# 
  4679  031A                     	;# 
  4680  031B                     	;# 
  4681  031C                     	;# 
  4682  031C                     	;# 
  4683  031D                     	;# 
  4684  031E                     	;# 
  4685  031F                     	;# 
  4686  038C                     	;# 
  4687  038D                     	;# 
  4688  038E                     	;# 
  4689  0390                     	;# 
  4690  0391                     	;# 
  4691  0392                     	;# 
  4692  040C                     	;# 
  4693  040D                     	;# 
  4694  040E                     	;# 
  4695  040F                     	;# 
  4696  0410                     	;# 
  4697  0411                     	;# 
  4698  0416                     	;# 
  4699  0416                     	;# 
  4700  0417                     	;# 
  4701  0418                     	;# 
  4702  0418                     	;# 
  4703  0419                     	;# 
  4704  041A                     	;# 
  4705  041A                     	;# 
  4706  041B                     	;# 
  4707  041C                     	;# 
  4708  041C                     	;# 
  4709  041D                     	;# 
  4710  041E                     	;# 
  4711  041F                     	;# 
  4712  048C                     	;# 
  4713  048C                     	;# 
  4714  048D                     	;# 
  4715  048E                     	;# 
  4716  048F                     	;# 
  4717  048F                     	;# 
  4718  0490                     	;# 
  4719  0491                     	;# 
  4720  0492                     	;# 
  4721  0492                     	;# 
  4722  0493                     	;# 
  4723  0494                     	;# 
  4724  0495                     	;# 
  4725  0495                     	;# 
  4726  0496                     	;# 
  4727  0497                     	;# 
  4728  0498                     	;# 
  4729  0499                     	;# 
  4730  049A                     	;# 
  4731  049B                     	;# 
  4732  049C                     	;# 
  4733  049D                     	;# 
  4734  050C                     	;# 
  4735  050C                     	;# 
  4736  050D                     	;# 
  4737  050E                     	;# 
  4738  050F                     	;# 
  4739  050F                     	;# 
  4740  0510                     	;# 
  4741  0511                     	;# 
  4742  0512                     	;# 
  4743  0512                     	;# 
  4744  0513                     	;# 
  4745  0514                     	;# 
  4746  0515                     	;# 
  4747  0515                     	;# 
  4748  0516                     	;# 
  4749  0517                     	;# 
  4750  0518                     	;# 
  4751  0519                     	;# 
  4752  051A                     	;# 
  4753  051B                     	;# 
  4754  051C                     	;# 
  4755  051D                     	;# 
  4756  058C                     	;# 
  4757  058C                     	;# 
  4758  058D                     	;# 
  4759  058E                     	;# 
  4760  058F                     	;# 
  4761  058F                     	;# 
  4762  0590                     	;# 
  4763  0591                     	;# 
  4764  0592                     	;# 
  4765  0593                     	;# 
  4766  060C                     	;# 
  4767  060D                     	;# 
  4768  060E                     	;# 
  4769  060F                     	;# 
  4770  0610                     	;# 
  4771  0611                     	;# 
  4772  0612                     	;# 
  4773  0613                     	;# 
  4774  0614                     	;# 
  4775  0616                     	;# 
  4776  0617                     	;# 
  4777  0618                     	;# 
  4778  0619                     	;# 
  4779  061A                     	;# 
  4780  061B                     	;# 
  4781  061C                     	;# 
  4782  061D                     	;# 
  4783  061E                     	;# 
  4784  068C                     	;# 
  4785  068D                     	;# 
  4786  068E                     	;# 
  4787  068F                     	;# 
  4788  0690                     	;# 
  4789  0691                     	;# 
  4790  0692                     	;# 
  4791  0693                     	;# 
  4792  0694                     	;# 
  4793  070C                     	;# 
  4794  070D                     	;# 
  4795  070E                     	;# 
  4796  070F                     	;# 
  4797  0710                     	;# 
  4798  0711                     	;# 
  4799  0712                     	;# 
  4800  0713                     	;# 
  4801  0714                     	;# 
  4802  0716                     	;# 
  4803  0717                     	;# 
  4804  0718                     	;# 
  4805  0719                     	;# 
  4806  071A                     	;# 
  4807  071B                     	;# 
  4808  071C                     	;# 
  4809  071D                     	;# 
  4810  071E                     	;# 
  4811  0796                     	;# 
  4812  0797                     	;# 
  4813  0798                     	;# 
  4814  0799                     	;# 
  4815  079A                     	;# 
  4816  079B                     	;# 
  4817  080C                     	;# 
  4818  080D                     	;# 
  4819  080E                     	;# 
  4820  080F                     	;# 
  4821  0810                     	;# 
  4822  0811                     	;# 
  4823  0812                     	;# 
  4824  0813                     	;# 
  4825  0814                     	;# 
  4826  081A                     	;# 
  4827  081B                     	;# 
  4828  081C                     	;# 
  4829  081D                     	;# 
  4830  081E                     	;# 
  4831  081F                     	;# 
  4832  088C                     	;# 
  4833  088D                     	;# 
  4834  088E                     	;# 
  4835  088F                     	;# 
  4836  0890                     	;# 
  4837  0891                     	;# 
  4838  0892                     	;# 
  4839  0893                     	;# 
  4840  0895                     	;# 
  4841  0896                     	;# 
  4842  0897                     	;# 
  4843  0898                     	;# 
  4844  0899                     	;# 
  4845  089A                     	;# 
  4846  089B                     	;# 
  4847  090C                     	;# 
  4848  090E                     	;# 
  4849  090F                     	;# 
  4850  091F                     	;# 
  4851  098F                     	;# 
  4852  098F                     	;# 
  4853  0990                     	;# 
  4854  0991                     	;# 
  4855  0992                     	;# 
  4856  0993                     	;# 
  4857  0994                     	;# 
  4858  0995                     	;# 
  4859  0996                     	;# 
  4860  0997                     	;# 
  4861  1E0F                     	;# 
  4862  1E10                     	;# 
  4863  1E11                     	;# 
  4864  1E12                     	;# 
  4865  1E13                     	;# 
  4866  1E14                     	;# 
  4867  1E15                     	;# 
  4868  1E16                     	;# 
  4869  1E17                     	;# 
  4870  1E18                     	;# 
  4871  1E19                     	;# 
  4872  1E1A                     	;# 
  4873  1E1B                     	;# 
  4874  1E1C                     	;# 
  4875  1E1D                     	;# 
  4876  1E1E                     	;# 
  4877  1E1F                     	;# 
  4878  1E20                     	;# 
  4879  1E21                     	;# 
  4880  1E22                     	;# 
  4881  1E23                     	;# 
  4882  1E24                     	;# 
  4883  1E25                     	;# 
  4884  1E26                     	;# 
  4885  1E27                     	;# 
  4886  1E28                     	;# 
  4887  1E29                     	;# 
  4888  1E2A                     	;# 
  4889  1E2B                     	;# 
  4890  1E2C                     	;# 
  4891  1E2D                     	;# 
  4892  1E2E                     	;# 
  4893  1E2F                     	;# 
  4894  1E30                     	;# 
  4895  1E31                     	;# 
  4896  1E32                     	;# 
  4897  1E33                     	;# 
  4898  1E34                     	;# 
  4899  1E35                     	;# 
  4900  1E36                     	;# 
  4901  1E37                     	;# 
  4902  1E8F                     	;# 
  4903  1E90                     	;# 
  4904  1E91                     	;# 
  4905  1E92                     	;# 
  4906  1E93                     	;# 
  4907  1E94                     	;# 
  4908  1E95                     	;# 
  4909  1E96                     	;# 
  4910  1E97                     	;# 
  4911  1E9C                     	;# 
  4912  1E9D                     	;# 
  4913  1E9E                     	;# 
  4914  1EA1                     	;# 
  4915  1EA2                     	;# 
  4916  1EA3                     	;# 
  4917  1EA4                     	;# 
  4918  1EA5                     	;# 
  4919  1EA9                     	;# 
  4920  1EAA                     	;# 
  4921  1EAB                     	;# 
  4922  1EAC                     	;# 
  4923  1EB1                     	;# 
  4924  1EB2                     	;# 
  4925  1EB3                     	;# 
  4926  1EB8                     	;# 
  4927  1EB9                     	;# 
  4928  1EBA                     	;# 
  4929  1EBB                     	;# 
  4930  1EBC                     	;# 
  4931  1EBD                     	;# 
  4932  1EBE                     	;# 
  4933  1EC3                     	;# 
  4934  1EC5                     	;# 
  4935  1EC6                     	;# 
  4936  1EC7                     	;# 
  4937  1EC8                     	;# 
  4938  1EC9                     	;# 
  4939  1ECA                     	;# 
  4940  1ECB                     	;# 
  4941  1ECC                     	;# 
  4942  1F10                     	;# 
  4943  1F11                     	;# 
  4944  1F12                     	;# 
  4945  1F13                     	;# 
  4946  1F14                     	;# 
  4947  1F15                     	;# 
  4948  1F16                     	;# 
  4949  1F17                     	;# 
  4950  1F18                     	;# 
  4951  1F19                     	;# 
  4952  1F1A                     	;# 
  4953  1F1B                     	;# 
  4954  1F1C                     	;# 
  4955  1F1D                     	;# 
  4956  1F1E                     	;# 
  4957  1F1F                     	;# 
  4958  1F20                     	;# 
  4959  1F21                     	;# 
  4960  1F22                     	;# 
  4961  1F23                     	;# 
  4962  1F24                     	;# 
  4963  1F25                     	;# 
  4964  1F26                     	;# 
  4965  1F27                     	;# 
  4966  1F28                     	;# 
  4967  1F29                     	;# 
  4968  1F2A                     	;# 
  4969  1F2B                     	;# 
  4970  1F2C                     	;# 
  4971  1F2D                     	;# 
  4972  1F2E                     	;# 
  4973  1F2F                     	;# 
  4974  1F30                     	;# 
  4975  1F31                     	;# 
  4976  1F32                     	;# 
  4977  1F38                     	;# 
  4978  1F39                     	;# 
  4979  1F3A                     	;# 
  4980  1F3B                     	;# 
  4981  1F3C                     	;# 
  4982  1F3D                     	;# 
  4983  1F3E                     	;# 
  4984  1F3F                     	;# 
  4985  1F40                     	;# 
  4986  1F41                     	;# 
  4987  1F43                     	;# 
  4988  1F44                     	;# 
  4989  1F45                     	;# 
  4990  1F46                     	;# 
  4991  1F47                     	;# 
  4992  1F48                     	;# 
  4993  1F49                     	;# 
  4994  1F4A                     	;# 
  4995  1F4B                     	;# 
  4996  1F4C                     	;# 
  4997  1F4E                     	;# 
  4998  1F4F                     	;# 
  4999  1F50                     	;# 
  5000  1F51                     	;# 
  5001  1F52                     	;# 
  5002  1F53                     	;# 
  5003  1F54                     	;# 
  5004  1F55                     	;# 
  5005  1F56                     	;# 
  5006  1F57                     	;# 
  5007  1F59                     	;# 
  5008  1F5A                     	;# 
  5009  1F5B                     	;# 
  5010  1F5C                     	;# 
  5011  1F5D                     	;# 
  5012  1F61                     	;# 
  5013  1F62                     	;# 
  5014  1F64                     	;# 
  5015  1F65                     	;# 
  5016  1F66                     	;# 
  5017  1F67                     	;# 
  5018  1F68                     	;# 
  5019  1F69                     	;# 
  5020  1F6A                     	;# 
  5021  1F6B                     	;# 
  5022  1F6C                     	;# 
  5023  1F6D                     	;# 
  5024  1FE4                     	;# 
  5025  1FE5                     	;# 
  5026  1FE6                     	;# 
  5027  1FE7                     	;# 
  5028  1FE8                     	;# 
  5029  1FE9                     	;# 
  5030  1FEA                     	;# 
  5031  1FEB                     	;# 
  5032  1FED                     	;# 
  5033  1FEE                     	;# 
  5034  1FEF                     	;# 
  5035  0000                     	;# 
  5036  0001                     	;# 
  5037  0002                     	;# 
  5038  0003                     	;# 
  5039  0004                     	;# 
  5040  0005                     	;# 
  5041  0006                     	;# 
  5042  0007                     	;# 
  5043  0008                     	;# 
  5044  0009                     	;# 
  5045  000A                     	;# 
  5046  000B                     	;# 
  5047  000C                     	;# 
  5048  000D                     	;# 
  5049  000E                     	;# 
  5050  000F                     	;# 
  5051  0010                     	;# 
  5052  0011                     	;# 
  5053  0012                     	;# 
  5054  0013                     	;# 
  5055  0014                     	;# 
  5056  0015                     	;# 
  5057  0016                     	;# 
  5058  0017                     	;# 
  5059  0018                     	;# 
  5060  0019                     	;# 
  5061  001A                     	;# 
  5062  001C                     	;# 
  5063  001C                     	;# 
  5064  001D                     	;# 
  5065  001D                     	;# 
  5066  001E                     	;# 
  5067  001F                     	;# 
  5068  008C                     	;# 
  5069  008C                     	;# 
  5070  008D                     	;# 
  5071  008E                     	;# 
  5072  008E                     	;# 
  5073  008F                     	;# 
  5074  0090                     	;# 
  5075  0090                     	;# 
  5076  0091                     	;# 
  5077  0093                     	;# 
  5078  0094                     	;# 
  5079  0095                     	;# 
  5080  0096                     	;# 
  5081  0097                     	;# 
  5082  0098                     	;# 
  5083  0099                     	;# 
  5084  009A                     	;# 
  5085  009B                     	;# 
  5086  009C                     	;# 
  5087  009D                     	;# 
  5088  009E                     	;# 
  5089  010C                     	;# 
  5090  010D                     	;# 
  5091  010E                     	;# 
  5092  010E                     	;# 
  5093  010F                     	;# 
  5094  0110                     	;# 
  5095  0110                     	;# 
  5096  0111                     	;# 
  5097  0112                     	;# 
  5098  0112                     	;# 
  5099  0113                     	;# 
  5100  0114                     	;# 
  5101  0114                     	;# 
  5102  0115                     	;# 
  5103  0116                     	;# 
  5104  0116                     	;# 
  5105  0117                     	;# 
  5106  0119                     	;# 
  5107  0119                     	;# 
  5108  0119                     	;# 
  5109  011A                     	;# 
  5110  011A                     	;# 
  5111  011A                     	;# 
  5112  011B                     	;# 
  5113  011B                     	;# 
  5114  011B                     	;# 
  5115  011B                     	;# 
  5116  011B                     	;# 
  5117  011C                     	;# 
  5118  011C                     	;# 
  5119  011C                     	;# 
  5120  011D                     	;# 
  5121  011D                     	;# 
  5122  011D                     	;# 
  5123  011E                     	;# 
  5124  011E                     	;# 
  5125  011E                     	;# 
  5126  011F                     	;# 
  5127  011F                     	;# 
  5128  011F                     	;# 
  5129  011F                     	;# 
  5130  011F                     	;# 
  5131  018C                     	;# 
  5132  018D                     	;# 
  5133  018E                     	;# 
  5134  018F                     	;# 
  5135  0190                     	;# 
  5136  0191                     	;# 
  5137  0192                     	;# 
  5138  0196                     	;# 
  5139  0197                     	;# 
  5140  0198                     	;# 
  5141  0199                     	;# 
  5142  019A                     	;# 
  5143  019B                     	;# 
  5144  019C                     	;# 
  5145  020C                     	;# 
  5146  020C                     	;# 
  5147  020D                     	;# 
  5148  020E                     	;# 
  5149  020F                     	;# 
  5150  020F                     	;# 
  5151  0210                     	;# 
  5152  0210                     	;# 
  5153  0211                     	;# 
  5154  0211                     	;# 
  5155  0212                     	;# 
  5156  0212                     	;# 
  5157  0213                     	;# 
  5158  0214                     	;# 
  5159  0215                     	;# 
  5160  0215                     	;# 
  5161  0216                     	;# 
  5162  0216                     	;# 
  5163  0217                     	;# 
  5164  0217                     	;# 
  5165  0218                     	;# 
  5166  0218                     	;# 
  5167  0219                     	;# 
  5168  021A                     	;# 
  5169  021B                     	;# 
  5170  021B                     	;# 
  5171  021C                     	;# 
  5172  021C                     	;# 
  5173  021D                     	;# 
  5174  021D                     	;# 
  5175  021E                     	;# 
  5176  021F                     	;# 
  5177  028C                     	;# 
  5178  028C                     	;# 
  5179  028D                     	;# 
  5180  028D                     	;# 
  5181  028E                     	;# 
  5182  028F                     	;# 
  5183  0290                     	;# 
  5184  0290                     	;# 
  5185  0291                     	;# 
  5186  0292                     	;# 
  5187  0292                     	;# 
  5188  0293                     	;# 
  5189  0293                     	;# 
  5190  0294                     	;# 
  5191  0295                     	;# 
  5192  0296                     	;# 
  5193  0296                     	;# 
  5194  0297                     	;# 
  5195  0298                     	;# 
  5196  0298                     	;# 
  5197  0299                     	;# 
  5198  0299                     	;# 
  5199  029A                     	;# 
  5200  029B                     	;# 
  5201  029C                     	;# 
  5202  029C                     	;# 
  5203  029D                     	;# 
  5204  030C                     	;# 
  5205  030C                     	;# 
  5206  030D                     	;# 
  5207  030E                     	;# 
  5208  030F                     	;# 
  5209  0310                     	;# 
  5210  0310                     	;# 
  5211  0311                     	;# 
  5212  0312                     	;# 
  5213  0313                     	;# 
  5214  0314                     	;# 
  5215  0314                     	;# 
  5216  0315                     	;# 
  5217  0316                     	;# 
  5218  0317                     	;# 
  5219  0318                     	;# 
  5220  0318                     	;# 
  5221  0319                     	;# 
  5222  031A                     	;# 
  5223  031B                     	;# 
  5224  031C                     	;# 
  5225  031C                     	;# 
  5226  031D                     	;# 
  5227  031E                     	;# 
  5228  031F                     	;# 
  5229  038C                     	;# 
  5230  038D                     	;# 
  5231  038E                     	;# 
  5232  0390                     	;# 
  5233  0391                     	;# 
  5234  0392                     	;# 
  5235  040C                     	;# 
  5236  040D                     	;# 
  5237  040E                     	;# 
  5238  040F                     	;# 
  5239  0410                     	;# 
  5240  0411                     	;# 
  5241  0416                     	;# 
  5242  0416                     	;# 
  5243  0417                     	;# 
  5244  0418                     	;# 
  5245  0418                     	;# 
  5246  0419                     	;# 
  5247  041A                     	;# 
  5248  041A                     	;# 
  5249  041B                     	;# 
  5250  041C                     	;# 
  5251  041C                     	;# 
  5252  041D                     	;# 
  5253  041E                     	;# 
  5254  041F                     	;# 
  5255  048C                     	;# 
  5256  048C                     	;# 
  5257  048D                     	;# 
  5258  048E                     	;# 
  5259  048F                     	;# 
  5260  048F                     	;# 
  5261  0490                     	;# 
  5262  0491                     	;# 
  5263  0492                     	;# 
  5264  0492                     	;# 
  5265  0493                     	;# 
  5266  0494                     	;# 
  5267  0495                     	;# 
  5268  0495                     	;# 
  5269  0496                     	;# 
  5270  0497                     	;# 
  5271  0498                     	;# 
  5272  0499                     	;# 
  5273  049A                     	;# 
  5274  049B                     	;# 
  5275  049C                     	;# 
  5276  049D                     	;# 
  5277  050C                     	;# 
  5278  050C                     	;# 
  5279  050D                     	;# 
  5280  050E                     	;# 
  5281  050F                     	;# 
  5282  050F                     	;# 
  5283  0510                     	;# 
  5284  0511                     	;# 
  5285  0512                     	;# 
  5286  0512                     	;# 
  5287  0513                     	;# 
  5288  0514                     	;# 
  5289  0515                     	;# 
  5290  0515                     	;# 
  5291  0516                     	;# 
  5292  0517                     	;# 
  5293  0518                     	;# 
  5294  0519                     	;# 
  5295  051A                     	;# 
  5296  051B                     	;# 
  5297  051C                     	;# 
  5298  051D                     	;# 
  5299  058C                     	;# 
  5300  058C                     	;# 
  5301  058D                     	;# 
  5302  058E                     	;# 
  5303  058F                     	;# 
  5304  058F                     	;# 
  5305  0590                     	;# 
  5306  0591                     	;# 
  5307  0592                     	;# 
  5308  0593                     	;# 
  5309  060C                     	;# 
  5310  060D                     	;# 
  5311  060E                     	;# 
  5312  060F                     	;# 
  5313  0610                     	;# 
  5314  0611                     	;# 
  5315  0612                     	;# 
  5316  0613                     	;# 
  5317  0614                     	;# 
  5318  0616                     	;# 
  5319  0617                     	;# 
  5320  0618                     	;# 
  5321  0619                     	;# 
  5322  061A                     	;# 
  5323  061B                     	;# 
  5324  061C                     	;# 
  5325  061D                     	;# 
  5326  061E                     	;# 
  5327  068C                     	;# 
  5328  068D                     	;# 
  5329  068E                     	;# 
  5330  068F                     	;# 
  5331  0690                     	;# 
  5332  0691                     	;# 
  5333  0692                     	;# 
  5334  0693                     	;# 
  5335  0694                     	;# 
  5336  070C                     	;# 
  5337  070D                     	;# 
  5338  070E                     	;# 
  5339  070F                     	;# 
  5340  0710                     	;# 
  5341  0711                     	;# 
  5342  0712                     	;# 
  5343  0713                     	;# 
  5344  0714                     	;# 
  5345  0716                     	;# 
  5346  0717                     	;# 
  5347  0718                     	;# 
  5348  0719                     	;# 
  5349  071A                     	;# 
  5350  071B                     	;# 
  5351  071C                     	;# 
  5352  071D                     	;# 
  5353  071E                     	;# 
  5354  0796                     	;# 
  5355  0797                     	;# 
  5356  0798                     	;# 
  5357  0799                     	;# 
  5358  079A                     	;# 
  5359  079B                     	;# 
  5360  080C                     	;# 
  5361  080D                     	;# 
  5362  080E                     	;# 
  5363  080F                     	;# 
  5364  0810                     	;# 
  5365  0811                     	;# 
  5366  0812                     	;# 
  5367  0813                     	;# 
  5368  0814                     	;# 
  5369  081A                     	;# 
  5370  081B                     	;# 
  5371  081C                     	;# 
  5372  081D                     	;# 
  5373  081E                     	;# 
  5374  081F                     	;# 
  5375  088C                     	;# 
  5376  088D                     	;# 
  5377  088E                     	;# 
  5378  088F                     	;# 
  5379  0890                     	;# 
  5380  0891                     	;# 
  5381  0892                     	;# 
  5382  0893                     	;# 
  5383  0895                     	;# 
  5384  0896                     	;# 
  5385  0897                     	;# 
  5386  0898                     	;# 
  5387  0899                     	;# 
  5388  089A                     	;# 
  5389  089B                     	;# 
  5390  090C                     	;# 
  5391  090E                     	;# 
  5392  090F                     	;# 
  5393  091F                     	;# 
  5394  098F                     	;# 
  5395  098F                     	;# 
  5396  0990                     	;# 
  5397  0991                     	;# 
  5398  0992                     	;# 
  5399  0993                     	;# 
  5400  0994                     	;# 
  5401  0995                     	;# 
  5402  0996                     	;# 
  5403  0997                     	;# 
  5404  1E0F                     	;# 
  5405  1E10                     	;# 
  5406  1E11                     	;# 
  5407  1E12                     	;# 
  5408  1E13                     	;# 
  5409  1E14                     	;# 
  5410  1E15                     	;# 
  5411  1E16                     	;# 
  5412  1E17                     	;# 
  5413  1E18                     	;# 
  5414  1E19                     	;# 
  5415  1E1A                     	;# 
  5416  1E1B                     	;# 
  5417  1E1C                     	;# 
  5418  1E1D                     	;# 
  5419  1E1E                     	;# 
  5420  1E1F                     	;# 
  5421  1E20                     	;# 
  5422  1E21                     	;# 
  5423  1E22                     	;# 
  5424  1E23                     	;# 
  5425  1E24                     	;# 
  5426  1E25                     	;# 
  5427  1E26                     	;# 
  5428  1E27                     	;# 
  5429  1E28                     	;# 
  5430  1E29                     	;# 
  5431  1E2A                     	;# 
  5432  1E2B                     	;# 
  5433  1E2C                     	;# 
  5434  1E2D                     	;# 
  5435  1E2E                     	;# 
  5436  1E2F                     	;# 
  5437  1E30                     	;# 
  5438  1E31                     	;# 
  5439  1E32                     	;# 
  5440  1E33                     	;# 
  5441  1E34                     	;# 
  5442  1E35                     	;# 
  5443  1E36                     	;# 
  5444  1E37                     	;# 
  5445  1E8F                     	;# 
  5446  1E90                     	;# 
  5447  1E91                     	;# 
  5448  1E92                     	;# 
  5449  1E93                     	;# 
  5450  1E94                     	;# 
  5451  1E95                     	;# 
  5452  1E96                     	;# 
  5453  1E97                     	;# 
  5454  1E9C                     	;# 
  5455  1E9D                     	;# 
  5456  1E9E                     	;# 
  5457  1EA1                     	;# 
  5458  1EA2                     	;# 
  5459  1EA3                     	;# 
  5460  1EA4                     	;# 
  5461  1EA5                     	;# 
  5462  1EA9                     	;# 
  5463  1EAA                     	;# 
  5464  1EAB                     	;# 
  5465  1EAC                     	;# 
  5466  1EB1                     	;# 
  5467  1EB2                     	;# 
  5468  1EB3                     	;# 
  5469  1EB8                     	;# 
  5470  1EB9                     	;# 
  5471  1EBA                     	;# 
  5472  1EBB                     	;# 
  5473  1EBC                     	;# 
  5474  1EBD                     	;# 
  5475  1EBE                     	;# 
  5476  1EC3                     	;# 
  5477  1EC5                     	;# 
  5478  1EC6                     	;# 
  5479  1EC7                     	;# 
  5480  1EC8                     	;# 
  5481  1EC9                     	;# 
  5482  1ECA                     	;# 
  5483  1ECB                     	;# 
  5484  1ECC                     	;# 
  5485  1F10                     	;# 
  5486  1F11                     	;# 
  5487  1F12                     	;# 
  5488  1F13                     	;# 
  5489  1F14                     	;# 
  5490  1F15                     	;# 
  5491  1F16                     	;# 
  5492  1F17                     	;# 
  5493  1F18                     	;# 
  5494  1F19                     	;# 
  5495  1F1A                     	;# 
  5496  1F1B                     	;# 
  5497  1F1C                     	;# 
  5498  1F1D                     	;# 
  5499  1F1E                     	;# 
  5500  1F1F                     	;# 
  5501  1F20                     	;# 
  5502  1F21                     	;# 
  5503  1F22                     	;# 
  5504  1F23                     	;# 
  5505  1F24                     	;# 
  5506  1F25                     	;# 
  5507  1F26                     	;# 
  5508  1F27                     	;# 
  5509  1F28                     	;# 
  5510  1F29                     	;# 
  5511  1F2A                     	;# 
  5512  1F2B                     	;# 
  5513  1F2C                     	;# 
  5514  1F2D                     	;# 
  5515  1F2E                     	;# 
  5516  1F2F                     	;# 
  5517  1F30                     	;# 
  5518  1F31                     	;# 
  5519  1F32                     	;# 
  5520  1F38                     	;# 
  5521  1F39                     	;# 
  5522  1F3A                     	;# 
  5523  1F3B                     	;# 
  5524  1F3C                     	;# 
  5525  1F3D                     	;# 
  5526  1F3E                     	;# 
  5527  1F3F                     	;# 
  5528  1F40                     	;# 
  5529  1F41                     	;# 
  5530  1F43                     	;# 
  5531  1F44                     	;# 
  5532  1F45                     	;# 
  5533  1F46                     	;# 
  5534  1F47                     	;# 
  5535  1F48                     	;# 
  5536  1F49                     	;# 
  5537  1F4A                     	;# 
  5538  1F4B                     	;# 
  5539  1F4C                     	;# 
  5540  1F4E                     	;# 
  5541  1F4F                     	;# 
  5542  1F50                     	;# 
  5543  1F51                     	;# 
  5544  1F52                     	;# 
  5545  1F53                     	;# 
  5546  1F54                     	;# 
  5547  1F55                     	;# 
  5548  1F56                     	;# 
  5549  1F57                     	;# 
  5550  1F59                     	;# 
  5551  1F5A                     	;# 
  5552  1F5B                     	;# 
  5553  1F5C                     	;# 
  5554  1F5D                     	;# 
  5555  1F61                     	;# 
  5556  1F62                     	;# 
  5557  1F64                     	;# 
  5558  1F65                     	;# 
  5559  1F66                     	;# 
  5560  1F67                     	;# 
  5561  1F68                     	;# 
  5562  1F69                     	;# 
  5563  1F6A                     	;# 
  5564  1F6B                     	;# 
  5565  1F6C                     	;# 
  5566  1F6D                     	;# 
  5567  1FE4                     	;# 
  5568  1FE5                     	;# 
  5569  1FE6                     	;# 
  5570  1FE7                     	;# 
  5571  1FE8                     	;# 
  5572  1FE9                     	;# 
  5573  1FEA                     	;# 
  5574  1FEB                     	;# 
  5575  1FED                     	;# 
  5576  1FEE                     	;# 
  5577  1FEF                     	;# 
  5578  0000                     	;# 
  5579  0001                     	;# 
  5580  0002                     	;# 
  5581  0003                     	;# 
  5582  0004                     	;# 
  5583  0005                     	;# 
  5584  0006                     	;# 
  5585  0007                     	;# 
  5586  0008                     	;# 
  5587  0009                     	;# 
  5588  000A                     	;# 
  5589  000B                     	;# 
  5590  000C                     	;# 
  5591  000D                     	;# 
  5592  000E                     	;# 
  5593  000F                     	;# 
  5594  0010                     	;# 
  5595  0011                     	;# 
  5596  0012                     	;# 
  5597  0013                     	;# 
  5598  0014                     	;# 
  5599  0015                     	;# 
  5600  0016                     	;# 
  5601  0017                     	;# 
  5602  0018                     	;# 
  5603  0019                     	;# 
  5604  001A                     	;# 
  5605  001C                     	;# 
  5606  001C                     	;# 
  5607  001D                     	;# 
  5608  001D                     	;# 
  5609  001E                     	;# 
  5610  001F                     	;# 
  5611  008C                     	;# 
  5612  008C                     	;# 
  5613  008D                     	;# 
  5614  008E                     	;# 
  5615  008E                     	;# 
  5616  008F                     	;# 
  5617  0090                     	;# 
  5618  0090                     	;# 
  5619  0091                     	;# 
  5620  0093                     	;# 
  5621  0094                     	;# 
  5622  0095                     	;# 
  5623  0096                     	;# 
  5624  0097                     	;# 
  5625  0098                     	;# 
  5626  0099                     	;# 
  5627  009A                     	;# 
  5628  009B                     	;# 
  5629  009C                     	;# 
  5630  009D                     	;# 
  5631  009E                     	;# 
  5632  010C                     	;# 
  5633  010D                     	;# 
  5634  010E                     	;# 
  5635  010E                     	;# 
  5636  010F                     	;# 
  5637  0110                     	;# 
  5638  0110                     	;# 
  5639  0111                     	;# 
  5640  0112                     	;# 
  5641  0112                     	;# 
  5642  0113                     	;# 
  5643  0114                     	;# 
  5644  0114                     	;# 
  5645  0115                     	;# 
  5646  0116                     	;# 
  5647  0116                     	;# 
  5648  0117                     	;# 
  5649  0119                     	;# 
  5650  0119                     	;# 
  5651  0119                     	;# 
  5652  011A                     	;# 
  5653  011A                     	;# 
  5654  011A                     	;# 
  5655  011B                     	;# 
  5656  011B                     	;# 
  5657  011B                     	;# 
  5658  011B                     	;# 
  5659  011B                     	;# 
  5660  011C                     	;# 
  5661  011C                     	;# 
  5662  011C                     	;# 
  5663  011D                     	;# 
  5664  011D                     	;# 
  5665  011D                     	;# 
  5666  011E                     	;# 
  5667  011E                     	;# 
  5668  011E                     	;# 
  5669  011F                     	;# 
  5670  011F                     	;# 
  5671  011F                     	;# 
  5672  011F                     	;# 
  5673  011F                     	;# 
  5674  018C                     	;# 
  5675  018D                     	;# 
  5676  018E                     	;# 
  5677  018F                     	;# 
  5678  0190                     	;# 
  5679  0191                     	;# 
  5680  0192                     	;# 
  5681  0196                     	;# 
  5682  0197                     	;# 
  5683  0198                     	;# 
  5684  0199                     	;# 
  5685  019A                     	;# 
  5686  019B                     	;# 
  5687  019C                     	;# 
  5688  020C                     	;# 
  5689  020C                     	;# 
  5690  020D                     	;# 
  5691  020E                     	;# 
  5692  020F                     	;# 
  5693  020F                     	;# 
  5694  0210                     	;# 
  5695  0210                     	;# 
  5696  0211                     	;# 
  5697  0211                     	;# 
  5698  0212                     	;# 
  5699  0212                     	;# 
  5700  0213                     	;# 
  5701  0214                     	;# 
  5702  0215                     	;# 
  5703  0215                     	;# 
  5704  0216                     	;# 
  5705  0216                     	;# 
  5706  0217                     	;# 
  5707  0217                     	;# 
  5708  0218                     	;# 
  5709  0218                     	;# 
  5710  0219                     	;# 
  5711  021A                     	;# 
  5712  021B                     	;# 
  5713  021B                     	;# 
  5714  021C                     	;# 
  5715  021C                     	;# 
  5716  021D                     	;# 
  5717  021D                     	;# 
  5718  021E                     	;# 
  5719  021F                     	;# 
  5720  028C                     	;# 
  5721  028C                     	;# 
  5722  028D                     	;# 
  5723  028D                     	;# 
  5724  028E                     	;# 
  5725  028F                     	;# 
  5726  0290                     	;# 
  5727  0290                     	;# 
  5728  0291                     	;# 
  5729  0292                     	;# 
  5730  0292                     	;# 
  5731  0293                     	;# 
  5732  0293                     	;# 
  5733  0294                     	;# 
  5734  0295                     	;# 
  5735  0296                     	;# 
  5736  0296                     	;# 
  5737  0297                     	;# 
  5738  0298                     	;# 
  5739  0298                     	;# 
  5740  0299                     	;# 
  5741  0299                     	;# 
  5742  029A                     	;# 
  5743  029B                     	;# 
  5744  029C                     	;# 
  5745  029C                     	;# 
  5746  029D                     	;# 
  5747  030C                     	;# 
  5748  030C                     	;# 
  5749  030D                     	;# 
  5750  030E                     	;# 
  5751  030F                     	;# 
  5752  0310                     	;# 
  5753  0310                     	;# 
  5754  0311                     	;# 
  5755  0312                     	;# 
  5756  0313                     	;# 
  5757  0314                     	;# 
  5758  0314                     	;# 
  5759  0315                     	;# 
  5760  0316                     	;# 
  5761  0317                     	;# 
  5762  0318                     	;# 
  5763  0318                     	;# 
  5764  0319                     	;# 
  5765  031A                     	;# 
  5766  031B                     	;# 
  5767  031C                     	;# 
  5768  031C                     	;# 
  5769  031D                     	;# 
  5770  031E                     	;# 
  5771  031F                     	;# 
  5772  038C                     	;# 
  5773  038D                     	;# 
  5774  038E                     	;# 
  5775  0390                     	;# 
  5776  0391                     	;# 
  5777  0392                     	;# 
  5778  040C                     	;# 
  5779  040D                     	;# 
  5780  040E                     	;# 
  5781  040F                     	;# 
  5782  0410                     	;# 
  5783  0411                     	;# 
  5784  0416                     	;# 
  5785  0416                     	;# 
  5786  0417                     	;# 
  5787  0418                     	;# 
  5788  0418                     	;# 
  5789  0419                     	;# 
  5790  041A                     	;# 
  5791  041A                     	;# 
  5792  041B                     	;# 
  5793  041C                     	;# 
  5794  041C                     	;# 
  5795  041D                     	;# 
  5796  041E                     	;# 
  5797  041F                     	;# 
  5798  048C                     	;# 
  5799  048C                     	;# 
  5800  048D                     	;# 
  5801  048E                     	;# 
  5802  048F                     	;# 
  5803  048F                     	;# 
  5804  0490                     	;# 
  5805  0491                     	;# 
  5806  0492                     	;# 
  5807  0492                     	;# 
  5808  0493                     	;# 
  5809  0494                     	;# 
  5810  0495                     	;# 
  5811  0495                     	;# 
  5812  0496                     	;# 
  5813  0497                     	;# 
  5814  0498                     	;# 
  5815  0499                     	;# 
  5816  049A                     	;# 
  5817  049B                     	;# 
  5818  049C                     	;# 
  5819  049D                     	;# 
  5820  050C                     	;# 
  5821  050C                     	;# 
  5822  050D                     	;# 
  5823  050E                     	;# 
  5824  050F                     	;# 
  5825  050F                     	;# 
  5826  0510                     	;# 
  5827  0511                     	;# 
  5828  0512                     	;# 
  5829  0512                     	;# 
  5830  0513                     	;# 
  5831  0514                     	;# 
  5832  0515                     	;# 
  5833  0515                     	;# 
  5834  0516                     	;# 
  5835  0517                     	;# 
  5836  0518                     	;# 
  5837  0519                     	;# 
  5838  051A                     	;# 
  5839  051B                     	;# 
  5840  051C                     	;# 
  5841  051D                     	;# 
  5842  058C                     	;# 
  5843  058C                     	;# 
  5844  058D                     	;# 
  5845  058E                     	;# 
  5846  058F                     	;# 
  5847  058F                     	;# 
  5848  0590                     	;# 
  5849  0591                     	;# 
  5850  0592                     	;# 
  5851  0593                     	;# 
  5852  060C                     	;# 
  5853  060D                     	;# 
  5854  060E                     	;# 
  5855  060F                     	;# 
  5856  0610                     	;# 
  5857  0611                     	;# 
  5858  0612                     	;# 
  5859  0613                     	;# 
  5860  0614                     	;# 
  5861  0616                     	;# 
  5862  0617                     	;# 
  5863  0618                     	;# 
  5864  0619                     	;# 
  5865  061A                     	;# 
  5866  061B                     	;# 
  5867  061C                     	;# 
  5868  061D                     	;# 
  5869  061E                     	;# 
  5870  068C                     	;# 
  5871  068D                     	;# 
  5872  068E                     	;# 
  5873  068F                     	;# 
  5874  0690                     	;# 
  5875  0691                     	;# 
  5876  0692                     	;# 
  5877  0693                     	;# 
  5878  0694                     	;# 
  5879  070C                     	;# 
  5880  070D                     	;# 
  5881  070E                     	;# 
  5882  070F                     	;# 
  5883  0710                     	;# 
  5884  0711                     	;# 
  5885  0712                     	;# 
  5886  0713                     	;# 
  5887  0714                     	;# 
  5888  0716                     	;# 
  5889  0717                     	;# 
  5890  0718                     	;# 
  5891  0719                     	;# 
  5892  071A                     	;# 
  5893  071B                     	;# 
  5894  071C                     	;# 
  5895  071D                     	;# 
  5896  071E                     	;# 
  5897  0796                     	;# 
  5898  0797                     	;# 
  5899  0798                     	;# 
  5900  0799                     	;# 
  5901  079A                     	;# 
  5902  079B                     	;# 
  5903  080C                     	;# 
  5904  080D                     	;# 
  5905  080E                     	;# 
  5906  080F                     	;# 
  5907  0810                     	;# 
  5908  0811                     	;# 
  5909  0812                     	;# 
  5910  0813                     	;# 
  5911  0814                     	;# 
  5912  081A                     	;# 
  5913  081B                     	;# 
  5914  081C                     	;# 
  5915  081D                     	;# 
  5916  081E                     	;# 
  5917  081F                     	;# 
  5918  088C                     	;# 
  5919  088D                     	;# 
  5920  088E                     	;# 
  5921  088F                     	;# 
  5922  0890                     	;# 
  5923  0891                     	;# 
  5924  0892                     	;# 
  5925  0893                     	;# 
  5926  0895                     	;# 
  5927  0896                     	;# 
  5928  0897                     	;# 
  5929  0898                     	;# 
  5930  0899                     	;# 
  5931  089A                     	;# 
  5932  089B                     	;# 
  5933  090C                     	;# 
  5934  090E                     	;# 
  5935  090F                     	;# 
  5936  091F                     	;# 
  5937  098F                     	;# 
  5938  098F                     	;# 
  5939  0990                     	;# 
  5940  0991                     	;# 
  5941  0992                     	;# 
  5942  0993                     	;# 
  5943  0994                     	;# 
  5944  0995                     	;# 
  5945  0996                     	;# 
  5946  0997                     	;# 
  5947  1E0F                     	;# 
  5948  1E10                     	;# 
  5949  1E11                     	;# 
  5950  1E12                     	;# 
  5951  1E13                     	;# 
  5952  1E14                     	;# 
  5953  1E15                     	;# 
  5954  1E16                     	;# 
  5955  1E17                     	;# 
  5956  1E18                     	;# 
  5957  1E19                     	;# 
  5958  1E1A                     	;# 
  5959  1E1B                     	;# 
  5960  1E1C                     	;# 
  5961  1E1D                     	;# 
  5962  1E1E                     	;# 
  5963  1E1F                     	;# 
  5964  1E20                     	;# 
  5965  1E21                     	;# 
  5966  1E22                     	;# 
  5967  1E23                     	;# 
  5968  1E24                     	;# 
  5969  1E25                     	;# 
  5970  1E26                     	;# 
  5971  1E27                     	;# 
  5972  1E28                     	;# 
  5973  1E29                     	;# 
  5974  1E2A                     	;# 
  5975  1E2B                     	;# 
  5976  1E2C                     	;# 
  5977  1E2D                     	;# 
  5978  1E2E                     	;# 
  5979  1E2F                     	;# 
  5980  1E30                     	;# 
  5981  1E31                     	;# 
  5982  1E32                     	;# 
  5983  1E33                     	;# 
  5984  1E34                     	;# 
  5985  1E35                     	;# 
  5986  1E36                     	;# 
  5987  1E37                     	;# 
  5988  1E8F                     	;# 
  5989  1E90                     	;# 
  5990  1E91                     	;# 
  5991  1E92                     	;# 
  5992  1E93                     	;# 
  5993  1E94                     	;# 
  5994  1E95                     	;# 
  5995  1E96                     	;# 
  5996  1E97                     	;# 
  5997  1E9C                     	;# 
  5998  1E9D                     	;# 
  5999  1E9E                     	;# 
  6000  1EA1                     	;# 
  6001  1EA2                     	;# 
  6002  1EA3                     	;# 
  6003  1EA4                     	;# 
  6004  1EA5                     	;# 
  6005  1EA9                     	;# 
  6006  1EAA                     	;# 
  6007  1EAB                     	;# 
  6008  1EAC                     	;# 
  6009  1EB1                     	;# 
  6010  1EB2                     	;# 
  6011  1EB3                     	;# 
  6012  1EB8                     	;# 
  6013  1EB9                     	;# 
  6014  1EBA                     	;# 
  6015  1EBB                     	;# 
  6016  1EBC                     	;# 
  6017  1EBD                     	;# 
  6018  1EBE                     	;# 
  6019  1EC3                     	;# 
  6020  1EC5                     	;# 
  6021  1EC6                     	;# 
  6022  1EC7                     	;# 
  6023  1EC8                     	;# 
  6024  1EC9                     	;# 
  6025  1ECA                     	;# 
  6026  1ECB                     	;# 
  6027  1ECC                     	;# 
  6028  1F10                     	;# 
  6029  1F11                     	;# 
  6030  1F12                     	;# 
  6031  1F13                     	;# 
  6032  1F14                     	;# 
  6033  1F15                     	;# 
  6034  1F16                     	;# 
  6035  1F17                     	;# 
  6036  1F18                     	;# 
  6037  1F19                     	;# 
  6038  1F1A                     	;# 
  6039  1F1B                     	;# 
  6040  1F1C                     	;# 
  6041  1F1D                     	;# 
  6042  1F1E                     	;# 
  6043  1F1F                     	;# 
  6044  1F20                     	;# 
  6045  1F21                     	;# 
  6046  1F22                     	;# 
  6047  1F23                     	;# 
  6048  1F24                     	;# 
  6049  1F25                     	;# 
  6050  1F26                     	;# 
  6051  1F27                     	;# 
  6052  1F28                     	;# 
  6053  1F29                     	;# 
  6054  1F2A                     	;# 
  6055  1F2B                     	;# 
  6056  1F2C                     	;# 
  6057  1F2D                     	;# 
  6058  1F2E                     	;# 
  6059  1F2F                     	;# 
  6060  1F30                     	;# 
  6061  1F31                     	;# 
  6062  1F32                     	;# 
  6063  1F38                     	;# 
  6064  1F39                     	;# 
  6065  1F3A                     	;# 
  6066  1F3B                     	;# 
  6067  1F3C                     	;# 
  6068  1F3D                     	;# 
  6069  1F3E                     	;# 
  6070  1F3F                     	;# 
  6071  1F40                     	;# 
  6072  1F41                     	;# 
  6073  1F43                     	;# 
  6074  1F44                     	;# 
  6075  1F45                     	;# 
  6076  1F46                     	;# 
  6077  1F47                     	;# 
  6078  1F48                     	;# 
  6079  1F49                     	;# 
  6080  1F4A                     	;# 
  6081  1F4B                     	;# 
  6082  1F4C                     	;# 
  6083  1F4E                     	;# 
  6084  1F4F                     	;# 
  6085  1F50                     	;# 
  6086  1F51                     	;# 
  6087  1F52                     	;# 
  6088  1F53                     	;# 
  6089  1F54                     	;# 
  6090  1F55                     	;# 
  6091  1F56                     	;# 
  6092  1F57                     	;# 
  6093  1F59                     	;# 
  6094  1F5A                     	;# 
  6095  1F5B                     	;# 
  6096  1F5C                     	;# 
  6097  1F5D                     	;# 
  6098  1F61                     	;# 
  6099  1F62                     	;# 
  6100  1F64                     	;# 
  6101  1F65                     	;# 
  6102  1F66                     	;# 
  6103  1F67                     	;# 
  6104  1F68                     	;# 
  6105  1F69                     	;# 
  6106  1F6A                     	;# 
  6107  1F6B                     	;# 
  6108  1F6C                     	;# 
  6109  1F6D                     	;# 
  6110  1FE4                     	;# 
  6111  1FE5                     	;# 
  6112  1FE6                     	;# 
  6113  1FE7                     	;# 
  6114  1FE8                     	;# 
  6115  1FE9                     	;# 
  6116  1FEA                     	;# 
  6117  1FEB                     	;# 
  6118  1FED                     	;# 
  6119  1FEE                     	;# 
  6120  1FEF                     	;# 
  6121  0000                     	;# 
  6122  0001                     	;# 
  6123  0002                     	;# 
  6124  0003                     	;# 
  6125  0004                     	;# 
  6126  0005                     	;# 
  6127  0006                     	;# 
  6128  0007                     	;# 
  6129  0008                     	;# 
  6130  0009                     	;# 
  6131  000A                     	;# 
  6132  000B                     	;# 
  6133  000C                     	;# 
  6134  000D                     	;# 
  6135  000E                     	;# 
  6136  000F                     	;# 
  6137  0010                     	;# 
  6138  0011                     	;# 
  6139  0012                     	;# 
  6140  0013                     	;# 
  6141  0014                     	;# 
  6142  0015                     	;# 
  6143  0016                     	;# 
  6144  0017                     	;# 
  6145  0018                     	;# 
  6146  0019                     	;# 
  6147  001A                     	;# 
  6148  001C                     	;# 
  6149  001C                     	;# 
  6150  001D                     	;# 
  6151  001D                     	;# 
  6152  001E                     	;# 
  6153  001F                     	;# 
  6154  008C                     	;# 
  6155  008C                     	;# 
  6156  008D                     	;# 
  6157  008E                     	;# 
  6158  008E                     	;# 
  6159  008F                     	;# 
  6160  0090                     	;# 
  6161  0090                     	;# 
  6162  0091                     	;# 
  6163  0093                     	;# 
  6164  0094                     	;# 
  6165  0095                     	;# 
  6166  0096                     	;# 
  6167  0097                     	;# 
  6168  0098                     	;# 
  6169  0099                     	;# 
  6170  009A                     	;# 
  6171  009B                     	;# 
  6172  009C                     	;# 
  6173  009D                     	;# 
  6174  009E                     	;# 
  6175  010C                     	;# 
  6176  010D                     	;# 
  6177  010E                     	;# 
  6178  010E                     	;# 
  6179  010F                     	;# 
  6180  0110                     	;# 
  6181  0110                     	;# 
  6182  0111                     	;# 
  6183  0112                     	;# 
  6184  0112                     	;# 
  6185  0113                     	;# 
  6186  0114                     	;# 
  6187  0114                     	;# 
  6188  0115                     	;# 
  6189  0116                     	;# 
  6190  0116                     	;# 
  6191  0117                     	;# 
  6192  0119                     	;# 
  6193  0119                     	;# 
  6194  0119                     	;# 
  6195  011A                     	;# 
  6196  011A                     	;# 
  6197  011A                     	;# 
  6198  011B                     	;# 
  6199  011B                     	;# 
  6200  011B                     	;# 
  6201  011B                     	;# 
  6202  011B                     	;# 
  6203  011C                     	;# 
  6204  011C                     	;# 
  6205  011C                     	;# 
  6206  011D                     	;# 
  6207  011D                     	;# 
  6208  011D                     	;# 
  6209  011E                     	;# 
  6210  011E                     	;# 
  6211  011E                     	;# 
  6212  011F                     	;# 
  6213  011F                     	;# 
  6214  011F                     	;# 
  6215  011F                     	;# 
  6216  011F                     	;# 
  6217  018C                     	;# 
  6218  018D                     	;# 
  6219  018E                     	;# 
  6220  018F                     	;# 
  6221  0190                     	;# 
  6222  0191                     	;# 
  6223  0192                     	;# 
  6224  0196                     	;# 
  6225  0197                     	;# 
  6226  0198                     	;# 
  6227  0199                     	;# 
  6228  019A                     	;# 
  6229  019B                     	;# 
  6230  019C                     	;# 
  6231  020C                     	;# 
  6232  020C                     	;# 
  6233  020D                     	;# 
  6234  020E                     	;# 
  6235  020F                     	;# 
  6236  020F                     	;# 
  6237  0210                     	;# 
  6238  0210                     	;# 
  6239  0211                     	;# 
  6240  0211                     	;# 
  6241  0212                     	;# 
  6242  0212                     	;# 
  6243  0213                     	;# 
  6244  0214                     	;# 
  6245  0215                     	;# 
  6246  0215                     	;# 
  6247  0216                     	;# 
  6248  0216                     	;# 
  6249  0217                     	;# 
  6250  0217                     	;# 
  6251  0218                     	;# 
  6252  0218                     	;# 
  6253  0219                     	;# 
  6254  021A                     	;# 
  6255  021B                     	;# 
  6256  021B                     	;# 
  6257  021C                     	;# 
  6258  021C                     	;# 
  6259  021D                     	;# 
  6260  021D                     	;# 
  6261  021E                     	;# 
  6262  021F                     	;# 
  6263  028C                     	;# 
  6264  028C                     	;# 
  6265  028D                     	;# 
  6266  028D                     	;# 
  6267  028E                     	;# 
  6268  028F                     	;# 
  6269  0290                     	;# 
  6270  0290                     	;# 
  6271  0291                     	;# 
  6272  0292                     	;# 
  6273  0292                     	;# 
  6274  0293                     	;# 
  6275  0293                     	;# 
  6276  0294                     	;# 
  6277  0295                     	;# 
  6278  0296                     	;# 
  6279  0296                     	;# 
  6280  0297                     	;# 
  6281  0298                     	;# 
  6282  0298                     	;# 
  6283  0299                     	;# 
  6284  0299                     	;# 
  6285  029A                     	;# 
  6286  029B                     	;# 
  6287  029C                     	;# 
  6288  029C                     	;# 
  6289  029D                     	;# 
  6290  030C                     	;# 
  6291  030C                     	;# 
  6292  030D                     	;# 
  6293  030E                     	;# 
  6294  030F                     	;# 
  6295  0310                     	;# 
  6296  0310                     	;# 
  6297  0311                     	;# 
  6298  0312                     	;# 
  6299  0313                     	;# 
  6300  0314                     	;# 
  6301  0314                     	;# 
  6302  0315                     	;# 
  6303  0316                     	;# 
  6304  0317                     	;# 
  6305  0318                     	;# 
  6306  0318                     	;# 
  6307  0319                     	;# 
  6308  031A                     	;# 
  6309  031B                     	;# 
  6310  031C                     	;# 
  6311  031C                     	;# 
  6312  031D                     	;# 
  6313  031E                     	;# 
  6314  031F                     	;# 
  6315  038C                     	;# 
  6316  038D                     	;# 
  6317  038E                     	;# 
  6318  0390                     	;# 
  6319  0391                     	;# 
  6320  0392                     	;# 
  6321  040C                     	;# 
  6322  040D                     	;# 
  6323  040E                     	;# 
  6324  040F                     	;# 
  6325  0410                     	;# 
  6326  0411                     	;# 
  6327  0416                     	;# 
  6328  0416                     	;# 
  6329  0417                     	;# 
  6330  0418                     	;# 
  6331  0418                     	;# 
  6332  0419                     	;# 
  6333  041A                     	;# 
  6334  041A                     	;# 
  6335  041B                     	;# 
  6336  041C                     	;# 
  6337  041C                     	;# 
  6338  041D                     	;# 
  6339  041E                     	;# 
  6340  041F                     	;# 
  6341  048C                     	;# 
  6342  048C                     	;# 
  6343  048D                     	;# 
  6344  048E                     	;# 
  6345  048F                     	;# 
  6346  048F                     	;# 
  6347  0490                     	;# 
  6348  0491                     	;# 
  6349  0492                     	;# 
  6350  0492                     	;# 
  6351  0493                     	;# 
  6352  0494                     	;# 
  6353  0495                     	;# 
  6354  0495                     	;# 
  6355  0496                     	;# 
  6356  0497                     	;# 
  6357  0498                     	;# 
  6358  0499                     	;# 
  6359  049A                     	;# 
  6360  049B                     	;# 
  6361  049C                     	;# 
  6362  049D                     	;# 
  6363  050C                     	;# 
  6364  050C                     	;# 
  6365  050D                     	;# 
  6366  050E                     	;# 
  6367  050F                     	;# 
  6368  050F                     	;# 
  6369  0510                     	;# 
  6370  0511                     	;# 
  6371  0512                     	;# 
  6372  0512                     	;# 
  6373  0513                     	;# 
  6374  0514                     	;# 
  6375  0515                     	;# 
  6376  0515                     	;# 
  6377  0516                     	;# 
  6378  0517                     	;# 
  6379  0518                     	;# 
  6380  0519                     	;# 
  6381  051A                     	;# 
  6382  051B                     	;# 
  6383  051C                     	;# 
  6384  051D                     	;# 
  6385  058C                     	;# 
  6386  058C                     	;# 
  6387  058D                     	;# 
  6388  058E                     	;# 
  6389  058F                     	;# 
  6390  058F                     	;# 
  6391  0590                     	;# 
  6392  0591                     	;# 
  6393  0592                     	;# 
  6394  0593                     	;# 
  6395  060C                     	;# 
  6396  060D                     	;# 
  6397  060E                     	;# 
  6398  060F                     	;# 
  6399  0610                     	;# 
  6400  0611                     	;# 
  6401  0612                     	;# 
  6402  0613                     	;# 
  6403  0614                     	;# 
  6404  0616                     	;# 
  6405  0617                     	;# 
  6406  0618                     	;# 
  6407  0619                     	;# 
  6408  061A                     	;# 
  6409  061B                     	;# 
  6410  061C                     	;# 
  6411  061D                     	;# 
  6412  061E                     	;# 
  6413  068C                     	;# 
  6414  068D                     	;# 
  6415  068E                     	;# 
  6416  068F                     	;# 
  6417  0690                     	;# 
  6418  0691                     	;# 
  6419  0692                     	;# 
  6420  0693                     	;# 
  6421  0694                     	;# 
  6422  070C                     	;# 
  6423  070D                     	;# 
  6424  070E                     	;# 
  6425  070F                     	;# 
  6426  0710                     	;# 
  6427  0711                     	;# 
  6428  0712                     	;# 
  6429  0713                     	;# 
  6430  0714                     	;# 
  6431  0716                     	;# 
  6432  0717                     	;# 
  6433  0718                     	;# 
  6434  0719                     	;# 
  6435  071A                     	;# 
  6436  071B                     	;# 
  6437  071C                     	;# 
  6438  071D                     	;# 
  6439  071E                     	;# 
  6440  0796                     	;# 
  6441  0797                     	;# 
  6442  0798                     	;# 
  6443  0799                     	;# 
  6444  079A                     	;# 
  6445  079B                     	;# 
  6446  080C                     	;# 
  6447  080D                     	;# 
  6448  080E                     	;# 
  6449  080F                     	;# 
  6450  0810                     	;# 
  6451  0811                     	;# 
  6452  0812                     	;# 
  6453  0813                     	;# 
  6454  0814                     	;# 
  6455  081A                     	;# 
  6456  081B                     	;# 
  6457  081C                     	;# 
  6458  081D                     	;# 
  6459  081E                     	;# 
  6460  081F                     	;# 
  6461  088C                     	;# 
  6462  088D                     	;# 
  6463  088E                     	;# 
  6464  088F                     	;# 
  6465  0890                     	;# 
  6466  0891                     	;# 
  6467  0892                     	;# 
  6468  0893                     	;# 
  6469  0895                     	;# 
  6470  0896                     	;# 
  6471  0897                     	;# 
  6472  0898                     	;# 
  6473  0899                     	;# 
  6474  089A                     	;# 
  6475  089B                     	;# 
  6476  090C                     	;# 
  6477  090E                     	;# 
  6478  090F                     	;# 
  6479  091F                     	;# 
  6480  098F                     	;# 
  6481  098F                     	;# 
  6482  0990                     	;# 
  6483  0991                     	;# 
  6484  0992                     	;# 
  6485  0993                     	;# 
  6486  0994                     	;# 
  6487  0995                     	;# 
  6488  0996                     	;# 
  6489  0997                     	;# 
  6490  1E0F                     	;# 
  6491  1E10                     	;# 
  6492  1E11                     	;# 
  6493  1E12                     	;# 
  6494  1E13                     	;# 
  6495  1E14                     	;# 
  6496  1E15                     	;# 
  6497  1E16                     	;# 
  6498  1E17                     	;# 
  6499  1E18                     	;# 
  6500  1E19                     	;# 
  6501  1E1A                     	;# 
  6502  1E1B                     	;# 
  6503  1E1C                     	;# 
  6504  1E1D                     	;# 
  6505  1E1E                     	;# 
  6506  1E1F                     	;# 
  6507  1E20                     	;# 
  6508  1E21                     	;# 
  6509  1E22                     	;# 
  6510  1E23                     	;# 
  6511  1E24                     	;# 
  6512  1E25                     	;# 
  6513  1E26                     	;# 
  6514  1E27                     	;# 
  6515  1E28                     	;# 
  6516  1E29                     	;# 
  6517  1E2A                     	;# 
  6518  1E2B                     	;# 
  6519  1E2C                     	;# 
  6520  1E2D                     	;# 
  6521  1E2E                     	;# 
  6522  1E2F                     	;# 
  6523  1E30                     	;# 
  6524  1E31                     	;# 
  6525  1E32                     	;# 
  6526  1E33                     	;# 
  6527  1E34                     	;# 
  6528  1E35                     	;# 
  6529  1E36                     	;# 
  6530  1E37                     	;# 
  6531  1E8F                     	;# 
  6532  1E90                     	;# 
  6533  1E91                     	;# 
  6534  1E92                     	;# 
  6535  1E93                     	;# 
  6536  1E94                     	;# 
  6537  1E95                     	;# 
  6538  1E96                     	;# 
  6539  1E97                     	;# 
  6540  1E9C                     	;# 
  6541  1E9D                     	;# 
  6542  1E9E                     	;# 
  6543  1EA1                     	;# 
  6544  1EA2                     	;# 
  6545  1EA3                     	;# 
  6546  1EA4                     	;# 
  6547  1EA5                     	;# 
  6548  1EA9                     	;# 
  6549  1EAA                     	;# 
  6550  1EAB                     	;# 
  6551  1EAC                     	;# 
  6552  1EB1                     	;# 
  6553  1EB2                     	;# 
  6554  1EB3                     	;# 
  6555  1EB8                     	;# 
  6556  1EB9                     	;# 
  6557  1EBA                     	;# 
  6558  1EBB                     	;# 
  6559  1EBC                     	;# 
  6560  1EBD                     	;# 
  6561  1EBE                     	;# 
  6562  1EC3                     	;# 
  6563  1EC5                     	;# 
  6564  1EC6                     	;# 
  6565  1EC7                     	;# 
  6566  1EC8                     	;# 
  6567  1EC9                     	;# 
  6568  1ECA                     	;# 
  6569  1ECB                     	;# 
  6570  1ECC                     	;# 
  6571  1F10                     	;# 
  6572  1F11                     	;# 
  6573  1F12                     	;# 
  6574  1F13                     	;# 
  6575  1F14                     	;# 
  6576  1F15                     	;# 
  6577  1F16                     	;# 
  6578  1F17                     	;# 
  6579  1F18                     	;# 
  6580  1F19                     	;# 
  6581  1F1A                     	;# 
  6582  1F1B                     	;# 
  6583  1F1C                     	;# 
  6584  1F1D                     	;# 
  6585  1F1E                     	;# 
  6586  1F1F                     	;# 
  6587  1F20                     	;# 
  6588  1F21                     	;# 
  6589  1F22                     	;# 
  6590  1F23                     	;# 
  6591  1F24                     	;# 
  6592  1F25                     	;# 
  6593  1F26                     	;# 
  6594  1F27                     	;# 
  6595  1F28                     	;# 
  6596  1F29                     	;# 
  6597  1F2A                     	;# 
  6598  1F2B                     	;# 
  6599  1F2C                     	;# 
  6600  1F2D                     	;# 
  6601  1F2E                     	;# 
  6602  1F2F                     	;# 
  6603  1F30                     	;# 
  6604  1F31                     	;# 
  6605  1F32                     	;# 
  6606  1F38                     	;# 
  6607  1F39                     	;# 
  6608  1F3A                     	;# 
  6609  1F3B                     	;# 
  6610  1F3C                     	;# 
  6611  1F3D                     	;# 
  6612  1F3E                     	;# 
  6613  1F3F                     	;# 
  6614  1F40                     	;# 
  6615  1F41                     	;# 
  6616  1F43                     	;# 
  6617  1F44                     	;# 
  6618  1F45                     	;# 
  6619  1F46                     	;# 
  6620  1F47                     	;# 
  6621  1F48                     	;# 
  6622  1F49                     	;# 
  6623  1F4A                     	;# 
  6624  1F4B                     	;# 
  6625  1F4C                     	;# 
  6626  1F4E                     	;# 
  6627  1F4F                     	;# 
  6628  1F50                     	;# 
  6629  1F51                     	;# 
  6630  1F52                     	;# 
  6631  1F53                     	;# 
  6632  1F54                     	;# 
  6633  1F55                     	;# 
  6634  1F56                     	;# 
  6635  1F57                     	;# 
  6636  1F59                     	;# 
  6637  1F5A                     	;# 
  6638  1F5B                     	;# 
  6639  1F5C                     	;# 
  6640  1F5D                     	;# 
  6641  1F61                     	;# 
  6642  1F62                     	;# 
  6643  1F64                     	;# 
  6644  1F65                     	;# 
  6645  1F66                     	;# 
  6646  1F67                     	;# 
  6647  1F68                     	;# 
  6648  1F69                     	;# 
  6649  1F6A                     	;# 
  6650  1F6B                     	;# 
  6651  1F6C                     	;# 
  6652  1F6D                     	;# 
  6653  1FE4                     	;# 
  6654  1FE5                     	;# 
  6655  1FE6                     	;# 
  6656  1FE7                     	;# 
  6657  1FE8                     	;# 
  6658  1FE9                     	;# 
  6659  1FEA                     	;# 
  6660  1FEB                     	;# 
  6661  1FED                     	;# 
  6662  1FEE                     	;# 
  6663  1FEF                     	;# 
  6664  0000                     	;# 
  6665  0001                     	;# 
  6666  0002                     	;# 
  6667  0003                     	;# 
  6668  0004                     	;# 
  6669  0005                     	;# 
  6670  0006                     	;# 
  6671  0007                     	;# 
  6672  0008                     	;# 
  6673  0009                     	;# 
  6674  000A                     	;# 
  6675  000B                     	;# 
  6676  000C                     	;# 
  6677  000D                     	;# 
  6678  000E                     	;# 
  6679  000F                     	;# 
  6680  0010                     	;# 
  6681  0011                     	;# 
  6682  0012                     	;# 
  6683  0013                     	;# 
  6684  0014                     	;# 
  6685  0015                     	;# 
  6686  0016                     	;# 
  6687  0017                     	;# 
  6688  0018                     	;# 
  6689  0019                     	;# 
  6690  001A                     	;# 
  6691  001C                     	;# 
  6692  001C                     	;# 
  6693  001D                     	;# 
  6694  001D                     	;# 
  6695  001E                     	;# 
  6696  001F                     	;# 
  6697  008C                     	;# 
  6698  008C                     	;# 
  6699  008D                     	;# 
  6700  008E                     	;# 
  6701  008E                     	;# 
  6702  008F                     	;# 
  6703  0090                     	;# 
  6704  0090                     	;# 
  6705  0091                     	;# 
  6706  0093                     	;# 
  6707  0094                     	;# 
  6708  0095                     	;# 
  6709  0096                     	;# 
  6710  0097                     	;# 
  6711  0098                     	;# 
  6712  0099                     	;# 
  6713  009A                     	;# 
  6714  009B                     	;# 
  6715  009C                     	;# 
  6716  009D                     	;# 
  6717  009E                     	;# 
  6718  010C                     	;# 
  6719  010D                     	;# 
  6720  010E                     	;# 
  6721  010E                     	;# 
  6722  010F                     	;# 
  6723  0110                     	;# 
  6724  0110                     	;# 
  6725  0111                     	;# 
  6726  0112                     	;# 
  6727  0112                     	;# 
  6728  0113                     	;# 
  6729  0114                     	;# 
  6730  0114                     	;# 
  6731  0115                     	;# 
  6732  0116                     	;# 
  6733  0116                     	;# 
  6734  0117                     	;# 
  6735  0119                     	;# 
  6736  0119                     	;# 
  6737  0119                     	;# 
  6738  011A                     	;# 
  6739  011A                     	;# 
  6740  011A                     	;# 
  6741  011B                     	;# 
  6742  011B                     	;# 
  6743  011B                     	;# 
  6744  011B                     	;# 
  6745  011B                     	;# 
  6746  011C                     	;# 
  6747  011C                     	;# 
  6748  011C                     	;# 
  6749  011D                     	;# 
  6750  011D                     	;# 
  6751  011D                     	;# 
  6752  011E                     	;# 
  6753  011E                     	;# 
  6754  011E                     	;# 
  6755  011F                     	;# 
  6756  011F                     	;# 
  6757  011F                     	;# 
  6758  011F                     	;# 
  6759  011F                     	;# 
  6760  018C                     	;# 
  6761  018D                     	;# 
  6762  018E                     	;# 
  6763  018F                     	;# 
  6764  0190                     	;# 
  6765  0191                     	;# 
  6766  0192                     	;# 
  6767  0196                     	;# 
  6768  0197                     	;# 
  6769  0198                     	;# 
  6770  0199                     	;# 
  6771  019A                     	;# 
  6772  019B                     	;# 
  6773  019C                     	;# 
  6774  020C                     	;# 
  6775  020C                     	;# 
  6776  020D                     	;# 
  6777  020E                     	;# 
  6778  020F                     	;# 
  6779  020F                     	;# 
  6780  0210                     	;# 
  6781  0210                     	;# 
  6782  0211                     	;# 
  6783  0211                     	;# 
  6784  0212                     	;# 
  6785  0212                     	;# 
  6786  0213                     	;# 
  6787  0214                     	;# 
  6788  0215                     	;# 
  6789  0215                     	;# 
  6790  0216                     	;# 
  6791  0216                     	;# 
  6792  0217                     	;# 
  6793  0217                     	;# 
  6794  0218                     	;# 
  6795  0218                     	;# 
  6796  0219                     	;# 
  6797  021A                     	;# 
  6798  021B                     	;# 
  6799  021B                     	;# 
  6800  021C                     	;# 
  6801  021C                     	;# 
  6802  021D                     	;# 
  6803  021D                     	;# 
  6804  021E                     	;# 
  6805  021F                     	;# 
  6806  028C                     	;# 
  6807  028C                     	;# 
  6808  028D                     	;# 
  6809  028D                     	;# 
  6810  028E                     	;# 
  6811  028F                     	;# 
  6812  0290                     	;# 
  6813  0290                     	;# 
  6814  0291                     	;# 
  6815  0292                     	;# 
  6816  0292                     	;# 
  6817  0293                     	;# 
  6818  0293                     	;# 
  6819  0294                     	;# 
  6820  0295                     	;# 
  6821  0296                     	;# 
  6822  0296                     	;# 
  6823  0297                     	;# 
  6824  0298                     	;# 
  6825  0298                     	;# 
  6826  0299                     	;# 
  6827  0299                     	;# 
  6828  029A                     	;# 
  6829  029B                     	;# 
  6830  029C                     	;# 
  6831  029C                     	;# 
  6832  029D                     	;# 
  6833  030C                     	;# 
  6834  030C                     	;# 
  6835  030D                     	;# 
  6836  030E                     	;# 
  6837  030F                     	;# 
  6838  0310                     	;# 
  6839  0310                     	;# 
  6840  0311                     	;# 
  6841  0312                     	;# 
  6842  0313                     	;# 
  6843  0314                     	;# 
  6844  0314                     	;# 
  6845  0315                     	;# 
  6846  0316                     	;# 
  6847  0317                     	;# 
  6848  0318                     	;# 
  6849  0318                     	;# 
  6850  0319                     	;# 
  6851  031A                     	;# 
  6852  031B                     	;# 
  6853  031C                     	;# 
  6854  031C                     	;# 
  6855  031D                     	;# 
  6856  031E                     	;# 
  6857  031F                     	;# 
  6858  038C                     	;# 
  6859  038D                     	;# 
  6860  038E                     	;# 
  6861  0390                     	;# 
  6862  0391                     	;# 
  6863  0392                     	;# 
  6864  040C                     	;# 
  6865  040D                     	;# 
  6866  040E                     	;# 
  6867  040F                     	;# 
  6868  0410                     	;# 
  6869  0411                     	;# 
  6870  0416                     	;# 
  6871  0416                     	;# 
  6872  0417                     	;# 
  6873  0418                     	;# 
  6874  0418                     	;# 
  6875  0419                     	;# 
  6876  041A                     	;# 
  6877  041A                     	;# 
  6878  041B                     	;# 
  6879  041C                     	;# 
  6880  041C                     	;# 
  6881  041D                     	;# 
  6882  041E                     	;# 
  6883  041F                     	;# 
  6884  048C                     	;# 
  6885  048C                     	;# 
  6886  048D                     	;# 
  6887  048E                     	;# 
  6888  048F                     	;# 
  6889  048F                     	;# 
  6890  0490                     	;# 
  6891  0491                     	;# 
  6892  0492                     	;# 
  6893  0492                     	;# 
  6894  0493                     	;# 
  6895  0494                     	;# 
  6896  0495                     	;# 
  6897  0495                     	;# 
  6898  0496                     	;# 
  6899  0497                     	;# 
  6900  0498                     	;# 
  6901  0499                     	;# 
  6902  049A                     	;# 
  6903  049B                     	;# 
  6904  049C                     	;# 
  6905  049D                     	;# 
  6906  050C                     	;# 
  6907  050C                     	;# 
  6908  050D                     	;# 
  6909  050E                     	;# 
  6910  050F                     	;# 
  6911  050F                     	;# 
  6912  0510                     	;# 
  6913  0511                     	;# 
  6914  0512                     	;# 
  6915  0512                     	;# 
  6916  0513                     	;# 
  6917  0514                     	;# 
  6918  0515                     	;# 
  6919  0515                     	;# 
  6920  0516                     	;# 
  6921  0517                     	;# 
  6922  0518                     	;# 
  6923  0519                     	;# 
  6924  051A                     	;# 
  6925  051B                     	;# 
  6926  051C                     	;# 
  6927  051D                     	;# 
  6928  058C                     	;# 
  6929  058C                     	;# 
  6930  058D                     	;# 
  6931  058E                     	;# 
  6932  058F                     	;# 
  6933  058F                     	;# 
  6934  0590                     	;# 
  6935  0591                     	;# 
  6936  0592                     	;# 
  6937  0593                     	;# 
  6938  060C                     	;# 
  6939  060D                     	;# 
  6940  060E                     	;# 
  6941  060F                     	;# 
  6942  0610                     	;# 
  6943  0611                     	;# 
  6944  0612                     	;# 
  6945  0613                     	;# 
  6946  0614                     	;# 
  6947  0616                     	;# 
  6948  0617                     	;# 
  6949  0618                     	;# 
  6950  0619                     	;# 
  6951  061A                     	;# 
  6952  061B                     	;# 
  6953  061C                     	;# 
  6954  061D                     	;# 
  6955  061E                     	;# 
  6956  068C                     	;# 
  6957  068D                     	;# 
  6958  068E                     	;# 
  6959  068F                     	;# 
  6960  0690                     	;# 
  6961  0691                     	;# 
  6962  0692                     	;# 
  6963  0693                     	;# 
  6964  0694                     	;# 
  6965  070C                     	;# 
  6966  070D                     	;# 
  6967  070E                     	;# 
  6968  070F                     	;# 
  6969  0710                     	;# 
  6970  0711                     	;# 
  6971  0712                     	;# 
  6972  0713                     	;# 
  6973  0714                     	;# 
  6974  0716                     	;# 
  6975  0717                     	;# 
  6976  0718                     	;# 
  6977  0719                     	;# 
  6978  071A                     	;# 
  6979  071B                     	;# 
  6980  071C                     	;# 
  6981  071D                     	;# 
  6982  071E                     	;# 
  6983  0796                     	;# 
  6984  0797                     	;# 
  6985  0798                     	;# 
  6986  0799                     	;# 
  6987  079A                     	;# 
  6988  079B                     	;# 
  6989  080C                     	;# 
  6990  080D                     	;# 
  6991  080E                     	;# 
  6992  080F                     	;# 
  6993  0810                     	;# 
  6994  0811                     	;# 
  6995  0812                     	;# 
  6996  0813                     	;# 
  6997  0814                     	;# 
  6998  081A                     	;# 
  6999  081B                     	;# 
  7000  081C                     	;# 
  7001  081D                     	;# 
  7002  081E                     	;# 
  7003  081F                     	;# 
  7004  088C                     	;# 
  7005  088D                     	;# 
  7006  088E                     	;# 
  7007  088F                     	;# 
  7008  0890                     	;# 
  7009  0891                     	;# 
  7010  0892                     	;# 
  7011  0893                     	;# 
  7012  0895                     	;# 
  7013  0896                     	;# 
  7014  0897                     	;# 
  7015  0898                     	;# 
  7016  0899                     	;# 
  7017  089A                     	;# 
  7018  089B                     	;# 
  7019  090C                     	;# 
  7020  090E                     	;# 
  7021  090F                     	;# 
  7022  091F                     	;# 
  7023  098F                     	;# 
  7024  098F                     	;# 
  7025  0990                     	;# 
  7026  0991                     	;# 
  7027  0992                     	;# 
  7028  0993                     	;# 
  7029  0994                     	;# 
  7030  0995                     	;# 
  7031  0996                     	;# 
  7032  0997                     	;# 
  7033  1E0F                     	;# 
  7034  1E10                     	;# 
  7035  1E11                     	;# 
  7036  1E12                     	;# 
  7037  1E13                     	;# 
  7038  1E14                     	;# 
  7039  1E15                     	;# 
  7040  1E16                     	;# 
  7041  1E17                     	;# 
  7042  1E18                     	;# 
  7043  1E19                     	;# 
  7044  1E1A                     	;# 
  7045  1E1B                     	;# 
  7046  1E1C                     	;# 
  7047  1E1D                     	;# 
  7048  1E1E                     	;# 
  7049  1E1F                     	;# 
  7050  1E20                     	;# 
  7051  1E21                     	;# 
  7052  1E22                     	;# 
  7053  1E23                     	;# 
  7054  1E24                     	;# 
  7055  1E25                     	;# 
  7056  1E26                     	;# 
  7057  1E27                     	;# 
  7058  1E28                     	;# 
  7059  1E29                     	;# 
  7060  1E2A                     	;# 
  7061  1E2B                     	;# 
  7062  1E2C                     	;# 
  7063  1E2D                     	;# 
  7064  1E2E                     	;# 
  7065  1E2F                     	;# 
  7066  1E30                     	;# 
  7067  1E31                     	;# 
  7068  1E32                     	;# 
  7069  1E33                     	;# 
  7070  1E34                     	;# 
  7071  1E35                     	;# 
  7072  1E36                     	;# 
  7073  1E37                     	;# 
  7074  1E8F                     	;# 
  7075  1E90                     	;# 
  7076  1E91                     	;# 
  7077  1E92                     	;# 
  7078  1E93                     	;# 
  7079  1E94                     	;# 
  7080  1E95                     	;# 
  7081  1E96                     	;# 
  7082  1E97                     	;# 
  7083  1E9C                     	;# 
  7084  1E9D                     	;# 
  7085  1E9E                     	;# 
  7086  1EA1                     	;# 
  7087  1EA2                     	;# 
  7088  1EA3                     	;# 
  7089  1EA4                     	;# 
  7090  1EA5                     	;# 
  7091  1EA9                     	;# 
  7092  1EAA                     	;# 
  7093  1EAB                     	;# 
  7094  1EAC                     	;# 
  7095  1EB1                     	;# 
  7096  1EB2                     	;# 
  7097  1EB3                     	;# 
  7098  1EB8                     	;# 
  7099  1EB9                     	;# 
  7100  1EBA                     	;# 
  7101  1EBB                     	;# 
  7102  1EBC                     	;# 
  7103  1EBD                     	;# 
  7104  1EBE                     	;# 
  7105  1EC3                     	;# 
  7106  1EC5                     	;# 
  7107  1EC6                     	;# 
  7108  1EC7                     	;# 
  7109  1EC8                     	;# 
  7110  1EC9                     	;# 
  7111  1ECA                     	;# 
  7112  1ECB                     	;# 
  7113  1ECC                     	;# 
  7114  1F10                     	;# 
  7115  1F11                     	;# 
  7116  1F12                     	;# 
  7117  1F13                     	;# 
  7118  1F14                     	;# 
  7119  1F15                     	;# 
  7120  1F16                     	;# 
  7121  1F17                     	;# 
  7122  1F18                     	;# 
  7123  1F19                     	;# 
  7124  1F1A                     	;# 
  7125  1F1B                     	;# 
  7126  1F1C                     	;# 
  7127  1F1D                     	;# 
  7128  1F1E                     	;# 
  7129  1F1F                     	;# 
  7130  1F20                     	;# 
  7131  1F21                     	;# 
  7132  1F22                     	;# 
  7133  1F23                     	;# 
  7134  1F24                     	;# 
  7135  1F25                     	;# 
  7136  1F26                     	;# 
  7137  1F27                     	;# 
  7138  1F28                     	;# 
  7139  1F29                     	;# 
  7140  1F2A                     	;# 
  7141  1F2B                     	;# 
  7142  1F2C                     	;# 
  7143  1F2D                     	;# 
  7144  1F2E                     	;# 
  7145  1F2F                     	;# 
  7146  1F30                     	;# 
  7147  1F31                     	;# 
  7148  1F32                     	;# 
  7149  1F38                     	;# 
  7150  1F39                     	;# 
  7151  1F3A                     	;# 
  7152  1F3B                     	;# 
  7153  1F3C                     	;# 
  7154  1F3D                     	;# 
  7155  1F3E                     	;# 
  7156  1F3F                     	;# 
  7157  1F40                     	;# 
  7158  1F41                     	;# 
  7159  1F43                     	;# 
  7160  1F44                     	;# 
  7161  1F45                     	;# 
  7162  1F46                     	;# 
  7163  1F47                     	;# 
  7164  1F48                     	;# 
  7165  1F49                     	;# 
  7166  1F4A                     	;# 
  7167  1F4B                     	;# 
  7168  1F4C                     	;# 
  7169  1F4E                     	;# 
  7170  1F4F                     	;# 
  7171  1F50                     	;# 
  7172  1F51                     	;# 
  7173  1F52                     	;# 
  7174  1F53                     	;# 
  7175  1F54                     	;# 
  7176  1F55                     	;# 
  7177  1F56                     	;# 
  7178  1F57                     	;# 
  7179  1F59                     	;# 
  7180  1F5A                     	;# 
  7181  1F5B                     	;# 
  7182  1F5C                     	;# 
  7183  1F5D                     	;# 
  7184  1F61                     	;# 
  7185  1F62                     	;# 
  7186  1F64                     	;# 
  7187  1F65                     	;# 
  7188  1F66                     	;# 
  7189  1F67                     	;# 
  7190  1F68                     	;# 
  7191  1F69                     	;# 
  7192  1F6A                     	;# 
  7193  1F6B                     	;# 
  7194  1F6C                     	;# 
  7195  1F6D                     	;# 
  7196  1FE4                     	;# 
  7197  1FE5                     	;# 
  7198  1FE6                     	;# 
  7199  1FE7                     	;# 
  7200  1FE8                     	;# 
  7201  1FE9                     	;# 
  7202  1FEA                     	;# 
  7203  1FEB                     	;# 
  7204  1FED                     	;# 
  7205  1FEE                     	;# 
  7206  1FEF                     	;# 
  7207  0000                     	;# 
  7208  0001                     	;# 
  7209  0002                     	;# 
  7210  0003                     	;# 
  7211  0004                     	;# 
  7212  0005                     	;# 
  7213  0006                     	;# 
  7214  0007                     	;# 
  7215  0008                     	;# 
  7216  0009                     	;# 
  7217  000A                     	;# 
  7218  000B                     	;# 
  7219  000C                     	;# 
  7220  000D                     	;# 
  7221  000E                     	;# 
  7222  000F                     	;# 
  7223  0010                     	;# 
  7224  0011                     	;# 
  7225  0012                     	;# 
  7226  0013                     	;# 
  7227  0014                     	;# 
  7228  0015                     	;# 
  7229  0016                     	;# 
  7230  0017                     	;# 
  7231  0018                     	;# 
  7232  0019                     	;# 
  7233  001A                     	;# 
  7234  001C                     	;# 
  7235  001C                     	;# 
  7236  001D                     	;# 
  7237  001D                     	;# 
  7238  001E                     	;# 
  7239  001F                     	;# 
  7240  008C                     	;# 
  7241  008C                     	;# 
  7242  008D                     	;# 
  7243  008E                     	;# 
  7244  008E                     	;# 
  7245  008F                     	;# 
  7246  0090                     	;# 
  7247  0090                     	;# 
  7248  0091                     	;# 
  7249  0093                     	;# 
  7250  0094                     	;# 
  7251  0095                     	;# 
  7252  0096                     	;# 
  7253  0097                     	;# 
  7254  0098                     	;# 
  7255  0099                     	;# 
  7256  009A                     	;# 
  7257  009B                     	;# 
  7258  009C                     	;# 
  7259  009D                     	;# 
  7260  009E                     	;# 
  7261  010C                     	;# 
  7262  010D                     	;# 
  7263  010E                     	;# 
  7264  010E                     	;# 
  7265  010F                     	;# 
  7266  0110                     	;# 
  7267  0110                     	;# 
  7268  0111                     	;# 
  7269  0112                     	;# 
  7270  0112                     	;# 
  7271  0113                     	;# 
  7272  0114                     	;# 
  7273  0114                     	;# 
  7274  0115                     	;# 
  7275  0116                     	;# 
  7276  0116                     	;# 
  7277  0117                     	;# 
  7278  0119                     	;# 
  7279  0119                     	;# 
  7280  0119                     	;# 
  7281  011A                     	;# 
  7282  011A                     	;# 
  7283  011A                     	;# 
  7284  011B                     	;# 
  7285  011B                     	;# 
  7286  011B                     	;# 
  7287  011B                     	;# 
  7288  011B                     	;# 
  7289  011C                     	;# 
  7290  011C                     	;# 
  7291  011C                     	;# 
  7292  011D                     	;# 
  7293  011D                     	;# 
  7294  011D                     	;# 
  7295  011E                     	;# 
  7296  011E                     	;# 
  7297  011E                     	;# 
  7298  011F                     	;# 
  7299  011F                     	;# 
  7300  011F                     	;# 
  7301  011F                     	;# 
  7302  011F                     	;# 
  7303  018C                     	;# 
  7304  018D                     	;# 
  7305  018E                     	;# 
  7306  018F                     	;# 
  7307  0190                     	;# 
  7308  0191                     	;# 
  7309  0192                     	;# 
  7310  0196                     	;# 
  7311  0197                     	;# 
  7312  0198                     	;# 
  7313  0199                     	;# 
  7314  019A                     	;# 
  7315  019B                     	;# 
  7316  019C                     	;# 
  7317  020C                     	;# 
  7318  020C                     	;# 
  7319  020D                     	;# 
  7320  020E                     	;# 
  7321  020F                     	;# 
  7322  020F                     	;# 
  7323  0210                     	;# 
  7324  0210                     	;# 
  7325  0211                     	;# 
  7326  0211                     	;# 
  7327  0212                     	;# 
  7328  0212                     	;# 
  7329  0213                     	;# 
  7330  0214                     	;# 
  7331  0215                     	;# 
  7332  0215                     	;# 
  7333  0216                     	;# 
  7334  0216                     	;# 
  7335  0217                     	;# 
  7336  0217                     	;# 
  7337  0218                     	;# 
  7338  0218                     	;# 
  7339  0219                     	;# 
  7340  021A                     	;# 
  7341  021B                     	;# 
  7342  021B                     	;# 
  7343  021C                     	;# 
  7344  021C                     	;# 
  7345  021D                     	;# 
  7346  021D                     	;# 
  7347  021E                     	;# 
  7348  021F                     	;# 
  7349  028C                     	;# 
  7350  028C                     	;# 
  7351  028D                     	;# 
  7352  028D                     	;# 
  7353  028E                     	;# 
  7354  028F                     	;# 
  7355  0290                     	;# 
  7356  0290                     	;# 
  7357  0291                     	;# 
  7358  0292                     	;# 
  7359  0292                     	;# 
  7360  0293                     	;# 
  7361  0293                     	;# 
  7362  0294                     	;# 
  7363  0295                     	;# 
  7364  0296                     	;# 
  7365  0296                     	;# 
  7366  0297                     	;# 
  7367  0298                     	;# 
  7368  0298                     	;# 
  7369  0299                     	;# 
  7370  0299                     	;# 
  7371  029A                     	;# 
  7372  029B                     	;# 
  7373  029C                     	;# 
  7374  029C                     	;# 
  7375  029D                     	;# 
  7376  030C                     	;# 
  7377  030C                     	;# 
  7378  030D                     	;# 
  7379  030E                     	;# 
  7380  030F                     	;# 
  7381  0310                     	;# 
  7382  0310                     	;# 
  7383  0311                     	;# 
  7384  0312                     	;# 
  7385  0313                     	;# 
  7386  0314                     	;# 
  7387  0314                     	;# 
  7388  0315                     	;# 
  7389  0316                     	;# 
  7390  0317                     	;# 
  7391  0318                     	;# 
  7392  0318                     	;# 
  7393  0319                     	;# 
  7394  031A                     	;# 
  7395  031B                     	;# 
  7396  031C                     	;# 
  7397  031C                     	;# 
  7398  031D                     	;# 
  7399  031E                     	;# 
  7400  031F                     	;# 
  7401  038C                     	;# 
  7402  038D                     	;# 
  7403  038E                     	;# 
  7404  0390                     	;# 
  7405  0391                     	;# 
  7406  0392                     	;# 
  7407  040C                     	;# 
  7408  040D                     	;# 
  7409  040E                     	;# 
  7410  040F                     	;# 
  7411  0410                     	;# 
  7412  0411                     	;# 
  7413  0416                     	;# 
  7414  0416                     	;# 
  7415  0417                     	;# 
  7416  0418                     	;# 
  7417  0418                     	;# 
  7418  0419                     	;# 
  7419  041A                     	;# 
  7420  041A                     	;# 
  7421  041B                     	;# 
  7422  041C                     	;# 
  7423  041C                     	;# 
  7424  041D                     	;# 
  7425  041E                     	;# 
  7426  041F                     	;# 
  7427  048C                     	;# 
  7428  048C                     	;# 
  7429  048D                     	;# 
  7430  048E                     	;# 
  7431  048F                     	;# 
  7432  048F                     	;# 
  7433  0490                     	;# 
  7434  0491                     	;# 
  7435  0492                     	;# 
  7436  0492                     	;# 
  7437  0493                     	;# 
  7438  0494                     	;# 
  7439  0495                     	;# 
  7440  0495                     	;# 
  7441  0496                     	;# 
  7442  0497                     	;# 
  7443  0498                     	;# 
  7444  0499                     	;# 
  7445  049A                     	;# 
  7446  049B                     	;# 
  7447  049C                     	;# 
  7448  049D                     	;# 
  7449  050C                     	;# 
  7450  050C                     	;# 
  7451  050D                     	;# 
  7452  050E                     	;# 
  7453  050F                     	;# 
  7454  050F                     	;# 
  7455  0510                     	;# 
  7456  0511                     	;# 
  7457  0512                     	;# 
  7458  0512                     	;# 
  7459  0513                     	;# 
  7460  0514                     	;# 
  7461  0515                     	;# 
  7462  0515                     	;# 
  7463  0516                     	;# 
  7464  0517                     	;# 
  7465  0518                     	;# 
  7466  0519                     	;# 
  7467  051A                     	;# 
  7468  051B                     	;# 
  7469  051C                     	;# 
  7470  051D                     	;# 
  7471  058C                     	;# 
  7472  058C                     	;# 
  7473  058D                     	;# 
  7474  058E                     	;# 
  7475  058F                     	;# 
  7476  058F                     	;# 
  7477  0590                     	;# 
  7478  0591                     	;# 
  7479  0592                     	;# 
  7480  0593                     	;# 
  7481  060C                     	;# 
  7482  060D                     	;# 
  7483  060E                     	;# 
  7484  060F                     	;# 
  7485  0610                     	;# 
  7486  0611                     	;# 
  7487  0612                     	;# 
  7488  0613                     	;# 
  7489  0614                     	;# 
  7490  0616                     	;# 
  7491  0617                     	;# 
  7492  0618                     	;# 
  7493  0619                     	;# 
  7494  061A                     	;# 
  7495  061B                     	;# 
  7496  061C                     	;# 
  7497  061D                     	;# 
  7498  061E                     	;# 
  7499  068C                     	;# 
  7500  068D                     	;# 
  7501  068E                     	;# 
  7502  068F                     	;# 
  7503  0690                     	;# 
  7504  0691                     	;# 
  7505  0692                     	;# 
  7506  0693                     	;# 
  7507  0694                     	;# 
  7508  070C                     	;# 
  7509  070D                     	;# 
  7510  070E                     	;# 
  7511  070F                     	;# 
  7512  0710                     	;# 
  7513  0711                     	;# 
  7514  0712                     	;# 
  7515  0713                     	;# 
  7516  0714                     	;# 
  7517  0716                     	;# 
  7518  0717                     	;# 
  7519  0718                     	;# 
  7520  0719                     	;# 
  7521  071A                     	;# 
  7522  071B                     	;# 
  7523  071C                     	;# 
  7524  071D                     	;# 
  7525  071E                     	;# 
  7526  0796                     	;# 
  7527  0797                     	;# 
  7528  0798                     	;# 
  7529  0799                     	;# 
  7530  079A                     	;# 
  7531  079B                     	;# 
  7532  080C                     	;# 
  7533  080D                     	;# 
  7534  080E                     	;# 
  7535  080F                     	;# 
  7536  0810                     	;# 
  7537  0811                     	;# 
  7538  0812                     	;# 
  7539  0813                     	;# 
  7540  0814                     	;# 
  7541  081A                     	;# 
  7542  081B                     	;# 
  7543  081C                     	;# 
  7544  081D                     	;# 
  7545  081E                     	;# 
  7546  081F                     	;# 
  7547  088C                     	;# 
  7548  088D                     	;# 
  7549  088E                     	;# 
  7550  088F                     	;# 
  7551  0890                     	;# 
  7552  0891                     	;# 
  7553  0892                     	;# 
  7554  0893                     	;# 
  7555  0895                     	;# 
  7556  0896                     	;# 
  7557  0897                     	;# 
  7558  0898                     	;# 
  7559  0899                     	;# 
  7560  089A                     	;# 
  7561  089B                     	;# 
  7562  090C                     	;# 
  7563  090E                     	;# 
  7564  090F                     	;# 
  7565  091F                     	;# 
  7566  098F                     	;# 
  7567  098F                     	;# 
  7568  0990                     	;# 
  7569  0991                     	;# 
  7570  0992                     	;# 
  7571  0993                     	;# 
  7572  0994                     	;# 
  7573  0995                     	;# 
  7574  0996                     	;# 
  7575  0997                     	;# 
  7576  1E0F                     	;# 
  7577  1E10                     	;# 
  7578  1E11                     	;# 
  7579  1E12                     	;# 
  7580  1E13                     	;# 
  7581  1E14                     	;# 
  7582  1E15                     	;# 
  7583  1E16                     	;# 
  7584  1E17                     	;# 
  7585  1E18                     	;# 
  7586  1E19                     	;# 
  7587  1E1A                     	;# 
  7588  1E1B                     	;# 
  7589  1E1C                     	;# 
  7590  1E1D                     	;# 
  7591  1E1E                     	;# 
  7592  1E1F                     	;# 
  7593  1E20                     	;# 
  7594  1E21                     	;# 
  7595  1E22                     	;# 
  7596  1E23                     	;# 
  7597  1E24                     	;# 
  7598  1E25                     	;# 
  7599  1E26                     	;# 
  7600  1E27                     	;# 
  7601  1E28                     	;# 
  7602  1E29                     	;# 
  7603  1E2A                     	;# 
  7604  1E2B                     	;# 
  7605  1E2C                     	;# 
  7606  1E2D                     	;# 
  7607  1E2E                     	;# 
  7608  1E2F                     	;# 
  7609  1E30                     	;# 
  7610  1E31                     	;# 
  7611  1E32                     	;# 
  7612  1E33                     	;# 
  7613  1E34                     	;# 
  7614  1E35                     	;# 
  7615  1E36                     	;# 
  7616  1E37                     	;# 
  7617  1E8F                     	;# 
  7618  1E90                     	;# 
  7619  1E91                     	;# 
  7620  1E92                     	;# 
  7621  1E93                     	;# 
  7622  1E94                     	;# 
  7623  1E95                     	;# 
  7624  1E96                     	;# 
  7625  1E97                     	;# 
  7626  1E9C                     	;# 
  7627  1E9D                     	;# 
  7628  1E9E                     	;# 
  7629  1EA1                     	;# 
  7630  1EA2                     	;# 
  7631  1EA3                     	;# 
  7632  1EA4                     	;# 
  7633  1EA5                     	;# 
  7634  1EA9                     	;# 
  7635  1EAA                     	;# 
  7636  1EAB                     	;# 
  7637  1EAC                     	;# 
  7638  1EB1                     	;# 
  7639  1EB2                     	;# 
  7640  1EB3                     	;# 
  7641  1EB8                     	;# 
  7642  1EB9                     	;# 
  7643  1EBA                     	;# 
  7644  1EBB                     	;# 
  7645  1EBC                     	;# 
  7646  1EBD                     	;# 
  7647  1EBE                     	;# 
  7648  1EC3                     	;# 
  7649  1EC5                     	;# 
  7650  1EC6                     	;# 
  7651  1EC7                     	;# 
  7652  1EC8                     	;# 
  7653  1EC9                     	;# 
  7654  1ECA                     	;# 
  7655  1ECB                     	;# 
  7656  1ECC                     	;# 
  7657  1F10                     	;# 
  7658  1F11                     	;# 
  7659  1F12                     	;# 
  7660  1F13                     	;# 
  7661  1F14                     	;# 
  7662  1F15                     	;# 
  7663  1F16                     	;# 
  7664  1F17                     	;# 
  7665  1F18                     	;# 
  7666  1F19                     	;# 
  7667  1F1A                     	;# 
  7668  1F1B                     	;# 
  7669  1F1C                     	;# 
  7670  1F1D                     	;# 
  7671  1F1E                     	;# 
  7672  1F1F                     	;# 
  7673  1F20                     	;# 
  7674  1F21                     	;# 
  7675  1F22                     	;# 
  7676  1F23                     	;# 
  7677  1F24                     	;# 
  7678  1F25                     	;# 
  7679  1F26                     	;# 
  7680  1F27                     	;# 
  7681  1F28                     	;# 
  7682  1F29                     	;# 
  7683  1F2A                     	;# 
  7684  1F2B                     	;# 
  7685  1F2C                     	;# 
  7686  1F2D                     	;# 
  7687  1F2E                     	;# 
  7688  1F2F                     	;# 
  7689  1F30                     	;# 
  7690  1F31                     	;# 
  7691  1F32                     	;# 
  7692  1F38                     	;# 
  7693  1F39                     	;# 
  7694  1F3A                     	;# 
  7695  1F3B                     	;# 
  7696  1F3C                     	;# 
  7697  1F3D                     	;# 
  7698  1F3E                     	;# 
  7699  1F3F                     	;# 
  7700  1F40                     	;# 
  7701  1F41                     	;# 
  7702  1F43                     	;# 
  7703  1F44                     	;# 
  7704  1F45                     	;# 
  7705  1F46                     	;# 
  7706  1F47                     	;# 
  7707  1F48                     	;# 
  7708  1F49                     	;# 
  7709  1F4A                     	;# 
  7710  1F4B                     	;# 
  7711  1F4C                     	;# 
  7712  1F4E                     	;# 
  7713  1F4F                     	;# 
  7714  1F50                     	;# 
  7715  1F51                     	;# 
  7716  1F52                     	;# 
  7717  1F53                     	;# 
  7718  1F54                     	;# 
  7719  1F55                     	;# 
  7720  1F56                     	;# 
  7721  1F57                     	;# 
  7722  1F59                     	;# 
  7723  1F5A                     	;# 
  7724  1F5B                     	;# 
  7725  1F5C                     	;# 
  7726  1F5D                     	;# 
  7727  1F61                     	;# 
  7728  1F62                     	;# 
  7729  1F64                     	;# 
  7730  1F65                     	;# 
  7731  1F66                     	;# 
  7732  1F67                     	;# 
  7733  1F68                     	;# 
  7734  1F69                     	;# 
  7735  1F6A                     	;# 
  7736  1F6B                     	;# 
  7737  1F6C                     	;# 
  7738  1F6D                     	;# 
  7739  1FE4                     	;# 
  7740  1FE5                     	;# 
  7741  1FE6                     	;# 
  7742  1FE7                     	;# 
  7743  1FE8                     	;# 
  7744  1FE9                     	;# 
  7745  1FEA                     	;# 
  7746  1FEB                     	;# 
  7747  1FED                     	;# 
  7748  1FEE                     	;# 
  7749  1FEF                     	;# 
  7750  0000                     	;# 
  7751  0001                     	;# 
  7752  0002                     	;# 
  7753  0003                     	;# 
  7754  0004                     	;# 
  7755  0005                     	;# 
  7756  0006                     	;# 
  7757  0007                     	;# 
  7758  0008                     	;# 
  7759  0009                     	;# 
  7760  000A                     	;# 
  7761  000B                     	;# 
  7762  000C                     	;# 
  7763  000D                     	;# 
  7764  000E                     	;# 
  7765  000F                     	;# 
  7766  0010                     	;# 
  7767  0011                     	;# 
  7768  0012                     	;# 
  7769  0013                     	;# 
  7770  0014                     	;# 
  7771  0015                     	;# 
  7772  0016                     	;# 
  7773  0017                     	;# 
  7774  0018                     	;# 
  7775  0019                     	;# 
  7776  001A                     	;# 
  7777  001C                     	;# 
  7778  001C                     	;# 
  7779  001D                     	;# 
  7780  001D                     	;# 
  7781  001E                     	;# 
  7782  001F                     	;# 
  7783  008C                     	;# 
  7784  008C                     	;# 
  7785  008D                     	;# 
  7786  008E                     	;# 
  7787  008E                     	;# 
  7788  008F                     	;# 
  7789  0090                     	;# 
  7790  0090                     	;# 
  7791  0091                     	;# 
  7792  0093                     	;# 
  7793  0094                     	;# 
  7794  0095                     	;# 
  7795  0096                     	;# 
  7796  0097                     	;# 
  7797  0098                     	;# 
  7798  0099                     	;# 
  7799  009A                     	;# 
  7800  009B                     	;# 
  7801  009C                     	;# 
  7802  009D                     	;# 
  7803  009E                     	;# 
  7804  010C                     	;# 
  7805  010D                     	;# 
  7806  010E                     	;# 
  7807  010E                     	;# 
  7808  010F                     	;# 
  7809  0110                     	;# 
  7810  0110                     	;# 
  7811  0111                     	;# 
  7812  0112                     	;# 
  7813  0112                     	;# 
  7814  0113                     	;# 
  7815  0114                     	;# 
  7816  0114                     	;# 
  7817  0115                     	;# 
  7818  0116                     	;# 
  7819  0116                     	;# 
  7820  0117                     	;# 
  7821  0119                     	;# 
  7822  0119                     	;# 
  7823  0119                     	;# 
  7824  011A                     	;# 
  7825  011A                     	;# 
  7826  011A                     	;# 
  7827  011B                     	;# 
  7828  011B                     	;# 
  7829  011B                     	;# 
  7830  011B                     	;# 
  7831  011B                     	;# 
  7832  011C                     	;# 
  7833  011C                     	;# 
  7834  011C                     	;# 
  7835  011D                     	;# 
  7836  011D                     	;# 
  7837  011D                     	;# 
  7838  011E                     	;# 
  7839  011E                     	;# 
  7840  011E                     	;# 
  7841  011F                     	;# 
  7842  011F                     	;# 
  7843  011F                     	;# 
  7844  011F                     	;# 
  7845  011F                     	;# 
  7846  018C                     	;# 
  7847  018D                     	;# 
  7848  018E                     	;# 
  7849  018F                     	;# 
  7850  0190                     	;# 
  7851  0191                     	;# 
  7852  0192                     	;# 
  7853  0196                     	;# 
  7854  0197                     	;# 
  7855  0198                     	;# 
  7856  0199                     	;# 
  7857  019A                     	;# 
  7858  019B                     	;# 
  7859  019C                     	;# 
  7860  020C                     	;# 
  7861  020C                     	;# 
  7862  020D                     	;# 
  7863  020E                     	;# 
  7864  020F                     	;# 
  7865  020F                     	;# 
  7866  0210                     	;# 
  7867  0210                     	;# 
  7868  0211                     	;# 
  7869  0211                     	;# 
  7870  0212                     	;# 
  7871  0212                     	;# 
  7872  0213                     	;# 
  7873  0214                     	;# 
  7874  0215                     	;# 
  7875  0215                     	;# 
  7876  0216                     	;# 
  7877  0216                     	;# 
  7878  0217                     	;# 
  7879  0217                     	;# 
  7880  0218                     	;# 
  7881  0218                     	;# 
  7882  0219                     	;# 
  7883  021A                     	;# 
  7884  021B                     	;# 
  7885  021B                     	;# 
  7886  021C                     	;# 
  7887  021C                     	;# 
  7888  021D                     	;# 
  7889  021D                     	;# 
  7890  021E                     	;# 
  7891  021F                     	;# 
  7892  028C                     	;# 
  7893  028C                     	;# 
  7894  028D                     	;# 
  7895  028D                     	;# 
  7896  028E                     	;# 
  7897  028F                     	;# 
  7898  0290                     	;# 
  7899  0290                     	;# 
  7900  0291                     	;# 
  7901  0292                     	;# 
  7902  0292                     	;# 
  7903  0293                     	;# 
  7904  0293                     	;# 
  7905  0294                     	;# 
  7906  0295                     	;# 
  7907  0296                     	;# 
  7908  0296                     	;# 
  7909  0297                     	;# 
  7910  0298                     	;# 
  7911  0298                     	;# 
  7912  0299                     	;# 
  7913  0299                     	;# 
  7914  029A                     	;# 
  7915  029B                     	;# 
  7916  029C                     	;# 
  7917  029C                     	;# 
  7918  029D                     	;# 
  7919  030C                     	;# 
  7920  030C                     	;# 
  7921  030D                     	;# 
  7922  030E                     	;# 
  7923  030F                     	;# 
  7924  0310                     	;# 
  7925  0310                     	;# 
  7926  0311                     	;# 
  7927  0312                     	;# 
  7928  0313                     	;# 
  7929  0314                     	;# 
  7930  0314                     	;# 
  7931  0315                     	;# 
  7932  0316                     	;# 
  7933  0317                     	;# 
  7934  0318                     	;# 
  7935  0318                     	;# 
  7936  0319                     	;# 
  7937  031A                     	;# 
  7938  031B                     	;# 
  7939  031C                     	;# 
  7940  031C                     	;# 
  7941  031D                     	;# 
  7942  031E                     	;# 
  7943  031F                     	;# 
  7944  038C                     	;# 
  7945  038D                     	;# 
  7946  038E                     	;# 
  7947  0390                     	;# 
  7948  0391                     	;# 
  7949  0392                     	;# 
  7950  040C                     	;# 
  7951  040D                     	;# 
  7952  040E                     	;# 
  7953  040F                     	;# 
  7954  0410                     	;# 
  7955  0411                     	;# 
  7956  0416                     	;# 
  7957  0416                     	;# 
  7958  0417                     	;# 
  7959  0418                     	;# 
  7960  0418                     	;# 
  7961  0419                     	;# 
  7962  041A                     	;# 
  7963  041A                     	;# 
  7964  041B                     	;# 
  7965  041C                     	;# 
  7966  041C                     	;# 
  7967  041D                     	;# 
  7968  041E                     	;# 
  7969  041F                     	;# 
  7970  048C                     	;# 
  7971  048C                     	;# 
  7972  048D                     	;# 
  7973  048E                     	;# 
  7974  048F                     	;# 
  7975  048F                     	;# 
  7976  0490                     	;# 
  7977  0491                     	;# 
  7978  0492                     	;# 
  7979  0492                     	;# 
  7980  0493                     	;# 
  7981  0494                     	;# 
  7982  0495                     	;# 
  7983  0495                     	;# 
  7984  0496                     	;# 
  7985  0497                     	;# 
  7986  0498                     	;# 
  7987  0499                     	;# 
  7988  049A                     	;# 
  7989  049B                     	;# 
  7990  049C                     	;# 
  7991  049D                     	;# 
  7992  050C                     	;# 
  7993  050C                     	;# 
  7994  050D                     	;# 
  7995  050E                     	;# 
  7996  050F                     	;# 
  7997  050F                     	;# 
  7998  0510                     	;# 
  7999  0511                     	;# 
  8000  0512                     	;# 
  8001  0512                     	;# 
  8002  0513                     	;# 
  8003  0514                     	;# 
  8004  0515                     	;# 
  8005  0515                     	;# 
  8006  0516                     	;# 
  8007  0517                     	;# 
  8008  0518                     	;# 
  8009  0519                     	;# 
  8010  051A                     	;# 
  8011  051B                     	;# 
  8012  051C                     	;# 
  8013  051D                     	;# 
  8014  058C                     	;# 
  8015  058C                     	;# 
  8016  058D                     	;# 
  8017  058E                     	;# 
  8018  058F                     	;# 
  8019  058F                     	;# 
  8020  0590                     	;# 
  8021  0591                     	;# 
  8022  0592                     	;# 
  8023  0593                     	;# 
  8024  060C                     	;# 
  8025  060D                     	;# 
  8026  060E                     	;# 
  8027  060F                     	;# 
  8028  0610                     	;# 
  8029  0611                     	;# 
  8030  0612                     	;# 
  8031  0613                     	;# 
  8032  0614                     	;# 
  8033  0616                     	;# 
  8034  0617                     	;# 
  8035  0618                     	;# 
  8036  0619                     	;# 
  8037  061A                     	;# 
  8038  061B                     	;# 
  8039  061C                     	;# 
  8040  061D                     	;# 
  8041  061E                     	;# 
  8042  068C                     	;# 
  8043  068D                     	;# 
  8044  068E                     	;# 
  8045  068F                     	;# 
  8046  0690                     	;# 
  8047  0691                     	;# 
  8048  0692                     	;# 
  8049  0693                     	;# 
  8050  0694                     	;# 
  8051  070C                     	;# 
  8052  070D                     	;# 
  8053  070E                     	;# 
  8054  070F                     	;# 
  8055  0710                     	;# 
  8056  0711                     	;# 
  8057  0712                     	;# 
  8058  0713                     	;# 
  8059  0714                     	;# 
  8060  0716                     	;# 
  8061  0717                     	;# 
  8062  0718                     	;# 
  8063  0719                     	;# 
  8064  071A                     	;# 
  8065  071B                     	;# 
  8066  071C                     	;# 
  8067  071D                     	;# 
  8068  071E                     	;# 
  8069  0796                     	;# 
  8070  0797                     	;# 
  8071  0798                     	;# 
  8072  0799                     	;# 
  8073  079A                     	;# 
  8074  079B                     	;# 
  8075  080C                     	;# 
  8076  080D                     	;# 
  8077  080E                     	;# 
  8078  080F                     	;# 
  8079  0810                     	;# 
  8080  0811                     	;# 
  8081  0812                     	;# 
  8082  0813                     	;# 
  8083  0814                     	;# 
  8084  081A                     	;# 
  8085  081B                     	;# 
  8086  081C                     	;# 
  8087  081D                     	;# 
  8088  081E                     	;# 
  8089  081F                     	;# 
  8090  088C                     	;# 
  8091  088D                     	;# 
  8092  088E                     	;# 
  8093  088F                     	;# 
  8094  0890                     	;# 
  8095  0891                     	;# 
  8096  0892                     	;# 
  8097  0893                     	;# 
  8098  0895                     	;# 
  8099  0896                     	;# 
  8100  0897                     	;# 
  8101  0898                     	;# 
  8102  0899                     	;# 
  8103  089A                     	;# 
  8104  089B                     	;# 
  8105  090C                     	;# 
  8106  090E                     	;# 
  8107  090F                     	;# 
  8108  091F                     	;# 
  8109  098F                     	;# 
  8110  098F                     	;# 
  8111  0990                     	;# 
  8112  0991                     	;# 
  8113  0992                     	;# 
  8114  0993                     	;# 
  8115  0994                     	;# 
  8116  0995                     	;# 
  8117  0996                     	;# 
  8118  0997                     	;# 
  8119  1E0F                     	;# 
  8120  1E10                     	;# 
  8121  1E11                     	;# 
  8122  1E12                     	;# 
  8123  1E13                     	;# 
  8124  1E14                     	;# 
  8125  1E15                     	;# 
  8126  1E16                     	;# 
  8127  1E17                     	;# 
  8128  1E18                     	;# 
  8129  1E19                     	;# 
  8130  1E1A                     	;# 
  8131  1E1B                     	;# 
  8132  1E1C                     	;# 
  8133  1E1D                     	;# 
  8134  1E1E                     	;# 
  8135  1E1F                     	;# 
  8136  1E20                     	;# 
  8137  1E21                     	;# 
  8138  1E22                     	;# 
  8139  1E23                     	;# 
  8140  1E24                     	;# 
  8141  1E25                     	;# 
  8142  1E26                     	;# 
  8143  1E27                     	;# 
  8144  1E28                     	;# 
  8145  1E29                     	;# 
  8146  1E2A                     	;# 
  8147  1E2B                     	;# 
  8148  1E2C                     	;# 
  8149  1E2D                     	;# 
  8150  1E2E                     	;# 
  8151  1E2F                     	;# 
  8152  1E30                     	;# 
  8153  1E31                     	;# 
  8154  1E32                     	;# 
  8155  1E33                     	;# 
  8156  1E34                     	;# 
  8157  1E35                     	;# 
  8158  1E36                     	;# 
  8159  1E37                     	;# 
  8160  1E8F                     	;# 
  8161  1E90                     	;# 
  8162  1E91                     	;# 
  8163  1E92                     	;# 
  8164  1E93                     	;# 
  8165  1E94                     	;# 
  8166  1E95                     	;# 
  8167  1E96                     	;# 
  8168  1E97                     	;# 
  8169  1E9C                     	;# 
  8170  1E9D                     	;# 
  8171  1E9E                     	;# 
  8172  1EA1                     	;# 
  8173  1EA2                     	;# 
  8174  1EA3                     	;# 
  8175  1EA4                     	;# 
  8176  1EA5                     	;# 
  8177  1EA9                     	;# 
  8178  1EAA                     	;# 
  8179  1EAB                     	;# 
  8180  1EAC                     	;# 
  8181  1EB1                     	;# 
  8182  1EB2                     	;# 
  8183  1EB3                     	;# 
  8184  1EB8                     	;# 
  8185  1EB9                     	;# 
  8186  1EBA                     	;# 
  8187  1EBB                     	;# 
  8188  1EBC                     	;# 
  8189  1EBD                     	;# 
  8190  1EBE                     	;# 
  8191  1EC3                     	;# 
  8192  1EC5                     	;# 
  8193  1EC6                     	;# 
  8194  1EC7                     	;# 
  8195  1EC8                     	;# 
  8196  1EC9                     	;# 
  8197  1ECA                     	;# 
  8198  1ECB                     	;# 
  8199  1ECC                     	;# 
  8200  1F10                     	;# 
  8201  1F11                     	;# 
  8202  1F12                     	;# 
  8203  1F13                     	;# 
  8204  1F14                     	;# 
  8205  1F15                     	;# 
  8206  1F16                     	;# 
  8207  1F17                     	;# 
  8208  1F18                     	;# 
  8209  1F19                     	;# 
  8210  1F1A                     	;# 
  8211  1F1B                     	;# 
  8212  1F1C                     	;# 
  8213  1F1D                     	;# 
  8214  1F1E                     	;# 
  8215  1F1F                     	;# 
  8216  1F20                     	;# 
  8217  1F21                     	;# 
  8218  1F22                     	;# 
  8219  1F23                     	;# 
  8220  1F24                     	;# 
  8221  1F25                     	;# 
  8222  1F26                     	;# 
  8223  1F27                     	;# 
  8224  1F28                     	;# 
  8225  1F29                     	;# 
  8226  1F2A                     	;# 
  8227  1F2B                     	;# 
  8228  1F2C                     	;# 
  8229  1F2D                     	;# 
  8230  1F2E                     	;# 
  8231  1F2F                     	;# 
  8232  1F30                     	;# 
  8233  1F31                     	;# 
  8234  1F32                     	;# 
  8235  1F38                     	;# 
  8236  1F39                     	;# 
  8237  1F3A                     	;# 
  8238  1F3B                     	;# 
  8239  1F3C                     	;# 
  8240  1F3D                     	;# 
  8241  1F3E                     	;# 
  8242  1F3F                     	;# 
  8243  1F40                     	;# 
  8244  1F41                     	;# 
  8245  1F43                     	;# 
  8246  1F44                     	;# 
  8247  1F45                     	;# 
  8248  1F46                     	;# 
  8249  1F47                     	;# 
  8250  1F48                     	;# 
  8251  1F49                     	;# 
  8252  1F4A                     	;# 
  8253  1F4B                     	;# 
  8254  1F4C                     	;# 
  8255  1F4E                     	;# 
  8256  1F4F                     	;# 
  8257  1F50                     	;# 
  8258  1F51                     	;# 
  8259  1F52                     	;# 
  8260  1F53                     	;# 
  8261  1F54                     	;# 
  8262  1F55                     	;# 
  8263  1F56                     	;# 
  8264  1F57                     	;# 
  8265  1F59                     	;# 
  8266  1F5A                     	;# 
  8267  1F5B                     	;# 
  8268  1F5C                     	;# 
  8269  1F5D                     	;# 
  8270  1F61                     	;# 
  8271  1F62                     	;# 
  8272  1F64                     	;# 
  8273  1F65                     	;# 
  8274  1F66                     	;# 
  8275  1F67                     	;# 
  8276  1F68                     	;# 
  8277  1F69                     	;# 
  8278  1F6A                     	;# 
  8279  1F6B                     	;# 
  8280  1F6C                     	;# 
  8281  1F6D                     	;# 
  8282  1FE4                     	;# 
  8283  1FE5                     	;# 
  8284  1FE6                     	;# 
  8285  1FE7                     	;# 
  8286  1FE8                     	;# 
  8287  1FE9                     	;# 
  8288  1FEA                     	;# 
  8289  1FEB                     	;# 
  8290  1FED                     	;# 
  8291  1FEE                     	;# 
  8292  1FEF                     	;# 
  8293  0000                     	;# 
  8294  0001                     	;# 
  8295  0002                     	;# 
  8296  0003                     	;# 
  8297  0004                     	;# 
  8298  0005                     	;# 
  8299  0006                     	;# 
  8300  0007                     	;# 
  8301  0008                     	;# 
  8302  0009                     	;# 
  8303  000A                     	;# 
  8304  000B                     	;# 
  8305  000C                     	;# 
  8306  000D                     	;# 
  8307  000E                     	;# 
  8308  000F                     	;# 
  8309  0010                     	;# 
  8310  0011                     	;# 
  8311  0012                     	;# 
  8312  0013                     	;# 
  8313  0014                     	;# 
  8314  0015                     	;# 
  8315  0016                     	;# 
  8316  0017                     	;# 
  8317  0018                     	;# 
  8318  0019                     	;# 
  8319  001A                     	;# 
  8320  001C                     	;# 
  8321  001C                     	;# 
  8322  001D                     	;# 
  8323  001D                     	;# 
  8324  001E                     	;# 
  8325  001F                     	;# 
  8326  008C                     	;# 
  8327  008C                     	;# 
  8328  008D                     	;# 
  8329  008E                     	;# 
  8330  008E                     	;# 
  8331  008F                     	;# 
  8332  0090                     	;# 
  8333  0090                     	;# 
  8334  0091                     	;# 
  8335  0093                     	;# 
  8336  0094                     	;# 
  8337  0095                     	;# 
  8338  0096                     	;# 
  8339  0097                     	;# 
  8340  0098                     	;# 
  8341  0099                     	;# 
  8342  009A                     	;# 
  8343  009B                     	;# 
  8344  009C                     	;# 
  8345  009D                     	;# 
  8346  009E                     	;# 
  8347  010C                     	;# 
  8348  010D                     	;# 
  8349  010E                     	;# 
  8350  010E                     	;# 
  8351  010F                     	;# 
  8352  0110                     	;# 
  8353  0110                     	;# 
  8354  0111                     	;# 
  8355  0112                     	;# 
  8356  0112                     	;# 
  8357  0113                     	;# 
  8358  0114                     	;# 
  8359  0114                     	;# 
  8360  0115                     	;# 
  8361  0116                     	;# 
  8362  0116                     	;# 
  8363  0117                     	;# 
  8364  0119                     	;# 
  8365  0119                     	;# 
  8366  0119                     	;# 
  8367  011A                     	;# 
  8368  011A                     	;# 
  8369  011A                     	;# 
  8370  011B                     	;# 
  8371  011B                     	;# 
  8372  011B                     	;# 
  8373  011B                     	;# 
  8374  011B                     	;# 
  8375  011C                     	;# 
  8376  011C                     	;# 
  8377  011C                     	;# 
  8378  011D                     	;# 
  8379  011D                     	;# 
  8380  011D                     	;# 
  8381  011E                     	;# 
  8382  011E                     	;# 
  8383  011E                     	;# 
  8384  011F                     	;# 
  8385  011F                     	;# 
  8386  011F                     	;# 
  8387  011F                     	;# 
  8388  011F                     	;# 
  8389  018C                     	;# 
  8390  018D                     	;# 
  8391  018E                     	;# 
  8392  018F                     	;# 
  8393  0190                     	;# 
  8394  0191                     	;# 
  8395  0192                     	;# 
  8396  0196                     	;# 
  8397  0197                     	;# 
  8398  0198                     	;# 
  8399  0199                     	;# 
  8400  019A                     	;# 
  8401  019B                     	;# 
  8402  019C                     	;# 
  8403  020C                     	;# 
  8404  020C                     	;# 
  8405  020D                     	;# 
  8406  020E                     	;# 
  8407  020F                     	;# 
  8408  020F                     	;# 
  8409  0210                     	;# 
  8410  0210                     	;# 
  8411  0211                     	;# 
  8412  0211                     	;# 
  8413  0212                     	;# 
  8414  0212                     	;# 
  8415  0213                     	;# 
  8416  0214                     	;# 
  8417  0215                     	;# 
  8418  0215                     	;# 
  8419  0216                     	;# 
  8420  0216                     	;# 
  8421  0217                     	;# 
  8422  0217                     	;# 
  8423  0218                     	;# 
  8424  0218                     	;# 
  8425  0219                     	;# 
  8426  021A                     	;# 
  8427  021B                     	;# 
  8428  021B                     	;# 
  8429  021C                     	;# 
  8430  021C                     	;# 
  8431  021D                     	;# 
  8432  021D                     	;# 
  8433  021E                     	;# 
  8434  021F                     	;# 
  8435  028C                     	;# 
  8436  028C                     	;# 
  8437  028D                     	;# 
  8438  028D                     	;# 
  8439  028E                     	;# 
  8440  028F                     	;# 
  8441  0290                     	;# 
  8442  0290                     	;# 
  8443  0291                     	;# 
  8444  0292                     	;# 
  8445  0292                     	;# 
  8446  0293                     	;# 
  8447  0293                     	;# 
  8448  0294                     	;# 
  8449  0295                     	;# 
  8450  0296                     	;# 
  8451  0296                     	;# 
  8452  0297                     	;# 
  8453  0298                     	;# 
  8454  0298                     	;# 
  8455  0299                     	;# 
  8456  0299                     	;# 
  8457  029A                     	;# 
  8458  029B                     	;# 
  8459  029C                     	;# 
  8460  029C                     	;# 
  8461  029D                     	;# 
  8462  030C                     	;# 
  8463  030C                     	;# 
  8464  030D                     	;# 
  8465  030E                     	;# 
  8466  030F                     	;# 
  8467  0310                     	;# 
  8468  0310                     	;# 
  8469  0311                     	;# 
  8470  0312                     	;# 
  8471  0313                     	;# 
  8472  0314                     	;# 
  8473  0314                     	;# 
  8474  0315                     	;# 
  8475  0316                     	;# 
  8476  0317                     	;# 
  8477  0318                     	;# 
  8478  0318                     	;# 
  8479  0319                     	;# 
  8480  031A                     	;# 
  8481  031B                     	;# 
  8482  031C                     	;# 
  8483  031C                     	;# 
  8484  031D                     	;# 
  8485  031E                     	;# 
  8486  031F                     	;# 
  8487  038C                     	;# 
  8488  038D                     	;# 
  8489  038E                     	;# 
  8490  0390                     	;# 
  8491  0391                     	;# 
  8492  0392                     	;# 
  8493  040C                     	;# 
  8494  040D                     	;# 
  8495  040E                     	;# 
  8496  040F                     	;# 
  8497  0410                     	;# 
  8498  0411                     	;# 
  8499  0416                     	;# 
  8500  0416                     	;# 
  8501  0417                     	;# 
  8502  0418                     	;# 
  8503  0418                     	;# 
  8504  0419                     	;# 
  8505  041A                     	;# 
  8506  041A                     	;# 
  8507  041B                     	;# 
  8508  041C                     	;# 
  8509  041C                     	;# 
  8510  041D                     	;# 
  8511  041E                     	;# 
  8512  041F                     	;# 
  8513  048C                     	;# 
  8514  048C                     	;# 
  8515  048D                     	;# 
  8516  048E                     	;# 
  8517  048F                     	;# 
  8518  048F                     	;# 
  8519  0490                     	;# 
  8520  0491                     	;# 
  8521  0492                     	;# 
  8522  0492                     	;# 
  8523  0493                     	;# 
  8524  0494                     	;# 
  8525  0495                     	;# 
  8526  0495                     	;# 
  8527  0496                     	;# 
  8528  0497                     	;# 
  8529  0498                     	;# 
  8530  0499                     	;# 
  8531  049A                     	;# 
  8532  049B                     	;# 
  8533  049C                     	;# 
  8534  049D                     	;# 
  8535  050C                     	;# 
  8536  050C                     	;# 
  8537  050D                     	;# 
  8538  050E                     	;# 
  8539  050F                     	;# 
  8540  050F                     	;# 
  8541  0510                     	;# 
  8542  0511                     	;# 
  8543  0512                     	;# 
  8544  0512                     	;# 
  8545  0513                     	;# 
  8546  0514                     	;# 
  8547  0515                     	;# 
  8548  0515                     	;# 
  8549  0516                     	;# 
  8550  0517                     	;# 
  8551  0518                     	;# 
  8552  0519                     	;# 
  8553  051A                     	;# 
  8554  051B                     	;# 
  8555  051C                     	;# 
  8556  051D                     	;# 
  8557  058C                     	;# 
  8558  058C                     	;# 
  8559  058D                     	;# 
  8560  058E                     	;# 
  8561  058F                     	;# 
  8562  058F                     	;# 
  8563  0590                     	;# 
  8564  0591                     	;# 
  8565  0592                     	;# 
  8566  0593                     	;# 
  8567  060C                     	;# 
  8568  060D                     	;# 
  8569  060E                     	;# 
  8570  060F                     	;# 
  8571  0610                     	;# 
  8572  0611                     	;# 
  8573  0612                     	;# 
  8574  0613                     	;# 
  8575  0614                     	;# 
  8576  0616                     	;# 
  8577  0617                     	;# 
  8578  0618                     	;# 
  8579  0619                     	;# 
  8580  061A                     	;# 
  8581  061B                     	;# 
  8582  061C                     	;# 
  8583  061D                     	;# 
  8584  061E                     	;# 
  8585  068C                     	;# 
  8586  068D                     	;# 
  8587  068E                     	;# 
  8588  068F                     	;# 
  8589  0690                     	;# 
  8590  0691                     	;# 
  8591  0692                     	;# 
  8592  0693                     	;# 
  8593  0694                     	;# 
  8594  070C                     	;# 
  8595  070D                     	;# 
  8596  070E                     	;# 
  8597  070F                     	;# 
  8598  0710                     	;# 
  8599  0711                     	;# 
  8600  0712                     	;# 
  8601  0713                     	;# 
  8602  0714                     	;# 
  8603  0716                     	;# 
  8604  0717                     	;# 
  8605  0718                     	;# 
  8606  0719                     	;# 
  8607  071A                     	;# 
  8608  071B                     	;# 
  8609  071C                     	;# 
  8610  071D                     	;# 
  8611  071E                     	;# 
  8612  0796                     	;# 
  8613  0797                     	;# 
  8614  0798                     	;# 
  8615  0799                     	;# 
  8616  079A                     	;# 
  8617  079B                     	;# 
  8618  080C                     	;# 
  8619  080D                     	;# 
  8620  080E                     	;# 
  8621  080F                     	;# 
  8622  0810                     	;# 
  8623  0811                     	;# 
  8624  0812                     	;# 
  8625  0813                     	;# 
  8626  0814                     	;# 
  8627  081A                     	;# 
  8628  081B                     	;# 
  8629  081C                     	;# 
  8630  081D                     	;# 
  8631  081E                     	;# 
  8632  081F                     	;# 
  8633  088C                     	;# 
  8634  088D                     	;# 
  8635  088E                     	;# 
  8636  088F                     	;# 
  8637  0890                     	;# 
  8638  0891                     	;# 
  8639  0892                     	;# 
  8640  0893                     	;# 
  8641  0895                     	;# 
  8642  0896                     	;# 
  8643  0897                     	;# 
  8644  0898                     	;# 
  8645  0899                     	;# 
  8646  089A                     	;# 
  8647  089B                     	;# 
  8648  090C                     	;# 
  8649  090E                     	;# 
  8650  090F                     	;# 
  8651  091F                     	;# 
  8652  098F                     	;# 
  8653  098F                     	;# 
  8654  0990                     	;# 
  8655  0991                     	;# 
  8656  0992                     	;# 
  8657  0993                     	;# 
  8658  0994                     	;# 
  8659  0995                     	;# 
  8660  0996                     	;# 
  8661  0997                     	;# 
  8662  1E0F                     	;# 
  8663  1E10                     	;# 
  8664  1E11                     	;# 
  8665  1E12                     	;# 
  8666  1E13                     	;# 
  8667  1E14                     	;# 
  8668  1E15                     	;# 
  8669  1E16                     	;# 
  8670  1E17                     	;# 
  8671  1E18                     	;# 
  8672  1E19                     	;# 
  8673  1E1A                     	;# 
  8674  1E1B                     	;# 
  8675  1E1C                     	;# 
  8676  1E1D                     	;# 
  8677  1E1E                     	;# 
  8678  1E1F                     	;# 
  8679  1E20                     	;# 
  8680  1E21                     	;# 
  8681  1E22                     	;# 
  8682  1E23                     	;# 
  8683  1E24                     	;# 
  8684  1E25                     	;# 
  8685  1E26                     	;# 
  8686  1E27                     	;# 
  8687  1E28                     	;# 
  8688  1E29                     	;# 
  8689  1E2A                     	;# 
  8690  1E2B                     	;# 
  8691  1E2C                     	;# 
  8692  1E2D                     	;# 
  8693  1E2E                     	;# 
  8694  1E2F                     	;# 
  8695  1E30                     	;# 
  8696  1E31                     	;# 
  8697  1E32                     	;# 
  8698  1E33                     	;# 
  8699  1E34                     	;# 
  8700  1E35                     	;# 
  8701  1E36                     	;# 
  8702  1E37                     	;# 
  8703  1E8F                     	;# 
  8704  1E90                     	;# 
  8705  1E91                     	;# 
  8706  1E92                     	;# 
  8707  1E93                     	;# 
  8708  1E94                     	;# 
  8709  1E95                     	;# 
  8710  1E96                     	;# 
  8711  1E97                     	;# 
  8712  1E9C                     	;# 
  8713  1E9D                     	;# 
  8714  1E9E                     	;# 
  8715  1EA1                     	;# 
  8716  1EA2                     	;# 
  8717  1EA3                     	;# 
  8718  1EA4                     	;# 
  8719  1EA5                     	;# 
  8720  1EA9                     	;# 
  8721  1EAA                     	;# 
  8722  1EAB                     	;# 
  8723  1EAC                     	;# 
  8724  1EB1                     	;# 
  8725  1EB2                     	;# 
  8726  1EB3                     	;# 
  8727  1EB8                     	;# 
  8728  1EB9                     	;# 
  8729  1EBA                     	;# 
  8730  1EBB                     	;# 
  8731  1EBC                     	;# 
  8732  1EBD                     	;# 
  8733  1EBE                     	;# 
  8734  1EC3                     	;# 
  8735  1EC5                     	;# 
  8736  1EC6                     	;# 
  8737  1EC7                     	;# 
  8738  1EC8                     	;# 
  8739  1EC9                     	;# 
  8740  1ECA                     	;# 
  8741  1ECB                     	;# 
  8742  1ECC                     	;# 
  8743  1F10                     	;# 
  8744  1F11                     	;# 
  8745  1F12                     	;# 
  8746  1F13                     	;# 
  8747  1F14                     	;# 
  8748  1F15                     	;# 
  8749  1F16                     	;# 
  8750  1F17                     	;# 
  8751  1F18                     	;# 
  8752  1F19                     	;# 
  8753  1F1A                     	;# 
  8754  1F1B                     	;# 
  8755  1F1C                     	;# 
  8756  1F1D                     	;# 
  8757  1F1E                     	;# 
  8758  1F1F                     	;# 
  8759  1F20                     	;# 
  8760  1F21                     	;# 
  8761  1F22                     	;# 
  8762  1F23                     	;# 
  8763  1F24                     	;# 
  8764  1F25                     	;# 
  8765  1F26                     	;# 
  8766  1F27                     	;# 
  8767  1F28                     	;# 
  8768  1F29                     	;# 
  8769  1F2A                     	;# 
  8770  1F2B                     	;# 
  8771  1F2C                     	;# 
  8772  1F2D                     	;# 
  8773  1F2E                     	;# 
  8774  1F2F                     	;# 
  8775  1F30                     	;# 
  8776  1F31                     	;# 
  8777  1F32                     	;# 
  8778  1F38                     	;# 
  8779  1F39                     	;# 
  8780  1F3A                     	;# 
  8781  1F3B                     	;# 
  8782  1F3C                     	;# 
  8783  1F3D                     	;# 
  8784  1F3E                     	;# 
  8785  1F3F                     	;# 
  8786  1F40                     	;# 
  8787  1F41                     	;# 
  8788  1F43                     	;# 
  8789  1F44                     	;# 
  8790  1F45                     	;# 
  8791  1F46                     	;# 
  8792  1F47                     	;# 
  8793  1F48                     	;# 
  8794  1F49                     	;# 
  8795  1F4A                     	;# 
  8796  1F4B                     	;# 
  8797  1F4C                     	;# 
  8798  1F4E                     	;# 
  8799  1F4F                     	;# 
  8800  1F50                     	;# 
  8801  1F51                     	;# 
  8802  1F52                     	;# 
  8803  1F53                     	;# 
  8804  1F54                     	;# 
  8805  1F55                     	;# 
  8806  1F56                     	;# 
  8807  1F57                     	;# 
  8808  1F59                     	;# 
  8809  1F5A                     	;# 
  8810  1F5B                     	;# 
  8811  1F5C                     	;# 
  8812  1F5D                     	;# 
  8813  1F61                     	;# 
  8814  1F62                     	;# 
  8815  1F64                     	;# 
  8816  1F65                     	;# 
  8817  1F66                     	;# 
  8818  1F67                     	;# 
  8819  1F68                     	;# 
  8820  1F69                     	;# 
  8821  1F6A                     	;# 
  8822  1F6B                     	;# 
  8823  1F6C                     	;# 
  8824  1F6D                     	;# 
  8825  1FE4                     	;# 
  8826  1FE5                     	;# 
  8827  1FE6                     	;# 
  8828  1FE7                     	;# 
  8829  1FE8                     	;# 
  8830  1FE9                     	;# 
  8831  1FEA                     	;# 
  8832  1FEB                     	;# 
  8833  1FED                     	;# 
  8834  1FEE                     	;# 
  8835  1FEF                     	;# 
  8836  0000                     	;# 
  8837  0001                     	;# 
  8838  0002                     	;# 
  8839  0003                     	;# 
  8840  0004                     	;# 
  8841  0005                     	;# 
  8842  0006                     	;# 
  8843  0007                     	;# 
  8844  0008                     	;# 
  8845  0009                     	;# 
  8846  000A                     	;# 
  8847  000B                     	;# 
  8848  000C                     	;# 
  8849  000D                     	;# 
  8850  000E                     	;# 
  8851  000F                     	;# 
  8852  0010                     	;# 
  8853  0011                     	;# 
  8854  0012                     	;# 
  8855  0013                     	;# 
  8856  0014                     	;# 
  8857  0015                     	;# 
  8858  0016                     	;# 
  8859  0017                     	;# 
  8860  0018                     	;# 
  8861  0019                     	;# 
  8862  001A                     	;# 
  8863  001C                     	;# 
  8864  001C                     	;# 
  8865  001D                     	;# 
  8866  001D                     	;# 
  8867  001E                     	;# 
  8868  001F                     	;# 
  8869  008C                     	;# 
  8870  008C                     	;# 
  8871  008D                     	;# 
  8872  008E                     	;# 
  8873  008E                     	;# 
  8874  008F                     	;# 
  8875  0090                     	;# 
  8876  0090                     	;# 
  8877  0091                     	;# 
  8878  0093                     	;# 
  8879  0094                     	;# 
  8880  0095                     	;# 
  8881  0096                     	;# 
  8882  0097                     	;# 
  8883  0098                     	;# 
  8884  0099                     	;# 
  8885  009A                     	;# 
  8886  009B                     	;# 
  8887  009C                     	;# 
  8888  009D                     	;# 
  8889  009E                     	;# 
  8890  010C                     	;# 
  8891  010D                     	;# 
  8892  010E                     	;# 
  8893  010E                     	;# 
  8894  010F                     	;# 
  8895  0110                     	;# 
  8896  0110                     	;# 
  8897  0111                     	;# 
  8898  0112                     	;# 
  8899  0112                     	;# 
  8900  0113                     	;# 
  8901  0114                     	;# 
  8902  0114                     	;# 
  8903  0115                     	;# 
  8904  0116                     	;# 
  8905  0116                     	;# 
  8906  0117                     	;# 
  8907  0119                     	;# 
  8908  0119                     	;# 
  8909  0119                     	;# 
  8910  011A                     	;# 
  8911  011A                     	;# 
  8912  011A                     	;# 
  8913  011B                     	;# 
  8914  011B                     	;# 
  8915  011B                     	;# 
  8916  011B                     	;# 
  8917  011B                     	;# 
  8918  011C                     	;# 
  8919  011C                     	;# 
  8920  011C                     	;# 
  8921  011D                     	;# 
  8922  011D                     	;# 
  8923  011D                     	;# 
  8924  011E                     	;# 
  8925  011E                     	;# 
  8926  011E                     	;# 
  8927  011F                     	;# 
  8928  011F                     	;# 
  8929  011F                     	;# 
  8930  011F                     	;# 
  8931  011F                     	;# 
  8932  018C                     	;# 
  8933  018D                     	;# 
  8934  018E                     	;# 
  8935  018F                     	;# 
  8936  0190                     	;# 
  8937  0191                     	;# 
  8938  0192                     	;# 
  8939  0196                     	;# 
  8940  0197                     	;# 
  8941  0198                     	;# 
  8942  0199                     	;# 
  8943  019A                     	;# 
  8944  019B                     	;# 
  8945  019C                     	;# 
  8946  020C                     	;# 
  8947  020C                     	;# 
  8948  020D                     	;# 
  8949  020E                     	;# 
  8950  020F                     	;# 
  8951  020F                     	;# 
  8952  0210                     	;# 
  8953  0210                     	;# 
  8954  0211                     	;# 
  8955  0211                     	;# 
  8956  0212                     	;# 
  8957  0212                     	;# 
  8958  0213                     	;# 
  8959  0214                     	;# 
  8960  0215                     	;# 
  8961  0215                     	;# 
  8962  0216                     	;# 
  8963  0216                     	;# 
  8964  0217                     	;# 
  8965  0217                     	;# 
  8966  0218                     	;# 
  8967  0218                     	;# 
  8968  0219                     	;# 
  8969  021A                     	;# 
  8970  021B                     	;# 
  8971  021B                     	;# 
  8972  021C                     	;# 
  8973  021C                     	;# 
  8974  021D                     	;# 
  8975  021D                     	;# 
  8976  021E                     	;# 
  8977  021F                     	;# 
  8978  028C                     	;# 
  8979  028C                     	;# 
  8980  028D                     	;# 
  8981  028D                     	;# 
  8982  028E                     	;# 
  8983  028F                     	;# 
  8984  0290                     	;# 
  8985  0290                     	;# 
  8986  0291                     	;# 
  8987  0292                     	;# 
  8988  0292                     	;# 
  8989  0293                     	;# 
  8990  0293                     	;# 
  8991  0294                     	;# 
  8992  0295                     	;# 
  8993  0296                     	;# 
  8994  0296                     	;# 
  8995  0297                     	;# 
  8996  0298                     	;# 
  8997  0298                     	;# 
  8998  0299                     	;# 
  8999  0299                     	;# 
  9000  029A                     	;# 
  9001  029B                     	;# 
  9002  029C                     	;# 
  9003  029C                     	;# 
  9004  029D                     	;# 
  9005  030C                     	;# 
  9006  030C                     	;# 
  9007  030D                     	;# 
  9008  030E                     	;# 
  9009  030F                     	;# 
  9010  0310                     	;# 
  9011  0310                     	;# 
  9012  0311                     	;# 
  9013  0312                     	;# 
  9014  0313                     	;# 
  9015  0314                     	;# 
  9016  0314                     	;# 
  9017  0315                     	;# 
  9018  0316                     	;# 
  9019  0317                     	;# 
  9020  0318                     	;# 
  9021  0318                     	;# 
  9022  0319                     	;# 
  9023  031A                     	;# 
  9024  031B                     	;# 
  9025  031C                     	;# 
  9026  031C                     	;# 
  9027  031D                     	;# 
  9028  031E                     	;# 
  9029  031F                     	;# 
  9030  038C                     	;# 
  9031  038D                     	;# 
  9032  038E                     	;# 
  9033  0390                     	;# 
  9034  0391                     	;# 
  9035  0392                     	;# 
  9036  040C                     	;# 
  9037  040D                     	;# 
  9038  040E                     	;# 
  9039  040F                     	;# 
  9040  0410                     	;# 
  9041  0411                     	;# 
  9042  0416                     	;# 
  9043  0416                     	;# 
  9044  0417                     	;# 
  9045  0418                     	;# 
  9046  0418                     	;# 
  9047  0419                     	;# 
  9048  041A                     	;# 
  9049  041A                     	;# 
  9050  041B                     	;# 
  9051  041C                     	;# 
  9052  041C                     	;# 
  9053  041D                     	;# 
  9054  041E                     	;# 
  9055  041F                     	;# 
  9056  048C                     	;# 
  9057  048C                     	;# 
  9058  048D                     	;# 
  9059  048E                     	;# 
  9060  048F                     	;# 
  9061  048F                     	;# 
  9062  0490                     	;# 
  9063  0491                     	;# 
  9064  0492                     	;# 
  9065  0492                     	;# 
  9066  0493                     	;# 
  9067  0494                     	;# 
  9068  0495                     	;# 
  9069  0495                     	;# 
  9070  0496                     	;# 
  9071  0497                     	;# 
  9072  0498                     	;# 
  9073  0499                     	;# 
  9074  049A                     	;# 
  9075  049B                     	;# 
  9076  049C                     	;# 
  9077  049D                     	;# 
  9078  050C                     	;# 
  9079  050C                     	;# 
  9080  050D                     	;# 
  9081  050E                     	;# 
  9082  050F                     	;# 
  9083  050F                     	;# 
  9084  0510                     	;# 
  9085  0511                     	;# 
  9086  0512                     	;# 
  9087  0512                     	;# 
  9088  0513                     	;# 
  9089  0514                     	;# 
  9090  0515                     	;# 
  9091  0515                     	;# 
  9092  0516                     	;# 
  9093  0517                     	;# 
  9094  0518                     	;# 
  9095  0519                     	;# 
  9096  051A                     	;# 
  9097  051B                     	;# 
  9098  051C                     	;# 
  9099  051D                     	;# 
  9100  058C                     	;# 
  9101  058C                     	;# 
  9102  058D                     	;# 
  9103  058E                     	;# 
  9104  058F                     	;# 
  9105  058F                     	;# 
  9106  0590                     	;# 
  9107  0591                     	;# 
  9108  0592                     	;# 
  9109  0593                     	;# 
  9110  060C                     	;# 
  9111  060D                     	;# 
  9112  060E                     	;# 
  9113  060F                     	;# 
  9114  0610                     	;# 
  9115  0611                     	;# 
  9116  0612                     	;# 
  9117  0613                     	;# 
  9118  0614                     	;# 
  9119  0616                     	;# 
  9120  0617                     	;# 
  9121  0618                     	;# 
  9122  0619                     	;# 
  9123  061A                     	;# 
  9124  061B                     	;# 
  9125  061C                     	;# 
  9126  061D                     	;# 
  9127  061E                     	;# 
  9128  068C                     	;# 
  9129  068D                     	;# 
  9130  068E                     	;# 
  9131  068F                     	;# 
  9132  0690                     	;# 
  9133  0691                     	;# 
  9134  0692                     	;# 
  9135  0693                     	;# 
  9136  0694                     	;# 
  9137  070C                     	;# 
  9138  070D                     	;# 
  9139  070E                     	;# 
  9140  070F                     	;# 
  9141  0710                     	;# 
  9142  0711                     	;# 
  9143  0712                     	;# 
  9144  0713                     	;# 
  9145  0714                     	;# 
  9146  0716                     	;# 
  9147  0717                     	;# 
  9148  0718                     	;# 
  9149  0719                     	;# 
  9150  071A                     	;# 
  9151  071B                     	;# 
  9152  071C                     	;# 
  9153  071D                     	;# 
  9154  071E                     	;# 
  9155  0796                     	;# 
  9156  0797                     	;# 
  9157  0798                     	;# 
  9158  0799                     	;# 
  9159  079A                     	;# 
  9160  079B                     	;# 
  9161  080C                     	;# 
  9162  080D                     	;# 
  9163  080E                     	;# 
  9164  080F                     	;# 
  9165  0810                     	;# 
  9166  0811                     	;# 
  9167  0812                     	;# 
  9168  0813                     	;# 
  9169  0814                     	;# 
  9170  081A                     	;# 
  9171  081B                     	;# 
  9172  081C                     	;# 
  9173  081D                     	;# 
  9174  081E                     	;# 
  9175  081F                     	;# 
  9176  088C                     	;# 
  9177  088D                     	;# 
  9178  088E                     	;# 
  9179  088F                     	;# 
  9180  0890                     	;# 
  9181  0891                     	;# 
  9182  0892                     	;# 
  9183  0893                     	;# 
  9184  0895                     	;# 
  9185  0896                     	;# 
  9186  0897                     	;# 
  9187  0898                     	;# 
  9188  0899                     	;# 
  9189  089A                     	;# 
  9190  089B                     	;# 
  9191  090C                     	;# 
  9192  090E                     	;# 
  9193  090F                     	;# 
  9194  091F                     	;# 
  9195  098F                     	;# 
  9196  098F                     	;# 
  9197  0990                     	;# 
  9198  0991                     	;# 
  9199  0992                     	;# 
  9200  0993                     	;# 
  9201  0994                     	;# 
  9202  0995                     	;# 
  9203  0996                     	;# 
  9204  0997                     	;# 
  9205  1E0F                     	;# 
  9206  1E10                     	;# 
  9207  1E11                     	;# 
  9208  1E12                     	;# 
  9209  1E13                     	;# 
  9210  1E14                     	;# 
  9211  1E15                     	;# 
  9212  1E16                     	;# 
  9213  1E17                     	;# 
  9214  1E18                     	;# 
  9215  1E19                     	;# 
  9216  1E1A                     	;# 
  9217  1E1B                     	;# 
  9218  1E1C                     	;# 
  9219  1E1D                     	;# 
  9220  1E1E                     	;# 
  9221  1E1F                     	;# 
  9222  1E20                     	;# 
  9223  1E21                     	;# 
  9224  1E22                     	;# 
  9225  1E23                     	;# 
  9226  1E24                     	;# 
  9227  1E25                     	;# 
  9228  1E26                     	;# 
  9229  1E27                     	;# 
  9230  1E28                     	;# 
  9231  1E29                     	;# 
  9232  1E2A                     	;# 
  9233  1E2B                     	;# 
  9234  1E2C                     	;# 
  9235  1E2D                     	;# 
  9236  1E2E                     	;# 
  9237  1E2F                     	;# 
  9238  1E30                     	;# 
  9239  1E31                     	;# 
  9240  1E32                     	;# 
  9241  1E33                     	;# 
  9242  1E34                     	;# 
  9243  1E35                     	;# 
  9244  1E36                     	;# 
  9245  1E37                     	;# 
  9246  1E8F                     	;# 
  9247  1E90                     	;# 
  9248  1E91                     	;# 
  9249  1E92                     	;# 
  9250  1E93                     	;# 
  9251  1E94                     	;# 
  9252  1E95                     	;# 
  9253  1E96                     	;# 
  9254  1E97                     	;# 
  9255  1E9C                     	;# 
  9256  1E9D                     	;# 
  9257  1E9E                     	;# 
  9258  1EA1                     	;# 
  9259  1EA2                     	;# 
  9260  1EA3                     	;# 
  9261  1EA4                     	;# 
  9262  1EA5                     	;# 
  9263  1EA9                     	;# 
  9264  1EAA                     	;# 
  9265  1EAB                     	;# 
  9266  1EAC                     	;# 
  9267  1EB1                     	;# 
  9268  1EB2                     	;# 
  9269  1EB3                     	;# 
  9270  1EB8                     	;# 
  9271  1EB9                     	;# 
  9272  1EBA                     	;# 
  9273  1EBB                     	;# 
  9274  1EBC                     	;# 
  9275  1EBD                     	;# 
  9276  1EBE                     	;# 
  9277  1EC3                     	;# 
  9278  1EC5                     	;# 
  9279  1EC6                     	;# 
  9280  1EC7                     	;# 
  9281  1EC8                     	;# 
  9282  1EC9                     	;# 
  9283  1ECA                     	;# 
  9284  1ECB                     	;# 
  9285  1ECC                     	;# 
  9286  1F10                     	;# 
  9287  1F11                     	;# 
  9288  1F12                     	;# 
  9289  1F13                     	;# 
  9290  1F14                     	;# 
  9291  1F15                     	;# 
  9292  1F16                     	;# 
  9293  1F17                     	;# 
  9294  1F18                     	;# 
  9295  1F19                     	;# 
  9296  1F1A                     	;# 
  9297  1F1B                     	;# 
  9298  1F1C                     	;# 
  9299  1F1D                     	;# 
  9300  1F1E                     	;# 
  9301  1F1F                     	;# 
  9302  1F20                     	;# 
  9303  1F21                     	;# 
  9304  1F22                     	;# 
  9305  1F23                     	;# 
  9306  1F24                     	;# 
  9307  1F25                     	;# 
  9308  1F26                     	;# 
  9309  1F27                     	;# 
  9310  1F28                     	;# 
  9311  1F29                     	;# 
  9312  1F2A                     	;# 
  9313  1F2B                     	;# 
  9314  1F2C                     	;# 
  9315  1F2D                     	;# 
  9316  1F2E                     	;# 
  9317  1F2F                     	;# 
  9318  1F30                     	;# 
  9319  1F31                     	;# 
  9320  1F32                     	;# 
  9321  1F38                     	;# 
  9322  1F39                     	;# 
  9323  1F3A                     	;# 
  9324  1F3B                     	;# 
  9325  1F3C                     	;# 
  9326  1F3D                     	;# 
  9327  1F3E                     	;# 
  9328  1F3F                     	;# 
  9329  1F40                     	;# 
  9330  1F41                     	;# 
  9331  1F43                     	;# 
  9332  1F44                     	;# 
  9333  1F45                     	;# 
  9334  1F46                     	;# 
  9335  1F47                     	;# 
  9336  1F48                     	;# 
  9337  1F49                     	;# 
  9338  1F4A                     	;# 
  9339  1F4B                     	;# 
  9340  1F4C                     	;# 
  9341  1F4E                     	;# 
  9342  1F4F                     	;# 
  9343  1F50                     	;# 
  9344  1F51                     	;# 
  9345  1F52                     	;# 
  9346  1F53                     	;# 
  9347  1F54                     	;# 
  9348  1F55                     	;# 
  9349  1F56                     	;# 
  9350  1F57                     	;# 
  9351  1F59                     	;# 
  9352  1F5A                     	;# 
  9353  1F5B                     	;# 
  9354  1F5C                     	;# 
  9355  1F5D                     	;# 
  9356  1F61                     	;# 
  9357  1F62                     	;# 
  9358  1F64                     	;# 
  9359  1F65                     	;# 
  9360  1F66                     	;# 
  9361  1F67                     	;# 
  9362  1F68                     	;# 
  9363  1F69                     	;# 
  9364  1F6A                     	;# 
  9365  1F6B                     	;# 
  9366  1F6C                     	;# 
  9367  1F6D                     	;# 
  9368  1FE4                     	;# 
  9369  1FE5                     	;# 
  9370  1FE6                     	;# 
  9371  1FE7                     	;# 
  9372  1FE8                     	;# 
  9373  1FE9                     	;# 
  9374  1FEA                     	;# 
  9375  1FEB                     	;# 
  9376  1FED                     	;# 
  9377  1FEE                     	;# 
  9378  1FEF                     	;# 
  9379  0000                     	;# 
  9380  0001                     	;# 
  9381  0002                     	;# 
  9382  0003                     	;# 
  9383  0004                     	;# 
  9384  0005                     	;# 
  9385  0006                     	;# 
  9386  0007                     	;# 
  9387  0008                     	;# 
  9388  0009                     	;# 
  9389  000A                     	;# 
  9390  000B                     	;# 
  9391  000C                     	;# 
  9392  000D                     	;# 
  9393  000E                     	;# 
  9394  000F                     	;# 
  9395  0010                     	;# 
  9396  0011                     	;# 
  9397  0012                     	;# 
  9398  0013                     	;# 
  9399  0014                     	;# 
  9400  0015                     	;# 
  9401  0016                     	;# 
  9402  0017                     	;# 
  9403  0018                     	;# 
  9404  0019                     	;# 
  9405  001A                     	;# 
  9406  001C                     	;# 
  9407  001C                     	;# 
  9408  001D                     	;# 
  9409  001D                     	;# 
  9410  001E                     	;# 
  9411  001F                     	;# 
  9412  008C                     	;# 
  9413  008C                     	;# 
  9414  008D                     	;# 
  9415  008E                     	;# 
  9416  008E                     	;# 
  9417  008F                     	;# 
  9418  0090                     	;# 
  9419  0090                     	;# 
  9420  0091                     	;# 
  9421  0093                     	;# 
  9422  0094                     	;# 
  9423  0095                     	;# 
  9424  0096                     	;# 
  9425  0097                     	;# 
  9426  0098                     	;# 
  9427  0099                     	;# 
  9428  009A                     	;# 
  9429  009B                     	;# 
  9430  009C                     	;# 
  9431  009D                     	;# 
  9432  009E                     	;# 
  9433  010C                     	;# 
  9434  010D                     	;# 
  9435  010E                     	;# 
  9436  010E                     	;# 
  9437  010F                     	;# 
  9438  0110                     	;# 
  9439  0110                     	;# 
  9440  0111                     	;# 
  9441  0112                     	;# 
  9442  0112                     	;# 
  9443  0113                     	;# 
  9444  0114                     	;# 
  9445  0114                     	;# 
  9446  0115                     	;# 
  9447  0116                     	;# 
  9448  0116                     	;# 
  9449  0117                     	;# 
  9450  0119                     	;# 
  9451  0119                     	;# 
  9452  0119                     	;# 
  9453  011A                     	;# 
  9454  011A                     	;# 
  9455  011A                     	;# 
  9456  011B                     	;# 
  9457  011B                     	;# 
  9458  011B                     	;# 
  9459  011B                     	;# 
  9460  011B                     	;# 
  9461  011C                     	;# 
  9462  011C                     	;# 
  9463  011C                     	;# 
  9464  011D                     	;# 
  9465  011D                     	;# 
  9466  011D                     	;# 
  9467  011E                     	;# 
  9468  011E                     	;# 
  9469  011E                     	;# 
  9470  011F                     	;# 
  9471  011F                     	;# 
  9472  011F                     	;# 
  9473  011F                     	;# 
  9474  011F                     	;# 
  9475  018C                     	;# 
  9476  018D                     	;# 
  9477  018E                     	;# 
  9478  018F                     	;# 
  9479  0190                     	;# 
  9480  0191                     	;# 
  9481  0192                     	;# 
  9482  0196                     	;# 
  9483  0197                     	;# 
  9484  0198                     	;# 
  9485  0199                     	;# 
  9486  019A                     	;# 
  9487  019B                     	;# 
  9488  019C                     	;# 
  9489  020C                     	;# 
  9490  020C                     	;# 
  9491  020D                     	;# 
  9492  020E                     	;# 
  9493  020F                     	;# 
  9494  020F                     	;# 
  9495  0210                     	;# 
  9496  0210                     	;# 
  9497  0211                     	;# 
  9498  0211                     	;# 
  9499  0212                     	;# 
  9500  0212                     	;# 
  9501  0213                     	;# 
  9502  0214                     	;# 
  9503  0215                     	;# 
  9504  0215                     	;# 
  9505  0216                     	;# 
  9506  0216                     	;# 
  9507  0217                     	;# 
  9508  0217                     	;# 
  9509  0218                     	;# 
  9510  0218                     	;# 
  9511  0219                     	;# 
  9512  021A                     	;# 
  9513  021B                     	;# 
  9514  021B                     	;# 
  9515  021C                     	;# 
  9516  021C                     	;# 
  9517  021D                     	;# 
  9518  021D                     	;# 
  9519  021E                     	;# 
  9520  021F                     	;# 
  9521  028C                     	;# 
  9522  028C                     	;# 
  9523  028D                     	;# 
  9524  028D                     	;# 
  9525  028E                     	;# 
  9526  028F                     	;# 
  9527  0290                     	;# 
  9528  0290                     	;# 
  9529  0291                     	;# 
  9530  0292                     	;# 
  9531  0292                     	;# 
  9532  0293                     	;# 
  9533  0293                     	;# 
  9534  0294                     	;# 
  9535  0295                     	;# 
  9536  0296                     	;# 
  9537  0296                     	;# 
  9538  0297                     	;# 
  9539  0298                     	;# 
  9540  0298                     	;# 
  9541  0299                     	;# 
  9542  0299                     	;# 
  9543  029A                     	;# 
  9544  029B                     	;# 
  9545  029C                     	;# 
  9546  029C                     	;# 
  9547  029D                     	;# 
  9548  030C                     	;# 
  9549  030C                     	;# 
  9550  030D                     	;# 
  9551  030E                     	;# 
  9552  030F                     	;# 
  9553  0310                     	;# 
  9554  0310                     	;# 
  9555  0311                     	;# 
  9556  0312                     	;# 
  9557  0313                     	;# 
  9558  0314                     	;# 
  9559  0314                     	;# 
  9560  0315                     	;# 
  9561  0316                     	;# 
  9562  0317                     	;# 
  9563  0318                     	;# 
  9564  0318                     	;# 
  9565  0319                     	;# 
  9566  031A                     	;# 
  9567  031B                     	;# 
  9568  031C                     	;# 
  9569  031C                     	;# 
  9570  031D                     	;# 
  9571  031E                     	;# 
  9572  031F                     	;# 
  9573  038C                     	;# 
  9574  038D                     	;# 
  9575  038E                     	;# 
  9576  0390                     	;# 
  9577  0391                     	;# 
  9578  0392                     	;# 
  9579  040C                     	;# 
  9580  040D                     	;# 
  9581  040E                     	;# 
  9582  040F                     	;# 
  9583  0410                     	;# 
  9584  0411                     	;# 
  9585  0416                     	;# 
  9586  0416                     	;# 
  9587  0417                     	;# 
  9588  0418                     	;# 
  9589  0418                     	;# 
  9590  0419                     	;# 
  9591  041A                     	;# 
  9592  041A                     	;# 
  9593  041B                     	;# 
  9594  041C                     	;# 
  9595  041C                     	;# 
  9596  041D                     	;# 
  9597  041E                     	;# 
  9598  041F                     	;# 
  9599  048C                     	;# 
  9600  048C                     	;# 
  9601  048D                     	;# 
  9602  048E                     	;# 
  9603  048F                     	;# 
  9604  048F                     	;# 
  9605  0490                     	;# 
  9606  0491                     	;# 
  9607  0492                     	;# 
  9608  0492                     	;# 
  9609  0493                     	;# 
  9610  0494                     	;# 
  9611  0495                     	;# 
  9612  0495                     	;# 
  9613  0496                     	;# 
  9614  0497                     	;# 
  9615  0498                     	;# 
  9616  0499                     	;# 
  9617  049A                     	;# 
  9618  049B                     	;# 
  9619  049C                     	;# 
  9620  049D                     	;# 
  9621  050C                     	;# 
  9622  050C                     	;# 
  9623  050D                     	;# 
  9624  050E                     	;# 
  9625  050F                     	;# 
  9626  050F                     	;# 
  9627  0510                     	;# 
  9628  0511                     	;# 
  9629  0512                     	;# 
  9630  0512                     	;# 
  9631  0513                     	;# 
  9632  0514                     	;# 
  9633  0515                     	;# 
  9634  0515                     	;# 
  9635  0516                     	;# 
  9636  0517                     	;# 
  9637  0518                     	;# 
  9638  0519                     	;# 
  9639  051A                     	;# 
  9640  051B                     	;# 
  9641  051C                     	;# 
  9642  051D                     	;# 
  9643  058C                     	;# 
  9644  058C                     	;# 
  9645  058D                     	;# 
  9646  058E                     	;# 
  9647  058F                     	;# 
  9648  058F                     	;# 
  9649  0590                     	;# 
  9650  0591                     	;# 
  9651  0592                     	;# 
  9652  0593                     	;# 
  9653  060C                     	;# 
  9654  060D                     	;# 
  9655  060E                     	;# 
  9656  060F                     	;# 
  9657  0610                     	;# 
  9658  0611                     	;# 
  9659  0612                     	;# 
  9660  0613                     	;# 
  9661  0614                     	;# 
  9662  0616                     	;# 
  9663  0617                     	;# 
  9664  0618                     	;# 
  9665  0619                     	;# 
  9666  061A                     	;# 
  9667  061B                     	;# 
  9668  061C                     	;# 
  9669  061D                     	;# 
  9670  061E                     	;# 
  9671  068C                     	;# 
  9672  068D                     	;# 
  9673  068E                     	;# 
  9674  068F                     	;# 
  9675  0690                     	;# 
  9676  0691                     	;# 
  9677  0692                     	;# 
  9678  0693                     	;# 
  9679  0694                     	;# 
  9680  070C                     	;# 
  9681  070D                     	;# 
  9682  070E                     	;# 
  9683  070F                     	;# 
  9684  0710                     	;# 
  9685  0711                     	;# 
  9686  0712                     	;# 
  9687  0713                     	;# 
  9688  0714                     	;# 
  9689  0716                     	;# 
  9690  0717                     	;# 
  9691  0718                     	;# 
  9692  0719                     	;# 
  9693  071A                     	;# 
  9694  071B                     	;# 
  9695  071C                     	;# 
  9696  071D                     	;# 
  9697  071E                     	;# 
  9698  0796                     	;# 
  9699  0797                     	;# 
  9700  0798                     	;# 
  9701  0799                     	;# 
  9702  079A                     	;# 
  9703  079B                     	;# 
  9704  080C                     	;# 
  9705  080D                     	;# 
  9706  080E                     	;# 
  9707  080F                     	;# 
  9708  0810                     	;# 
  9709  0811                     	;# 
  9710  0812                     	;# 
  9711  0813                     	;# 
  9712  0814                     	;# 
  9713  081A                     	;# 
  9714  081B                     	;# 
  9715  081C                     	;# 
  9716  081D                     	;# 
  9717  081E                     	;# 
  9718  081F                     	;# 
  9719  088C                     	;# 
  9720  088D                     	;# 
  9721  088E                     	;# 
  9722  088F                     	;# 
  9723  0890                     	;# 
  9724  0891                     	;# 
  9725  0892                     	;# 
  9726  0893                     	;# 
  9727  0895                     	;# 
  9728  0896                     	;# 
  9729  0897                     	;# 
  9730  0898                     	;# 
  9731  0899                     	;# 
  9732  089A                     	;# 
  9733  089B                     	;# 
  9734  090C                     	;# 
  9735  090E                     	;# 
  9736  090F                     	;# 
  9737  091F                     	;# 
  9738  098F                     	;# 
  9739  098F                     	;# 
  9740  0990                     	;# 
  9741  0991                     	;# 
  9742  0992                     	;# 
  9743  0993                     	;# 
  9744  0994                     	;# 
  9745  0995                     	;# 
  9746  0996                     	;# 
  9747  0997                     	;# 
  9748  1E0F                     	;# 
  9749  1E10                     	;# 
  9750  1E11                     	;# 
  9751  1E12                     	;# 
  9752  1E13                     	;# 
  9753  1E14                     	;# 
  9754  1E15                     	;# 
  9755  1E16                     	;# 
  9756  1E17                     	;# 
  9757  1E18                     	;# 
  9758  1E19                     	;# 
  9759  1E1A                     	;# 
  9760  1E1B                     	;# 
  9761  1E1C                     	;# 
  9762  1E1D                     	;# 
  9763  1E1E                     	;# 
  9764  1E1F                     	;# 
  9765  1E20                     	;# 
  9766  1E21                     	;# 
  9767  1E22                     	;# 
  9768  1E23                     	;# 
  9769  1E24                     	;# 
  9770  1E25                     	;# 
  9771  1E26                     	;# 
  9772  1E27                     	;# 
  9773  1E28                     	;# 
  9774  1E29                     	;# 
  9775  1E2A                     	;# 
  9776  1E2B                     	;# 
  9777  1E2C                     	;# 
  9778  1E2D                     	;# 
  9779  1E2E                     	;# 
  9780  1E2F                     	;# 
  9781  1E30                     	;# 
  9782  1E31                     	;# 
  9783  1E32                     	;# 
  9784  1E33                     	;# 
  9785  1E34                     	;# 
  9786  1E35                     	;# 
  9787  1E36                     	;# 
  9788  1E37                     	;# 
  9789  1E8F                     	;# 
  9790  1E90                     	;# 
  9791  1E91                     	;# 
  9792  1E92                     	;# 
  9793  1E93                     	;# 
  9794  1E94                     	;# 
  9795  1E95                     	;# 
  9796  1E96                     	;# 
  9797  1E97                     	;# 
  9798  1E9C                     	;# 
  9799  1E9D                     	;# 
  9800  1E9E                     	;# 
  9801  1EA1                     	;# 
  9802  1EA2                     	;# 
  9803  1EA3                     	;# 
  9804  1EA4                     	;# 
  9805  1EA5                     	;# 
  9806  1EA9                     	;# 
  9807  1EAA                     	;# 
  9808  1EAB                     	;# 
  9809  1EAC                     	;# 
  9810  1EB1                     	;# 
  9811  1EB2                     	;# 
  9812  1EB3                     	;# 
  9813  1EB8                     	;# 
  9814  1EB9                     	;# 
  9815  1EBA                     	;# 
  9816  1EBB                     	;# 
  9817  1EBC                     	;# 
  9818  1EBD                     	;# 
  9819  1EBE                     	;# 
  9820  1EC3                     	;# 
  9821  1EC5                     	;# 
  9822  1EC6                     	;# 
  9823  1EC7                     	;# 
  9824  1EC8                     	;# 
  9825  1EC9                     	;# 
  9826  1ECA                     	;# 
  9827  1ECB                     	;# 
  9828  1ECC                     	;# 
  9829  1F10                     	;# 
  9830  1F11                     	;# 
  9831  1F12                     	;# 
  9832  1F13                     	;# 
  9833  1F14                     	;# 
  9834  1F15                     	;# 
  9835  1F16                     	;# 
  9836  1F17                     	;# 
  9837  1F18                     	;# 
  9838  1F19                     	;# 
  9839  1F1A                     	;# 
  9840  1F1B                     	;# 
  9841  1F1C                     	;# 
  9842  1F1D                     	;# 
  9843  1F1E                     	;# 
  9844  1F1F                     	;# 
  9845  1F20                     	;# 
  9846  1F21                     	;# 
  9847  1F22                     	;# 
  9848  1F23                     	;# 
  9849  1F24                     	;# 
  9850  1F25                     	;# 
  9851  1F26                     	;# 
  9852  1F27                     	;# 
  9853  1F28                     	;# 
  9854  1F29                     	;# 
  9855  1F2A                     	;# 
  9856  1F2B                     	;# 
  9857  1F2C                     	;# 
  9858  1F2D                     	;# 
  9859  1F2E                     	;# 
  9860  1F2F                     	;# 
  9861  1F30                     	;# 
  9862  1F31                     	;# 
  9863  1F32                     	;# 
  9864  1F38                     	;# 
  9865  1F39                     	;# 
  9866  1F3A                     	;# 
  9867  1F3B                     	;# 
  9868  1F3C                     	;# 
  9869  1F3D                     	;# 
  9870  1F3E                     	;# 
  9871  1F3F                     	;# 
  9872  1F40                     	;# 
  9873  1F41                     	;# 
  9874  1F43                     	;# 
  9875  1F44                     	;# 
  9876  1F45                     	;# 
  9877  1F46                     	;# 
  9878  1F47                     	;# 
  9879  1F48                     	;# 
  9880  1F49                     	;# 
  9881  1F4A                     	;# 
  9882  1F4B                     	;# 
  9883  1F4C                     	;# 
  9884  1F4E                     	;# 
  9885  1F4F                     	;# 
  9886  1F50                     	;# 
  9887  1F51                     	;# 
  9888  1F52                     	;# 
  9889  1F53                     	;# 
  9890  1F54                     	;# 
  9891  1F55                     	;# 
  9892  1F56                     	;# 
  9893  1F57                     	;# 
  9894  1F59                     	;# 
  9895  1F5A                     	;# 
  9896  1F5B                     	;# 
  9897  1F5C                     	;# 
  9898  1F5D                     	;# 
  9899  1F61                     	;# 
  9900  1F62                     	;# 
  9901  1F64                     	;# 
  9902  1F65                     	;# 
  9903  1F66                     	;# 
  9904  1F67                     	;# 
  9905  1F68                     	;# 
  9906  1F69                     	;# 
  9907  1F6A                     	;# 
  9908  1F6B                     	;# 
  9909  1F6C                     	;# 
  9910  1F6D                     	;# 
  9911  1FE4                     	;# 
  9912  1FE5                     	;# 
  9913  1FE6                     	;# 
  9914  1FE7                     	;# 
  9915  1FE8                     	;# 
  9916  1FE9                     	;# 
  9917  1FEA                     	;# 
  9918  1FEB                     	;# 
  9919  1FED                     	;# 
  9920  1FEE                     	;# 
  9921  1FEF                     	;# 
  9922  0000                     	;# 
  9923  0001                     	;# 
  9924  0002                     	;# 
  9925  0003                     	;# 
  9926  0004                     	;# 
  9927  0005                     	;# 
  9928  0006                     	;# 
  9929  0007                     	;# 
  9930  0008                     	;# 
  9931  0009                     	;# 
  9932  000A                     	;# 
  9933  000B                     	;# 
  9934  000C                     	;# 
  9935  000D                     	;# 
  9936  000E                     	;# 
  9937  000F                     	;# 
  9938  0010                     	;# 
  9939  0011                     	;# 
  9940  0012                     	;# 
  9941  0013                     	;# 
  9942  0014                     	;# 
  9943  0015                     	;# 
  9944  0016                     	;# 
  9945  0017                     	;# 
  9946  0018                     	;# 
  9947  0019                     	;# 
  9948  001A                     	;# 
  9949  001C                     	;# 
  9950  001C                     	;# 
  9951  001D                     	;# 
  9952  001D                     	;# 
  9953  001E                     	;# 
  9954  001F                     	;# 
  9955  008C                     	;# 
  9956  008C                     	;# 
  9957  008D                     	;# 
  9958  008E                     	;# 
  9959  008E                     	;# 
  9960  008F                     	;# 
  9961  0090                     	;# 
  9962  0090                     	;# 
  9963  0091                     	;# 
  9964  0093                     	;# 
  9965  0094                     	;# 
  9966  0095                     	;# 
  9967  0096                     	;# 
  9968  0097                     	;# 
  9969  0098                     	;# 
  9970  0099                     	;# 
  9971  009A                     	;# 
  9972  009B                     	;# 
  9973  009C                     	;# 
  9974  009D                     	;# 
  9975  009E                     	;# 
  9976  010C                     	;# 
  9977  010D                     	;# 
  9978  010E                     	;# 
  9979  010E                     	;# 
  9980  010F                     	;# 
  9981  0110                     	;# 
  9982  0110                     	;# 
  9983  0111                     	;# 
  9984  0112                     	;# 
  9985  0112                     	;# 
  9986  0113                     	;# 
  9987  0114                     	;# 
  9988  0114                     	;# 
  9989  0115                     	;# 
  9990  0116                     	;# 
  9991  0116                     	;# 
  9992  0117                     	;# 
  9993  0119                     	;# 
  9994  0119                     	;# 
  9995  0119                     	;# 
  9996  011A                     	;# 
  9997  011A                     	;# 
  9998  011A                     	;# 
  9999  011B                     	;# 
 10000  011B                     	;# 
 10001  011B                     	;# 
 10002  011B                     	;# 
 10003  011B                     	;# 
 10004  011C                     	;# 
 10005  011C                     	;# 
 10006  011C                     	;# 
 10007  011D                     	;# 
 10008  011D                     	;# 
 10009  011D                     	;# 
 10010  011E                     	;# 
 10011  011E                     	;# 
 10012  011E                     	;# 
 10013  011F                     	;# 
 10014  011F                     	;# 
 10015  011F                     	;# 
 10016  011F                     	;# 
 10017  011F                     	;# 
 10018  018C                     	;# 
 10019  018D                     	;# 
 10020  018E                     	;# 
 10021  018F                     	;# 
 10022  0190                     	;# 
 10023  0191                     	;# 
 10024  0192                     	;# 
 10025  0196                     	;# 
 10026  0197                     	;# 
 10027  0198                     	;# 
 10028  0199                     	;# 
 10029  019A                     	;# 
 10030  019B                     	;# 
 10031  019C                     	;# 
 10032  020C                     	;# 
 10033  020C                     	;# 
 10034  020D                     	;# 
 10035  020E                     	;# 
 10036  020F                     	;# 
 10037  020F                     	;# 
 10038  0210                     	;# 
 10039  0210                     	;# 
 10040  0211                     	;# 
 10041  0211                     	;# 
 10042  0212                     	;# 
 10043  0212                     	;# 
 10044  0213                     	;# 
 10045  0214                     	;# 
 10046  0215                     	;# 
 10047  0215                     	;# 
 10048  0216                     	;# 
 10049  0216                     	;# 
 10050  0217                     	;# 
 10051  0217                     	;# 
 10052  0218                     	;# 
 10053  0218                     	;# 
 10054  0219                     	;# 
 10055  021A                     	;# 
 10056  021B                     	;# 
 10057  021B                     	;# 
 10058  021C                     	;# 
 10059  021C                     	;# 
 10060  021D                     	;# 
 10061  021D                     	;# 
 10062  021E                     	;# 
 10063  021F                     	;# 
 10064  028C                     	;# 
 10065  028C                     	;# 
 10066  028D                     	;# 
 10067  028D                     	;# 
 10068  028E                     	;# 
 10069  028F                     	;# 
 10070  0290                     	;# 
 10071  0290                     	;# 
 10072  0291                     	;# 
 10073  0292                     	;# 
 10074  0292                     	;# 
 10075  0293                     	;# 
 10076  0293                     	;# 
 10077  0294                     	;# 
 10078  0295                     	;# 
 10079  0296                     	;# 
 10080  0296                     	;# 
 10081  0297                     	;# 
 10082  0298                     	;# 
 10083  0298                     	;# 
 10084  0299                     	;# 
 10085  0299                     	;# 
 10086  029A                     	;# 
 10087  029B                     	;# 
 10088  029C                     	;# 
 10089  029C                     	;# 
 10090  029D                     	;# 
 10091  030C                     	;# 
 10092  030C                     	;# 
 10093  030D                     	;# 
 10094  030E                     	;# 
 10095  030F                     	;# 
 10096  0310                     	;# 
 10097  0310                     	;# 
 10098  0311                     	;# 
 10099  0312                     	;# 
 10100  0313                     	;# 
 10101  0314                     	;# 
 10102  0314                     	;# 
 10103  0315                     	;# 
 10104  0316                     	;# 
 10105  0317                     	;# 
 10106  0318                     	;# 
 10107  0318                     	;# 
 10108  0319                     	;# 
 10109  031A                     	;# 
 10110  031B                     	;# 
 10111  031C                     	;# 
 10112  031C                     	;# 
 10113  031D                     	;# 
 10114  031E                     	;# 
 10115  031F                     	;# 
 10116  038C                     	;# 
 10117  038D                     	;# 
 10118  038E                     	;# 
 10119  0390                     	;# 
 10120  0391                     	;# 
 10121  0392                     	;# 
 10122  040C                     	;# 
 10123  040D                     	;# 
 10124  040E                     	;# 
 10125  040F                     	;# 
 10126  0410                     	;# 
 10127  0411                     	;# 
 10128  0416                     	;# 
 10129  0416                     	;# 
 10130  0417                     	;# 
 10131  0418                     	;# 
 10132  0418                     	;# 
 10133  0419                     	;# 
 10134  041A                     	;# 
 10135  041A                     	;# 
 10136  041B                     	;# 
 10137  041C                     	;# 
 10138  041C                     	;# 
 10139  041D                     	;# 
 10140  041E                     	;# 
 10141  041F                     	;# 
 10142  048C                     	;# 
 10143  048C                     	;# 
 10144  048D                     	;# 
 10145  048E                     	;# 
 10146  048F                     	;# 
 10147  048F                     	;# 
 10148  0490                     	;# 
 10149  0491                     	;# 
 10150  0492                     	;# 
 10151  0492                     	;# 
 10152  0493                     	;# 
 10153  0494                     	;# 
 10154  0495                     	;# 
 10155  0495                     	;# 
 10156  0496                     	;# 
 10157  0497                     	;# 
 10158  0498                     	;# 
 10159  0499                     	;# 
 10160  049A                     	;# 
 10161  049B                     	;# 
 10162  049C                     	;# 
 10163  049D                     	;# 
 10164  050C                     	;# 
 10165  050C                     	;# 
 10166  050D                     	;# 
 10167  050E                     	;# 
 10168  050F                     	;# 
 10169  050F                     	;# 
 10170  0510                     	;# 
 10171  0511                     	;# 
 10172  0512                     	;# 
 10173  0512                     	;# 
 10174  0513                     	;# 
 10175  0514                     	;# 
 10176  0515                     	;# 
 10177  0515                     	;# 
 10178  0516                     	;# 
 10179  0517                     	;# 
 10180  0518                     	;# 
 10181  0519                     	;# 
 10182  051A                     	;# 
 10183  051B                     	;# 
 10184  051C                     	;# 
 10185  051D                     	;# 
 10186  058C                     	;# 
 10187  058C                     	;# 
 10188  058D                     	;# 
 10189  058E                     	;# 
 10190  058F                     	;# 
 10191  058F                     	;# 
 10192  0590                     	;# 
 10193  0591                     	;# 
 10194  0592                     	;# 
 10195  0593                     	;# 
 10196  060C                     	;# 
 10197  060D                     	;# 
 10198  060E                     	;# 
 10199  060F                     	;# 
 10200  0610                     	;# 
 10201  0611                     	;# 
 10202  0612                     	;# 
 10203  0613                     	;# 
 10204  0614                     	;# 
 10205  0616                     	;# 
 10206  0617                     	;# 
 10207  0618                     	;# 
 10208  0619                     	;# 
 10209  061A                     	;# 
 10210  061B                     	;# 
 10211  061C                     	;# 
 10212  061D                     	;# 
 10213  061E                     	;# 
 10214  068C                     	;# 
 10215  068D                     	;# 
 10216  068E                     	;# 
 10217  068F                     	;# 
 10218  0690                     	;# 
 10219  0691                     	;# 
 10220  0692                     	;# 
 10221  0693                     	;# 
 10222  0694                     	;# 
 10223  070C                     	;# 
 10224  070D                     	;# 
 10225  070E                     	;# 
 10226  070F                     	;# 
 10227  0710                     	;# 
 10228  0711                     	;# 
 10229  0712                     	;# 
 10230  0713                     	;# 
 10231  0714                     	;# 
 10232  0716                     	;# 
 10233  0717                     	;# 
 10234  0718                     	;# 
 10235  0719                     	;# 
 10236  071A                     	;# 
 10237  071B                     	;# 
 10238  071C                     	;# 
 10239  071D                     	;# 
 10240  071E                     	;# 
 10241  0796                     	;# 
 10242  0797                     	;# 
 10243  0798                     	;# 
 10244  0799                     	;# 
 10245  079A                     	;# 
 10246  079B                     	;# 
 10247  080C                     	;# 
 10248  080D                     	;# 
 10249  080E                     	;# 
 10250  080F                     	;# 
 10251  0810                     	;# 
 10252  0811                     	;# 
 10253  0812                     	;# 
 10254  0813                     	;# 
 10255  0814                     	;# 
 10256  081A                     	;# 
 10257  081B                     	;# 
 10258  081C                     	;# 
 10259  081D                     	;# 
 10260  081E                     	;# 
 10261  081F                     	;# 
 10262  088C                     	;# 
 10263  088D                     	;# 
 10264  088E                     	;# 
 10265  088F                     	;# 
 10266  0890                     	;# 
 10267  0891                     	;# 
 10268  0892                     	;# 
 10269  0893                     	;# 
 10270  0895                     	;# 
 10271  0896                     	;# 
 10272  0897                     	;# 
 10273  0898                     	;# 
 10274  0899                     	;# 
 10275  089A                     	;# 
 10276  089B                     	;# 
 10277  090C                     	;# 
 10278  090E                     	;# 
 10279  090F                     	;# 
 10280  091F                     	;# 
 10281  098F                     	;# 
 10282  098F                     	;# 
 10283  0990                     	;# 
 10284  0991                     	;# 
 10285  0992                     	;# 
 10286  0993                     	;# 
 10287  0994                     	;# 
 10288  0995                     	;# 
 10289  0996                     	;# 
 10290  0997                     	;# 
 10291  1E0F                     	;# 
 10292  1E10                     	;# 
 10293  1E11                     	;# 
 10294  1E12                     	;# 
 10295  1E13                     	;# 
 10296  1E14                     	;# 
 10297  1E15                     	;# 
 10298  1E16                     	;# 
 10299  1E17                     	;# 
 10300  1E18                     	;# 
 10301  1E19                     	;# 
 10302  1E1A                     	;# 
 10303  1E1B                     	;# 
 10304  1E1C                     	;# 
 10305  1E1D                     	;# 
 10306  1E1E                     	;# 
 10307  1E1F                     	;# 
 10308  1E20                     	;# 
 10309  1E21                     	;# 
 10310  1E22                     	;# 
 10311  1E23                     	;# 
 10312  1E24                     	;# 
 10313  1E25                     	;# 
 10314  1E26                     	;# 
 10315  1E27                     	;# 
 10316  1E28                     	;# 
 10317  1E29                     	;# 
 10318  1E2A                     	;# 
 10319  1E2B                     	;# 
 10320  1E2C                     	;# 
 10321  1E2D                     	;# 
 10322  1E2E                     	;# 
 10323  1E2F                     	;# 
 10324  1E30                     	;# 
 10325  1E31                     	;# 
 10326  1E32                     	;# 
 10327  1E33                     	;# 
 10328  1E34                     	;# 
 10329  1E35                     	;# 
 10330  1E36                     	;# 
 10331  1E37                     	;# 
 10332  1E8F                     	;# 
 10333  1E90                     	;# 
 10334  1E91                     	;# 
 10335  1E92                     	;# 
 10336  1E93                     	;# 
 10337  1E94                     	;# 
 10338  1E95                     	;# 
 10339  1E96                     	;# 
 10340  1E97                     	;# 
 10341  1E9C                     	;# 
 10342  1E9D                     	;# 
 10343  1E9E                     	;# 
 10344  1EA1                     	;# 
 10345  1EA2                     	;# 
 10346  1EA3                     	;# 
 10347  1EA4                     	;# 
 10348  1EA5                     	;# 
 10349  1EA9                     	;# 
 10350  1EAA                     	;# 
 10351  1EAB                     	;# 
 10352  1EAC                     	;# 
 10353  1EB1                     	;# 
 10354  1EB2                     	;# 
 10355  1EB3                     	;# 
 10356  1EB8                     	;# 
 10357  1EB9                     	;# 
 10358  1EBA                     	;# 
 10359  1EBB                     	;# 
 10360  1EBC                     	;# 
 10361  1EBD                     	;# 
 10362  1EBE                     	;# 
 10363  1EC3                     	;# 
 10364  1EC5                     	;# 
 10365  1EC6                     	;# 
 10366  1EC7                     	;# 
 10367  1EC8                     	;# 
 10368  1EC9                     	;# 
 10369  1ECA                     	;# 
 10370  1ECB                     	;# 
 10371  1ECC                     	;# 
 10372  1F10                     	;# 
 10373  1F11                     	;# 
 10374  1F12                     	;# 
 10375  1F13                     	;# 
 10376  1F14                     	;# 
 10377  1F15                     	;# 
 10378  1F16                     	;# 
 10379  1F17                     	;# 
 10380  1F18                     	;# 
 10381  1F19                     	;# 
 10382  1F1A                     	;# 
 10383  1F1B                     	;# 
 10384  1F1C                     	;# 
 10385  1F1D                     	;# 
 10386  1F1E                     	;# 
 10387  1F1F                     	;# 
 10388  1F20                     	;# 
 10389  1F21                     	;# 
 10390  1F22                     	;# 
 10391  1F23                     	;# 
 10392  1F24                     	;# 
 10393  1F25                     	;# 
 10394  1F26                     	;# 
 10395  1F27                     	;# 
 10396  1F28                     	;# 
 10397  1F29                     	;# 
 10398  1F2A                     	;# 
 10399  1F2B                     	;# 
 10400  1F2C                     	;# 
 10401  1F2D                     	;# 
 10402  1F2E                     	;# 
 10403  1F2F                     	;# 
 10404  1F30                     	;# 
 10405  1F31                     	;# 
 10406  1F32                     	;# 
 10407  1F38                     	;# 
 10408  1F39                     	;# 
 10409  1F3A                     	;# 
 10410  1F3B                     	;# 
 10411  1F3C                     	;# 
 10412  1F3D                     	;# 
 10413  1F3E                     	;# 
 10414  1F3F                     	;# 
 10415  1F40                     	;# 
 10416  1F41                     	;# 
 10417  1F43                     	;# 
 10418  1F44                     	;# 
 10419  1F45                     	;# 
 10420  1F46                     	;# 
 10421  1F47                     	;# 
 10422  1F48                     	;# 
 10423  1F49                     	;# 
 10424  1F4A                     	;# 
 10425  1F4B                     	;# 
 10426  1F4C                     	;# 
 10427  1F4E                     	;# 
 10428  1F4F                     	;# 
 10429  1F50                     	;# 
 10430  1F51                     	;# 
 10431  1F52                     	;# 
 10432  1F53                     	;# 
 10433  1F54                     	;# 
 10434  1F55                     	;# 
 10435  1F56                     	;# 
 10436  1F57                     	;# 
 10437  1F59                     	;# 
 10438  1F5A                     	;# 
 10439  1F5B                     	;# 
 10440  1F5C                     	;# 
 10441  1F5D                     	;# 
 10442  1F61                     	;# 
 10443  1F62                     	;# 
 10444  1F64                     	;# 
 10445  1F65                     	;# 
 10446  1F66                     	;# 
 10447  1F67                     	;# 
 10448  1F68                     	;# 
 10449  1F69                     	;# 
 10450  1F6A                     	;# 
 10451  1F6B                     	;# 
 10452  1F6C                     	;# 
 10453  1F6D                     	;# 
 10454  1FE4                     	;# 
 10455  1FE5                     	;# 
 10456  1FE6                     	;# 
 10457  1FE7                     	;# 
 10458  1FE8                     	;# 
 10459  1FE9                     	;# 
 10460  1FEA                     	;# 
 10461  1FEB                     	;# 
 10462  1FED                     	;# 
 10463  1FEE                     	;# 
 10464  1FEF                     	;# 
 10465                           
 10466                           	psect	idataBANK3
 10467  22E1                     __pidataBANK3:	
 10468                           
 10469                           ;initializer for main@F15467
 10470  22E1  3445               	retlw	69
 10471  22E2  344E               	retlw	78
 10472  22E3  3447               	retlw	71
 10473  22E4  3449               	retlw	73
 10474  22E5  344E               	retlw	78
 10475  22E6  3445               	retlw	69
 10476  22E7  3445               	retlw	69
 10477  22E8  3452               	retlw	82
 10478  22E9  3453               	retlw	83
 10479  22EA  3420               	retlw	32
 10480  22EB  3450               	retlw	80
 10481  22EC  342E               	retlw	46
 10482  22ED  3420               	retlw	32
 10483  22EE  344C               	retlw	76
 10484  22EF  3454               	retlw	84
 10485  22F0  3444               	retlw	68
 10486  22F1  3400               	retlw	0
 10487                           
 10488                           ;initializer for number_5@F15364
 10489  22F2  3430               	retlw	48
 10490  22F3  3431               	retlw	49
 10491  22F4  3432               	retlw	50
 10492  22F5  3433               	retlw	51
 10493  22F6  3434               	retlw	52
 10494  22F7  3435               	retlw	53
 10495  22F8  3436               	retlw	54
 10496  22F9  3437               	retlw	55
 10497  22FA  3438               	retlw	56
 10498  22FB  3439               	retlw	57
 10499                           
 10500                           ;initializer for number_4@F15349
 10501  22FC  3430               	retlw	48
 10502  22FD  3431               	retlw	49
 10503  22FE  3432               	retlw	50
 10504  22FF  3433               	retlw	51
 10505  2300  3434               	retlw	52
 10506  2301  3435               	retlw	53
 10507  2302  3436               	retlw	54
 10508  2303  3437               	retlw	55
 10509  2304  3438               	retlw	56
 10510  2305  3439               	retlw	57
 10511                           
 10512                           ;initializer for main@F15465
 10513  2306  3441               	retlw	65
 10514  2307  344C               	retlw	76
 10515  2308  3454               	retlw	84
 10516  2309  344F               	retlw	79
 10517  230A  3453               	retlw	83
 10518  230B  3400               	retlw	0
 10519                           
 10520                           	psect	nvBANK2
 10521  0169                     __pnvBANK2:	
 10522  0169                     _timer5ReloadVal:	
 10523  0169                     	ds	2
 10524  016B                     _timer3ReloadVal:	
 10525  016B                     	ds	2
 10526  016D                     _timer0ReloadVal16bit:	
 10527  016D                     	ds	2
 10528  016F                     _eusartTxBufferRemaining:	
 10529  016F                     	ds	1
 10530                           
 10531                           	psect	nvBANK3
 10532  01EB                     __pnvBANK3:	
 10533  01EB                     _TMR0_InterruptHandler:	
 10534  01EB                     	ds	2
 10535  0003                     _STATUSbits	set	3
 10536  000F                     _PORTD	set	15
 10537  000E                     _PORTC	set	14
 10538  000D                     _PORTB	set	13
 10539  000B                     _INTCONbits	set	11
 10540  001E                     _T0CON0bits	set	30
 10541  001C                     _TMR0L	set	28
 10542  001D                     _TMR0H	set	29
 10543  001F                     _T0CON1	set	31
 10544  001E                     _T0CON0	set	30
 10545  0014                     _TRISD	set	20
 10546  0013                     _TRISC	set	19
 10547  0012                     _TRISB	set	18
 10548  0011                     _TRISA	set	17
 10549  0015                     _TRISE	set	21
 10550  0018                     _LATC	set	24
 10551  0017                     _LATB	set	23
 10552  0016                     _LATA	set	22
 10553  0019                     _LATD	set	25
 10554  001A                     _LATE	set	26
 10555  006B                     _RB3	set	107
 10556  006A                     _RB2	set	106
 10557  0080                     _RE0	set	128
 10558  0072                     _RC2	set	114
 10559  0071                     _RC1	set	113
 10560  0074                     _RC4	set	116
 10561  007C                     _RD4	set	124
 10562  0068                     _RB0	set	104
 10563  0070                     _RC0	set	112
 10564  0065                     _RA5	set	101
 10565  0081                     _RE1	set	129
 10566  007E                     _RD6	set	126
 10567  007F                     _RD7	set	127
 10568  007D                     _RD5	set	125
 10569  0082                     _RE2	set	130
 10570  005F                     _GIE	set	95
 10571  0094                     _ADCON1bits	set	148
 10572  008E                     _ADPREVL	set	142
 10573  008F                     _ADPREVH	set	143
 10574  0097                     _ADSTATbits	set	151
 10575  0090                     _ADACCL	set	144
 10576  0091                     _ADACCH	set	145
 10577  0095                     _ADCON2bits	set	149
 10578  0096                     _ADCON3bits	set	150
 10579  008C                     _ADRESL	set	140
 10580  008D                     _ADRESH	set	141
 10581  0093                     _ADCON0bits	set	147
 10582  0093                     _ADCON0	set	147
 10583  009E                     _ADPCH	set	158
 10584  009D                     _ADACQ	set	157
 10585  009C                     _ADPRE	set	156
 10586  009B                     _ADCAP	set	155
 10587  009A                     _ADREF	set	154
 10588  0098                     _ADCLK	set	152
 10589  0097                     _ADSTAT	set	151
 10590  0099                     _ADACT	set	153
 10591  0096                     _ADCON3	set	150
 10592  0095                     _ADCON2	set	149
 10593  0094                     _ADCON1	set	148
 10594  0116                     _ADERRL	set	278
 10595  0117                     _ADERRH	set	279
 10596  0114                     _ADFLTRL	set	276
 10597  0115                     _ADFLTRH	set	277
 10598  010C                     _ADCNT	set	268
 10599  0113                     _ADSTPTH	set	275
 10600  0112                     _ADSTPTL	set	274
 10601  0111                     _ADUTHH	set	273
 10602  0110                     _ADUTHL	set	272
 10603  010F                     _ADLTHH	set	271
 10604  010E                     _ADLTHL	set	270
 10605  010D                     _ADRPT	set	269
 10606  0119                     _RC1REG	set	281
 10607  011A                     _TX1REG	set	282
 10608  011D                     _RC1STAbits	set	285
 10609  011C                     _SP1BRGH	set	284
 10610  011B                     _SP1BRGL	set	283
 10611  011E                     _TX1STA	set	286
 10612  011D                     _RC1STA	set	285
 10613  011F                     _BAUD1CON	set	287
 10614  021B                     _T5GCONbits	set	539
 10615  021A                     _T5CONbits	set	538
 10616  0218                     _TMR5L	set	536
 10617  0219                     _TMR5H	set	537
 10618  021D                     _T5CLK	set	541
 10619  021C                     _T5GATE	set	540
 10620  021B                     _T5GCON	set	539
 10621  021A                     _T5CON	set	538
 10622  0215                     _T3GCONbits	set	533
 10623  0214                     _T3CONbits	set	532
 10624  0212                     _TMR3L	set	530
 10625  0213                     _TMR3H	set	531
 10626  0217                     _T3CLK	set	535
 10627  0216                     _T3GATE	set	534
 10628  0215                     _T3GCON	set	533
 10629  0214                     _T3CON	set	532
 10630  021E                     _CCPTMRS0bits	set	542
 10631  028D                     _PR2	set	653
 10632  028C                     _TMR2	set	652
 10633  028E                     _T2CONbits	set	654
 10634  0291                     _T2RSTbits	set	657
 10635  028F                     _T2HLTbits	set	655
 10636  028C                     _T2TMR	set	652
 10637  028D                     _T2PR	set	653
 10638  0291                     _T2RST	set	657
 10639  028F                     _T2HLT	set	655
 10640  0290                     _T2CLKCON	set	656
 10641  028E                     _T2CON	set	654
 10642  031A                     _CCP4CONbits	set	794
 10643  0318                     _CCPR4L	set	792
 10644  0319                     _CCPR4H	set	793
 10645  031A                     _CCP4CON	set	794
 10646  0316                     _CCP3CONbits	set	790
 10647  0314                     _CCPR3L	set	788
 10648  0315                     _CCPR3H	set	789
 10649  0316                     _CCP3CON	set	790
 10650  061C                     _CWG2AS0bits	set	1564
 10651  061A                     _CWG2CON0bits	set	1562
 10652  061A                     _CWG2CON0	set	1562
 10653  0617                     _CWG2ISM	set	1559
 10654  0616                     _CWG2CLKCON	set	1558
 10655  061E                     _CWG2STR	set	1566
 10656  061D                     _CWG2AS1	set	1565
 10657  061C                     _CWG2AS0	set	1564
 10658  0619                     _CWG2DBF	set	1561
 10659  0618                     _CWG2DBR	set	1560
 10660  061B                     _CWG2CON1	set	1563
 10661  0612                     _CWG1AS0bits	set	1554
 10662  0610                     _CWG1CON0bits	set	1552
 10663  0610                     _CWG1CON0	set	1552
 10664  060D                     _CWG1ISM	set	1549
 10665  060C                     _CWG1CLKCON	set	1548
 10666  0614                     _CWG1STR	set	1556
 10667  0613                     _CWG1AS1	set	1555
 10668  0612                     _CWG1AS0	set	1554
 10669  060F                     _CWG1DBF	set	1551
 10670  060E                     _CWG1DBR	set	1550
 10671  0611                     _CWG1CON1	set	1553
 10672  070F                     _PIR3bits	set	1807
 10673  0719                     _PIE3bits	set	1817
 10674  0716                     _PIE0bits	set	1814
 10675  070C                     _PIR0bits	set	1804
 10676  0710                     _PIR4bits	set	1808
 10677  081F                     _NVMCON2	set	2079
 10678  081D                     _NVMDATH	set	2077
 10679  081C                     _NVMDATL	set	2076
 10680  081B                     _NVMADRH	set	2075
 10681  081A                     _NVMADRL	set	2074
 10682  081E                     _NVMCON1bits	set	2078
 10683  40F1                     _WR	set	16625
 10684  0892                     _OSCTUNE	set	2194
 10685  0893                     _OSCFRQ	set	2195
 10686  0891                     _OSCEN	set	2193
 10687  088F                     _OSCCON3	set	2191
 10688  088D                     _OSCCON1	set	2189
 10689  1E90                     _INTPPSbits	set	7824
 10690  1E96                     _T5CKIPPSbits	set	7830
 10691  1E94                     _T3CKIPPSbits	set	7828
 10692  1E8F                     _PPSLOCKbits	set	7823
 10693  1E8F                     _PPSLOCK	set	7823
 10694  1F26                     _RC6PPS	set	7974
 10695  1F29                     _RD1PPS	set	7977
 10696  1F28                     _RD0PPS	set	7976
 10697  1F2B                     _RD3PPS	set	7979
 10698  1F2A                     _RD2PPS	set	7978
 10699  1F5B                     _ODCOND	set	8027
 10700  1F50                     _ODCONC	set	8016
 10701  1F45                     _ODCONB	set	8005
 10702  1F3A                     _ODCONA	set	7994
 10703  1F66                     _ODCONE	set	8038
 10704  1F4F                     _WPUC	set	8015
 10705  1F39                     _WPUA	set	7993
 10706  1F44                     _WPUB	set	8004
 10707  1F65                     _WPUE	set	8037
 10708  1F5A                     _WPUD	set	8026
 10709  1F38                     _ANSELA	set	7992
 10710  1F64                     _ANSELE	set	8036
 10711  1F59                     _ANSELD	set	8025
 10712  1F43                     _ANSELB	set	8003
 10713  1F4E                     _ANSELC	set	8014
 10714                           
 10715                           	psect	stringtext1
 10716  2800                     __pstringtext1:	
 10717  2800                     STR_10:	
 10718  2800  3420               	retlw	32	;' '
 10719  2801  3420               	retlw	32	;' '
 10720  2802  3420               	retlw	32	;' '
 10721  2803  3420               	retlw	32	;' '
 10722  2804  3420               	retlw	32	;' '
 10723  2805  3420               	retlw	32	;' '
 10724  2806  3420               	retlw	32	;' '
 10725  2807  3420               	retlw	32	;' '
 10726  2808  3420               	retlw	32	;' '
 10727  2809  3420               	retlw	32	;' '
 10728  280A  3420               	retlw	32	;' '
 10729  280B  3420               	retlw	32	;' '
 10730  280C  3420               	retlw	32	;' '
 10731  280D  3420               	retlw	32	;' '
 10732  280E  3420               	retlw	32	;' '
 10733  280F  3420               	retlw	32	;' '
 10734  2810  3400               	retlw	0
 10735                           
 10736                           	psect	stringtext2
 10737  2811                     __pstringtext2:	
 10738  2811                     STR_7:	
 10739  2811  344F               	retlw	79	;'O'
 10740  2812  3450               	retlw	80	;'P'
 10741  2813  3445               	retlw	69	;'E'
 10742  2814  344E               	retlw	78	;'N'
 10743  2815  343A               	retlw	58	;':'
 10744  2816  3420               	retlw	32	;' '
 10745  2817  3420               	retlw	32	;' '
 10746  2818  3420               	retlw	32	;' '
 10747  2819  3420               	retlw	32	;' '
 10748  281A  3420               	retlw	32	;' '
 10749  281B  3420               	retlw	32	;' '
 10750  281C  3420               	retlw	32	;' '
 10751  281D  3420               	retlw	32	;' '
 10752  281E  3420               	retlw	32	;' '
 10753  281F  3420               	retlw	32	;' '
 10754  2820  3420               	retlw	32	;' '
 10755  2821  3400               	retlw	0
 10756                           
 10757                           	psect	stringtext3
 10758  2822                     __pstringtext3:	
 10759  2822                     STR_9:	
 10760  2822  3443               	retlw	67	;'C'
 10761  2823  344C               	retlw	76	;'L'
 10762  2824  344F               	retlw	79	;'O'
 10763  2825  3453               	retlw	83	;'S'
 10764  2826  343A               	retlw	58	;':'
 10765  2827  3420               	retlw	32	;' '
 10766  2828  3420               	retlw	32	;' '
 10767  2829  3420               	retlw	32	;' '
 10768  282A  3420               	retlw	32	;' '
 10769  282B  3420               	retlw	32	;' '
 10770  282C  3420               	retlw	32	;' '
 10771  282D  3420               	retlw	32	;' '
 10772  282E  3420               	retlw	32	;' '
 10773  282F  3420               	retlw	32	;' '
 10774  2830  3420               	retlw	32	;' '
 10775  2831  3420               	retlw	32	;' '
 10776  2832  3400               	retlw	0
 10777                           
 10778                           	psect	stringtext4
 10779  2833                     __pstringtext4:	
 10780  2833                     STR_6:	
 10781  2833  3444               	retlw	68	;'D'
 10782  2834  3420               	retlw	32	;' '
 10783  2835  3420               	retlw	32	;' '
 10784  2836  3420               	retlw	32	;' '
 10785  2837  3420               	retlw	32	;' '
 10786  2838  3420               	retlw	32	;' '
 10787  2839  3420               	retlw	32	;' '
 10788  283A  3420               	retlw	32	;' '
 10789  283B  3443               	retlw	67	;'C'
 10790  283C  3420               	retlw	32	;' '
 10791  283D  3420               	retlw	32	;' '
 10792  283E  3420               	retlw	32	;' '
 10793  283F  3420               	retlw	32	;' '
 10794  2840  3420               	retlw	32	;' '
 10795  2841  3420               	retlw	32	;' '
 10796  2842  3420               	retlw	32	;' '
 10797  2843  3400               	retlw	0
 10798                           
 10799                           	psect	stringtext5
 10800  2844                     __pstringtext5:	
 10801  2844                     STR_20:	
 10802  2844  3420               	retlw	32	;' '
 10803  2845  3420               	retlw	32	;' '
 10804  2846  3420               	retlw	32	;' '
 10805  2847  3420               	retlw	32	;' '
 10806  2848  3420               	retlw	32	;' '
 10807  2849  3441               	retlw	65	;'A'
 10808  284A  344C               	retlw	76	;'L'
 10809  284B  3454               	retlw	84	;'T'
 10810  284C  344F               	retlw	79	;'O'
 10811  284D  3453               	retlw	83	;'S'
 10812  284E  3420               	retlw	32	;' '
 10813  284F  3420               	retlw	32	;' '
 10814  2850  3420               	retlw	32	;' '
 10815  2851  3420               	retlw	32	;' '
 10816  2852  3420               	retlw	32	;' '
 10817  2853  3420               	retlw	32	;' '
 10818  2854  3400               	retlw	0
 10819                           
 10820                           	psect	stringtext6
 10821  2855                     __pstringtext6:	
 10822  2855                     STR_11:	
 10823  2855  3448               	retlw	72	;'H'
 10824  2856  3454               	retlw	84	;'T'
 10825  2857  343A               	retlw	58	;':'
 10826  2858  3420               	retlw	32	;' '
 10827  2859  3420               	retlw	32	;' '
 10828  285A  3420               	retlw	32	;' '
 10829  285B  3420               	retlw	32	;' '
 10830  285C  3420               	retlw	32	;' '
 10831  285D  3454               	retlw	84	;'T'
 10832  285E  343A               	retlw	58	;':'
 10833  285F  3420               	retlw	32	;' '
 10834  2860  3420               	retlw	32	;' '
 10835  2861  343A               	retlw	58	;':'
 10836  2862  3420               	retlw	32	;' '
 10837  2863  3420               	retlw	32	;' '
 10838  2864  3420               	retlw	32	;' '
 10839  2865  3400               	retlw	0
 10840                           
 10841                           	psect	stringtext7
 10842  2866                     __pstringtext7:	
 10843  2866                     STR_21:	
 10844  2866  3445               	retlw	69	;'E'
 10845  2867  344E               	retlw	78	;'N'
 10846  2868  3447               	retlw	71	;'G'
 10847  2869  3449               	retlw	73	;'I'
 10848  286A  344E               	retlw	78	;'N'
 10849  286B  3445               	retlw	69	;'E'
 10850  286C  3445               	retlw	69	;'E'
 10851  286D  3452               	retlw	82	;'R'
 10852  286E  3453               	retlw	83	;'S'
 10853  286F  3420               	retlw	32	;' '
 10854  2870  3450               	retlw	80	;'P'
 10855  2871  342E               	retlw	46	;'.'
 10856  2872  3420               	retlw	32	;' '
 10857  2873  344C               	retlw	76	;'L'
 10858  2874  3454               	retlw	84	;'T'
 10859  2875  3444               	retlw	68	;'D'
 10860  2876  3400               	retlw	0
 10861                           
 10862                           	psect	stringtext8
 10863  2877                     __pstringtext8:	
 10864  2877                     STR_32:	
 10865  2877  3441               	retlw	65	;'A'
 10866  2878  346C               	retlw	108	;'l'
 10867  2879  3472               	retlw	114	;'r'
 10868  287A  3465               	retlw	101	;'e'
 10869  287B  3461               	retlw	97	;'a'
 10870  287C  3464               	retlw	100	;'d'
 10871  287D  3479               	retlw	121	;'y'
 10872  287E  3420               	retlw	32	;' '
 10873  287F  344F               	retlw	79	;'O'
 10874  2880  3470               	retlw	112	;'p'
 10875  2881  3465               	retlw	101	;'e'
 10876  2882  346E               	retlw	110	;'n'
 10877  2883  3400               	retlw	0
 10878                           
 10879                           	psect	stringtext9
 10880  2884                     __pstringtext9:	
 10881  2884                     STR_22:	
 10882  2884  3449               	retlw	73	;'I'
 10883  2885  3452               	retlw	82	;'R'
 10884  2886  3420               	retlw	32	;' '
 10885  2887  344F               	retlw	79	;'O'
 10886  2888  3462               	retlw	98	;'b'
 10887  2889  3473               	retlw	115	;'s'
 10888  288A  3474               	retlw	116	;'t'
 10889  288B  3461               	retlw	97	;'a'
 10890  288C  3463               	retlw	99	;'c'
 10891  288D  346C               	retlw	108	;'l'
 10892  288E  3465               	retlw	101	;'e'
 10893  288F  3420               	retlw	32	;' '
 10894  2890  3400               	retlw	0
 10895                           
 10896                           	psect	stringtext10
 10897  2891                     __pstringtext10:	
 10898  2891                     STR_30:	
 10899  2891  3446               	retlw	70	;'F'
 10900  2892  346F               	retlw	111	;'o'
 10901  2893  346F               	retlw	111	;'o'
 10902  2894  3474               	retlw	116	;'t'
 10903  2895  3420               	retlw	32	;' '
 10904  2896  3453               	retlw	83	;'S'
 10905  2897  3477               	retlw	119	;'w'
 10906  2898  3469               	retlw	105	;'i'
 10907  2899  3474               	retlw	116	;'t'
 10908  289A  3463               	retlw	99	;'c'
 10909  289B  3468               	retlw	104	;'h'
 10910  289C  3400               	retlw	0
 10911                           
 10912                           	psect	stringtext11
 10913  289D                     __pstringtext11:	
 10914  289D                     STR_31:	
 10915  289D  3446               	retlw	70	;'F'
 10916  289E  346F               	retlw	111	;'o'
 10917  289F  346F               	retlw	111	;'o'
 10918  28A0  3474               	retlw	116	;'t'
 10919  28A1  3420               	retlw	32	;' '
 10920  28A2  3443               	retlw	67	;'C'
 10921  28A3  346C               	retlw	108	;'l'
 10922  28A4  346F               	retlw	111	;'o'
 10923  28A5  3463               	retlw	99	;'c'
 10924  28A6  346B               	retlw	107	;'k'
 10925  28A7  3400               	retlw	0
 10926                           
 10927                           	psect	stringtext12
 10928  28A8                     __pstringtext12:	
 10929  28A8                     STR_1:	
 10930  28A8  3443               	retlw	67	;'C'
 10931  28A9  3475               	retlw	117	;'u'
 10932  28AA  3472               	retlw	114	;'r'
 10933  28AB  3472               	retlw	114	;'r'
 10934  28AC  3465               	retlw	101	;'e'
 10935  28AD  346E               	retlw	110	;'n'
 10936  28AE  3474               	retlw	116	;'t'
 10937  28AF  343A               	retlw	58	;':'
 10938  28B0  3420               	retlw	32	;' '
 10939  28B1  3400               	retlw	0
 10940                           
 10941                           	psect	stringtext13
 10942  28B2                     __pstringtext13:	
 10943  28B2                     STR_2:	
 10944  28B2  3442               	retlw	66	;'B'
 10945  28B3  343A               	retlw	58	;':'
 10946  28B4  3420               	retlw	32	;' '
 10947  28B5  3400               	retlw	0
 10948                           
 10949                           	psect	stringtext14
 10950  28B6                     __pstringtext14:	
 10951  28B6                     STR_5:	
 10952  28B6  344D               	retlw	77	;'M'
 10953  28B7  343A               	retlw	58	;':'
 10954  28B8  3420               	retlw	32	;' '
 10955  28B9  3400               	retlw	0
 10956                           
 10957                           	psect	stringtext15
 10958  28BA                     __pstringtext15:	
 10959  28BA                     STR_17:	
 10960  28BA  3441               	retlw	65	;'A'
 10961  28BB  3400               	retlw	0
 10962                           
 10963                           	psect	stringtext16
 10964  28BC                     __pstringtext16:	
 10965  28BC                     STR_16:	
 10966  28BC  3443               	retlw	67	;'C'
 10967  28BD  3400               	retlw	0
 10968                           
 10969                           	psect	stringtext17
 10970  28BE                     __pstringtext17:	
 10971  28BE                     STR_15:	
 10972  28BE  3453               	retlw	83	;'S'
 10973  28BF  3400               	retlw	0
 10974                           
 10975                           	psect	stringtext18
 10976  0000                     __pstringtext18:	
 10977  2800                     
 10978                           ; #config settings
 10979  0000                     
 10980                           	psect	cinit
 10981  001F                     start_initialization:	
 10982  001F                     __initialization:	
 10983                           
 10984                           ; Initialize objects allocated to BANK3
 10985  001F  30E1               	movlw	low __pidataBANK3
 10986  0020  0084               	movwf	4
 10987  0021  30A2               	movlw	(high __pidataBANK3)| (0+128)
 10988  0022  0085               	movwf	5
 10989  0023  30A0               	movlw	low __pdataBANK3
 10990  0024  0086               	movwf	6
 10991  0025  3001               	movlw	high __pdataBANK3
 10992  0026  0087               	movwf	7
 10993  0027  302B               	movlw	43
 10994  0028  31A0  20A2  3180   	fcall	init_ram
 10995                           
 10996                           ; Clear objects allocated to BITCOMMON
 10997  002B  01F0               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
 10998  002C  01F1               	clrf	((__pbitbssCOMMON/(0+8)+1))& (0+127)
 10999  002D  01F2               	clrf	((__pbitbssCOMMON/(0+8)+2))& (0+127)
 11000                           
 11001                           ; Clear objects allocated to COMMON
 11002  002E  01F9               	clrf	__pbssCOMMON& (0+127)
 11003  002F  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
 11004                           
 11005                           ; Clear objects allocated to BANK1
 11006  0030  30B9               	movlw	low __pbssBANK1
 11007  0031  0084               	movwf	4
 11008  0032  3000               	movlw	high __pbssBANK1
 11009  0033  0085               	movwf	5
 11010  0034  3017               	movlw	23
 11011  0035  31A0  209C  3180   	fcall	clear_ram0
 11012                           
 11013                           ; Clear objects allocated to BANK2
 11014  0038  3020               	movlw	low __pbssBANK2
 11015  0039  0084               	movwf	4
 11016  003A  3001               	movlw	high __pbssBANK2
 11017  003B  0085               	movwf	5
 11018  003C  3049               	movlw	73
 11019  003D  31A0  209C  3180   	fcall	clear_ram0
 11020                           
 11021                           ; Clear objects allocated to BANK3
 11022  0040  30CB               	movlw	low __pbssBANK3
 11023  0041  0084               	movwf	4
 11024  0042  3001               	movlw	high __pbssBANK3
 11025  0043  0085               	movwf	5
 11026  0044  3020               	movlw	32
 11027  0045  31A0  209C         	fcall	clear_ram0
 11028  0047                     end_of_initialization:	
 11029                           ;End of C runtime variable initialization code
 11030                           
 11031  0047                     __end_of__initialization:	
 11032  0047  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 11033  0048  0140               	movlb	0
 11034  0049  319A  2A2D         	ljmp	_main	;jump to C main() function
 11035                           
 11036                           	psect	bitbssCOMMON
 11037  0380                     __pbitbssCOMMON:	
 11038  0380                     _IR:	
 11039  0380                     	ds	1
 11040  0381                     _forceStop:	
 11041  0381                     	ds	1
 11042  0382                     _mainPowerFailure:	
 11043  0382                     	ds	1
 11044  0383                     _updateTime:	
 11045  0383                     	ds	1
 11046  0384                     _stopFlag:	
 11047  0384                     	ds	1
 11048  0385                     _irSensorDetected:	
 11049  0385                     	ds	1
 11050  0386                     _doNotOperateWhileOpeningDoor:	
 11051  0386                     	ds	1
 11052  0387                     _onByFootSw:	
 11053  0387                     	ds	1
 11054  0388                     _incDecSpeed:	
 11055  0388                     	ds	1
 11056  0389                     _subDiffValue:	
 11057  0389                     	ds	1
 11058  038A                     _addIntegValue:	
 11059  038A                     	ds	1
 11060  038B                     _stopByIR:	
 11061  038B                     	ds	1
 11062  038C                     _speedReduced2:	
 11063  038C                     	ds	1
 11064  038D                     _speedReduced1:	
 11065  038D                     	ds	1
 11066  038E                     _speedReduced:	
 11067  038E                     	ds	1
 11068  038F                     _adcSamplingMainSupply:	
 11069  038F                     	ds	1
 11070  0390                     _adcSamplingBattVoltTimeExpired:	
 11071  0390                     	ds	1
 11072  0391                     _adcSamplingTimeExpired:	
 11073  0391                     	ds	1
 11074  0392                     _upDwnKeyPressed:	
 11075  0392                     	ds	1
 11076  0393                     _doorOpenedWhileClosing:	
 11077  0393                     	ds	1
 11078  0394                     _openedByFoot:	
 11079  0394                     	ds	1
 11080  0395                     _DoorClosed:	
 11081  0395                     	ds	1
 11082  0396                     _doorOpened:	
 11083  0396                     	ds	1
 11084  0397                     _STARTED:	
 11085  0397                     	ds	1
 11086                           
 11087                           	psect	bssCOMMON
 11088  0079                     __pbssCOMMON:	
 11089  0079                     _eusartRxBuffer:	
 11090  0079                     	ds	1
 11091  007A                     _eusartRxHead:	
 11092  007A                     	ds	1
 11093                           
 11094                           	psect	bssBANK1
 11095  00B9                     __pbssBANK1:	
 11096  00B9                     _battVoltSamples:	
 11097  00B9                     	ds	4
 11098  00BD                     _tempSpeedRpm:	
 11099  00BD                     	ds	2
 11100  00BF                     _speedRpm:	
 11101  00BF                     	ds	2
 11102  00C1                     _direction:	
 11103  00C1                     	ds	1
 11104  00C2                     _holdTime:	
 11105  00C2                     	ds	1
 11106  00C3                     _eusartRxCount:	
 11107  00C3                     	ds	1
 11108  00C4                     _eusartRxTail:	
 11109  00C4                     	ds	1
 11110  00C5                     _eusartTxHead:	
 11111  00C5                     	ds	1
 11112  00C6                     _min:	
 11113  00C6                     	ds	1
 11114  00C7                     _sec:	
 11115  00C7                     	ds	1
 11116  00C8                     _antiClockWiseTime:	
 11117  00C8                     	ds	4
 11118  00CC                     _clockWiseTime:	
 11119  00CC                     	ds	4
 11120                           
 11121                           	psect	bssBANK2
 11122  0120                     __pbssBANK2:	
 11123  0120                     _mainsVoltSamples:	
 11124  0120                     	ds	4
 11125  0124                     _tempMainsVoltSamples:	
 11126  0124                     	ds	4
 11127  0128                     _tempBattVoltSamples:	
 11128  0128                     	ds	4
 11129  012C                     _currentSensorSamples:	
 11130  012C                     	ds	4
 11131  0130                     _tempSamples:	
 11132  0130                     	ds	4
 11133  0134                     _disToBeCovered:	
 11134  0134                     	ds	4
 11135  0138                     _preAntiClockWiseTime:	
 11136  0138                     	ds	4
 11137  013C                     _preClockWiseTime:	
 11138  013C                     	ds	4
 11139  0140                     _encoderTmr5:	
 11140  0140                     	ds	4
 11141  0144                     _mainsVoltPeriodicity:	
 11142  0144                     	ds	4
 11143  0148                     _battVoltPeriodicity:	
 11144  0148                     	ds	4
 11145  014C                     _diffValue:	
 11146  014C                     	ds	2
 11147  014E                     _integralValue:	
 11148  014E                     	ds	2
 11149  0150                     _adcValueChanged:	
 11150  0150                     	ds	2
 11151  0152                     _pretimeInMs:	
 11152  0152                     	ds	2
 11153  0154                     _stopCount:	
 11154  0154                     	ds	2
 11155  0156                     _cnfHoldTime:	
 11156  0156                     	ds	2
 11157  0158                     _TMR5_InterruptHandler:	
 11158  0158                     	ds	2
 11159  015A                     _TMR3_InterruptHandler:	
 11160  015A                     	ds	2
 11161  015C                     _keyCounter:	
 11162  015C                     	ds	2
 11163  015E                     _timeInMs:	
 11164  015E                     	ds	2
 11165  0160                     _TMR2_InterruptHandler:	
 11166  0160                     	ds	2
 11167  0162                     _sampleCountMainsVolt:	
 11168  0162                     	ds	1
 11169  0163                     _sampleCountBattVolt:	
 11170  0163                     	ds	1
 11171  0164                     _sampleCount:	
 11172  0164                     	ds	1
 11173  0165                     _doorStatus:	
 11174  0165                     	ds	1
 11175  0166                     _SetParamCount:	
 11176  0166                     	ds	1
 11177  0167                     _preDirection:	
 11178  0167                     	ds	1
 11179  0168                     _eusartTxTail:	
 11180  0168                     	ds	1
 11181                           
 11182                           	psect	bssBANK3
 11183  01CB                     __pbssBANK3:	
 11184  01CB                     _eusartTxBuffer:	
 11185  01CB                     	ds	8
 11186  01D3                     _mainVoltRef:	
 11187  01D3                     	ds	4
 11188  01D7                     _totalRunTime:	
 11189  01D7                     	ds	4
 11190  01DB                     _preAntiClockWiseDistace:	
 11191  01DB                     	ds	4
 11192  01DF                     _preClockWiseDistace:	
 11193  01DF                     	ds	4
 11194  01E3                     _sensorPeriodicity:	
 11195  01E3                     	ds	4
 11196  01E7                     _encoderTmr3:	
 11197  01E7                     	ds	4
 11198                           
 11199                           	psect	dataBANK3
 11200  01A0                     __pdataBANK3:	
 11201  01A0                     main@F15467:	
 11202  01A0                     	ds	17
 11203  01B1                     number_5@F15364:	
 11204  01B1                     	ds	10
 11205  01BB                     number_4@F15349:	
 11206  01BB                     	ds	10
 11207  01C5                     main@F15465:	
 11208  01C5                     	ds	6
 11209                           
 11210                           	psect	inittext
 11211  20A2                     init_ram:	
 11212  20A2  00FE               	movwf	126
 11213  20A3                     initloop:	
 11214  20A3  0012               	moviw fsr0++
 11215  20A4  001E               	movwi fsr1++
 11216  20A5  0BFE               	decfsz	126,f
 11217  20A6  28A3               	goto	initloop
 11218  20A7  3400               	retlw	0
 11219                           
 11220                           	psect	clrtext
 11221  209C                     clear_ram0:	
 11222                           ;	Called with FSR0 containing the base address, and
 11223                           ;	WREG with the size to clear
 11224                           
 11225  209C  0064               	clrwdt	;clear the watchdog before getting into this loop
 11226  209D                     clrloop0:	
 11227  209D  0180               	clrf	0	;clear RAM location pointed to by FSR
 11228  209E  3101               	addfsr 0,1
 11229  209F  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
 11230  20A0  289D               	goto	clrloop0	;have we reached the end yet?
 11231  20A1  3400               	retlw	0	;all done for this memory range, return
 11232                           
 11233                           	psect	cstackBANK4
 11234  0220                     __pcstackBANK4:	
 11235  0220                     main@cmpName1:	
 11236                           
 11237                           ; 17 bytes @ 0x0
 11238  0220                     	ds	17
 11239  0231                     main@cmpName:	
 11240                           
 11241                           ; 6 bytes @ 0x11
 11242  0231                     	ds	6
 11243  0237                     main@txParam:	
 11244                           
 11245                           ; 1 bytes @ 0x17
 11246  0237                     	ds	1
 11247  0238                     main@tmp:	
 11248                           
 11249                           ; 2 bytes @ 0x18
 11250  0238                     	ds	2
 11251  023A                     main@i:	
 11252                           
 11253                           ; 2 bytes @ 0x1A
 11254  023A                     	ds	2
 11255  023C                     main@command:	
 11256                           
 11257                           ; 1 bytes @ 0x1C
 11258  023C                     	ds	1
 11259  023D                     main@i_2125:	
 11260                           
 11261                           ; 1 bytes @ 0x1D
 11262  023D                     	ds	1
 11263  023E                     main@i_2127:	
 11264                           
 11265                           ; 1 bytes @ 0x1E
 11266  023E                     	ds	1
 11267  023F                     main@temp:	
 11268                           
 11269                           ; 2 bytes @ 0x1F
 11270  023F                     	ds	2
 11271                           
 11272                           	psect	cstackBANK1
 11273  00A0                     __pcstackBANK1:	
 11274  00A0                     ??_default_menu:	
 11275  00A0                     ?_checkCurrentSensor:	
 11276                           ; 1 bytes @ 0x0
 11277                           
 11278  00A0                     ??_checkBatteryVoltage:	
 11279                           ; 1 bytes @ 0x0
 11280                           
 11281  00A0                     ??_checkMainSupplyFailure:	
 11282                           ; 1 bytes @ 0x0
 11283                           
 11284  00A0                     checkCurrentSensor@speed:	
 11285                           ; 1 bytes @ 0x0
 11286                           
 11287                           
 11288                           ; 2 bytes @ 0x0
 11289  00A0                     	ds	2
 11290  00A2                     ??_checkCurrentSensor:	
 11291                           
 11292                           ; 1 bytes @ 0x2
 11293  00A2                     	ds	4
 11294  00A6                     checkCurrentSensor@tempEncoderVal:	
 11295                           
 11296                           ; 2 bytes @ 0x6
 11297  00A6                     	ds	2
 11298  00A8                     ??_ouputOnClockwise:	
 11299  00A8                     ??_ouputOnAntiClock:	
 11300                           ; 1 bytes @ 0x8
 11301                           
 11302                           
 11303                           ; 1 bytes @ 0x8
 11304  00A8                     	ds	2
 11305  00AA                     ouputOnAntiClock@tempEncoderVal:	
 11306                           
 11307                           ; 2 bytes @ 0xA
 11308  00AA                     	ds	4
 11309  00AE                     ouputOnClockwise@temp:	
 11310                           
 11311                           ; 1 bytes @ 0xE
 11312  00AE                     	ds	1
 11313  00AF                     ??_serialCommand:	
 11314  00AF                     ??_outputOn:	
 11315                           ; 1 bytes @ 0xF
 11316                           
 11317                           
 11318                           ; 1 bytes @ 0xF
 11319  00AF                     	ds	2
 11320  00B1                     serialCommand@rcvCmd:	
 11321                           
 11322                           ; 1 bytes @ 0x11
 11323  00B1                     	ds	2
 11324  00B3                     ??_main:	
 11325                           
 11326                           ; 1 bytes @ 0x13
 11327  00B3                     	ds	6
 11328                           
 11329                           	psect	cstackCOMMON
 11330  0073                     __pcstackCOMMON:	
 11331  0073                     ?_TMR2_Start:	
 11332  0073                     ?_OSCILLATOR_Initialize:	
 11333                           ; 1 bytes @ 0x0
 11334                           
 11335  0073                     ?_ADCC_Initialize:	
 11336                           ; 1 bytes @ 0x0
 11337                           
 11338  0073                     ?_PWM4_Initialize:	
 11339                           ; 1 bytes @ 0x0
 11340                           
 11341  0073                     ?_TMR0_Initialize:	
 11342                           ; 1 bytes @ 0x0
 11343                           
 11344  0073                     ?_TMR3_Initialize:	
 11345                           ; 1 bytes @ 0x0
 11346                           
 11347  0073                     ?_PWM3_Initialize:	
 11348                           ; 1 bytes @ 0x0
 11349                           
 11350  0073                     ?_TMR5_Initialize:	
 11351                           ; 1 bytes @ 0x0
 11352                           
 11353  0073                     ?_EUSART_Initialize:	
 11354                           ; 1 bytes @ 0x0
 11355                           
 11356  0073                     ?_TMR0_DefaultInterruptHandler:	
 11357                           ; 1 bytes @ 0x0
 11358                           
 11359  0073                     ?_EUSART_Receive_ISR:	
 11360                           ; 1 bytes @ 0x0
 11361                           
 11362  0073                     ??_EUSART_Receive_ISR:	
 11363                           ; 1 bytes @ 0x0
 11364                           
 11365  0073                     ?_TMR3_StartTimer:	
 11366                           ; 1 bytes @ 0x0
 11367                           
 11368  0073                     ?_TMR5_StartTimer:	
 11369                           ; 1 bytes @ 0x0
 11370                           
 11371  0073                     ?_default_menu:	
 11372                           ; 1 bytes @ 0x0
 11373                           
 11374  0073                     ?_number_2:	
 11375                           ; 1 bytes @ 0x0
 11376                           
 11377  0073                     ?_default_init:	
 11378                           ; 1 bytes @ 0x0
 11379                           
 11380  0073                     ?_lcdInit:	
 11381                           ; 1 bytes @ 0x0
 11382                           
 11383  0073                     ?_initMemRead:	
 11384                           ; 1 bytes @ 0x0
 11385                           
 11386  0073                     ?_keypad:	
 11387                           ; 1 bytes @ 0x0
 11388                           
 11389  0073                     ?_serialCommand:	
 11390                           ; 1 bytes @ 0x0
 11391                           
 11392  0073                     ?_eeprom_read:	
 11393                           ; 1 bytes @ 0x0
 11394                           
 11395  0073                     ?_TMR2_Initialize:	
 11396                           ; 1 bytes @ 0x0
 11397                           
 11398  0073                     ?_TMR2_StartTimer:	
 11399                           ; 1 bytes @ 0x0
 11400                           
 11401  0073                     ?_TMR2_Stop:	
 11402                           ; 1 bytes @ 0x0
 11403                           
 11404  0073                     ?_TMR2_StopTimer:	
 11405                           ; 1 bytes @ 0x0
 11406                           
 11407  0073                     ?_PIN_MANAGER_Initialize:	
 11408                           ; 1 bytes @ 0x0
 11409                           
 11410  0073                     ?_CWG1_Initialize:	
 11411                           ; 1 bytes @ 0x0
 11412                           
 11413  0073                     ?_CWG2_Initialize:	
 11414                           ; 1 bytes @ 0x0
 11415                           
 11416  0073                     ?_SYSTEM_Initialize:	
 11417                           ; 1 bytes @ 0x0
 11418                           
 11419  0073                     ?_TMR0_StartTimer:	
 11420                           ; 1 bytes @ 0x0
 11421                           
 11422  0073                     ?_TMR0_StopTimer:	
 11423                           ; 1 bytes @ 0x0
 11424                           
 11425  0073                     ?_TMR0_ISR:	
 11426                           ; 1 bytes @ 0x0
 11427                           
 11428  0073                     ?_INTERRUPT_InterruptManager:	
 11429                           ; 1 bytes @ 0x0
 11430                           
 11431  0073                     ?_getch:	
 11432                           ; 1 bytes @ 0x0
 11433                           
 11434  0073                     ?_putch:	
 11435                           ; 1 bytes @ 0x0
 11436                           
 11437  0073                     ?_checkBatteryVoltage:	
 11438                           ; 1 bytes @ 0x0
 11439                           
 11440  0073                     ?_checkMainSupplyFailure:	
 11441                           ; 1 bytes @ 0x0
 11442                           
 11443  0073                     ?_ouputOnClockwise:	
 11444                           ; 1 bytes @ 0x0
 11445                           
 11446  0073                     ?_ouputOnAntiClock:	
 11447                           ; 1 bytes @ 0x0
 11448                           
 11449  0073                     ?_outputOn:	
 11450                           ; 1 bytes @ 0x0
 11451                           
 11452  0073                     ?_main:	
 11453                           ; 1 bytes @ 0x0
 11454                           
 11455  0073                     ?_TMR3_ReadTimer:	
 11456                           ; 1 bytes @ 0x0
 11457                           
 11458  0073                     ?_TMR5_ReadTimer:	
 11459                           ; 2 bytes @ 0x0
 11460                           
 11461  0073                     checkCurrentSensor@dir:	
 11462                           ; 2 bytes @ 0x0
 11463                           
 11464                           
 11465                           ; 1 bytes @ 0x0
 11466  0073                     	ds	2
 11467  0075                     ??_TMR3_ReadTimer:	
 11468  0075                     ??_TMR5_ReadTimer:	
 11469                           ; 1 bytes @ 0x2
 11470                           
 11471  0075                     TMR3_ReadTimer@readVal:	
 11472                           ; 1 bytes @ 0x2
 11473                           
 11474  0075                     TMR5_ReadTimer@readVal:	
 11475                           ; 2 bytes @ 0x2
 11476                           
 11477                           
 11478                           ; 2 bytes @ 0x2
 11479  0075                     	ds	2
 11480  0077                     ??_TMR0_DefaultInterruptHandler:	
 11481                           
 11482                           ; 1 bytes @ 0x4
 11483  0077                     	ds	1
 11484  0078                     ??_TMR0_ISR:	
 11485  0078                     ??_INTERRUPT_InterruptManager:	
 11486                           ; 1 bytes @ 0x5
 11487                           
 11488                           
 11489                           ; 1 bytes @ 0x5
 11490  0078                     	ds	1
 11491                           
 11492                           	psect	cstackBANK0
 11493  0020                     __pcstackBANK0:	
 11494  0020                     ??_TMR2_Start:	
 11495  0020                     ??_OSCILLATOR_Initialize:	
 11496                           ; 1 bytes @ 0x0
 11497                           
 11498  0020                     ??_ADCC_Initialize:	
 11499                           ; 1 bytes @ 0x0
 11500                           
 11501  0020                     ??_PWM4_Initialize:	
 11502                           ; 1 bytes @ 0x0
 11503                           
 11504  0020                     ??_TMR3_Initialize:	
 11505                           ; 1 bytes @ 0x0
 11506                           
 11507  0020                     ??_PWM3_Initialize:	
 11508                           ; 1 bytes @ 0x0
 11509                           
 11510  0020                     ??_TMR5_Initialize:	
 11511                           ; 1 bytes @ 0x0
 11512                           
 11513  0020                     ??_EUSART_Initialize:	
 11514                           ; 1 bytes @ 0x0
 11515                           
 11516  0020                     ?_TMR0_SetInterruptHandler:	
 11517                           ; 1 bytes @ 0x0
 11518                           
 11519  0020                     ??_TMR3_StartTimer:	
 11520                           ; 1 bytes @ 0x0
 11521                           
 11522  0020                     ??_TMR5_StartTimer:	
 11523                           ; 1 bytes @ 0x0
 11524                           
 11525  0020                     ?_eeprom_write:	
 11526                           ; 1 bytes @ 0x0
 11527                           
 11528  0020                     ??_default_init:	
 11529                           ; 1 bytes @ 0x0
 11530                           
 11531  0020                     ??_keypad:	
 11532                           ; 1 bytes @ 0x0
 11533                           
 11534  0020                     ??_eeprom_read:	
 11535                           ; 1 bytes @ 0x0
 11536                           
 11537  0020                     ??_TMR2_Initialize:	
 11538                           ; 1 bytes @ 0x0
 11539                           
 11540  0020                     ??_TMR2_StartTimer:	
 11541                           ; 1 bytes @ 0x0
 11542                           
 11543  0020                     ??_TMR2_Stop:	
 11544                           ; 1 bytes @ 0x0
 11545                           
 11546  0020                     ??_TMR2_StopTimer:	
 11547                           ; 1 bytes @ 0x0
 11548                           
 11549  0020                     ??_PIN_MANAGER_Initialize:	
 11550                           ; 1 bytes @ 0x0
 11551                           
 11552  0020                     ??_CWG1_Initialize:	
 11553                           ; 1 bytes @ 0x0
 11554                           
 11555  0020                     ??_CWG2_Initialize:	
 11556                           ; 1 bytes @ 0x0
 11557                           
 11558  0020                     ?_PWM3_LoadDutyValue:	
 11559                           ; 1 bytes @ 0x0
 11560                           
 11561  0020                     ?_PWM4_LoadDutyValue:	
 11562                           ; 1 bytes @ 0x0
 11563                           
 11564  0020                     ??_TMR0_StartTimer:	
 11565                           ; 1 bytes @ 0x0
 11566                           
 11567  0020                     ??_TMR0_StopTimer:	
 11568                           ; 1 bytes @ 0x0
 11569                           
 11570  0020                     ??_getch:	
 11571                           ; 1 bytes @ 0x0
 11572                           
 11573  0020                     ??_putch:	
 11574                           ; 1 bytes @ 0x0
 11575                           
 11576  0020                     ?_TMR3_WriteTimer:	
 11577                           ; 1 bytes @ 0x0
 11578                           
 11579  0020                     ?_TMR5_WriteTimer:	
 11580                           ; 1 bytes @ 0x0
 11581                           
 11582  0020                     ?_ADCC_GetSingleConversion:	
 11583                           ; 1 bytes @ 0x0
 11584                           
 11585  0020                     ?___wmul:	
 11586                           ; 2 bytes @ 0x0
 11587                           
 11588  0020                     ?___awdiv:	
 11589                           ; 2 bytes @ 0x0
 11590                           
 11591  0020                     ?___awmod:	
 11592                           ; 2 bytes @ 0x0
 11593                           
 11594  0020                     ?___lwdiv:	
 11595                           ; 2 bytes @ 0x0
 11596                           
 11597  0020                     ?___lwmod:	
 11598                           ; 2 bytes @ 0x0
 11599                           
 11600  0020                     ?___lmul:	
 11601                           ; 2 bytes @ 0x0
 11602                           
 11603  0020                     ?___lldiv:	
 11604                           ; 4 bytes @ 0x0
 11605                           
 11606  0020                     PIN_MANAGER_Initialize@state:	
 11607                           ; 4 bytes @ 0x0
 11608                           
 11609  0020                     putch@txData:	
 11610                           ; 1 bytes @ 0x0
 11611                           
 11612  0020                     eeprom_read@addr:	
 11613                           ; 1 bytes @ 0x0
 11614                           
 11615  0020                     eeprom_write@value:	
 11616                           ; 1 bytes @ 0x0
 11617                           
 11618  0020                     PWM3_LoadDutyValue@dutyValue:	
 11619                           ; 1 bytes @ 0x0
 11620                           
 11621  0020                     PWM4_LoadDutyValue@dutyValue:	
 11622                           ; 2 bytes @ 0x0
 11623                           
 11624  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
 11625                           ; 2 bytes @ 0x0
 11626                           
 11627  0020                     TMR3_WriteTimer@timerVal:	
 11628                           ; 2 bytes @ 0x0
 11629                           
 11630  0020                     TMR5_WriteTimer@timerVal:	
 11631                           ; 2 bytes @ 0x0
 11632                           
 11633  0020                     ___wmul@multiplier:	
 11634                           ; 2 bytes @ 0x0
 11635                           
 11636  0020                     ___awdiv@divisor:	
 11637                           ; 2 bytes @ 0x0
 11638                           
 11639  0020                     ___awmod@divisor:	
 11640                           ; 2 bytes @ 0x0
 11641                           
 11642  0020                     ___lwdiv@divisor:	
 11643                           ; 2 bytes @ 0x0
 11644                           
 11645  0020                     ___lwmod@divisor:	
 11646                           ; 2 bytes @ 0x0
 11647                           
 11648  0020                     ___lmul@multiplier:	
 11649                           ; 2 bytes @ 0x0
 11650                           
 11651  0020                     ___lldiv@divisor:	
 11652                           ; 4 bytes @ 0x0
 11653                           
 11654                           
 11655                           ; 4 bytes @ 0x0
 11656  0020                     	ds	1
 11657  0021                     ??_eeprom_write:	
 11658  0021                     getch@retVal:	
 11659                           ; 1 bytes @ 0x1
 11660                           
 11661  0021                     eeprom_write@addr:	
 11662                           ; 1 bytes @ 0x1
 11663                           
 11664                           
 11665                           ; 1 bytes @ 0x1
 11666  0021                     	ds	1
 11667  0022                     ??_TMR0_Initialize:	
 11668  0022                     ??_TMR0_SetInterruptHandler:	
 11669                           ; 1 bytes @ 0x2
 11670                           
 11671  0022                     ?_saveConfiguration:	
 11672                           ; 1 bytes @ 0x2
 11673                           
 11674  0022                     ??_SYSTEM_Initialize:	
 11675                           ; 1 bytes @ 0x2
 11676                           
 11677  0022                     ??_PWM3_LoadDutyValue:	
 11678                           ; 1 bytes @ 0x2
 11679                           
 11680  0022                     ??_PWM4_LoadDutyValue:	
 11681                           ; 1 bytes @ 0x2
 11682                           
 11683  0022                     ??_TMR3_WriteTimer:	
 11684                           ; 1 bytes @ 0x2
 11685                           
 11686  0022                     ??_TMR5_WriteTimer:	
 11687                           ; 1 bytes @ 0x2
 11688                           
 11689  0022                     ?_stopMotor:	
 11690                           ; 1 bytes @ 0x2
 11691                           
 11692  0022                     ?_startMotor:	
 11693                           ; 1 bytes @ 0x2
 11694                           
 11695  0022                     keypad@retKey:	
 11696                           ; 1 bytes @ 0x2
 11697                           
 11698  0022                     stopMotor@speed:	
 11699                           ; 1 bytes @ 0x2
 11700                           
 11701  0022                     startMotor@speed:	
 11702                           ; 2 bytes @ 0x2
 11703                           
 11704  0022                     saveConfiguration@value:	
 11705                           ; 2 bytes @ 0x2
 11706                           
 11707  0022                     ___wmul@multiplicand:	
 11708                           ; 2 bytes @ 0x2
 11709                           
 11710  0022                     ___awdiv@dividend:	
 11711                           ; 2 bytes @ 0x2
 11712                           
 11713  0022                     ___awmod@dividend:	
 11714                           ; 2 bytes @ 0x2
 11715                           
 11716  0022                     ___lwdiv@dividend:	
 11717                           ; 2 bytes @ 0x2
 11718                           
 11719  0022                     ___lwmod@dividend:	
 11720                           ; 2 bytes @ 0x2
 11721                           
 11722                           
 11723                           ; 2 bytes @ 0x2
 11724  0022                     	ds	1
 11725  0023                     ??_ADCC_GetSingleConversion:	
 11726  0023                     ADCC_GetSingleConversion@channel:	
 11727                           ; 1 bytes @ 0x3
 11728                           
 11729                           
 11730                           ; 1 bytes @ 0x3
 11731  0023                     	ds	1
 11732  0024                     ??_saveConfiguration:	
 11733  0024                     ??_stopMotor:	
 11734                           ; 1 bytes @ 0x4
 11735                           
 11736  0024                     ??_startMotor:	
 11737                           ; 1 bytes @ 0x4
 11738                           
 11739  0024                     ??___wmul:	
 11740                           ; 1 bytes @ 0x4
 11741                           
 11742  0024                     ??___awdiv:	
 11743                           ; 1 bytes @ 0x4
 11744                           
 11745  0024                     ??___awmod:	
 11746                           ; 1 bytes @ 0x4
 11747                           
 11748  0024                     ??___lwdiv:	
 11749                           ; 1 bytes @ 0x4
 11750                           
 11751  0024                     ??___lwmod:	
 11752                           ; 1 bytes @ 0x4
 11753                           
 11754  0024                     ___wmul@product:	
 11755                           ; 1 bytes @ 0x4
 11756                           
 11757  0024                     ___lmul@multiplicand:	
 11758                           ; 2 bytes @ 0x4
 11759                           
 11760  0024                     ___lldiv@dividend:	
 11761                           ; 4 bytes @ 0x4
 11762                           
 11763                           
 11764                           ; 4 bytes @ 0x4
 11765  0024                     	ds	1
 11766  0025                     stopMotor@dir:	
 11767  0025                     startMotor@dir:	
 11768                           ; 1 bytes @ 0x5
 11769                           
 11770  0025                     saveConfiguration@configTYpe:	
 11771                           ; 1 bytes @ 0x5
 11772                           
 11773  0025                     ___awdiv@counter:	
 11774                           ; 1 bytes @ 0x5
 11775                           
 11776  0025                     ___awmod@counter:	
 11777                           ; 1 bytes @ 0x5
 11778                           
 11779  0025                     ___lwdiv@counter:	
 11780                           ; 1 bytes @ 0x5
 11781                           
 11782  0025                     ___lwmod@counter:	
 11783                           ; 1 bytes @ 0x5
 11784                           
 11785                           
 11786                           ; 1 bytes @ 0x5
 11787  0025                     	ds	1
 11788  0026                     saveConfiguration@temp:	
 11789  0026                     ___awdiv@sign:	
 11790                           ; 1 bytes @ 0x6
 11791                           
 11792  0026                     ___awmod@sign:	
 11793                           ; 1 bytes @ 0x6
 11794                           
 11795  0026                     stopMotor@i:	
 11796                           ; 1 bytes @ 0x6
 11797                           
 11798  0026                     startMotor@i:	
 11799                           ; 2 bytes @ 0x6
 11800                           
 11801  0026                     ___lwdiv@quotient:	
 11802                           ; 2 bytes @ 0x6
 11803                           
 11804                           
 11805                           ; 2 bytes @ 0x6
 11806  0026                     	ds	1
 11807  0027                     ___awdiv@quotient:	
 11808                           
 11809                           ; 2 bytes @ 0x7
 11810  0027                     	ds	1
 11811  0028                     ??___lmul:	
 11812  0028                     ??___lldiv:	
 11813                           ; 1 bytes @ 0x8
 11814                           
 11815  0028                     stopMotor@i_2071:	
 11816                           ; 1 bytes @ 0x8
 11817                           
 11818  0028                     startMotor@i_2076:	
 11819                           ; 2 bytes @ 0x8
 11820                           
 11821  0028                     ___lmul@product:	
 11822                           ; 2 bytes @ 0x8
 11823                           
 11824                           
 11825                           ; 4 bytes @ 0x8
 11826  0028                     	ds	1
 11827  0029                     ?_lcd:	
 11828  0029                     lcd@b:	
 11829                           ; 1 bytes @ 0x9
 11830                           
 11831  0029                     ___lldiv@quotient:	
 11832                           ; 1 bytes @ 0x9
 11833                           
 11834                           
 11835                           ; 4 bytes @ 0x9
 11836  0029                     	ds	1
 11837  002A                     ??_lcd:	
 11838                           
 11839                           ; 1 bytes @ 0xA
 11840  002A                     	ds	1
 11841  002B                     lcd@a:	
 11842                           
 11843                           ; 1 bytes @ 0xB
 11844  002B                     	ds	1
 11845  002C                     ?_display:	
 11846  002C                     ?_number_3:	
 11847                           ; 1 bytes @ 0xC
 11848                           
 11849  002C                     ??_number_2:	
 11850                           ; 1 bytes @ 0xC
 11851                           
 11852  002C                     ??_lcdInit:	
 11853                           ; 1 bytes @ 0xC
 11854                           
 11855  002C                     ?___aldiv:	
 11856                           ; 1 bytes @ 0xC
 11857                           
 11858  002C                     display@a:	
 11859                           ; 4 bytes @ 0xC
 11860                           
 11861  002C                     number_3@num:	
 11862                           ; 2 bytes @ 0xC
 11863                           
 11864  002C                     ___aldiv@divisor:	
 11865                           ; 2 bytes @ 0xC
 11866                           
 11867                           
 11868                           ; 4 bytes @ 0xC
 11869  002C                     	ds	1
 11870  002D                     ___lldiv@counter:	
 11871                           
 11872                           ; 1 bytes @ 0xD
 11873  002D                     	ds	1
 11874  002E                     ??_number_3:	
 11875  002E                     ?___llmod:	
 11876                           ; 1 bytes @ 0xE
 11877                           
 11878  002E                     display@add:	
 11879                           ; 4 bytes @ 0xE
 11880                           
 11881  002E                     number_2@num:	
 11882                           ; 1 bytes @ 0xE
 11883                           
 11884  002E                     number_3@num1:	
 11885                           ; 1 bytes @ 0xE
 11886                           
 11887  002E                     ___llmod@divisor:	
 11888                           ; 2 bytes @ 0xE
 11889                           
 11890                           
 11891                           ; 4 bytes @ 0xE
 11892  002E                     	ds	1
 11893  002F                     ??_display:	
 11894                           
 11895                           ; 1 bytes @ 0xF
 11896  002F                     	ds	1
 11897  0030                     display@i:	
 11898  0030                     number_3@num2:	
 11899                           ; 2 bytes @ 0x10
 11900                           
 11901  0030                     ___aldiv@dividend:	
 11902                           ; 2 bytes @ 0x10
 11903                           
 11904                           
 11905                           ; 4 bytes @ 0x10
 11906  0030                     	ds	2
 11907  0032                     number_3@num3:	
 11908  0032                     ___llmod@dividend:	
 11909                           ; 2 bytes @ 0x12
 11910                           
 11911                           
 11912                           ; 4 bytes @ 0x12
 11913  0032                     	ds	2
 11914  0034                     ??___aldiv:	
 11915  0034                     number_3@temp:	
 11916                           ; 1 bytes @ 0x14
 11917                           
 11918                           
 11919                           ; 2 bytes @ 0x14
 11920  0034                     	ds	1
 11921  0035                     ___aldiv@counter:	
 11922                           
 11923                           ; 1 bytes @ 0x15
 11924  0035                     	ds	1
 11925  0036                     ??___llmod:	
 11926  0036                     ___aldiv@sign:	
 11927                           ; 1 bytes @ 0x16
 11928                           
 11929  0036                     number_3@b:	
 11930                           ; 1 bytes @ 0x16
 11931                           
 11932                           
 11933                           ; 2 bytes @ 0x16
 11934  0036                     	ds	1
 11935  0037                     ___llmod@counter:	
 11936  0037                     ___aldiv@quotient:	
 11937                           ; 1 bytes @ 0x17
 11938                           
 11939                           
 11940                           ; 4 bytes @ 0x17
 11941  0037                     	ds	1
 11942  0038                     ?_number_5:	
 11943  0038                     ?_number_4:	
 11944                           ; 1 bytes @ 0x18
 11945                           
 11946  0038                     number_3@a:	
 11947                           ; 1 bytes @ 0x18
 11948                           
 11949  0038                     number_4@num:	
 11950                           ; 2 bytes @ 0x18
 11951                           
 11952  0038                     number_5@num:	
 11953                           ; 4 bytes @ 0x18
 11954                           
 11955                           
 11956                           ; 4 bytes @ 0x18
 11957  0038                     	ds	2
 11958  003A                     ??_initMemRead:	
 11959                           
 11960                           ; 1 bytes @ 0x1A
 11961  003A                     	ds	2
 11962  003C                     ??_number_5:	
 11963  003C                     ??_number_4:	
 11964                           ; 1 bytes @ 0x1C
 11965                           
 11966                           
 11967                           ; 1 bytes @ 0x1C
 11968  003C                     	ds	4
 11969  0040                     initMemRead@var:	
 11970  0040                     number_4@arr:	
 11971                           ; 2 bytes @ 0x20
 11972                           
 11973  0040                     number_5@arr:	
 11974                           ; 10 bytes @ 0x20
 11975                           
 11976                           
 11977                           ; 10 bytes @ 0x20
 11978  0040                     	ds	2
 11979  0042                     initMemRead@temp:	
 11980                           
 11981                           ; 2 bytes @ 0x22
 11982  0042                     	ds	2
 11983  0044                     initMemRead@incR:	
 11984                           
 11985                           ; 1 bytes @ 0x24
 11986  0044                     	ds	6
 11987  004A                     number_4@ten:	
 11988  004A                     number_5@ten:	
 11989                           ; 4 bytes @ 0x2A
 11990                           
 11991                           
 11992                           ; 4 bytes @ 0x2A
 11993  004A                     	ds	4
 11994  004E                     number_4@hun:	
 11995  004E                     number_5@hun:	
 11996                           ; 4 bytes @ 0x2E
 11997                           
 11998                           
 11999                           ; 4 bytes @ 0x2E
 12000  004E                     	ds	4
 12001  0052                     number_4@thou:	
 12002  0052                     number_5@thou:	
 12003                           ; 4 bytes @ 0x32
 12004                           
 12005                           
 12006                           ; 4 bytes @ 0x32
 12007  0052                     	ds	4
 12008  0056                     number_4@unit:	
 12009  0056                     number_5@tenThou:	
 12010                           ; 2 bytes @ 0x36
 12011                           
 12012                           
 12013                           ; 4 bytes @ 0x36
 12014  0056                     	ds	2
 12015  0058                     number_4@num1:	
 12016                           
 12017                           ; 4 bytes @ 0x38
 12018  0058                     	ds	2
 12019  005A                     number_5@unit:	
 12020                           
 12021                           ; 2 bytes @ 0x3A
 12022  005A                     	ds	2
 12023  005C                     number_4@num2:	
 12024  005C                     number_5@num1:	
 12025                           ; 4 bytes @ 0x3C
 12026                           
 12027                           
 12028                           ; 4 bytes @ 0x3C
 12029  005C                     	ds	4
 12030  0060                     number_4@num3:	
 12031  0060                     number_5@num2:	
 12032                           ; 4 bytes @ 0x40
 12033                           
 12034                           
 12035                           ; 4 bytes @ 0x40
 12036  0060                     	ds	4
 12037  0064                     number_4@num4:	
 12038  0064                     number_5@num3:	
 12039                           ; 4 bytes @ 0x44
 12040                           
 12041                           
 12042                           ; 4 bytes @ 0x44
 12043  0064                     	ds	4
 12044  0068                     number_5@num4:	
 12045                           
 12046                           ; 4 bytes @ 0x48
 12047  0068                     	ds	4
 12048  006C                     number_5@num5:	
 12049                           
 12050                           ; 4 bytes @ 0x4C
 12051  006C                     	ds	4
 12052                           
 12053                           	psect	maintext
 12054  1A2D                     __pmaintext:	
 12055 ;;
 12056 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
 12057 ;;
 12058 ;; *************** function _main *****************
 12059 ;; Defined at:
 12060 ;;		line 852 in file "main.c"
 12061 ;; Parameters:    Size  Location     Type
 12062 ;;		None
 12063 ;; Auto vars:     Size  Location     Type
 12064 ;;  tmp             2   24[BANK4 ] unsigned char [2]
 12065 ;;  i               1   30[BANK4 ] unsigned char 
 12066 ;;  i               1   29[BANK4 ] unsigned char 
 12067 ;;  i               2   26[BANK4 ] int 
 12068 ;;  cmpName1       17    0[BANK4 ] unsigned char [17]
 12069 ;;  cmpName         6   17[BANK4 ] unsigned char [6]
 12070 ;;  temp            2   31[BANK4 ] int 
 12071 ;;  command         1   28[BANK4 ] unsigned char 
 12072 ;;  txParam         1   23[BANK4 ] unsigned char 
 12073 ;;  tempStatus      1    0        unsigned char 
 12074 ;; Return value:  Size  Location     Type
 12075 ;;                  1    wreg      void 
 12076 ;; Registers used:
 12077 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12078 ;; Tracked objects:
 12079 ;;		On entry : B3F/0
 12080 ;;		On exit  : 0/0
 12081 ;;		Unchanged: 0/0
 12082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 12083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12084 ;;      Locals:         0       0       0       0       0      33       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12085 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12086 ;;      Totals:         0       0       6       0       0      33       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12087 ;;Total ram usage:       39 bytes
 12088 ;; Hardware stack levels required when called:    9
 12089 ;; This function calls:
 12090 ;;		_PWM3_LoadDutyValue
 12091 ;;		_PWM4_LoadDutyValue
 12092 ;;		_SYSTEM_Initialize
 12093 ;;		_TMR0_StartTimer
 12094 ;;		_TMR0_StopTimer
 12095 ;;		_TMR2_StopTimer
 12096 ;;		___aldiv
 12097 ;;		___lmul
 12098 ;;		_checkBatteryVoltage
 12099 ;;		_checkMainSupplyFailure
 12100 ;;		_default_init
 12101 ;;		_default_menu
 12102 ;;		_display
 12103 ;;		_eeprom_write
 12104 ;;		_initMemRead
 12105 ;;		_keypad
 12106 ;;		_lcd
 12107 ;;		_lcdInit
 12108 ;;		_number_2
 12109 ;;		_number_3
 12110 ;;		_number_4
 12111 ;;		_ouputOnAntiClock
 12112 ;;		_ouputOnClockwise
 12113 ;;		_outputOn
 12114 ;;		_putch
 12115 ;;		_saveConfiguration
 12116 ;;		_serialCommand
 12117 ;; This function is called by:
 12118 ;;		Startup code after reset
 12119 ;; This function uses a non-reentrant model
 12120 ;;
 12121                           
 12122                           
 12123                           ;psect for function _main
 12124  1A2D                     _main:	
 12125                           
 12126                           ;main.c: 854: int temp = 0;
 12127                           
 12128                           ;incstack = 0
 12129                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12130  1A2D  0144               	movlb	4	; select bank4
 12131  1A2E  01BF               	clrf	main@temp^(0+512)
 12132  1A2F  01C0               	clrf	(main@temp+1)^(0+512)
 12133                           
 12134                           ;main.c: 855: char cmpName[] = "ALTOS";
 12135  1A30  30C5               	movlw	low main@F15465
 12136  1A31  0086               	movwf	6
 12137  1A32  3001               	movlw	high main@F15465
 12138  1A33  0087               	movwf	7
 12139  1A34  3031               	movlw	low main@cmpName
 12140  1A35  0084               	movwf	4
 12141  1A36  3002               	movlw	high main@cmpName
 12142  1A37  0085               	movwf	5
 12143  1A38  3006               	movlw	6
 12144  1A39  0141               	movlb	1	; select bank1
 12145  1A3A  00B3               	movwf	??_main^(0+128)
 12146  1A3B                     u6730:	
 12147  1A3B  0016               	moviw fsr1++
 12148  1A3C  001A               	movwi fsr0++
 12149  1A3D  0BB3               	decfsz	??_main^(0+128),f
 12150  1A3E  2A3B               	goto	u6730
 12151                           
 12152                           ;main.c: 856: char cmpName1[] = "ENGINEERS P. LTD";
 12153  1A3F  30A0               	movlw	low main@F15467
 12154  1A40  0086               	movwf	6
 12155  1A41  3001               	movlw	high main@F15467
 12156  1A42  0087               	movwf	7
 12157  1A43  3020               	movlw	low main@cmpName1
 12158  1A44  0084               	movwf	4
 12159  1A45  3002               	movlw	high main@cmpName1
 12160  1A46  0085               	movwf	5
 12161  1A47  3011               	movlw	17
 12162  1A48  00B3               	movwf	??_main^(0+128)
 12163  1A49                     u6740:	
 12164  1A49  0016               	moviw fsr1++
 12165  1A4A  001A               	movwi fsr0++
 12166  1A4B  0BB3               	decfsz	??_main^(0+128),f
 12167  1A4C  2A49               	goto	u6740
 12168                           
 12169                           ;main.c: 858: unsigned char tempStatus,txParam,command = 0;
 12170  1A4D  0144               	movlb	4	; select bank4
 12171  1A4E  01BC               	clrf	main@command^(0+512)
 12172                           
 12173                           ;main.c: 860: SYSTEM_Initialize();
 12174  1A4F  31A2  2273  319A   	fcall	_SYSTEM_Initialize
 12175                           
 12176                           ;main.c: 865: ANSELC = 0x00;
 12177  1A52  017E               	movlb	62	; select bank62
 12178  1A53  01CE               	clrf	78	;volatile
 12179                           
 12180                           ;main.c: 866: ANSELB = 0x00;
 12181  1A54  01C3               	clrf	67	;volatile
 12182                           
 12183                           ;main.c: 867: ANSELD = 0x00;
 12184  1A55  01D9               	clrf	89	;volatile
 12185                           
 12186                           ;main.c: 868: ANSELE = 0x00;
 12187  1A56  01E4               	clrf	100	;volatile
 12188                           
 12189                           ;main.c: 870: ANSELA = 0x13;
 12190  1A57  3013               	movlw	19
 12191  1A58  00B8               	movwf	56	;volatile
 12192                           
 12193                           ;main.c: 872: TRISA = 0x3F;
 12194  1A59  303F               	movlw	63
 12195  1A5A  0140               	movlb	0	; select bank0
 12196  1A5B  0091               	movwf	17	;volatile
 12197                           
 12198                           ;main.c: 873: TRISB = 0x01;
 12199  1A5C  3001               	movlw	1
 12200  1A5D  0092               	movwf	18	;volatile
 12201                           
 12202                           ;main.c: 874: TRISC = 0xFF;
 12203  1A5E  30FF               	movlw	255
 12204  1A5F  0093               	movwf	19	;volatile
 12205                           
 12206                           ;main.c: 875: TRISD = 0x00;
 12207  1A60  0194               	clrf	20	;volatile
 12208                           
 12209                           ;main.c: 876: TRISE = 0x07;
 12210  1A61  3007               	movlw	7
 12211  1A62  0095               	movwf	21	;volatile
 12212                           
 12213                           ;main.c: 878: PORTB = 0x00;
 12214  1A63  018D               	clrf	13	;volatile
 12215                           
 12216                           ;main.c: 879: PORTC = 0x00;
 12217  1A64  018E               	clrf	14	;volatile
 12218                           
 12219                           ;main.c: 880: PORTD = 0x00;
 12220  1A65  018F               	clrf	15	;volatile
 12221                           
 12222                           ;main.c: 881: PORTC = 0x00;
 12223  1A66  018E               	clrf	14	;volatile
 12224                           
 12225                           ;main.c: 883: default_init();
 12226  1A67  31A1  2163  319A   	fcall	_default_init
 12227                           
 12228                           ;main.c: 885: _delay((unsigned long)((20)*(8000000/4000.0)));
 12229  1A6A  3034               	movlw	52
 12230  1A6B  0141               	movlb	1	; select bank1
 12231  1A6C  00B3               	movwf	??_main^(0+128)
 12232  1A6D  30F1               	movlw	241
 12233  1A6E                     u7177:	
 12234  1A6E  0B89               	decfsz	9,f
 12235  1A6F  2A6E               	goto	u7177
 12236  1A70  0BB3               	decfsz	??_main^(0+128),f
 12237  1A71  2A6E               	goto	u7177
 12238  1A72  3200               	nop2
 12239                           
 12240                           ;main.c: 887: TMR2_StopTimer();
 12241  1A73  3190  2000  319A   	fcall	_TMR2_StopTimer
 12242                           
 12243                           ;main.c: 889: PWM3_LoadDutyValue(0);
 12244  1A76  3000               	movlw	0
 12245  1A77  0140               	movlb	0	; select bank0
 12246  1A78  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
 12247  1A79  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
 12248  1A7A  31A2  2235  319A   	fcall	_PWM3_LoadDutyValue
 12249                           
 12250                           ;main.c: 890: PWM4_LoadDutyValue(0);
 12251  1A7D  3000               	movlw	0
 12252  1A7E  0140               	movlb	0	; select bank0
 12253  1A7F  00A0               	movwf	PWM4_LoadDutyValue@dutyValue
 12254  1A80  00A1               	movwf	PWM4_LoadDutyValue@dutyValue+1
 12255  1A81  31A2  2254  319A   	fcall	_PWM4_LoadDutyValue
 12256                           
 12257                           ;main.c: 892: lcdInit();
 12258  1A84  31A2  2217  319A   	fcall	_lcdInit
 12259                           
 12260                           ;main.c: 894: lcd((0x01),(0));
 12261  1A87  0140               	movlb	0	; select bank0
 12262  1A88  01A9               	clrf	lcd@b
 12263  1A89  3001               	movlw	1
 12264  1A8A  31A4  245E  319A   	fcall	_lcd
 12265                           
 12266                           ;main.c: 896: display((char *)"     ALTOS      ",(0x80));
 12267  1A8D  3044               	movlw	low (STR_20| (0+32768))
 12268  1A8E  0140               	movlb	0	; select bank0
 12269  1A8F  00AC               	movwf	display@a
 12270  1A90  30A8               	movlw	high (STR_20| (0+32768))
 12271  1A91  00AD               	movwf	display@a+1
 12272  1A92  3080               	movlw	128
 12273  1A93  0141               	movlb	1	; select bank1
 12274  1A94  00B3               	movwf	??_main^(0+128)
 12275  1A95  0833               	movf	??_main^(0+128),w
 12276  1A96  0140               	movlb	0	; select bank0
 12277  1A97  00AE               	movwf	display@add
 12278  1A98  31A2  2297  319A   	fcall	_display
 12279                           
 12280                           ;main.c: 897: display((char *)"ENGINEERS P. LTD",(0xC0));
 12281  1A9B  3066               	movlw	low (STR_21| (0+32768))
 12282  1A9C  0140               	movlb	0	; select bank0
 12283  1A9D  00AC               	movwf	display@a
 12284  1A9E  30A8               	movlw	high (STR_21| (0+32768))
 12285  1A9F  00AD               	movwf	display@a+1
 12286  1AA0  30C0               	movlw	192
 12287  1AA1  0141               	movlb	1	; select bank1
 12288  1AA2  00B3               	movwf	??_main^(0+128)
 12289  1AA3  0833               	movf	??_main^(0+128),w
 12290  1AA4  0140               	movlb	0	; select bank0
 12291  1AA5  00AE               	movwf	display@add
 12292  1AA6  31A2  2297  319A   	fcall	_display
 12293                           
 12294                           ;main.c: 903: (INTCONbits.GIE = 1);
 12295  1AA9  178B               	bsf	11,7	;volatile
 12296                           
 12297                           ;main.c: 906: (INTCONbits.PEIE = 1);
 12298  1AAA  170B               	bsf	11,6	;volatile
 12299                           
 12300                           ;main.c: 909: PIE3bits.TXIE = 0;
 12301  1AAB  014E               	movlb	14	; select bank14
 12302  1AAC  1219               	bcf	25,4	;volatile
 12303                           
 12304                           ;main.c: 910: PIE3bits.RCIE = 1;
 12305  1AAD  1699               	bsf	25,5	;volatile
 12306                           
 12307                           ;main.c: 917: (RC4) = (RC1) = (RC2) = (RC0) = 0;
 12308  1AAE  0140               	movlb	0	; select bank0
 12309  1AAF  100E               	bcf	14,0	;volatile
 12310  1AB0  110E               	bcf	14,2	;volatile
 12311  1AB1  108E               	bcf	14,1	;volatile
 12312  1AB2  120E               	bcf	14,4	;volatile
 12313                           
 12314                           ;main.c: 919: (RA5) = 0;
 12315  1AB3  128C               	bcf	12,5	;volatile
 12316                           
 12317                           ;main.c: 920: (RE0) = 1;
 12318  1AB4  1410               	bsf	16,0	;volatile
 12319                           
 12320                           ;main.c: 921: (RB0) = 0;
 12321  1AB5  100D               	bcf	13,0	;volatile
 12322                           
 12323                           ;main.c: 922: RD7 = 0;
 12324  1AB6  138F               	bcf	15,7	;volatile
 12325                           
 12326                           ;main.c: 923: (RE1) = 1;
 12327  1AB7  1490               	bsf	16,1	;volatile
 12328                           
 12329                           ;main.c: 925: (RE2) = 0;
 12330  1AB8  1110               	bcf	16,2	;volatile
 12331                           
 12332                           ;main.c: 927: (RD6) = 1;
 12333  1AB9  170F               	bsf	15,6	;volatile
 12334                           
 12335                           ;main.c: 929: for(int i = 0; i < 10; i++)
 12336  1ABA  0144               	movlb	4	; select bank4
 12337  1ABB  01BA               	clrf	main@i^(0+512)
 12338  1ABC  01BB               	clrf	(main@i+1)^(0+512)
 12339  1ABD  083B               	movf	(main@i+1)^(0+512),w
 12340  1ABE  3A80               	xorlw	128
 12341  1ABF  0141               	movlb	1	; select bank1
 12342  1AC0  00B3               	movwf	??_main^(0+128)
 12343  1AC1  3080               	movlw	128
 12344  1AC2  0233               	subwf	??_main^(0+128),w
 12345  1AC3  1D03               	skipz
 12346  1AC4  2AC8               	goto	u6755
 12347  1AC5  300A               	movlw	10
 12348  1AC6  0144               	movlb	4	; select bank4
 12349  1AC7  023A               	subwf	main@i^(0+512),w
 12350  1AC8                     u6755:	
 12351  1AC8  1803               	btfsc	3,0
 12352  1AC9  2AE5               	goto	l1266
 12353  1ACA                     l10163:	
 12354                           
 12355                           ;main.c: 930: _delay((unsigned long)((50)*(8000000/4000.0)));
 12356  1ACA  3082               	movlw	130
 12357  1ACB  0141               	movlb	1	; select bank1
 12358  1ACC  00B3               	movwf	??_main^(0+128)
 12359  1ACD  30DD               	movlw	221
 12360  1ACE                     u7187:	
 12361  1ACE  0B89               	decfsz	9,f
 12362  1ACF  2ACE               	goto	u7187
 12363  1AD0  0BB3               	decfsz	??_main^(0+128),f
 12364  1AD1  2ACE               	goto	u7187
 12365  1AD2  3200               	nop2
 12366  1AD3  3001               	movlw	1
 12367  1AD4  0144               	movlb	4	; select bank4
 12368  1AD5  07BA               	addwf	main@i^(0+512),f
 12369  1AD6  3000               	movlw	0
 12370  1AD7  3DBB               	addwfc	(main@i+1)^(0+512),f
 12371  1AD8  083B               	movf	(main@i+1)^(0+512),w
 12372  1AD9  3A80               	xorlw	128
 12373  1ADA  0141               	movlb	1	; select bank1
 12374  1ADB  00B3               	movwf	??_main^(0+128)
 12375  1ADC  3080               	movlw	128
 12376  1ADD  0233               	subwf	??_main^(0+128),w
 12377  1ADE  1D03               	skipz
 12378  1ADF  2AE3               	goto	u6765
 12379  1AE0  300A               	movlw	10
 12380  1AE1  0144               	movlb	4	; select bank4
 12381  1AE2  023A               	subwf	main@i^(0+512),w
 12382  1AE3                     u6765:	
 12383  1AE3  1C03               	skipc
 12384  1AE4  2ACA               	goto	l10163
 12385  1AE5                     l1266:	
 12386                           
 12387                           ;main.c: 931: (RD6) = 0;
 12388  1AE5  0140               	movlb	0	; select bank0
 12389  1AE6  130F               	bcf	15,6	;volatile
 12390                           
 12391                           ;main.c: 933: initMemRead();
 12392  1AE7  3194  243C  319A   	fcall	_initMemRead
 12393                           
 12394                           ;main.c: 935: default_menu();
 12395  1AEA  3199  2168  319A   	fcall	_default_menu
 12396                           
 12397                           ;main.c: 937: SetParamCount = 0;
 12398  1AED  0142               	movlb	2	; select bank2
 12399  1AEE  01E6               	clrf	_SetParamCount^(0+256)
 12400                           
 12401                           ;main.c: 939: integralValue = 0;
 12402  1AEF  01CE               	clrf	_integralValue^(0+256)
 12403  1AF0  01CF               	clrf	(_integralValue+1)^(0+256)
 12404                           
 12405                           ;main.c: 940: diffValue = 0;
 12406  1AF1  01CC               	clrf	_diffValue^(0+256)
 12407  1AF2  01CD               	clrf	(_diffValue+1)^(0+256)
 12408                           
 12409                           ;main.c: 944: timeInMs = 0;
 12410  1AF3  01DE               	clrf	_timeInMs^(0+256)
 12411  1AF4  01DF               	clrf	(_timeInMs+1)^(0+256)
 12412                           
 12413                           ;main.c: 946: txParam = 0x30;
 12414  1AF5  3030               	movlw	48
 12415  1AF6  0141               	movlb	1	; select bank1
 12416  1AF7  00B3               	movwf	??_main^(0+128)
 12417  1AF8  0833               	movf	??_main^(0+128),w
 12418  1AF9  0144               	movlb	4	; select bank4
 12419  1AFA  00B7               	movwf	main@txParam^(0+512)
 12420                           
 12421                           ;main.c: 948: PIE3bits.RCIE = 1;
 12422  1AFB  014E               	movlb	14	; select bank14
 12423  1AFC  1699               	bsf	25,5	;volatile
 12424                           
 12425                           ;main.c: 950: temp = sizeof(cmpName);
 12426  1AFD  3006               	movlw	6
 12427  1AFE  0144               	movlb	4	; select bank4
 12428  1AFF  00BF               	movwf	main@temp^(0+512)
 12429  1B00  3000               	movlw	0
 12430  1B01  00C0               	movwf	(main@temp^(0+512)+1)
 12431                           
 12432                           ;main.c: 952: for(char i = 0; i < (temp-1); i++)
 12433  1B02  01BD               	clrf	main@i_2125^(0+512)
 12434  1B03                     l10191:	
 12435  1B03  083F               	movf	main@temp^(0+512),w
 12436  1B04  3EFF               	addlw	255
 12437  1B05  0141               	movlb	1	; select bank1
 12438  1B06  00B3               	movwf	??_main^(0+128)
 12439  1B07  30FF               	movlw	255
 12440  1B08  0144               	movlb	4	; select bank4
 12441  1B09  3D40               	addwfc	(main@temp+1)^(0+512),w
 12442  1B0A  0141               	movlb	1	; select bank1
 12443  1B0B  00B4               	movwf	(??_main+1)^(0+128)
 12444  1B0C  0834               	movf	(??_main+1)^(0+128),w
 12445  1B0D  3A80               	xorlw	128
 12446  1B0E  3C80               	sublw	128
 12447  1B0F  1D03               	skipz
 12448  1B10  2B14               	goto	u6775
 12449  1B11  0833               	movf	??_main^(0+128),w
 12450  1B12  0144               	movlb	4	; select bank4
 12451  1B13  023D               	subwf	main@i_2125^(0+512),w
 12452  1B14                     u6775:	
 12453  1B14  319B  1803         	btfsc	3,0
 12454  1B16  2B31               	goto	l10193
 12455                           
 12456                           ;main.c: 953: {
 12457                           ;main.c: 954: putch(cmpName[i]);
 12458  1B17  0144               	movlb	4	; select bank4
 12459  1B18  083D               	movf	main@i_2125^(0+512),w
 12460  1B19  3E31               	addlw	(low (main@cmpName| (0+512)))& (0+255)
 12461  1B1A  0086               	movwf	6
 12462  1B1B  3002               	movlw	2	; select bank4/5
 12463  1B1C  0087               	movwf	7
 12464  1B1D  0801               	movf	1,w
 12465  1B1E  31A0  2096  319A   	fcall	_putch
 12466                           
 12467                           ;main.c: 955: _delay((unsigned long)((1)*(8000000/4000.0)));
 12468  1B21  3003               	movlw	3
 12469  1B22  0141               	movlb	1	; select bank1
 12470  1B23  00B3               	movwf	??_main^(0+128)
 12471  1B24  3097               	movlw	151
 12472  1B25                     u7197:	
 12473  1B25  0B89               	decfsz	9,f
 12474  1B26  2B25               	goto	u7197
 12475  1B27  0BB3               	decfsz	??_main^(0+128),f
 12476  1B28  2B25               	goto	u7197
 12477  1B29  3200               	nop2
 12478  1B2A  3001               	movlw	1
 12479  1B2B  0141               	movlb	1	; select bank1
 12480  1B2C  00B3               	movwf	??_main^(0+128)
 12481  1B2D  0833               	movf	??_main^(0+128),w
 12482  1B2E  0144               	movlb	4	; select bank4
 12483  1B2F  07BD               	addwf	main@i_2125^(0+512),f
 12484  1B30  2B03               	goto	l10191
 12485                           
 12486                           	psect	swtext1
 12487  2000                     __pswtext1:	
 12488  2000                     S10823:	
 12489  2000  3182  2AAC         	ljmp	l10427
 12490  2002  3182  2AD4         	ljmp	l10435
 12491  2004  3182  2AF9         	ljmp	l10443
 12492  2006  3183  2B1E         	ljmp	l10451
 12493  2008  3183  2B43         	ljmp	l10459
 12494                           
 12495                           	psect	swtext2
 12496  200A                     __pswtext2:	
 12497  200A                     S10825:	
 12498  200A  3183  2B77         	ljmp	l10471
 12499  200C  3183  2BE4         	ljmp	l10493
 12500  200E  3184  2C39         	ljmp	l10509
 12501  2010  3184  2C8E         	ljmp	l10525
 12502  2012  3184  2CDA         	ljmp	l10545
 12503                           
 12504                           	psect	swtext3
 12505  2014                     __pswtext3:	
 12506  2014                     S10827:	
 12507  2014  3185  2D53         	ljmp	l10571
 12508  2016  3185  2DBD         	ljmp	l10593
 12509  2018  3186  2E13         	ljmp	l10609
 12510  201A  3186  2E69         	ljmp	l10625
 12511  201C  3186  2EAE         	ljmp	l1354
 12512                           
 12513                           	psect	text1
 12514  0BBE                     __ptext1:	
 12515 ;; *************** function _serialCommand *****************
 12516 ;; Defined at:
 12517 ;;		line 5 in file "serialCmd.c"
 12518 ;; Parameters:    Size  Location     Type
 12519 ;;		None
 12520 ;; Auto vars:     Size  Location     Type
 12521 ;;  rcvCmd          1   17[BANK1 ] unsigned char 
 12522 ;; Return value:  Size  Location     Type
 12523 ;;                  1    wreg      unsigned char 
 12524 ;; Registers used:
 12525 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12526 ;; Tracked objects:
 12527 ;;		On entry : 0/0
 12528 ;;		On exit  : 0/0
 12529 ;;		Unchanged: 0/0
 12530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 12531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12532 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12533 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12534 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12535 ;;Total ram usage:        3 bytes
 12536 ;; Hardware stack levels used:    1
 12537 ;; Hardware stack levels required when called:    8
 12538 ;; This function calls:
 12539 ;;		___aldiv
 12540 ;;		___lmul
 12541 ;;		___wmul
 12542 ;;		_display
 12543 ;;		_getch
 12544 ;;		_lcd
 12545 ;;		_number_2
 12546 ;;		_number_3
 12547 ;;		_ouputOnAntiClock
 12548 ;;		_ouputOnClockwise
 12549 ;;		_saveConfiguration
 12550 ;; This function is called by:
 12551 ;;		_main
 12552 ;; This function uses a non-reentrant model
 12553 ;;
 12554                           
 12555                           
 12556                           ;psect for function _serialCommand
 12557  0BBE                     _serialCommand:	
 12558                           
 12559                           ;serialCmd.c: 7: unsigned char rcvCmd = 0;
 12560                           
 12561                           ;incstack = 0
 12562                           ; Regs used in _serialCommand: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12563  0BBE  0141               	movlb	1	; select bank1
 12564  0BBF  01B1               	clrf	serialCommand@rcvCmd^(0+128)
 12565                           
 12566                           ;serialCmd.c: 8: rcvCmd = getch();
 12567  0BC0  3187  27E7  318B   	fcall	_getch
 12568  0BC3  0141               	movlb	1	; select bank1
 12569  0BC4  00AF               	movwf	??_serialCommand^(0+128)
 12570  0BC5  082F               	movf	??_serialCommand^(0+128),w
 12571  0BC6  00B1               	movwf	serialCommand@rcvCmd^(0+128)
 12572                           
 12573                           ;serialCmd.c: 10: if(rcvCmd >= '0' && rcvCmd < 'z')
 12574  0BC7  3030               	movlw	48
 12575  0BC8  0231               	subwf	serialCommand@rcvCmd^(0+128),w
 12576  0BC9  1C03               	skipc
 12577  0BCA  2FFA               	goto	l10047
 12578  0BCB  307A               	movlw	122
 12579  0BCC  0231               	subwf	serialCommand@rcvCmd^(0+128),w
 12580  0BCD  1C03               	btfss	3,0
 12581  0BCE  2FD5               	goto	l10045
 12582  0BCF  2FFA               	goto	l10047
 12583  0BD0                     l1634:	
 12584                           ;serialCmd.c: 13: {
 12585                           ;serialCmd.c: 14: case START_CMD:
 12586                           
 12587                           ;serialCmd.c: 11: {
 12588                           ;serialCmd.c: 12: switch(rcvCmd)
 12589                           
 12590                           
 12591                           ;serialCmd.c: 15: STARTED = 1;
 12592  0BD0  17F2               	bsf	_STARTED/(0+8),_STARTED& (0+7)
 12593                           
 12594                           ;serialCmd.c: 16: (RD4) = 0;
 12595  0BD1  0140               	movlb	0	; select bank0
 12596  0BD2  120F               	bcf	15,4	;volatile
 12597                           
 12598                           ;serialCmd.c: 18: display((char *)"Foot Switch",(0x80));
 12599  0BD3  3091               	movlw	low (STR_30| (0+32768))
 12600  0BD4  00AC               	movwf	display@a
 12601  0BD5  30A8               	movlw	high (STR_30| (0+32768))
 12602  0BD6  00AD               	movwf	display@a+1
 12603  0BD7  3080               	movlw	128
 12604  0BD8  0141               	movlb	1	; select bank1
 12605  0BD9  00AF               	movwf	??_serialCommand^(0+128)
 12606  0BDA  082F               	movf	??_serialCommand^(0+128),w
 12607  0BDB  0140               	movlb	0	; select bank0
 12608  0BDC  00AE               	movwf	display@add
 12609  0BDD  31A2  2297  318B   	fcall	_display
 12610                           
 12611                           ;serialCmd.c: 20: preDirection = STOP;
 12612  0BE0  3002               	movlw	2
 12613  0BE1  0141               	movlb	1	; select bank1
 12614  0BE2  00AF               	movwf	??_serialCommand^(0+128)
 12615  0BE3  082F               	movf	??_serialCommand^(0+128),w
 12616  0BE4  0142               	movlb	2	; select bank2
 12617  0BE5  00E7               	movwf	_preDirection^(0+256)
 12618                           
 12619                           ;serialCmd.c: 21: preClockWiseTime = clockWiseTime;
 12620  0BE6  0141               	movlb	1	; select bank1
 12621  0BE7  084F               	movf	(_clockWiseTime+3)^(0+128),w
 12622  0BE8  0142               	movlb	2	; select bank2
 12623  0BE9  00BF               	movwf	(_preClockWiseTime+3)^(0+256)
 12624  0BEA  0141               	movlb	1	; select bank1
 12625  0BEB  084E               	movf	(_clockWiseTime+2)^(0+128),w
 12626  0BEC  0142               	movlb	2	; select bank2
 12627  0BED  00BE               	movwf	(_preClockWiseTime+2)^(0+256)
 12628  0BEE  0141               	movlb	1	; select bank1
 12629  0BEF  084D               	movf	(_clockWiseTime+1)^(0+128),w
 12630  0BF0  0142               	movlb	2	; select bank2
 12631  0BF1  00BD               	movwf	(_preClockWiseTime+1)^(0+256)
 12632  0BF2  0141               	movlb	1	; select bank1
 12633  0BF3  084C               	movf	_clockWiseTime^(0+128),w
 12634  0BF4  0142               	movlb	2	; select bank2
 12635  0BF5  00BC               	movwf	_preClockWiseTime^(0+256)
 12636                           
 12637                           ;serialCmd.c: 22: preAntiClockWiseTime = antiClockWiseTime;
 12638  0BF6  0141               	movlb	1	; select bank1
 12639  0BF7  084B               	movf	(_antiClockWiseTime+3)^(0+128),w
 12640  0BF8  0142               	movlb	2	; select bank2
 12641  0BF9  00BB               	movwf	(_preAntiClockWiseTime+3)^(0+256)
 12642  0BFA  0141               	movlb	1	; select bank1
 12643  0BFB  084A               	movf	(_antiClockWiseTime+2)^(0+128),w
 12644  0BFC  0142               	movlb	2	; select bank2
 12645  0BFD  00BA               	movwf	(_preAntiClockWiseTime+2)^(0+256)
 12646  0BFE  0141               	movlb	1	; select bank1
 12647  0BFF  0849               	movf	(_antiClockWiseTime+1)^(0+128),w
 12648  0C00  0142               	movlb	2	; select bank2
 12649  0C01  00B9               	movwf	(_preAntiClockWiseTime+1)^(0+256)
 12650  0C02  0141               	movlb	1	; select bank1
 12651  0C03  0848               	movf	_antiClockWiseTime^(0+128),w
 12652  0C04  0142               	movlb	2	; select bank2
 12653  0C05  00B8               	movwf	_preAntiClockWiseTime^(0+256)
 12654                           
 12655                           ;serialCmd.c: 24: if((doorOpened == 0) && (openedByFoot == 0))
 12656  0C06  1F72               	btfss	_doorOpened/(0+8),_doorOpened& (0+7)
 12657  0C07  1A72               	btfsc	_openedByFoot/(0+8),_openedByFoot& (0+7)
 12658  0C08  2C1C               	goto	l1635
 12659                           
 12660                           ;serialCmd.c: 25: {
 12661                           ;serialCmd.c: 27: display((char *)"Foot Clock",(0x80));
 12662  0C09  309D               	movlw	low (STR_31| (0+32768))
 12663  0C0A  0140               	movlb	0	; select bank0
 12664  0C0B  00AC               	movwf	display@a
 12665  0C0C  30A8               	movlw	high (STR_31| (0+32768))
 12666  0C0D  00AD               	movwf	display@a+1
 12667  0C0E  3080               	movlw	128
 12668  0C0F  0141               	movlb	1	; select bank1
 12669  0C10  00AF               	movwf	??_serialCommand^(0+128)
 12670  0C11  082F               	movf	??_serialCommand^(0+128),w
 12671  0C12  0140               	movlb	0	; select bank0
 12672  0C13  00AE               	movwf	display@add
 12673  0C14  31A2  2297  318B   	fcall	_display
 12674                           
 12675                           ;serialCmd.c: 28: openedByFoot = 1;
 12676  0C17  1672               	bsf	_openedByFoot/(0+8),_openedByFoot& (0+7)
 12677                           
 12678                           ;serialCmd.c: 29: ouputOnClockwise();
 12679  0C18  3192  2210  318B   	fcall	_ouputOnClockwise
 12680                           
 12681                           ;serialCmd.c: 30: }
 12682  0C1B  2CBB               	goto	l9879
 12683  0C1C                     l1635:	
 12684                           
 12685                           ;serialCmd.c: 32: else if( (doorOpened == 1) && (openedByFoot == 0) )
 12686  0C1C  1B72               	btfsc	_doorOpened/(0+8),_doorOpened& (0+7)
 12687  0C1D  1A72               	btfsc	_openedByFoot/(0+8),_openedByFoot& (0+7)
 12688  0C1E  2CB2               	goto	l1637
 12689                           
 12690                           ;serialCmd.c: 33: {
 12691                           ;serialCmd.c: 34: openedByFoot = 1;
 12692  0C1F  1672               	bsf	_openedByFoot/(0+8),_openedByFoot& (0+7)
 12693                           
 12694                           ;serialCmd.c: 36: display((char *)"Already Open",(0x80));
 12695  0C20  3077               	movlw	low (STR_32| (0+32768))
 12696  0C21  0140               	movlb	0	; select bank0
 12697  0C22  00AC               	movwf	display@a
 12698  0C23  30A8               	movlw	high (STR_32| (0+32768))
 12699  0C24  00AD               	movwf	display@a+1
 12700  0C25  3080               	movlw	128
 12701  0C26  0141               	movlb	1	; select bank1
 12702  0C27  00AF               	movwf	??_serialCommand^(0+128)
 12703  0C28  082F               	movf	??_serialCommand^(0+128),w
 12704  0C29  0140               	movlb	0	; select bank0
 12705  0C2A  00AE               	movwf	display@add
 12706  0C2B  31A2  2297  318B   	fcall	_display
 12707                           
 12708                           ;serialCmd.c: 38: preClockWiseTime = (clockWiseTime * (100 - (83)))/100;
 12709  0C2E  3000               	movlw	0
 12710  0C2F  0140               	movlb	0	; select bank0
 12711  0C30  00AF               	movwf	___aldiv@divisor+3
 12712  0C31  3000               	movlw	0
 12713  0C32  00AE               	movwf	___aldiv@divisor+2
 12714  0C33  3000               	movlw	0
 12715  0C34  00AD               	movwf	___aldiv@divisor+1
 12716  0C35  3064               	movlw	100
 12717  0C36  00AC               	movwf	___aldiv@divisor
 12718  0C37  0141               	movlb	1	; select bank1
 12719  0C38  084F               	movf	(_clockWiseTime+3)^(0+128),w
 12720  0C39  0140               	movlb	0	; select bank0
 12721  0C3A  00A3               	movwf	___lmul@multiplier+3
 12722  0C3B  0141               	movlb	1	; select bank1
 12723  0C3C  084E               	movf	(_clockWiseTime+2)^(0+128),w
 12724  0C3D  0140               	movlb	0	; select bank0
 12725  0C3E  00A2               	movwf	___lmul@multiplier+2
 12726  0C3F  0141               	movlb	1	; select bank1
 12727  0C40  084D               	movf	(_clockWiseTime+1)^(0+128),w
 12728  0C41  0140               	movlb	0	; select bank0
 12729  0C42  00A1               	movwf	___lmul@multiplier+1
 12730  0C43  0141               	movlb	1	; select bank1
 12731  0C44  084C               	movf	_clockWiseTime^(0+128),w
 12732  0C45  0140               	movlb	0	; select bank0
 12733  0C46  00A0               	movwf	___lmul@multiplier
 12734  0C47  3000               	movlw	0
 12735  0C48  00A7               	movwf	___lmul@multiplicand+3
 12736  0C49  3000               	movlw	0
 12737  0C4A  00A6               	movwf	___lmul@multiplicand+2
 12738  0C4B  3000               	movlw	0
 12739  0C4C  00A5               	movwf	___lmul@multiplicand+1
 12740  0C4D  3011               	movlw	17
 12741  0C4E  00A4               	movwf	___lmul@multiplicand
 12742  0C4F  31A3  2339  318B   	fcall	___lmul
 12743  0C52  0140               	movlb	0	; select bank0
 12744  0C53  0823               	movf	?___lmul+3,w
 12745  0C54  00B3               	movwf	___aldiv@dividend+3
 12746  0C55  0822               	movf	?___lmul+2,w
 12747  0C56  00B2               	movwf	___aldiv@dividend+2
 12748  0C57  0821               	movf	?___lmul+1,w
 12749  0C58  00B1               	movwf	___aldiv@dividend+1
 12750  0C59  0820               	movf	?___lmul,w
 12751  0C5A  00B0               	movwf	___aldiv@dividend
 12752  0C5B  31A6  2639  318B   	fcall	___aldiv
 12753  0C5E  0140               	movlb	0	; select bank0
 12754  0C5F  082F               	movf	?___aldiv+3,w
 12755  0C60  0142               	movlb	2	; select bank2
 12756  0C61  00BF               	movwf	(_preClockWiseTime+3)^(0+256)
 12757  0C62  0140               	movlb	0	; select bank0
 12758  0C63  082E               	movf	?___aldiv+2,w
 12759  0C64  0142               	movlb	2	; select bank2
 12760  0C65  00BE               	movwf	(_preClockWiseTime+2)^(0+256)
 12761  0C66  0140               	movlb	0	; select bank0
 12762  0C67  082D               	movf	?___aldiv+1,w
 12763  0C68  0142               	movlb	2	; select bank2
 12764  0C69  00BD               	movwf	(_preClockWiseTime+1)^(0+256)
 12765  0C6A  0140               	movlb	0	; select bank0
 12766  0C6B  082C               	movf	?___aldiv,w
 12767  0C6C  0142               	movlb	2	; select bank2
 12768  0C6D  00BC               	movwf	_preClockWiseTime^(0+256)
 12769                           
 12770                           ;serialCmd.c: 39: preAntiClockWiseTime = (antiClockWiseTime * (100 - (83)))/100;
 12771  0C6E  3000               	movlw	0
 12772  0C6F  0140               	movlb	0	; select bank0
 12773  0C70  00AF               	movwf	___aldiv@divisor+3
 12774  0C71  3000               	movlw	0
 12775  0C72  00AE               	movwf	___aldiv@divisor+2
 12776  0C73  3000               	movlw	0
 12777  0C74  00AD               	movwf	___aldiv@divisor+1
 12778  0C75  3064               	movlw	100
 12779  0C76  00AC               	movwf	___aldiv@divisor
 12780  0C77  0141               	movlb	1	; select bank1
 12781  0C78  084B               	movf	(_antiClockWiseTime+3)^(0+128),w
 12782  0C79  0140               	movlb	0	; select bank0
 12783  0C7A  00A3               	movwf	___lmul@multiplier+3
 12784  0C7B  0141               	movlb	1	; select bank1
 12785  0C7C  084A               	movf	(_antiClockWiseTime+2)^(0+128),w
 12786  0C7D  0140               	movlb	0	; select bank0
 12787  0C7E  00A2               	movwf	___lmul@multiplier+2
 12788  0C7F  0141               	movlb	1	; select bank1
 12789  0C80  0849               	movf	(_antiClockWiseTime+1)^(0+128),w
 12790  0C81  0140               	movlb	0	; select bank0
 12791  0C82  00A1               	movwf	___lmul@multiplier+1
 12792  0C83  0141               	movlb	1	; select bank1
 12793  0C84  0848               	movf	_antiClockWiseTime^(0+128),w
 12794  0C85  0140               	movlb	0	; select bank0
 12795  0C86  00A0               	movwf	___lmul@multiplier
 12796  0C87  3000               	movlw	0
 12797  0C88  00A7               	movwf	___lmul@multiplicand+3
 12798  0C89  3000               	movlw	0
 12799  0C8A  00A6               	movwf	___lmul@multiplicand+2
 12800  0C8B  3000               	movlw	0
 12801  0C8C  00A5               	movwf	___lmul@multiplicand+1
 12802  0C8D  3011               	movlw	17
 12803  0C8E  00A4               	movwf	___lmul@multiplicand
 12804  0C8F  31A3  2339  318B   	fcall	___lmul
 12805  0C92  0140               	movlb	0	; select bank0
 12806  0C93  0823               	movf	?___lmul+3,w
 12807  0C94  00B3               	movwf	___aldiv@dividend+3
 12808  0C95  0822               	movf	?___lmul+2,w
 12809  0C96  00B2               	movwf	___aldiv@dividend+2
 12810  0C97  0821               	movf	?___lmul+1,w
 12811  0C98  00B1               	movwf	___aldiv@dividend+1
 12812  0C99  0820               	movf	?___lmul,w
 12813  0C9A  00B0               	movwf	___aldiv@dividend
 12814  0C9B  31A6  2639  318B   	fcall	___aldiv
 12815  0C9E  0140               	movlb	0	; select bank0
 12816  0C9F  082F               	movf	?___aldiv+3,w
 12817  0CA0  0142               	movlb	2	; select bank2
 12818  0CA1  00BB               	movwf	(_preAntiClockWiseTime+3)^(0+256)
 12819  0CA2  0140               	movlb	0	; select bank0
 12820  0CA3  082E               	movf	?___aldiv+2,w
 12821  0CA4  0142               	movlb	2	; select bank2
 12822  0CA5  00BA               	movwf	(_preAntiClockWiseTime+2)^(0+256)
 12823  0CA6  0140               	movlb	0	; select bank0
 12824  0CA7  082D               	movf	?___aldiv+1,w
 12825  0CA8  0142               	movlb	2	; select bank2
 12826  0CA9  00B9               	movwf	(_preAntiClockWiseTime+1)^(0+256)
 12827  0CAA  0140               	movlb	0	; select bank0
 12828  0CAB  082C               	movf	?___aldiv,w
 12829  0CAC  0142               	movlb	2	; select bank2
 12830  0CAD  00B8               	movwf	_preAntiClockWiseTime^(0+256)
 12831                           
 12832                           ;serialCmd.c: 40: ouputOnClockwise();
 12833  0CAE  3192  2210  318B   	fcall	_ouputOnClockwise
 12834                           
 12835                           ;serialCmd.c: 41: }
 12836  0CB1  2CBB               	goto	l9879
 12837  0CB2                     l1637:	
 12838                           
 12839                           ;serialCmd.c: 42: else if((doorOpened == 1) && (openedByFoot == 1))
 12840  0CB2  1B72               	btfsc	_doorOpened/(0+8),_doorOpened& (0+7)
 12841  0CB3  1E72               	btfss	_openedByFoot/(0+8),_openedByFoot& (0+7)
 12842  0CB4  2CBB               	goto	l9879
 12843                           
 12844                           ;serialCmd.c: 43: {
 12845                           ;serialCmd.c: 44: doorOpened = 1;
 12846  0CB5  1772               	bsf	_doorOpened/(0+8),_doorOpened& (0+7)
 12847                           
 12848                           ;serialCmd.c: 45: ouputOnAntiClock();
 12849  0CB6  3188  20FA  318B   	fcall	_ouputOnAntiClock
 12850                           
 12851                           ;serialCmd.c: 46: openedByFoot =0;
 12852  0CB9  1272               	bcf	_openedByFoot/(0+8),_openedByFoot& (0+7)
 12853                           
 12854                           ;serialCmd.c: 47: doorOpened = 0;
 12855  0CBA  1372               	bcf	_doorOpened/(0+8),_doorOpened& (0+7)
 12856  0CBB                     l9879:	
 12857                           
 12858                           ;serialCmd.c: 49: }
 12859                           ;serialCmd.c: 50: _delay((unsigned long)((500)*(8000000/4000.0)));
 12860  0CBB  3006               	movlw	6
 12861  0CBC  0141               	movlb	1	; select bank1
 12862  0CBD  00B0               	movwf	(??_serialCommand^(0+128)+1)
 12863  0CBE  3013               	movlw	19
 12864  0CBF  00AF               	movwf	??_serialCommand^(0+128)
 12865  0CC0  30AD               	movlw	173
 12866  0CC1                     u7487:	
 12867  0CC1  0B89               	decfsz	9,f
 12868  0CC2  2CC1               	goto	u7487
 12869  0CC3  0BAF               	decfsz	??_serialCommand^(0+128),f
 12870  0CC4  2CC1               	goto	u7487
 12871  0CC5  0BB0               	decfsz	(??_serialCommand^(0+128)+1),f
 12872  0CC6  2CC1               	goto	u7487
 12873  0CC7  3200               	nop2
 12874                           
 12875                           ;serialCmd.c: 51: _delay((unsigned long)((500)*(8000000/4000.0)));
 12876  0CC8  3006               	movlw	6
 12877  0CC9  0141               	movlb	1	; select bank1
 12878  0CCA  00B0               	movwf	(??_serialCommand^(0+128)+1)
 12879  0CCB  3013               	movlw	19
 12880  0CCC  00AF               	movwf	??_serialCommand^(0+128)
 12881  0CCD  30AD               	movlw	173
 12882  0CCE                     u7497:	
 12883  0CCE  0B89               	decfsz	9,f
 12884  0CCF  2CCE               	goto	u7497
 12885  0CD0  0BAF               	decfsz	??_serialCommand^(0+128),f
 12886  0CD1  2CCE               	goto	u7497
 12887  0CD2  0BB0               	decfsz	(??_serialCommand^(0+128)+1),f
 12888  0CD3  2CCE               	goto	u7497
 12889  0CD4  3200               	nop2
 12890                           
 12891                           ;serialCmd.c: 52: GIE = 1;
 12892  0CD5  178B               	bsf	11,7	;volatile
 12893                           
 12894                           ;serialCmd.c: 54: (INTCONbits.GIE = 1);
 12895  0CD6  178B               	bsf	11,7	;volatile
 12896                           
 12897                           ;serialCmd.c: 57: (INTCONbits.PEIE = 1);
 12898  0CD7  170B               	bsf	11,6	;volatile
 12899                           
 12900                           ;serialCmd.c: 60: break;
 12901  0CD8  0008               	return
 12902  0CD9                     l1641:	
 12903                           ;serialCmd.c: 62: case STOP_CMD:
 12904                           
 12905                           
 12906                           ;serialCmd.c: 63: STARTED = 1;
 12907  0CD9  17F2               	bsf	_STARTED/(0+8),_STARTED& (0+7)
 12908                           
 12909                           ;serialCmd.c: 64: (RD4) = 0;
 12910  0CDA  0140               	movlb	0	; select bank0
 12911  0CDB  120F               	bcf	15,4	;volatile
 12912                           
 12913                           ;serialCmd.c: 66: display((char *)"Foot Switch",(0x80));
 12914  0CDC  3091               	movlw	low (STR_30| (0+32768))
 12915  0CDD  00AC               	movwf	display@a
 12916  0CDE  30A8               	movlw	high (STR_30| (0+32768))
 12917  0CDF  00AD               	movwf	display@a+1
 12918  0CE0  3080               	movlw	128
 12919  0CE1  0141               	movlb	1	; select bank1
 12920  0CE2  00AF               	movwf	??_serialCommand^(0+128)
 12921  0CE3  082F               	movf	??_serialCommand^(0+128),w
 12922  0CE4  0140               	movlb	0	; select bank0
 12923  0CE5  00AE               	movwf	display@add
 12924  0CE6  31A2  2297  318B   	fcall	_display
 12925                           
 12926                           ;serialCmd.c: 68: preDirection = STOP;
 12927  0CE9  3002               	movlw	2
 12928  0CEA  0141               	movlb	1	; select bank1
 12929  0CEB  00AF               	movwf	??_serialCommand^(0+128)
 12930  0CEC  082F               	movf	??_serialCommand^(0+128),w
 12931  0CED  0142               	movlb	2	; select bank2
 12932  0CEE  00E7               	movwf	_preDirection^(0+256)
 12933                           
 12934                           ;serialCmd.c: 69: preClockWiseTime = clockWiseTime;
 12935  0CEF  0141               	movlb	1	; select bank1
 12936  0CF0  084F               	movf	(_clockWiseTime+3)^(0+128),w
 12937  0CF1  0142               	movlb	2	; select bank2
 12938  0CF2  00BF               	movwf	(_preClockWiseTime+3)^(0+256)
 12939  0CF3  0141               	movlb	1	; select bank1
 12940  0CF4  084E               	movf	(_clockWiseTime+2)^(0+128),w
 12941  0CF5  0142               	movlb	2	; select bank2
 12942  0CF6  00BE               	movwf	(_preClockWiseTime+2)^(0+256)
 12943  0CF7  0141               	movlb	1	; select bank1
 12944  0CF8  084D               	movf	(_clockWiseTime+1)^(0+128),w
 12945  0CF9  0142               	movlb	2	; select bank2
 12946  0CFA  00BD               	movwf	(_preClockWiseTime+1)^(0+256)
 12947  0CFB  0141               	movlb	1	; select bank1
 12948  0CFC  084C               	movf	_clockWiseTime^(0+128),w
 12949  0CFD  0142               	movlb	2	; select bank2
 12950  0CFE  00BC               	movwf	_preClockWiseTime^(0+256)
 12951                           
 12952                           ;serialCmd.c: 70: preAntiClockWiseTime = antiClockWiseTime;
 12953  0CFF  0141               	movlb	1	; select bank1
 12954  0D00  084B               	movf	(_antiClockWiseTime+3)^(0+128),w
 12955  0D01  0142               	movlb	2	; select bank2
 12956  0D02  00BB               	movwf	(_preAntiClockWiseTime+3)^(0+256)
 12957  0D03  0141               	movlb	1	; select bank1
 12958  0D04  084A               	movf	(_antiClockWiseTime+2)^(0+128),w
 12959  0D05  0142               	movlb	2	; select bank2
 12960  0D06  00BA               	movwf	(_preAntiClockWiseTime+2)^(0+256)
 12961  0D07  0141               	movlb	1	; select bank1
 12962  0D08  0849               	movf	(_antiClockWiseTime+1)^(0+128),w
 12963  0D09  0142               	movlb	2	; select bank2
 12964  0D0A  00B9               	movwf	(_preAntiClockWiseTime+1)^(0+256)
 12965  0D0B  0141               	movlb	1	; select bank1
 12966  0D0C  0848               	movf	_antiClockWiseTime^(0+128),w
 12967  0D0D  0142               	movlb	2	; select bank2
 12968  0D0E  00B8               	movwf	_preAntiClockWiseTime^(0+256)
 12969                           
 12970                           ;serialCmd.c: 72: if((doorOpened == 0) && (openedByFoot == 0))
 12971  0D0F  1F72               	btfss	_doorOpened/(0+8),_doorOpened& (0+7)
 12972  0D10  1A72               	btfsc	_openedByFoot/(0+8),_openedByFoot& (0+7)
 12973  0D11  2D25               	goto	l1642
 12974                           
 12975                           ;serialCmd.c: 73: {
 12976                           ;serialCmd.c: 75: display((char *)"Foot Clock",(0x80));
 12977  0D12  309D               	movlw	low (STR_31| (0+32768))
 12978  0D13  0140               	movlb	0	; select bank0
 12979  0D14  00AC               	movwf	display@a
 12980  0D15  30A8               	movlw	high (STR_31| (0+32768))
 12981  0D16  00AD               	movwf	display@a+1
 12982  0D17  3080               	movlw	128
 12983  0D18  0141               	movlb	1	; select bank1
 12984  0D19  00AF               	movwf	??_serialCommand^(0+128)
 12985  0D1A  082F               	movf	??_serialCommand^(0+128),w
 12986  0D1B  0140               	movlb	0	; select bank0
 12987  0D1C  00AE               	movwf	display@add
 12988  0D1D  31A2  2297  318B   	fcall	_display
 12989                           
 12990                           ;serialCmd.c: 76: openedByFoot = 1;
 12991  0D20  1672               	bsf	_openedByFoot/(0+8),_openedByFoot& (0+7)
 12992                           
 12993                           ;serialCmd.c: 77: ouputOnClockwise();
 12994  0D21  3192  2210  318B   	fcall	_ouputOnClockwise
 12995                           
 12996                           ;serialCmd.c: 78: }
 12997  0D24  2DC4               	goto	l9929
 12998  0D25                     l1642:	
 12999                           
 13000                           ;serialCmd.c: 80: else if( (doorOpened == 1) && (openedByFoot == 0) )
 13001  0D25  1B72               	btfsc	_doorOpened/(0+8),_doorOpened& (0+7)
 13002  0D26  1A72               	btfsc	_openedByFoot/(0+8),_openedByFoot& (0+7)
 13003  0D27  2DBB               	goto	l1644
 13004                           
 13005                           ;serialCmd.c: 81: {
 13006                           ;serialCmd.c: 82: openedByFoot = 1;
 13007  0D28  1672               	bsf	_openedByFoot/(0+8),_openedByFoot& (0+7)
 13008                           
 13009                           ;serialCmd.c: 84: display((char *)"Already Open",(0x80));
 13010  0D29  3077               	movlw	low (STR_32| (0+32768))
 13011  0D2A  0140               	movlb	0	; select bank0
 13012  0D2B  00AC               	movwf	display@a
 13013  0D2C  30A8               	movlw	high (STR_32| (0+32768))
 13014  0D2D  00AD               	movwf	display@a+1
 13015  0D2E  3080               	movlw	128
 13016  0D2F  0141               	movlb	1	; select bank1
 13017  0D30  00AF               	movwf	??_serialCommand^(0+128)
 13018  0D31  082F               	movf	??_serialCommand^(0+128),w
 13019  0D32  0140               	movlb	0	; select bank0
 13020  0D33  00AE               	movwf	display@add
 13021  0D34  31A2  2297  318B   	fcall	_display
 13022                           
 13023                           ;serialCmd.c: 86: preClockWiseTime = (clockWiseTime * (100 - (83)))/100;
 13024  0D37  3000               	movlw	0
 13025  0D38  0140               	movlb	0	; select bank0
 13026  0D39  00AF               	movwf	___aldiv@divisor+3
 13027  0D3A  3000               	movlw	0
 13028  0D3B  00AE               	movwf	___aldiv@divisor+2
 13029  0D3C  3000               	movlw	0
 13030  0D3D  00AD               	movwf	___aldiv@divisor+1
 13031  0D3E  3064               	movlw	100
 13032  0D3F  00AC               	movwf	___aldiv@divisor
 13033  0D40  0141               	movlb	1	; select bank1
 13034  0D41  084F               	movf	(_clockWiseTime+3)^(0+128),w
 13035  0D42  0140               	movlb	0	; select bank0
 13036  0D43  00A3               	movwf	___lmul@multiplier+3
 13037  0D44  0141               	movlb	1	; select bank1
 13038  0D45  084E               	movf	(_clockWiseTime+2)^(0+128),w
 13039  0D46  0140               	movlb	0	; select bank0
 13040  0D47  00A2               	movwf	___lmul@multiplier+2
 13041  0D48  0141               	movlb	1	; select bank1
 13042  0D49  084D               	movf	(_clockWiseTime+1)^(0+128),w
 13043  0D4A  0140               	movlb	0	; select bank0
 13044  0D4B  00A1               	movwf	___lmul@multiplier+1
 13045  0D4C  0141               	movlb	1	; select bank1
 13046  0D4D  084C               	movf	_clockWiseTime^(0+128),w
 13047  0D4E  0140               	movlb	0	; select bank0
 13048  0D4F  00A0               	movwf	___lmul@multiplier
 13049  0D50  3000               	movlw	0
 13050  0D51  00A7               	movwf	___lmul@multiplicand+3
 13051  0D52  3000               	movlw	0
 13052  0D53  00A6               	movwf	___lmul@multiplicand+2
 13053  0D54  3000               	movlw	0
 13054  0D55  00A5               	movwf	___lmul@multiplicand+1
 13055  0D56  3011               	movlw	17
 13056  0D57  00A4               	movwf	___lmul@multiplicand
 13057  0D58  31A3  2339  318B   	fcall	___lmul
 13058  0D5B  0140               	movlb	0	; select bank0
 13059  0D5C  0823               	movf	?___lmul+3,w
 13060  0D5D  00B3               	movwf	___aldiv@dividend+3
 13061  0D5E  0822               	movf	?___lmul+2,w
 13062  0D5F  00B2               	movwf	___aldiv@dividend+2
 13063  0D60  0821               	movf	?___lmul+1,w
 13064  0D61  00B1               	movwf	___aldiv@dividend+1
 13065  0D62  0820               	movf	?___lmul,w
 13066  0D63  00B0               	movwf	___aldiv@dividend
 13067  0D64  31A6  2639  318B   	fcall	___aldiv
 13068  0D67  0140               	movlb	0	; select bank0
 13069  0D68  082F               	movf	?___aldiv+3,w
 13070  0D69  0142               	movlb	2	; select bank2
 13071  0D6A  00BF               	movwf	(_preClockWiseTime+3)^(0+256)
 13072  0D6B  0140               	movlb	0	; select bank0
 13073  0D6C  082E               	movf	?___aldiv+2,w
 13074  0D6D  0142               	movlb	2	; select bank2
 13075  0D6E  00BE               	movwf	(_preClockWiseTime+2)^(0+256)
 13076  0D6F  0140               	movlb	0	; select bank0
 13077  0D70  082D               	movf	?___aldiv+1,w
 13078  0D71  0142               	movlb	2	; select bank2
 13079  0D72  00BD               	movwf	(_preClockWiseTime+1)^(0+256)
 13080  0D73  0140               	movlb	0	; select bank0
 13081  0D74  082C               	movf	?___aldiv,w
 13082  0D75  0142               	movlb	2	; select bank2
 13083  0D76  00BC               	movwf	_preClockWiseTime^(0+256)
 13084                           
 13085                           ;serialCmd.c: 87: preAntiClockWiseTime = (antiClockWiseTime * (100 - (83)))/100;
 13086  0D77  3000               	movlw	0
 13087  0D78  0140               	movlb	0	; select bank0
 13088  0D79  00AF               	movwf	___aldiv@divisor+3
 13089  0D7A  3000               	movlw	0
 13090  0D7B  00AE               	movwf	___aldiv@divisor+2
 13091  0D7C  3000               	movlw	0
 13092  0D7D  00AD               	movwf	___aldiv@divisor+1
 13093  0D7E  3064               	movlw	100
 13094  0D7F  00AC               	movwf	___aldiv@divisor
 13095  0D80  0141               	movlb	1	; select bank1
 13096  0D81  084B               	movf	(_antiClockWiseTime+3)^(0+128),w
 13097  0D82  0140               	movlb	0	; select bank0
 13098  0D83  00A3               	movwf	___lmul@multiplier+3
 13099  0D84  0141               	movlb	1	; select bank1
 13100  0D85  084A               	movf	(_antiClockWiseTime+2)^(0+128),w
 13101  0D86  0140               	movlb	0	; select bank0
 13102  0D87  00A2               	movwf	___lmul@multiplier+2
 13103  0D88  0141               	movlb	1	; select bank1
 13104  0D89  0849               	movf	(_antiClockWiseTime+1)^(0+128),w
 13105  0D8A  0140               	movlb	0	; select bank0
 13106  0D8B  00A1               	movwf	___lmul@multiplier+1
 13107  0D8C  0141               	movlb	1	; select bank1
 13108  0D8D  0848               	movf	_antiClockWiseTime^(0+128),w
 13109  0D8E  0140               	movlb	0	; select bank0
 13110  0D8F  00A0               	movwf	___lmul@multiplier
 13111  0D90  3000               	movlw	0
 13112  0D91  00A7               	movwf	___lmul@multiplicand+3
 13113  0D92  3000               	movlw	0
 13114  0D93  00A6               	movwf	___lmul@multiplicand+2
 13115  0D94  3000               	movlw	0
 13116  0D95  00A5               	movwf	___lmul@multiplicand+1
 13117  0D96  3011               	movlw	17
 13118  0D97  00A4               	movwf	___lmul@multiplicand
 13119  0D98  31A3  2339  318B   	fcall	___lmul
 13120  0D9B  0140               	movlb	0	; select bank0
 13121  0D9C  0823               	movf	?___lmul+3,w
 13122  0D9D  00B3               	movwf	___aldiv@dividend+3
 13123  0D9E  0822               	movf	?___lmul+2,w
 13124  0D9F  00B2               	movwf	___aldiv@dividend+2
 13125  0DA0  0821               	movf	?___lmul+1,w
 13126  0DA1  00B1               	movwf	___aldiv@dividend+1
 13127  0DA2  0820               	movf	?___lmul,w
 13128  0DA3  00B0               	movwf	___aldiv@dividend
 13129  0DA4  31A6  2639  318B   	fcall	___aldiv
 13130  0DA7  0140               	movlb	0	; select bank0
 13131  0DA8  082F               	movf	?___aldiv+3,w
 13132  0DA9  0142               	movlb	2	; select bank2
 13133  0DAA  00BB               	movwf	(_preAntiClockWiseTime+3)^(0+256)
 13134  0DAB  0140               	movlb	0	; select bank0
 13135  0DAC  082E               	movf	?___aldiv+2,w
 13136  0DAD  0142               	movlb	2	; select bank2
 13137  0DAE  00BA               	movwf	(_preAntiClockWiseTime+2)^(0+256)
 13138  0DAF  0140               	movlb	0	; select bank0
 13139  0DB0  082D               	movf	?___aldiv+1,w
 13140  0DB1  0142               	movlb	2	; select bank2
 13141  0DB2  00B9               	movwf	(_preAntiClockWiseTime+1)^(0+256)
 13142  0DB3  0140               	movlb	0	; select bank0
 13143  0DB4  082C               	movf	?___aldiv,w
 13144  0DB5  0142               	movlb	2	; select bank2
 13145  0DB6  00B8               	movwf	_preAntiClockWiseTime^(0+256)
 13146                           
 13147                           ;serialCmd.c: 88: ouputOnClockwise();
 13148  0DB7  3192  2210  318B   	fcall	_ouputOnClockwise
 13149                           
 13150                           ;serialCmd.c: 89: }
 13151  0DBA  2DC4               	goto	l9929
 13152  0DBB                     l1644:	
 13153                           
 13154                           ;serialCmd.c: 90: else if((doorOpened == 1) && (openedByFoot == 1))
 13155  0DBB  1B72               	btfsc	_doorOpened/(0+8),_doorOpened& (0+7)
 13156  0DBC  1E72               	btfss	_openedByFoot/(0+8),_openedByFoot& (0+7)
 13157  0DBD  2DC4               	goto	l9929
 13158                           
 13159                           ;serialCmd.c: 91: {
 13160                           ;serialCmd.c: 92: doorOpened = 1;
 13161  0DBE  1772               	bsf	_doorOpened/(0+8),_doorOpened& (0+7)
 13162                           
 13163                           ;serialCmd.c: 93: ouputOnAntiClock();
 13164  0DBF  3188  20FA  318B   	fcall	_ouputOnAntiClock
 13165                           
 13166                           ;serialCmd.c: 94: openedByFoot =0;
 13167  0DC2  1272               	bcf	_openedByFoot/(0+8),_openedByFoot& (0+7)
 13168                           
 13169                           ;serialCmd.c: 95: doorOpened = 0;
 13170  0DC3  1372               	bcf	_doorOpened/(0+8),_doorOpened& (0+7)
 13171  0DC4                     l9929:	
 13172                           
 13173                           ;serialCmd.c: 97: }
 13174                           ;serialCmd.c: 98: _delay((unsigned long)((500)*(8000000/4000.0)));
 13175  0DC4  3006               	movlw	6
 13176  0DC5  0141               	movlb	1	; select bank1
 13177  0DC6  00B0               	movwf	(??_serialCommand^(0+128)+1)
 13178  0DC7  3013               	movlw	19
 13179  0DC8  00AF               	movwf	??_serialCommand^(0+128)
 13180  0DC9  30AD               	movlw	173
 13181  0DCA                     u7507:	
 13182  0DCA  0B89               	decfsz	9,f
 13183  0DCB  2DCA               	goto	u7507
 13184  0DCC  0BAF               	decfsz	??_serialCommand^(0+128),f
 13185  0DCD  2DCA               	goto	u7507
 13186  0DCE  0BB0               	decfsz	(??_serialCommand^(0+128)+1),f
 13187  0DCF  2DCA               	goto	u7507
 13188  0DD0  3200               	nop2
 13189                           
 13190                           ;serialCmd.c: 99: _delay((unsigned long)((500)*(8000000/4000.0)));
 13191  0DD1  3006               	movlw	6
 13192  0DD2  0141               	movlb	1	; select bank1
 13193  0DD3  00B0               	movwf	(??_serialCommand^(0+128)+1)
 13194  0DD4  3013               	movlw	19
 13195  0DD5  00AF               	movwf	??_serialCommand^(0+128)
 13196  0DD6  30AD               	movlw	173
 13197  0DD7                     u7517:	
 13198  0DD7  0B89               	decfsz	9,f
 13199  0DD8  2DD7               	goto	u7517
 13200  0DD9  0BAF               	decfsz	??_serialCommand^(0+128),f
 13201  0DDA  2DD7               	goto	u7517
 13202  0DDB  0BB0               	decfsz	(??_serialCommand^(0+128)+1),f
 13203  0DDC  2DD7               	goto	u7517
 13204  0DDD  3200               	nop2
 13205                           
 13206                           ;serialCmd.c: 100: GIE = 1;
 13207  0DDE  178B               	bsf	11,7	;volatile
 13208                           
 13209                           ;serialCmd.c: 102: (INTCONbits.GIE = 1);
 13210  0DDF  178B               	bsf	11,7	;volatile
 13211                           
 13212                           ;serialCmd.c: 105: (INTCONbits.PEIE = 1);
 13213  0DE0  170B               	bsf	11,6	;volatile
 13214                           
 13215                           ;serialCmd.c: 107: break;
 13216  0DE1  0008               	return
 13217  0DE2                     l9939:	
 13218                           ;serialCmd.c: 109: case INC_SPEED:
 13219                           
 13220                           
 13221                           ;serialCmd.c: 110: rcvCmd = INC_SPEED;
 13222  0DE2  3061               	movlw	97
 13223  0DE3  0141               	movlb	1	; select bank1
 13224  0DE4  00AF               	movwf	??_serialCommand^(0+128)
 13225  0DE5  082F               	movf	??_serialCommand^(0+128),w
 13226  0DE6  00B1               	movwf	serialCommand@rcvCmd^(0+128)
 13227                           
 13228                           ;serialCmd.c: 112: speedRpm++;
 13229  0DE7  3001               	movlw	1
 13230  0DE8  07BF               	addwf	_speedRpm^(0+128),f
 13231  0DE9  3000               	movlw	0
 13232  0DEA  3DC0               	addwfc	(_speedRpm+1)^(0+128),f
 13233                           
 13234                           ;serialCmd.c: 114: lcd(((0xC0)),(0));
 13235  0DEB  0140               	movlb	0	; select bank0
 13236  0DEC  01A9               	clrf	lcd@b
 13237  0DED  30C0               	movlw	192
 13238  0DEE  31A4  245E  318B   	fcall	_lcd
 13239                           
 13240                           ;serialCmd.c: 115: number_3(speedRpm);
 13241  0DF1  0141               	movlb	1	; select bank1
 13242  0DF2  0840               	movf	(_speedRpm+1)^(0+128),w
 13243  0DF3  0140               	movlb	0	; select bank0
 13244  0DF4  00AD               	movwf	number_3@num+1
 13245  0DF5  0141               	movlb	1	; select bank1
 13246  0DF6  083F               	movf	_speedRpm^(0+128),w
 13247  0DF7  0140               	movlb	0	; select bank0
 13248  0DF8  00AC               	movwf	number_3@num
 13249  0DF9  31A6  26BB  318B   	fcall	_number_3
 13250                           
 13251                           ;serialCmd.c: 117: saveConfiguration(SET_RPM, speedRpm);
 13252  0DFC  0141               	movlb	1	; select bank1
 13253  0DFD  0840               	movf	(_speedRpm+1)^(0+128),w
 13254  0DFE  0140               	movlb	0	; select bank0
 13255  0DFF  00A3               	movwf	saveConfiguration@value+1
 13256  0E00  0141               	movlb	1	; select bank1
 13257  0E01  083F               	movf	_speedRpm^(0+128),w
 13258  0E02  0140               	movlb	0	; select bank0
 13259  0E03  00A2               	movwf	saveConfiguration@value
 13260  0E04  3000               	movlw	0
 13261  0E05  31A7  2741         	fcall	_saveConfiguration
 13262                           
 13263                           ;serialCmd.c: 119: rcvCmd = 0x00;
 13264  0E07  0141               	movlb	1	; select bank1
 13265  0E08  01B1               	clrf	serialCommand@rcvCmd^(0+128)
 13266                           
 13267                           ;serialCmd.c: 120: break;
 13268  0E09  0008               	return
 13269  0E0A                     l9949:	
 13270                           ;serialCmd.c: 122: case DEC_SPEED:
 13271                           
 13272                           
 13273                           ;serialCmd.c: 124: rcvCmd = DEC_SPEED;
 13274  0E0A  3062               	movlw	98
 13275  0E0B  00AF               	movwf	??_serialCommand^(0+128)
 13276  0E0C  082F               	movf	??_serialCommand^(0+128),w
 13277  0E0D  00B1               	movwf	serialCommand@rcvCmd^(0+128)
 13278                           
 13279                           ;serialCmd.c: 126: speedRpm--;
 13280  0E0E  3001               	movlw	1
 13281  0E0F  02BF               	subwf	_speedRpm^(0+128),f
 13282  0E10  3000               	movlw	0
 13283  0E11  3BC0               	subwfb	(_speedRpm+1)^(0+128),f
 13284                           
 13285                           ;serialCmd.c: 128: lcd(((0xC0)),(0));
 13286  0E12  0140               	movlb	0	; select bank0
 13287  0E13  01A9               	clrf	lcd@b
 13288  0E14  30C0               	movlw	192
 13289  0E15  31A4  245E  318B   	fcall	_lcd
 13290                           
 13291                           ;serialCmd.c: 129: number_3(speedRpm);
 13292  0E18  0141               	movlb	1	; select bank1
 13293  0E19  0840               	movf	(_speedRpm+1)^(0+128),w
 13294  0E1A  0140               	movlb	0	; select bank0
 13295  0E1B  00AD               	movwf	number_3@num+1
 13296  0E1C  0141               	movlb	1	; select bank1
 13297  0E1D  083F               	movf	_speedRpm^(0+128),w
 13298  0E1E  0140               	movlb	0	; select bank0
 13299  0E1F  00AC               	movwf	number_3@num
 13300  0E20  31A6  26BB  318B   	fcall	_number_3
 13301                           
 13302                           ;serialCmd.c: 131: saveConfiguration(SET_RPM, speedRpm);
 13303  0E23  0141               	movlb	1	; select bank1
 13304  0E24  0840               	movf	(_speedRpm+1)^(0+128),w
 13305  0E25  0140               	movlb	0	; select bank0
 13306  0E26  00A3               	movwf	saveConfiguration@value+1
 13307  0E27  0141               	movlb	1	; select bank1
 13308  0E28  083F               	movf	_speedRpm^(0+128),w
 13309  0E29  0140               	movlb	0	; select bank0
 13310  0E2A  00A2               	movwf	saveConfiguration@value
 13311  0E2B  3000               	movlw	0
 13312  0E2C  31A7  2741         	fcall	_saveConfiguration
 13313                           
 13314                           ;serialCmd.c: 133: rcvCmd = 0x00;
 13315  0E2E  0141               	movlb	1	; select bank1
 13316  0E2F  01B1               	clrf	serialCommand@rcvCmd^(0+128)
 13317                           
 13318                           ;serialCmd.c: 134: break;
 13319  0E30  0008               	return
 13320  0E31                     l9959:	
 13321                           ;serialCmd.c: 136: case CHANGE_DIRECTION:
 13322                           
 13323                           
 13324                           ;serialCmd.c: 137: rcvCmd = CHANGE_DIRECTION;
 13325  0E31  3063               	movlw	99
 13326  0E32  00AF               	movwf	??_serialCommand^(0+128)
 13327  0E33  082F               	movf	??_serialCommand^(0+128),w
 13328  0E34  00B1               	movwf	serialCommand@rcvCmd^(0+128)
 13329                           
 13330                           ;serialCmd.c: 139: if(direction >= STOP)
 13331  0E35  3002               	movlw	2
 13332  0E36  0241               	subwf	_direction^(0+128),w
 13333  0E37  1C03               	skipc
 13334  0E38  2E3B               	goto	l9963
 13335                           
 13336                           ;serialCmd.c: 140: direction = CLOCKWISE;
 13337  0E39  01C1               	clrf	_direction^(0+128)
 13338  0E3A  2E6D               	goto	l9973
 13339  0E3B                     l9963:	
 13340                           
 13341                           ;serialCmd.c: 141: else
 13342                           ;serialCmd.c: 142: direction++;
 13343  0E3B  3001               	movlw	1
 13344  0E3C  00AF               	movwf	??_serialCommand^(0+128)
 13345  0E3D  082F               	movf	??_serialCommand^(0+128),w
 13346  0E3E  07C1               	addwf	_direction^(0+128),f
 13347                           
 13348                           ;serialCmd.c: 144: switch(direction)
 13349  0E3F  2E6D               	goto	l9973
 13350  0E40                     l9965:	
 13351                           ;serialCmd.c: 145: {
 13352                           ;serialCmd.c: 146: case CLOCKWISE:
 13353                           
 13354                           
 13355                           ;serialCmd.c: 147: display((char *)"C",(0xC0)+15);
 13356  0E40  30BC               	movlw	low (STR_16| (0+32768))
 13357  0E41  0140               	movlb	0	; select bank0
 13358  0E42  00AC               	movwf	display@a
 13359  0E43  30A8               	movlw	high (STR_16| (0+32768))
 13360  0E44  00AD               	movwf	display@a+1
 13361  0E45  30CF               	movlw	207
 13362  0E46  0141               	movlb	1	; select bank1
 13363  0E47  00AF               	movwf	??_serialCommand^(0+128)
 13364  0E48  082F               	movf	??_serialCommand^(0+128),w
 13365  0E49  0140               	movlb	0	; select bank0
 13366  0E4A  00AE               	movwf	display@add
 13367  0E4B  31A2  2297  318B   	fcall	_display
 13368                           
 13369                           ;serialCmd.c: 148: break;
 13370  0E4E  2E79               	goto	l9975
 13371  0E4F                     l9967:	
 13372                           ;serialCmd.c: 149: case ANTICLOCKWISE:
 13373                           
 13374                           
 13375                           ;serialCmd.c: 150: display((char *)"A",(0xC0)+15);
 13376  0E4F  30BA               	movlw	low (STR_17| (0+32768))
 13377  0E50  0140               	movlb	0	; select bank0
 13378  0E51  00AC               	movwf	display@a
 13379  0E52  30A8               	movlw	high (STR_17| (0+32768))
 13380  0E53  00AD               	movwf	display@a+1
 13381  0E54  30CF               	movlw	207
 13382  0E55  0141               	movlb	1	; select bank1
 13383  0E56  00AF               	movwf	??_serialCommand^(0+128)
 13384  0E57  082F               	movf	??_serialCommand^(0+128),w
 13385  0E58  0140               	movlb	0	; select bank0
 13386  0E59  00AE               	movwf	display@add
 13387  0E5A  31A2  2297  318B   	fcall	_display
 13388                           
 13389                           ;serialCmd.c: 151: break;
 13390  0E5D  2E79               	goto	l9975
 13391  0E5E                     l9969:	
 13392                           ;serialCmd.c: 152: case STOP:
 13393                           
 13394                           
 13395                           ;serialCmd.c: 153: display((char *)"S",(0xC0)+15);
 13396  0E5E  30BE               	movlw	low (STR_15| (0+32768))
 13397  0E5F  0140               	movlb	0	; select bank0
 13398  0E60  00AC               	movwf	display@a
 13399  0E61  30A8               	movlw	high (STR_15| (0+32768))
 13400  0E62  00AD               	movwf	display@a+1
 13401  0E63  30CF               	movlw	207
 13402  0E64  0141               	movlb	1	; select bank1
 13403  0E65  00AF               	movwf	??_serialCommand^(0+128)
 13404  0E66  082F               	movf	??_serialCommand^(0+128),w
 13405  0E67  0140               	movlb	0	; select bank0
 13406  0E68  00AE               	movwf	display@add
 13407  0E69  31A2  2297  318B   	fcall	_display
 13408                           
 13409                           ;serialCmd.c: 155: }
 13410                           
 13411                           ;serialCmd.c: 154: break;
 13412  0E6C  2E79               	goto	l9975
 13413  0E6D                     l9973:	
 13414  0E6D  0141               	movlb	1	; select bank1
 13415  0E6E  0841               	movf	_direction^(0+128),w
 13416                           
 13417                           ; Switch size 1, requested type "space"
 13418                           ; Number of cases is 3, Range of values is 0 to 2
 13419                           ; switch strategies available:
 13420                           ; Name         Instructions Cycles
 13421                           ; simple_byte           10     6 (average)
 13422                           ; direct_byte           12     6 (fixed)
 13423                           ; jumptable            260     6 (fixed)
 13424                           ;	Chosen strategy is simple_byte
 13425  0E6F  3A00               	xorlw	0	; case 0
 13426  0E70  1903               	skipnz
 13427  0E71  2E40               	goto	l9965
 13428  0E72  3A01               	xorlw	1	; case 1
 13429  0E73  1903               	skipnz
 13430  0E74  2E4F               	goto	l9967
 13431  0E75  3A03               	xorlw	3	; case 2
 13432  0E76  1903               	skipnz
 13433  0E77  2E5E               	goto	l9969
 13434  0E78  2E79               	goto	l9975
 13435  0E79                     l9975:	
 13436                           
 13437                           ;serialCmd.c: 157: saveConfiguration(SET_DIRECTION, direction);
 13438  0E79  0141               	movlb	1	; select bank1
 13439  0E7A  0841               	movf	_direction^(0+128),w
 13440  0E7B  00AF               	movwf	??_serialCommand^(0+128)
 13441  0E7C  01B0               	clrf	(??_serialCommand^(0+128)+1)
 13442  0E7D  082F               	movf	??_serialCommand^(0+128),w
 13443  0E7E  0140               	movlb	0	; select bank0
 13444  0E7F  00A2               	movwf	saveConfiguration@value
 13445  0E80  0141               	movlb	1	; select bank1
 13446  0E81  0830               	movf	(??_serialCommand+1)^(0+128),w
 13447  0E82  0140               	movlb	0	; select bank0
 13448  0E83  00A3               	movwf	saveConfiguration@value+1
 13449  0E84  3004               	movlw	4
 13450  0E85  31A7  2741         	fcall	_saveConfiguration
 13451                           
 13452                           ;serialCmd.c: 159: break;
 13453  0E87  0008               	return
 13454  0E88                     l9977:	
 13455                           ;serialCmd.c: 161: case INC_HOLD_TIME:
 13456                           
 13457                           
 13458                           ;serialCmd.c: 162: rcvCmd = INC_HOLD_TIME;
 13459  0E88  3064               	movlw	100
 13460  0E89  0141               	movlb	1	; select bank1
 13461  0E8A  00AF               	movwf	??_serialCommand^(0+128)
 13462  0E8B  082F               	movf	??_serialCommand^(0+128),w
 13463  0E8C  00B1               	movwf	serialCommand@rcvCmd^(0+128)
 13464                           
 13465                           ;serialCmd.c: 164: if(holdTime < 99)
 13466  0E8D  3063               	movlw	99
 13467  0E8E  0242               	subwf	_holdTime^(0+128),w
 13468  0E8F  1803               	skipnc
 13469  0E90  2E96               	goto	l9981
 13470                           
 13471                           ;serialCmd.c: 165: holdTime++;
 13472  0E91  3001               	movlw	1
 13473  0E92  00AF               	movwf	??_serialCommand^(0+128)
 13474  0E93  082F               	movf	??_serialCommand^(0+128),w
 13475  0E94  07C2               	addwf	_holdTime^(0+128),f
 13476  0E95  2E9A               	goto	l9983
 13477  0E96                     l9981:	
 13478                           
 13479                           ;serialCmd.c: 166: else
 13480                           ;serialCmd.c: 167: holdTime = 99;
 13481  0E96  3063               	movlw	99
 13482  0E97  00AF               	movwf	??_serialCommand^(0+128)
 13483  0E98  082F               	movf	??_serialCommand^(0+128),w
 13484  0E99  00C2               	movwf	_holdTime^(0+128)
 13485  0E9A                     l9983:	
 13486                           
 13487                           ;serialCmd.c: 169: cnfHoldTime = holdTime * ((60)*(1000));
 13488  0E9A  0842               	movf	_holdTime^(0+128),w
 13489  0E9B  00AF               	movwf	??_serialCommand^(0+128)
 13490  0E9C  01B0               	clrf	(??_serialCommand^(0+128)+1)
 13491  0E9D  082F               	movf	??_serialCommand^(0+128),w
 13492  0E9E  0140               	movlb	0	; select bank0
 13493  0E9F  00A0               	movwf	___wmul@multiplier
 13494  0EA0  0141               	movlb	1	; select bank1
 13495  0EA1  0830               	movf	(??_serialCommand+1)^(0+128),w
 13496  0EA2  0140               	movlb	0	; select bank0
 13497  0EA3  00A1               	movwf	___wmul@multiplier+1
 13498  0EA4  3060               	movlw	96
 13499  0EA5  00A2               	movwf	___wmul@multiplicand
 13500  0EA6  30EA               	movlw	234
 13501  0EA7  00A3               	movwf	___wmul@multiplicand+1
 13502  0EA8  31A1  21DD  318B   	fcall	___wmul
 13503  0EAB  0140               	movlb	0	; select bank0
 13504  0EAC  0821               	movf	?___wmul+1,w
 13505  0EAD  0142               	movlb	2	; select bank2
 13506  0EAE  00D7               	movwf	(_cnfHoldTime+1)^(0+256)
 13507  0EAF  0140               	movlb	0	; select bank0
 13508  0EB0  0820               	movf	?___wmul,w
 13509  0EB1  0142               	movlb	2	; select bank2
 13510  0EB2  00D6               	movwf	_cnfHoldTime^(0+256)
 13511                           
 13512                           ;serialCmd.c: 171: lcd(((0xC0)+12),(0));
 13513  0EB3  0140               	movlb	0	; select bank0
 13514  0EB4  01A9               	clrf	lcd@b
 13515  0EB5  30CC               	movlw	204
 13516  0EB6  31A4  245E  318B   	fcall	_lcd
 13517                           
 13518                           ;serialCmd.c: 172: number_2(holdTime);
 13519  0EB9  0141               	movlb	1	; select bank1
 13520  0EBA  0842               	movf	_holdTime^(0+128),w
 13521  0EBB  31A3  239E  318B   	fcall	_number_2
 13522                           
 13523                           ;serialCmd.c: 174: saveConfiguration(SET_HOLD_TIME, holdTime);
 13524  0EBE  0141               	movlb	1	; select bank1
 13525  0EBF  0842               	movf	_holdTime^(0+128),w
 13526  0EC0  00AF               	movwf	??_serialCommand^(0+128)
 13527  0EC1  01B0               	clrf	(??_serialCommand^(0+128)+1)
 13528  0EC2  082F               	movf	??_serialCommand^(0+128),w
 13529  0EC3  0140               	movlb	0	; select bank0
 13530  0EC4  00A2               	movwf	saveConfiguration@value
 13531  0EC5  0141               	movlb	1	; select bank1
 13532  0EC6  0830               	movf	(??_serialCommand+1)^(0+128),w
 13533  0EC7  0140               	movlb	0	; select bank0
 13534  0EC8  00A3               	movwf	saveConfiguration@value+1
 13535  0EC9  3003               	movlw	3
 13536  0ECA  31A7  2741         	fcall	_saveConfiguration
 13537                           
 13538                           ;serialCmd.c: 176: break;
 13539  0ECC  0008               	return
 13540  0ECD                     l9991:	
 13541                           ;serialCmd.c: 178: case DEC_HOLD_TIME:
 13542                           
 13543                           
 13544                           ;serialCmd.c: 180: rcvCmd = DEC_HOLD_TIME;
 13545  0ECD  3065               	movlw	101
 13546  0ECE  0141               	movlb	1	; select bank1
 13547  0ECF  00AF               	movwf	??_serialCommand^(0+128)
 13548  0ED0  082F               	movf	??_serialCommand^(0+128),w
 13549  0ED1  00B1               	movwf	serialCommand@rcvCmd^(0+128)
 13550                           
 13551                           ;serialCmd.c: 182: if(holdTime > 1)
 13552  0ED2  3002               	movlw	2
 13553  0ED3  0242               	subwf	_holdTime^(0+128),w
 13554  0ED4  1C03               	skipc
 13555  0ED5  2ED8               	goto	l9995
 13556                           
 13557                           ;serialCmd.c: 183: holdTime--;
 13558  0ED6  3001               	movlw	1
 13559  0ED7  02C2               	subwf	_holdTime^(0+128),f
 13560  0ED8                     l9995:	
 13561                           
 13562                           ;serialCmd.c: 185: cnfHoldTime = holdTime * ((60)*(1000));
 13563  0ED8  0842               	movf	_holdTime^(0+128),w
 13564  0ED9  00AF               	movwf	??_serialCommand^(0+128)
 13565  0EDA  01B0               	clrf	(??_serialCommand^(0+128)+1)
 13566  0EDB  082F               	movf	??_serialCommand^(0+128),w
 13567  0EDC  0140               	movlb	0	; select bank0
 13568  0EDD  00A0               	movwf	___wmul@multiplier
 13569  0EDE  0141               	movlb	1	; select bank1
 13570  0EDF  0830               	movf	(??_serialCommand+1)^(0+128),w
 13571  0EE0  0140               	movlb	0	; select bank0
 13572  0EE1  00A1               	movwf	___wmul@multiplier+1
 13573  0EE2  3060               	movlw	96
 13574  0EE3  00A2               	movwf	___wmul@multiplicand
 13575  0EE4  30EA               	movlw	234
 13576  0EE5  00A3               	movwf	___wmul@multiplicand+1
 13577  0EE6  31A1  21DD  318B   	fcall	___wmul
 13578  0EE9  0140               	movlb	0	; select bank0
 13579  0EEA  0821               	movf	?___wmul+1,w
 13580  0EEB  0142               	movlb	2	; select bank2
 13581  0EEC  00D7               	movwf	(_cnfHoldTime+1)^(0+256)
 13582  0EED  0140               	movlb	0	; select bank0
 13583  0EEE  0820               	movf	?___wmul,w
 13584  0EEF  0142               	movlb	2	; select bank2
 13585  0EF0  00D6               	movwf	_cnfHoldTime^(0+256)
 13586                           
 13587                           ;serialCmd.c: 187: lcd(((0xC0)+12),(0));
 13588  0EF1  0140               	movlb	0	; select bank0
 13589  0EF2  01A9               	clrf	lcd@b
 13590  0EF3  30CC               	movlw	204
 13591  0EF4  31A4  245E  318B   	fcall	_lcd
 13592                           
 13593                           ;serialCmd.c: 188: number_2(holdTime);
 13594  0EF7  0141               	movlb	1	; select bank1
 13595  0EF8  0842               	movf	_holdTime^(0+128),w
 13596  0EF9  31A3  239E  318B   	fcall	_number_2
 13597                           
 13598                           ;serialCmd.c: 190: saveConfiguration(SET_HOLD_TIME, holdTime);
 13599  0EFC  0141               	movlb	1	; select bank1
 13600  0EFD  0842               	movf	_holdTime^(0+128),w
 13601  0EFE  00AF               	movwf	??_serialCommand^(0+128)
 13602  0EFF  01B0               	clrf	(??_serialCommand^(0+128)+1)
 13603  0F00  082F               	movf	??_serialCommand^(0+128),w
 13604  0F01  0140               	movlb	0	; select bank0
 13605  0F02  00A2               	movwf	saveConfiguration@value
 13606  0F03  0141               	movlb	1	; select bank1
 13607  0F04  0830               	movf	(??_serialCommand+1)^(0+128),w
 13608  0F05  0140               	movlb	0	; select bank0
 13609  0F06  00A3               	movwf	saveConfiguration@value+1
 13610  0F07  3003               	movlw	3
 13611  0F08  31A7  2741         	fcall	_saveConfiguration
 13612                           
 13613                           ;serialCmd.c: 191: break;
 13614  0F0A  0008               	return
 13615  0F0B                     l10003:	
 13616                           ;serialCmd.c: 193: case INC_CLOCK_WISE_TIME:
 13617                           
 13618                           
 13619                           ;serialCmd.c: 194: rcvCmd = INC_CLOCK_WISE_TIME;
 13620  0F0B  3066               	movlw	102
 13621  0F0C  0141               	movlb	1	; select bank1
 13622  0F0D  00AF               	movwf	??_serialCommand^(0+128)
 13623  0F0E  082F               	movf	??_serialCommand^(0+128),w
 13624  0F0F  00B1               	movwf	serialCommand@rcvCmd^(0+128)
 13625                           
 13626                           ;serialCmd.c: 196: clockWiseTime++;
 13627  0F10  3001               	movlw	1
 13628  0F11  07CC               	addwf	_clockWiseTime^(0+128),f
 13629  0F12  3000               	movlw	0
 13630  0F13  3DCD               	addwfc	(_clockWiseTime+1)^(0+128),f
 13631  0F14  3000               	movlw	0
 13632  0F15  3DCE               	addwfc	(_clockWiseTime+2)^(0+128),f
 13633  0F16  3000               	movlw	0
 13634  0F17  3DCF               	addwfc	(_clockWiseTime+3)^(0+128),f
 13635                           
 13636                           ;serialCmd.c: 197: lcd(((0xC0)+4),(0));
 13637  0F18  0140               	movlb	0	; select bank0
 13638  0F19  01A9               	clrf	lcd@b
 13639  0F1A  30C4               	movlw	196
 13640  0F1B  31A4  245E  318B   	fcall	_lcd
 13641                           
 13642                           ;serialCmd.c: 198: number_3(clockWiseTime);
 13643  0F1E  0141               	movlb	1	; select bank1
 13644  0F1F  084D               	movf	(_clockWiseTime+1)^(0+128),w
 13645  0F20  0140               	movlb	0	; select bank0
 13646  0F21  00AD               	movwf	number_3@num+1
 13647  0F22  0141               	movlb	1	; select bank1
 13648  0F23  084C               	movf	_clockWiseTime^(0+128),w
 13649  0F24  0140               	movlb	0	; select bank0
 13650  0F25  00AC               	movwf	number_3@num
 13651  0F26  31A6  26BB  318B   	fcall	_number_3
 13652                           
 13653                           ;serialCmd.c: 200: saveConfiguration(SET_CLOCKWISE_TIME, clockWiseTime);
 13654  0F29  0141               	movlb	1	; select bank1
 13655  0F2A  084D               	movf	(_clockWiseTime+1)^(0+128),w
 13656  0F2B  0140               	movlb	0	; select bank0
 13657  0F2C  00A3               	movwf	saveConfiguration@value+1
 13658  0F2D  0141               	movlb	1	; select bank1
 13659  0F2E  084C               	movf	_clockWiseTime^(0+128),w
 13660  0F2F  0140               	movlb	0	; select bank0
 13661  0F30  00A2               	movwf	saveConfiguration@value
 13662  0F31  3001               	movlw	1
 13663  0F32  31A7  2741         	fcall	_saveConfiguration
 13664                           
 13665                           ;serialCmd.c: 202: break;
 13666  0F34  0008               	return
 13667  0F35                     l10011:	
 13668                           ;serialCmd.c: 204: case DEC_CLOCK_WISE_TIME:
 13669                           
 13670                           
 13671                           ;serialCmd.c: 205: rcvCmd = DEC_CLOCK_WISE_TIME;
 13672  0F35  3067               	movlw	103
 13673  0F36  0141               	movlb	1	; select bank1
 13674  0F37  00AF               	movwf	??_serialCommand^(0+128)
 13675  0F38  082F               	movf	??_serialCommand^(0+128),w
 13676  0F39  00B1               	movwf	serialCommand@rcvCmd^(0+128)
 13677                           
 13678                           ;serialCmd.c: 207: if(clockWiseTime > 1)
 13679  0F3A  1BCF               	btfsc	(_clockWiseTime+3)^(0+128),7
 13680  0F3B  2F51               	goto	l10017
 13681  0F3C  084F               	movf	(_clockWiseTime+3)^(0+128),w
 13682  0F3D  1D03               	btfss	3,2
 13683  0F3E  2F49               	goto	l10015
 13684  0F3F  084E               	movf	(_clockWiseTime+2)^(0+128),w
 13685  0F40  1D03               	btfss	3,2
 13686  0F41  2F49               	goto	l10015
 13687  0F42  084D               	movf	(_clockWiseTime+1)^(0+128),w
 13688  0F43  1D03               	btfss	3,2
 13689  0F44  2F49               	goto	l10015
 13690  0F45  3002               	movlw	2
 13691  0F46  024C               	subwf	_clockWiseTime^(0+128),w
 13692  0F47  1C03               	btfss	3,0
 13693  0F48  2F51               	goto	l10017
 13694  0F49                     l10015:	
 13695                           
 13696                           ;serialCmd.c: 208: clockWiseTime--;
 13697  0F49  30FF               	movlw	255
 13698  0F4A  07CC               	addwf	_clockWiseTime^(0+128),f
 13699  0F4B  30FF               	movlw	255
 13700  0F4C  3DCD               	addwfc	(_clockWiseTime+1)^(0+128),f
 13701  0F4D  30FF               	movlw	255
 13702  0F4E  3DCE               	addwfc	(_clockWiseTime+2)^(0+128),f
 13703  0F4F  30FF               	movlw	255
 13704  0F50  3DCF               	addwfc	(_clockWiseTime+3)^(0+128),f
 13705  0F51                     l10017:	
 13706                           
 13707                           ;serialCmd.c: 210: lcd(((0xC0)+4),(0));
 13708  0F51  0140               	movlb	0	; select bank0
 13709  0F52  01A9               	clrf	lcd@b
 13710  0F53  30C4               	movlw	196
 13711  0F54  31A4  245E  318B   	fcall	_lcd
 13712                           
 13713                           ;serialCmd.c: 211: number_3(clockWiseTime);
 13714  0F57  0141               	movlb	1	; select bank1
 13715  0F58  084D               	movf	(_clockWiseTime+1)^(0+128),w
 13716  0F59  0140               	movlb	0	; select bank0
 13717  0F5A  00AD               	movwf	number_3@num+1
 13718  0F5B  0141               	movlb	1	; select bank1
 13719  0F5C  084C               	movf	_clockWiseTime^(0+128),w
 13720  0F5D  0140               	movlb	0	; select bank0
 13721  0F5E  00AC               	movwf	number_3@num
 13722  0F5F  31A6  26BB  318B   	fcall	_number_3
 13723                           
 13724                           ;serialCmd.c: 213: saveConfiguration(SET_CLOCKWISE_TIME, clockWiseTime);
 13725  0F62  0141               	movlb	1	; select bank1
 13726  0F63  084D               	movf	(_clockWiseTime+1)^(0+128),w
 13727  0F64  0140               	movlb	0	; select bank0
 13728  0F65  00A3               	movwf	saveConfiguration@value+1
 13729  0F66  0141               	movlb	1	; select bank1
 13730  0F67  084C               	movf	_clockWiseTime^(0+128),w
 13731  0F68  0140               	movlb	0	; select bank0
 13732  0F69  00A2               	movwf	saveConfiguration@value
 13733  0F6A  3001               	movlw	1
 13734  0F6B  31A7  2741         	fcall	_saveConfiguration
 13735                           
 13736                           ;serialCmd.c: 214: break;
 13737  0F6D  0008               	return
 13738  0F6E                     l10023:	
 13739                           ;serialCmd.c: 216: case INC_ANTI_CLOCK_WISE_TIME:
 13740                           
 13741                           
 13742                           ;serialCmd.c: 217: rcvCmd = INC_ANTI_CLOCK_WISE_TIME;
 13743  0F6E  3068               	movlw	104
 13744  0F6F  0141               	movlb	1	; select bank1
 13745  0F70  00AF               	movwf	??_serialCommand^(0+128)
 13746  0F71  082F               	movf	??_serialCommand^(0+128),w
 13747  0F72  00B1               	movwf	serialCommand@rcvCmd^(0+128)
 13748                           
 13749                           ;serialCmd.c: 219: antiClockWiseTime++;
 13750  0F73  3001               	movlw	1
 13751  0F74  07C8               	addwf	_antiClockWiseTime^(0+128),f
 13752  0F75  3000               	movlw	0
 13753  0F76  3DC9               	addwfc	(_antiClockWiseTime+1)^(0+128),f
 13754  0F77  3000               	movlw	0
 13755  0F78  3DCA               	addwfc	(_antiClockWiseTime+2)^(0+128),f
 13756  0F79  3000               	movlw	0
 13757  0F7A  3DCB               	addwfc	(_antiClockWiseTime+3)^(0+128),f
 13758                           
 13759                           ;serialCmd.c: 220: rcvCmd = INC_ANTI_CLOCK_WISE_TIME;
 13760  0F7B  3068               	movlw	104
 13761  0F7C  00AF               	movwf	??_serialCommand^(0+128)
 13762  0F7D  082F               	movf	??_serialCommand^(0+128),w
 13763  0F7E  00B1               	movwf	serialCommand@rcvCmd^(0+128)
 13764                           
 13765                           ;serialCmd.c: 222: lcd(((0xC0)+8),(0));
 13766  0F7F  0140               	movlb	0	; select bank0
 13767  0F80  01A9               	clrf	lcd@b
 13768  0F81  30C8               	movlw	200
 13769  0F82  31A4  245E  318B   	fcall	_lcd
 13770                           
 13771                           ;serialCmd.c: 223: number_3(antiClockWiseTime);
 13772  0F85  0141               	movlb	1	; select bank1
 13773  0F86  0849               	movf	(_antiClockWiseTime+1)^(0+128),w
 13774  0F87  0140               	movlb	0	; select bank0
 13775  0F88  00AD               	movwf	number_3@num+1
 13776  0F89  0141               	movlb	1	; select bank1
 13777  0F8A  0848               	movf	_antiClockWiseTime^(0+128),w
 13778  0F8B  0140               	movlb	0	; select bank0
 13779  0F8C  00AC               	movwf	number_3@num
 13780  0F8D  31A6  26BB  318B   	fcall	_number_3
 13781                           
 13782                           ;serialCmd.c: 225: saveConfiguration(SET_ANTI_CLOCKWISE_TIME, antiClockWiseTime);
 13783  0F90  0141               	movlb	1	; select bank1
 13784  0F91  0849               	movf	(_antiClockWiseTime+1)^(0+128),w
 13785  0F92  0140               	movlb	0	; select bank0
 13786  0F93  00A3               	movwf	saveConfiguration@value+1
 13787  0F94  0141               	movlb	1	; select bank1
 13788  0F95  0848               	movf	_antiClockWiseTime^(0+128),w
 13789  0F96  0140               	movlb	0	; select bank0
 13790  0F97  00A2               	movwf	saveConfiguration@value
 13791  0F98  3002               	movlw	2
 13792  0F99  31A7  2741         	fcall	_saveConfiguration
 13793                           
 13794                           ;serialCmd.c: 226: break;
 13795  0F9B  0008               	return
 13796  0F9C                     l10031:	
 13797                           ;serialCmd.c: 228: case DEC_ANTI_CLOCK_WISE_TIME:
 13798                           
 13799                           
 13800                           ;serialCmd.c: 229: rcvCmd = DEC_ANTI_CLOCK_WISE_TIME;
 13801  0F9C  3069               	movlw	105
 13802  0F9D  0141               	movlb	1	; select bank1
 13803  0F9E  00AF               	movwf	??_serialCommand^(0+128)
 13804  0F9F  082F               	movf	??_serialCommand^(0+128),w
 13805  0FA0  00B1               	movwf	serialCommand@rcvCmd^(0+128)
 13806                           
 13807                           ;serialCmd.c: 231: if(antiClockWiseTime > 1)
 13808  0FA1  1BCB               	btfsc	(_antiClockWiseTime+3)^(0+128),7
 13809  0FA2  2FB8               	goto	l10037
 13810  0FA3  084B               	movf	(_antiClockWiseTime+3)^(0+128),w
 13811  0FA4  1D03               	btfss	3,2
 13812  0FA5  2FB0               	goto	l10035
 13813  0FA6  084A               	movf	(_antiClockWiseTime+2)^(0+128),w
 13814  0FA7  1D03               	btfss	3,2
 13815  0FA8  2FB0               	goto	l10035
 13816  0FA9  0849               	movf	(_antiClockWiseTime+1)^(0+128),w
 13817  0FAA  1D03               	btfss	3,2
 13818  0FAB  2FB0               	goto	l10035
 13819  0FAC  3002               	movlw	2
 13820  0FAD  0248               	subwf	_antiClockWiseTime^(0+128),w
 13821  0FAE  1C03               	btfss	3,0
 13822  0FAF  2FB8               	goto	l10037
 13823  0FB0                     l10035:	
 13824                           
 13825                           ;serialCmd.c: 232: antiClockWiseTime--;
 13826  0FB0  30FF               	movlw	255
 13827  0FB1  07C8               	addwf	_antiClockWiseTime^(0+128),f
 13828  0FB2  30FF               	movlw	255
 13829  0FB3  3DC9               	addwfc	(_antiClockWiseTime+1)^(0+128),f
 13830  0FB4  30FF               	movlw	255
 13831  0FB5  3DCA               	addwfc	(_antiClockWiseTime+2)^(0+128),f
 13832  0FB6  30FF               	movlw	255
 13833  0FB7  3DCB               	addwfc	(_antiClockWiseTime+3)^(0+128),f
 13834  0FB8                     l10037:	
 13835                           
 13836                           ;serialCmd.c: 234: lcd(((0xC0)+8),(0));
 13837  0FB8  0140               	movlb	0	; select bank0
 13838  0FB9  01A9               	clrf	lcd@b
 13839  0FBA  30C8               	movlw	200
 13840  0FBB  31A4  245E  318B   	fcall	_lcd
 13841                           
 13842                           ;serialCmd.c: 235: number_3(antiClockWiseTime);
 13843  0FBE  0141               	movlb	1	; select bank1
 13844  0FBF  0849               	movf	(_antiClockWiseTime+1)^(0+128),w
 13845  0FC0  0140               	movlb	0	; select bank0
 13846  0FC1  00AD               	movwf	number_3@num+1
 13847  0FC2  0141               	movlb	1	; select bank1
 13848  0FC3  0848               	movf	_antiClockWiseTime^(0+128),w
 13849  0FC4  0140               	movlb	0	; select bank0
 13850  0FC5  00AC               	movwf	number_3@num
 13851  0FC6  31A6  26BB  318B   	fcall	_number_3
 13852                           
 13853                           ;serialCmd.c: 237: saveConfiguration(SET_ANTI_CLOCKWISE_TIME, antiClockWiseTime);
 13854  0FC9  0141               	movlb	1	; select bank1
 13855  0FCA  0849               	movf	(_antiClockWiseTime+1)^(0+128),w
 13856  0FCB  0140               	movlb	0	; select bank0
 13857  0FCC  00A3               	movwf	saveConfiguration@value+1
 13858  0FCD  0141               	movlb	1	; select bank1
 13859  0FCE  0848               	movf	_antiClockWiseTime^(0+128),w
 13860  0FCF  0140               	movlb	0	; select bank0
 13861  0FD0  00A2               	movwf	saveConfiguration@value
 13862  0FD1  3002               	movlw	2
 13863  0FD2  31A7  2741         	fcall	_saveConfiguration
 13864                           
 13865                           ;serialCmd.c: 242: }
 13866                           
 13867                           ;serialCmd.c: 241: break;
 13868                           
 13869                           ;serialCmd.c: 240: default:
 13870                           
 13871                           ;serialCmd.c: 238: break;
 13872  0FD4  0008               	return
 13873  0FD5                     l10045:	
 13874  0FD5  0141               	movlb	1	; select bank1
 13875  0FD6  0831               	movf	serialCommand@rcvCmd^(0+128),w
 13876                           
 13877                           ; Switch size 1, requested type "space"
 13878                           ; Number of cases is 11, Range of values is 97 to 119
 13879                           ; switch strategies available:
 13880                           ; Name         Instructions Cycles
 13881                           ; simple_byte           34    18 (average)
 13882                           ; direct_byte           55     9 (fixed)
 13883                           ; jumptable            263     9 (fixed)
 13884                           ;	Chosen strategy is simple_byte
 13885  0FD7  3A61               	xorlw	97	; case 97
 13886  0FD8  1903               	skipnz
 13887  0FD9  2DE2               	goto	l9939
 13888  0FDA  3A03               	xorlw	3	; case 98
 13889  0FDB  1903               	skipnz
 13890  0FDC  2E0A               	goto	l9949
 13891  0FDD  3A01               	xorlw	1	; case 99
 13892  0FDE  1903               	skipnz
 13893  0FDF  2E31               	goto	l9959
 13894  0FE0  3A07               	xorlw	7	; case 100
 13895  0FE1  1903               	skipnz
 13896  0FE2  2E88               	goto	l9977
 13897  0FE3  3A01               	xorlw	1	; case 101
 13898  0FE4  1903               	skipnz
 13899  0FE5  2ECD               	goto	l9991
 13900  0FE6  3A03               	xorlw	3	; case 102
 13901  0FE7  1903               	skipnz
 13902  0FE8  2F0B               	goto	l10003
 13903  0FE9  3A01               	xorlw	1	; case 103
 13904  0FEA  1903               	skipnz
 13905  0FEB  2F35               	goto	l10011
 13906  0FEC  3A0F               	xorlw	15	; case 104
 13907  0FED  1903               	skipnz
 13908  0FEE  2F6E               	goto	l10023
 13909  0FEF  3A01               	xorlw	1	; case 105
 13910  0FF0  1903               	skipnz
 13911  0FF1  2F9C               	goto	l10031
 13912  0FF2  3A18               	xorlw	24	; case 113
 13913  0FF3  1903               	skipnz
 13914  0FF4  2BD0               	goto	l1634
 13915  0FF5  3A06               	xorlw	6	; case 119
 13916  0FF6  1903               	skipnz
 13917  0FF7  2CD9               	goto	l1641
 13918  0FF8  2FFF               	goto	l1670
 13919                           
 13920                           ;serialCmd.c: 243: }
 13921  0FF9  0008               	return
 13922  0FFA                     l10047:	
 13923                           
 13924                           ;serialCmd.c: 244: else
 13925                           ;serialCmd.c: 245: {
 13926                           ;serialCmd.c: 246: rcvCmd = 0x30;
 13927  0FFA  3030               	movlw	48
 13928  0FFB  00AF               	movwf	??_serialCommand^(0+128)
 13929  0FFC  082F               	movf	??_serialCommand^(0+128),w
 13930  0FFD  00B1               	movwf	serialCommand@rcvCmd^(0+128)
 13931  0FFE  0008               	return
 13932  0FFF                     l1670:	
 13933                           ;serialCmd.c: 248: }
 13934                           ;serialCmd.c: 249: return rcvCmd;
 13935                           ;	Return value of _serialCommand is never used
 13936                           
 13937  0FFF  0008               	return
 13938  1000                     __end_of_serialCommand:	
 13939                           
 13940                           	psect	text2
 13941  2741                     __ptext2:	
 13942 ;; *************** function _saveConfiguration *****************
 13943 ;; Defined at:
 13944 ;;		line 64 in file "configuration.c"
 13945 ;; Parameters:    Size  Location     Type
 13946 ;;  configTYpe      1    wreg     unsigned char 
 13947 ;;  value           2    2[BANK0 ] unsigned int 
 13948 ;; Auto vars:     Size  Location     Type
 13949 ;;  configTYpe      1    5[BANK0 ] unsigned char 
 13950 ;;  temp            1    6[BANK0 ] unsigned char 
 13951 ;; Return value:  Size  Location     Type
 13952 ;;                  1    wreg      void 
 13953 ;; Registers used:
 13954 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13955 ;; Tracked objects:
 13956 ;;		On entry : 0/0
 13957 ;;		On exit  : 0/0
 13958 ;;		Unchanged: 0/0
 13959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 13960 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13961 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13962 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13963 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13964 ;;Total ram usage:        5 bytes
 13965 ;; Hardware stack levels used:    1
 13966 ;; Hardware stack levels required when called:    5
 13967 ;; This function calls:
 13968 ;;		_eeprom_write
 13969 ;; This function is called by:
 13970 ;;		_main
 13971 ;;		_serialCommand
 13972 ;; This function uses a non-reentrant model
 13973 ;;
 13974                           
 13975                           
 13976                           ;psect for function _saveConfiguration
 13977  2741                     _saveConfiguration:	
 13978                           
 13979                           ;incstack = 0
 13980                           ; Regs used in _saveConfiguration: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13981                           ;saveConfiguration@configTYpe stored from wreg
 13982  2741  0140               	movlb	0	; select bank0
 13983  2742  00A5               	movwf	saveConfiguration@configTYpe
 13984                           
 13985                           ;configuration.c: 66: uint8_t temp;
 13986                           ;configuration.c: 68: switch(configTYpe)
 13987  2743  2FF4               	goto	l9353
 13988  2744                     l9305:	
 13989                           ;configuration.c: 69: {
 13990                           ;configuration.c: 70: case SET_RPM:
 13991                           
 13992                           
 13993                           ;configuration.c: 71: temp = (uint8_t) (value);
 13994  2744  0822               	movf	saveConfiguration@value,w
 13995  2745  00A4               	movwf	??_saveConfiguration
 13996  2746  0824               	movf	??_saveConfiguration,w
 13997  2747  00A6               	movwf	saveConfiguration@temp
 13998                           
 13999                           ;configuration.c: 72: eeprom_write(((0x05) + (0x01)), temp);
 14000  2748  0826               	movf	saveConfiguration@temp,w
 14001  2749  00A4               	movwf	??_saveConfiguration
 14002  274A  0824               	movf	??_saveConfiguration,w
 14003  274B  00A0               	movwf	eeprom_write@value
 14004  274C  3006               	movlw	6
 14005  274D  31A2  22BC  31A7   	fcall	_eeprom_write
 14006                           
 14007                           ;configuration.c: 73: _delay((unsigned long)(((3))*(8000000/4000.0)));
 14008  2750  3008               	movlw	8
 14009  2751  0140               	movlb	0	; select bank0
 14010  2752  00A4               	movwf	??_saveConfiguration
 14011  2753  30C9               	movlw	201
 14012  2754                     u7527:	
 14013  2754  0B89               	decfsz	9,f
 14014  2755  2F54               	goto	u7527
 14015  2756  0BA4               	decfsz	??_saveConfiguration,f
 14016  2757  2F54               	goto	u7527
 14017  2758  3200               	nop2
 14018                           
 14019                           ;configuration.c: 75: temp = (uint8_t)((value >> 8));
 14020  2759  0140               	movlb	0	; select bank0
 14021  275A  0823               	movf	saveConfiguration@value+1,w
 14022  275B  00A4               	movwf	??_saveConfiguration
 14023  275C  0824               	movf	??_saveConfiguration,w
 14024  275D  00A6               	movwf	saveConfiguration@temp
 14025                           
 14026                           ;configuration.c: 76: eeprom_write(((0x05) + (0x01))+1, temp);
 14027  275E  0826               	movf	saveConfiguration@temp,w
 14028  275F  00A4               	movwf	??_saveConfiguration
 14029  2760  0824               	movf	??_saveConfiguration,w
 14030  2761  00A0               	movwf	eeprom_write@value
 14031  2762  3007               	movlw	7
 14032  2763  31A2  22BC  31A7   	fcall	_eeprom_write
 14033                           
 14034                           ;configuration.c: 78: _delay((unsigned long)(((3))*(8000000/4000.0)));
 14035  2766  3008               	movlw	8
 14036  2767  0140               	movlb	0	; select bank0
 14037  2768  00A4               	movwf	??_saveConfiguration
 14038  2769  30C9               	movlw	201
 14039  276A                     u7537:	
 14040  276A  0B89               	decfsz	9,f
 14041  276B  2F6A               	goto	u7537
 14042  276C  0BA4               	decfsz	??_saveConfiguration,f
 14043  276D  2F6A               	goto	u7537
 14044  276E  3200               	nop2
 14045                           
 14046                           ;configuration.c: 80: break;
 14047  276F  0008               	return
 14048  2770                     l9317:	
 14049                           ;configuration.c: 81: case SET_CLOCKWISE_TIME:
 14050                           
 14051                           
 14052                           ;configuration.c: 83: temp = (uint8_t) (value);
 14053  2770  0140               	movlb	0	; select bank0
 14054  2771  0822               	movf	saveConfiguration@value,w
 14055  2772  00A4               	movwf	??_saveConfiguration
 14056  2773  0824               	movf	??_saveConfiguration,w
 14057  2774  00A6               	movwf	saveConfiguration@temp
 14058                           
 14059                           ;configuration.c: 84: eeprom_write((0x08), temp);
 14060  2775  0826               	movf	saveConfiguration@temp,w
 14061  2776  00A4               	movwf	??_saveConfiguration
 14062  2777  0824               	movf	??_saveConfiguration,w
 14063  2778  00A0               	movwf	eeprom_write@value
 14064  2779  3008               	movlw	8
 14065  277A  31A2  22BC  31A7   	fcall	_eeprom_write
 14066                           
 14067                           ;configuration.c: 86: _delay((unsigned long)(((3))*(8000000/4000.0)));
 14068  277D  3008               	movlw	8
 14069  277E  0140               	movlb	0	; select bank0
 14070  277F  00A4               	movwf	??_saveConfiguration
 14071  2780  30C9               	movlw	201
 14072  2781                     u7547:	
 14073  2781  0B89               	decfsz	9,f
 14074  2782  2F81               	goto	u7547
 14075  2783  0BA4               	decfsz	??_saveConfiguration,f
 14076  2784  2F81               	goto	u7547
 14077  2785  3200               	nop2
 14078                           
 14079                           ;configuration.c: 88: temp = (uint8_t)((value >>8));
 14080  2786  0140               	movlb	0	; select bank0
 14081  2787  0823               	movf	saveConfiguration@value+1,w
 14082  2788  00A4               	movwf	??_saveConfiguration
 14083  2789  0824               	movf	??_saveConfiguration,w
 14084  278A  00A6               	movwf	saveConfiguration@temp
 14085                           
 14086                           ;configuration.c: 89: eeprom_write((0x08)+1, temp);
 14087  278B  0826               	movf	saveConfiguration@temp,w
 14088  278C  00A4               	movwf	??_saveConfiguration
 14089  278D  0824               	movf	??_saveConfiguration,w
 14090  278E  00A0               	movwf	eeprom_write@value
 14091  278F  3009               	movlw	9
 14092  2790  31A2  22BC  31A7   	fcall	_eeprom_write
 14093                           
 14094                           ;configuration.c: 90: _delay((unsigned long)(((3))*(8000000/4000.0)));
 14095  2793  3008               	movlw	8
 14096  2794  0140               	movlb	0	; select bank0
 14097  2795  00A4               	movwf	??_saveConfiguration
 14098  2796  30C9               	movlw	201
 14099  2797                     u7557:	
 14100  2797  0B89               	decfsz	9,f
 14101  2798  2F97               	goto	u7557
 14102  2799  0BA4               	decfsz	??_saveConfiguration,f
 14103  279A  2F97               	goto	u7557
 14104  279B  3200               	nop2
 14105                           
 14106                           ;configuration.c: 92: break;
 14107  279C  0008               	return
 14108  279D                     l9329:	
 14109                           ;configuration.c: 93: case SET_ANTI_CLOCKWISE_TIME:
 14110                           
 14111                           
 14112                           ;configuration.c: 94: temp = (uint8_t) (value);
 14113  279D  0140               	movlb	0	; select bank0
 14114  279E  0822               	movf	saveConfiguration@value,w
 14115  279F  00A4               	movwf	??_saveConfiguration
 14116  27A0  0824               	movf	??_saveConfiguration,w
 14117  27A1  00A6               	movwf	saveConfiguration@temp
 14118                           
 14119                           ;configuration.c: 96: eeprom_write((0x0A), temp);
 14120  27A2  0826               	movf	saveConfiguration@temp,w
 14121  27A3  00A4               	movwf	??_saveConfiguration
 14122  27A4  0824               	movf	??_saveConfiguration,w
 14123  27A5  00A0               	movwf	eeprom_write@value
 14124  27A6  300A               	movlw	10
 14125  27A7  31A2  22BC  31A7   	fcall	_eeprom_write
 14126                           
 14127                           ;configuration.c: 98: _delay((unsigned long)(((3))*(8000000/4000.0)));
 14128  27AA  3008               	movlw	8
 14129  27AB  0140               	movlb	0	; select bank0
 14130  27AC  00A4               	movwf	??_saveConfiguration
 14131  27AD  30C9               	movlw	201
 14132  27AE                     u7567:	
 14133  27AE  0B89               	decfsz	9,f
 14134  27AF  2FAE               	goto	u7567
 14135  27B0  0BA4               	decfsz	??_saveConfiguration,f
 14136  27B1  2FAE               	goto	u7567
 14137  27B2  3200               	nop2
 14138                           
 14139                           ;configuration.c: 100: temp = (uint8_t)((value >>8));
 14140  27B3  0140               	movlb	0	; select bank0
 14141  27B4  0823               	movf	saveConfiguration@value+1,w
 14142  27B5  00A4               	movwf	??_saveConfiguration
 14143  27B6  0824               	movf	??_saveConfiguration,w
 14144  27B7  00A6               	movwf	saveConfiguration@temp
 14145                           
 14146                           ;configuration.c: 102: eeprom_write((0x0A)+1, temp);
 14147  27B8  0826               	movf	saveConfiguration@temp,w
 14148  27B9  00A4               	movwf	??_saveConfiguration
 14149  27BA  0824               	movf	??_saveConfiguration,w
 14150  27BB  00A0               	movwf	eeprom_write@value
 14151  27BC  300B               	movlw	11
 14152  27BD  31A2  22BC  31A7   	fcall	_eeprom_write
 14153                           
 14154                           ;configuration.c: 104: _delay((unsigned long)(((3))*(8000000/4000.0)));
 14155  27C0  3008               	movlw	8
 14156  27C1  0140               	movlb	0	; select bank0
 14157  27C2  00A4               	movwf	??_saveConfiguration
 14158  27C3  30C9               	movlw	201
 14159  27C4                     u7577:	
 14160  27C4  0B89               	decfsz	9,f
 14161  27C5  2FC4               	goto	u7577
 14162  27C6  0BA4               	decfsz	??_saveConfiguration,f
 14163  27C7  2FC4               	goto	u7577
 14164  27C8  3200               	nop2
 14165                           
 14166                           ;configuration.c: 106: break;
 14167  27C9  0008               	return
 14168  27CA                     l9341:	
 14169                           ;configuration.c: 107: case SET_HOLD_TIME:
 14170                           
 14171                           
 14172                           ;configuration.c: 108: temp = (uint8_t) (value);
 14173  27CA  0140               	movlb	0	; select bank0
 14174  27CB  0822               	movf	saveConfiguration@value,w
 14175  27CC  00A4               	movwf	??_saveConfiguration
 14176  27CD  0824               	movf	??_saveConfiguration,w
 14177  27CE  00A6               	movwf	saveConfiguration@temp
 14178                           
 14179                           ;configuration.c: 110: eeprom_write((0x0C), temp);
 14180  27CF  0826               	movf	saveConfiguration@temp,w
 14181  27D0  00A4               	movwf	??_saveConfiguration
 14182  27D1  0824               	movf	??_saveConfiguration,w
 14183  27D2  00A0               	movwf	eeprom_write@value
 14184  27D3  300C               	movlw	12
 14185  27D4  31A2  22BC  31A7   	fcall	_eeprom_write
 14186                           
 14187                           ;configuration.c: 111: _delay((unsigned long)(((3))*(8000000/4000.0)));
 14188  27D7  3008               	movlw	8
 14189  27D8  0140               	movlb	0	; select bank0
 14190  27D9  00A4               	movwf	??_saveConfiguration
 14191  27DA  30C9               	movlw	201
 14192  27DB                     u7587:	
 14193  27DB  0B89               	decfsz	9,f
 14194  27DC  2FDB               	goto	u7587
 14195  27DD  0BA4               	decfsz	??_saveConfiguration,f
 14196  27DE  2FDB               	goto	u7587
 14197  27DF  3200               	nop2
 14198                           
 14199                           ;configuration.c: 113: break;
 14200  27E0  0008               	return
 14201  27E1                     l9347:	
 14202                           ;configuration.c: 114: case SET_DIRECTION:
 14203                           
 14204                           
 14205                           ;configuration.c: 116: eeprom_write((0x0D), (uint8_t)value);
 14206  27E1  0140               	movlb	0	; select bank0
 14207  27E2  0822               	movf	saveConfiguration@value,w
 14208  27E3  00A4               	movwf	??_saveConfiguration
 14209  27E4  0824               	movf	??_saveConfiguration,w
 14210  27E5  00A0               	movwf	eeprom_write@value
 14211  27E6  300D               	movlw	13
 14212  27E7  31A2  22BC  31A7   	fcall	_eeprom_write
 14213                           
 14214                           ;configuration.c: 117: _delay((unsigned long)(((3))*(8000000/4000.0)));
 14215  27EA  3008               	movlw	8
 14216  27EB  0140               	movlb	0	; select bank0
 14217  27EC  00A4               	movwf	??_saveConfiguration
 14218  27ED  30C9               	movlw	201
 14219  27EE                     u7597:	
 14220  27EE  0B89               	decfsz	9,f
 14221  27EF  2FEE               	goto	u7597
 14222  27F0  0BA4               	decfsz	??_saveConfiguration,f
 14223  27F1  2FEE               	goto	u7597
 14224  27F2  3200               	nop2
 14225                           
 14226                           ;configuration.c: 122: }
 14227                           
 14228                           ;configuration.c: 121: break;
 14229                           
 14230                           ;configuration.c: 120: default:
 14231                           
 14232                           ;configuration.c: 119: break;
 14233  27F3  0008               	return
 14234  27F4                     l9353:	
 14235  27F4  0140               	movlb	0	; select bank0
 14236  27F5  0825               	movf	saveConfiguration@configTYpe,w
 14237                           
 14238                           ; Switch size 1, requested type "space"
 14239                           ; Number of cases is 5, Range of values is 0 to 4
 14240                           ; switch strategies available:
 14241                           ; Name         Instructions Cycles
 14242                           ; direct_byte           16     6 (fixed)
 14243                           ; simple_byte           16     9 (average)
 14244                           ; jumptable            260     6 (fixed)
 14245                           ;	Chosen strategy is direct_byte
 14246  27F6  0084               	movwf	4
 14247  27F7  3005               	movlw	5
 14248  27F8  0204               	subwf	4,w
 14249  27F9  1803               	skipnc
 14250  27FA  0008               	return
 14251  27FB  31A0               	movlp	high S10829
 14252  27FC  3504               	lslf	4,w
 14253  27FD  3E1E               	addlw	low S10829
 14254  27FE  0082               	movwf	2
 14255  27FF  0008               	return
 14256  2800                     __end_of_saveConfiguration:	
 14257                           
 14258                           	psect	swtext4
 14259  201E                     __pswtext4:	
 14260  201E                     S10829:	
 14261  201E  31A7  2F44         	ljmp	l9305
 14262  2020  31A7  2F70         	ljmp	l9317
 14263  2022  31A7  2F9D         	ljmp	l9329
 14264  2024  31A7  2FCA         	ljmp	l9341
 14265  2026  31A7  2FE1         	ljmp	l9347
 14266                           
 14267                           	psect	text3
 14268  07E7                     __ptext3:	
 14269 ;; *************** function _getch *****************
 14270 ;; Defined at:
 14271 ;;		line 156 in file "mcc_generated_files/eusart.c"
 14272 ;; Parameters:    Size  Location     Type
 14273 ;;		None
 14274 ;; Auto vars:     Size  Location     Type
 14275 ;;  retVal          1    1[BANK0 ] unsigned char 
 14276 ;; Return value:  Size  Location     Type
 14277 ;;                  1    wreg      unsigned char 
 14278 ;; Registers used:
 14279 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14280 ;; Tracked objects:
 14281 ;;		On entry : 0/0
 14282 ;;		On exit  : 0/0
 14283 ;;		Unchanged: 0/0
 14284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 14285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14286 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14287 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14288 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14289 ;;Total ram usage:        2 bytes
 14290 ;; Hardware stack levels used:    1
 14291 ;; Hardware stack levels required when called:    4
 14292 ;; This function calls:
 14293 ;;		Nothing
 14294 ;; This function is called by:
 14295 ;;		_serialCommand
 14296 ;; This function uses a non-reentrant model
 14297 ;;
 14298                           
 14299                           
 14300                           ;psect for function _getch
 14301  07E7                     _getch:	
 14302                           
 14303                           ;eusart.c: 158: uint8_t retVal = 0;
 14304                           
 14305                           ;incstack = 0
 14306                           ; Regs used in _getch: [wreg+fsr1l+fsr1h+status,2+status,0]
 14307  07E7  0140               	movlb	0	; select bank0
 14308  07E8  01A1               	clrf	getch@retVal
 14309                           
 14310                           ;eusart.c: 160: if(eusartRxCount > 0)
 14311  07E9  0141               	movlb	1	; select bank1
 14312  07EA  0843               	movf	_eusartRxCount^(0+128),w	;volatile
 14313  07EB  1903               	btfsc	3,2
 14314  07EC  2FFD               	goto	l8927
 14315                           
 14316                           ;eusart.c: 161: {
 14317                           ;eusart.c: 162: retVal = eusartRxBuffer[eusartRxHead];
 14318  07ED  087A               	movf	_eusartRxHead,w
 14319  07EE  3E79               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
 14320  07EF  0086               	movwf	6
 14321  07F0  0187               	clrf	7
 14322  07F1  0801               	movf	1,w
 14323  07F2  0140               	movlb	0	; select bank0
 14324  07F3  00A0               	movwf	??_getch
 14325  07F4  0820               	movf	??_getch,w
 14326  07F5  00A1               	movwf	getch@retVal
 14327                           
 14328                           ;eusart.c: 163: eusartRxBuffer[eusartRxHead] = 0x00;
 14329  07F6  087A               	movf	_eusartRxHead,w
 14330  07F7  3E79               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
 14331  07F8  0086               	movwf	6
 14332  07F9  0187               	clrf	7
 14333  07FA  0181               	clrf	1
 14334                           
 14335                           ;eusart.c: 164: eusartRxCount = 0;
 14336  07FB  0141               	movlb	1	; select bank1
 14337  07FC  01C3               	clrf	_eusartRxCount^(0+128)	;volatile
 14338  07FD                     l8927:	
 14339                           
 14340                           ;eusart.c: 165: }
 14341                           ;eusart.c: 166: return retVal;
 14342  07FD  0140               	movlb	0	; select bank0
 14343  07FE  0821               	movf	getch@retVal,w
 14344  07FF  0008               	return
 14345  0800                     __end_of_getch:	
 14346                           
 14347                           	psect	text4
 14348  2096                     __ptext4:	
 14349 ;; *************** function _putch *****************
 14350 ;; Defined at:
 14351 ;;		line 170 in file "mcc_generated_files/eusart.c"
 14352 ;; Parameters:    Size  Location     Type
 14353 ;;  txData          1    wreg     unsigned char 
 14354 ;; Auto vars:     Size  Location     Type
 14355 ;;  txData          1    0[BANK0 ] unsigned char 
 14356 ;; Return value:  Size  Location     Type
 14357 ;;                  1    wreg      void 
 14358 ;; Registers used:
 14359 ;;		wreg
 14360 ;; Tracked objects:
 14361 ;;		On entry : 0/0
 14362 ;;		On exit  : 0/0
 14363 ;;		Unchanged: 0/0
 14364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 14365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14366 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14368 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14369 ;;Total ram usage:        1 bytes
 14370 ;; Hardware stack levels used:    1
 14371 ;; Hardware stack levels required when called:    4
 14372 ;; This function calls:
 14373 ;;		Nothing
 14374 ;; This function is called by:
 14375 ;;		_main
 14376 ;; This function uses a non-reentrant model
 14377 ;;
 14378                           
 14379                           
 14380                           ;psect for function _putch
 14381  2096                     _putch:	
 14382                           
 14383                           ;incstack = 0
 14384                           ; Regs used in _putch: [wreg]
 14385                           ;putch@txData stored from wreg
 14386  2096  0140               	movlb	0	; select bank0
 14387  2097  00A0               	movwf	putch@txData
 14388                           
 14389                           ;eusart.c: 172: TX1REG = txData;
 14390  2098  0820               	movf	putch@txData,w
 14391  2099  0142               	movlb	2	; select bank2
 14392  209A  009A               	movwf	26	;volatile
 14393  209B  0008               	return
 14394  209C                     __end_of_putch:	
 14395                           
 14396                           	psect	text5
 14397  1C47                     __ptext5:	
 14398 ;; *************** function _outputOn *****************
 14399 ;; Defined at:
 14400 ;;		line 679 in file "main.c"
 14401 ;; Parameters:    Size  Location     Type
 14402 ;;		None
 14403 ;; Auto vars:     Size  Location     Type
 14404 ;;		None
 14405 ;; Return value:  Size  Location     Type
 14406 ;;                  1    wreg      void 
 14407 ;; Registers used:
 14408 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14409 ;; Tracked objects:
 14410 ;;		On entry : 0/0
 14411 ;;		On exit  : 0/0
 14412 ;;		Unchanged: 0/0
 14413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 14414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14416 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14417 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14418 ;;Total ram usage:        4 bytes
 14419 ;; Hardware stack levels used:    1
 14420 ;; Hardware stack levels required when called:    8
 14421 ;; This function calls:
 14422 ;;		_TMR0_StartTimer
 14423 ;;		_display
 14424 ;;		_lcd
 14425 ;;		_number_2
 14426 ;;		_number_3
 14427 ;;		_ouputOnAntiClock
 14428 ;;		_ouputOnClockwise
 14429 ;; This function is called by:
 14430 ;;		_main
 14431 ;; This function uses a non-reentrant model
 14432 ;;
 14433                           
 14434                           
 14435                           ;psect for function _outputOn
 14436  1C47                     _outputOn:	
 14437                           
 14438                           ;main.c: 681: while(STARTED)
 14439                           
 14440                           ;incstack = 0
 14441                           ; Regs used in _outputOn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14442  1C47  2D75               	goto	l1220
 14443  1C48                     l1223:	
 14444                           ;main.c: 685: {
 14445                           ;main.c: 686: case CLOCKWISE:
 14446                           
 14447                           ;main.c: 682: {
 14448                           ;main.c: 684: switch(direction)
 14449                           
 14450                           
 14451                           ;main.c: 687: IR=0;
 14452  1C48  1070               	bcf	_IR/(0+8),_IR& (0+7)
 14453                           
 14454                           ;main.c: 688: ouputOnClockwise();
 14455  1C49  3192  2210  319C   	fcall	_ouputOnClockwise
 14456                           
 14457                           ;main.c: 692: (INTCONbits.GIE = 1);
 14458  1C4C  178B               	bsf	11,7	;volatile
 14459                           
 14460                           ;main.c: 695: (INTCONbits.PEIE = 1);
 14461  1C4D  170B               	bsf	11,6	;volatile
 14462                           
 14463                           ;main.c: 698: timeInMs = 0;
 14464  1C4E  0142               	movlb	2	; select bank2
 14465  1C4F  01DE               	clrf	_timeInMs^(0+256)
 14466  1C50  01DF               	clrf	(_timeInMs+1)^(0+256)
 14467                           
 14468                           ;main.c: 700: sec = 0;
 14469  1C51  0141               	movlb	1	; select bank1
 14470  1C52  01C7               	clrf	_sec^(0+128)
 14471                           
 14472                           ;main.c: 701: min = 0;
 14473  1C53  01C6               	clrf	_min^(0+128)
 14474                           
 14475                           ;main.c: 702: updateTime = 0;
 14476  1C54  11F0               	bcf	_updateTime/(0+8),_updateTime& (0+7)
 14477                           
 14478                           ;main.c: 704: TMR0_StartTimer();
 14479  1C55  31A0  208A  319C   	fcall	_TMR0_StartTimer
 14480                           
 14481                           ;main.c: 707: lcd(0x00C,(0));
 14482  1C58  0140               	movlb	0	; select bank0
 14483  1C59  01A9               	clrf	lcd@b
 14484  1C5A  300C               	movlw	12
 14485  1C5B  31A4  245E  319C   	fcall	_lcd
 14486                           
 14487                           ;main.c: 709: display((char *)"                ",(0x80));
 14488  1C5E  3000               	movlw	low (STR_10| (0+32768))
 14489  1C5F  0140               	movlb	0	; select bank0
 14490  1C60  00AC               	movwf	display@a
 14491  1C61  30A8               	movlw	high (STR_10| (0+32768))
 14492  1C62  00AD               	movwf	display@a+1
 14493  1C63  3080               	movlw	128
 14494  1C64  0141               	movlb	1	; select bank1
 14495  1C65  00AF               	movwf	??_outputOn^(0+128)
 14496  1C66  082F               	movf	??_outputOn^(0+128),w
 14497  1C67  0140               	movlb	0	; select bank0
 14498  1C68  00AE               	movwf	display@add
 14499  1C69  31A2  2297  319C   	fcall	_display
 14500                           
 14501                           ;main.c: 711: display((char *)"HT:     T:  :   ",(0x80));
 14502  1C6C  3055               	movlw	low (STR_11| (0+32768))
 14503  1C6D  0140               	movlb	0	; select bank0
 14504  1C6E  00AC               	movwf	display@a
 14505  1C6F  30A8               	movlw	high (STR_11| (0+32768))
 14506  1C70  00AD               	movwf	display@a+1
 14507  1C71  3080               	movlw	128
 14508  1C72  0141               	movlb	1	; select bank1
 14509  1C73  00AF               	movwf	??_outputOn^(0+128)
 14510  1C74  082F               	movf	??_outputOn^(0+128),w
 14511  1C75  0140               	movlb	0	; select bank0
 14512  1C76  00AE               	movwf	display@add
 14513  1C77  31A2  2297  319C   	fcall	_display
 14514                           
 14515                           ;main.c: 713: lcd(((0x80)+3),(0));
 14516  1C7A  0140               	movlb	0	; select bank0
 14517  1C7B  01A9               	clrf	lcd@b
 14518  1C7C  3083               	movlw	131
 14519  1C7D  31A4  245E  319C   	fcall	_lcd
 14520                           
 14521                           ;main.c: 714: number_3(cnfHoldTime);
 14522  1C80  0142               	movlb	2	; select bank2
 14523  1C81  0857               	movf	(_cnfHoldTime+1)^(0+256),w
 14524  1C82  0140               	movlb	0	; select bank0
 14525  1C83  00AD               	movwf	number_3@num+1
 14526  1C84  0142               	movlb	2	; select bank2
 14527  1C85  0856               	movf	_cnfHoldTime^(0+256),w
 14528  1C86  0140               	movlb	0	; select bank0
 14529  1C87  00AC               	movwf	number_3@num
 14530  1C88  31A6  26BB  319C   	fcall	_number_3
 14531  1C8B                     L4:	
 14532                           
 14533                           ;main.c: 715: lcd(((0x80) + 10),(0));
 14534  1C8B  0140               	movlb	0	; select bank0
 14535  1C8C  01A9               	clrf	lcd@b
 14536  1C8D  308A               	movlw	138
 14537  1C8E  31A4  245E  319C   	fcall	_lcd
 14538                           
 14539                           ;main.c: 716: number_2(min);
 14540  1C91  0141               	movlb	1	; select bank1
 14541  1C92  0846               	movf	_min^(0+128),w
 14542  1C93  31A3  239E  319C   	fcall	_number_2
 14543                           
 14544                           ;main.c: 717: lcd(((0x80) + 13),(0));
 14545  1C96  0140               	movlb	0	; select bank0
 14546  1C97  01A9               	clrf	lcd@b
 14547  1C98  308D               	movlw	141
 14548  1C99  31A4  245E  319C   	fcall	_lcd
 14549                           
 14550                           ;main.c: 718: number_2(sec);
 14551  1C9C  0141               	movlb	1	; select bank1
 14552  1C9D  0847               	movf	_sec^(0+128),w
 14553  1C9E  31A3  239E  319C   	fcall	_number_2
 14554  1CA1                     l9495:	
 14555                           ;main.c: 721: while((cnfHoldTime - 1) >= sec)
 14556                           
 14557  1CA1  0141               	movlb	1	; select bank1
 14558  1CA2  0847               	movf	_sec^(0+128),w
 14559  1CA3  00AF               	movwf	??_outputOn^(0+128)
 14560  1CA4  01B0               	clrf	(??_outputOn^(0+128)+1)
 14561  1CA5  0142               	movlb	2	; select bank2
 14562  1CA6  0856               	movf	_cnfHoldTime^(0+256),w
 14563  1CA7  3EFF               	addlw	255
 14564  1CA8  0141               	movlb	1	; select bank1
 14565  1CA9  00B1               	movwf	(??_outputOn+2)^(0+128)
 14566  1CAA  30FF               	movlw	255
 14567  1CAB  0142               	movlb	2	; select bank2
 14568  1CAC  3D57               	addwfc	(_cnfHoldTime+1)^(0+256),w
 14569  1CAD  0141               	movlb	1	; select bank1
 14570  1CAE  00B2               	movwf	(??_outputOn+3)^(0+128)
 14571  1CAF  0830               	movf	(??_outputOn+1)^(0+128),w
 14572  1CB0  0232               	subwf	(??_outputOn+3)^(0+128),w
 14573  1CB1  1D03               	skipz
 14574  1CB2  2CB5               	goto	u6235
 14575  1CB3  082F               	movf	??_outputOn^(0+128),w
 14576  1CB4  0231               	subwf	(??_outputOn+2)^(0+128),w
 14577  1CB5                     u6235:	
 14578  1CB5  1C03               	btfss	3,0
 14579  1CB6  2CBA               	goto	l9497
 14580                           
 14581                           ;main.c: 722: {
 14582                           ;main.c: 723: if(updateTime)
 14583  1CB7  1DF0               	btfss	_updateTime/(0+8),_updateTime& (0+7)
 14584  1CB8  2CA1               	goto	l9495
 14585  1CB9  2C8B               	goto	L4
 14586  1CBA                     l9497:	
 14587                           ;main.c: 728: number_2(sec);
 14588                           
 14589                           ;main.c: 727: lcd(((0x80) + 13),(0));
 14590                           
 14591                           ;main.c: 726: number_2(min);
 14592                           
 14593                           ;main.c: 724: {
 14594                           ;main.c: 725: lcd(((0x80) + 10),(0));
 14595                           
 14596                           
 14597                           ;main.c: 729: }
 14598                           ;main.c: 730: }
 14599                           ;main.c: 732: sec = 0;
 14600  1CBA  01C7               	clrf	_sec^(0+128)
 14601                           
 14602                           ;main.c: 734: if((RB0) == 1)
 14603  1CBB  0140               	movlb	0	; select bank0
 14604  1CBC  1C0D               	btfss	13,0	;volatile
 14605  1CBD  2CCE               	goto	l9503
 14606                           
 14607                           ;main.c: 735: {
 14608                           ;main.c: 736: _delay((unsigned long)((100)*(8000000/4000.0)));
 14609  1CBE  3002               	movlw	2
 14610  1CBF  0141               	movlb	1	; select bank1
 14611  1CC0  00B0               	movwf	(??_outputOn^(0+128)+1)
 14612  1CC1  3004               	movlw	4
 14613  1CC2  00AF               	movwf	??_outputOn^(0+128)
 14614  1CC3  30BA               	movlw	186
 14615  1CC4                     u7607:	
 14616  1CC4  0B89               	decfsz	9,f
 14617  1CC5  2CC4               	goto	u7607
 14618  1CC6  0BAF               	decfsz	??_outputOn^(0+128),f
 14619  1CC7  2CC4               	goto	u7607
 14620  1CC8  0BB0               	decfsz	(??_outputOn^(0+128)+1),f
 14621  1CC9  2CC4               	goto	u7607
 14622  1CCA  0000               	nop
 14623  1CCB                     l1229:	
 14624                           ;main.c: 737: while((RB0) == 1);
 14625                           
 14626  1CCB  0140               	movlb	0	; select bank0
 14627  1CCC  180D               	btfsc	13,0	;volatile
 14628  1CCD  2CCB               	goto	l1229
 14629  1CCE                     l9503:	
 14630                           
 14631                           ;main.c: 738: }
 14632                           ;main.c: 740: ouputOnAntiClock();
 14633  1CCE  3188  20FA  319C   	fcall	_ouputOnAntiClock
 14634                           
 14635                           ;main.c: 741: _delay((unsigned long)((50)*(8000000/4000.0)));
 14636  1CD1  3082               	movlw	130
 14637  1CD2  0141               	movlb	1	; select bank1
 14638  1CD3  00AF               	movwf	??_outputOn^(0+128)
 14639  1CD4  30DD               	movlw	221
 14640  1CD5                     u7617:	
 14641  1CD5  0B89               	decfsz	9,f
 14642  1CD6  2CD5               	goto	u7617
 14643  1CD7  0BAF               	decfsz	??_outputOn^(0+128),f
 14644  1CD8  2CD5               	goto	u7617
 14645  1CD9  3200               	nop2
 14646  1CDA                     l9545:	
 14647                           ;main.c: 745: while((IR==1)&&(doorOpened==1))
 14648                           
 14649  1CDA  1870               	btfsc	_IR/(0+8),_IR& (0+7)
 14650  1CDB  1F72               	btfss	_doorOpened/(0+8),_doorOpened& (0+7)
 14651  1CDC  2D75               	goto	l1220
 14652                           
 14653                           ;main.c: 746: {
 14654                           ;main.c: 748: (INTCONbits.GIE = 1);
 14655  1CDD  178B               	bsf	11,7	;volatile
 14656                           
 14657                           ;main.c: 751: (INTCONbits.PEIE = 1);
 14658  1CDE  170B               	bsf	11,6	;volatile
 14659                           
 14660                           ;main.c: 752: timeInMs = 0;
 14661  1CDF  0142               	movlb	2	; select bank2
 14662  1CE0  01DE               	clrf	_timeInMs^(0+256)
 14663  1CE1  01DF               	clrf	(_timeInMs+1)^(0+256)
 14664                           
 14665                           ;main.c: 754: sec = 0;
 14666  1CE2  0141               	movlb	1	; select bank1
 14667  1CE3  01C7               	clrf	_sec^(0+128)
 14668                           
 14669                           ;main.c: 755: min = 0;
 14670  1CE4  01C6               	clrf	_min^(0+128)
 14671                           
 14672                           ;main.c: 756: updateTime = 0;
 14673  1CE5  11F0               	bcf	_updateTime/(0+8),_updateTime& (0+7)
 14674                           
 14675                           ;main.c: 758: TMR0_StartTimer();
 14676  1CE6  31A0  208A  319C   	fcall	_TMR0_StartTimer
 14677                           
 14678                           ;main.c: 761: lcd(0x00C,(0));
 14679  1CE9  0140               	movlb	0	; select bank0
 14680  1CEA  01A9               	clrf	lcd@b
 14681  1CEB  300C               	movlw	12
 14682  1CEC  31A4  245E  319C   	fcall	_lcd
 14683                           
 14684                           ;main.c: 763: display((char *)"                ",(0x80));
 14685  1CEF  3000               	movlw	low (STR_10| (0+32768))
 14686  1CF0  0140               	movlb	0	; select bank0
 14687  1CF1  00AC               	movwf	display@a
 14688  1CF2  30A8               	movlw	high (STR_10| (0+32768))
 14689  1CF3  00AD               	movwf	display@a+1
 14690  1CF4  3080               	movlw	128
 14691  1CF5  0141               	movlb	1	; select bank1
 14692  1CF6  00AF               	movwf	??_outputOn^(0+128)
 14693  1CF7  082F               	movf	??_outputOn^(0+128),w
 14694  1CF8  0140               	movlb	0	; select bank0
 14695  1CF9  00AE               	movwf	display@add
 14696  1CFA  31A2  2297  319C   	fcall	_display
 14697                           
 14698                           ;main.c: 765: display((char *)"HT:     T:  :   ",(0x80));
 14699  1CFD  3055               	movlw	low (STR_11| (0+32768))
 14700  1CFE  0140               	movlb	0	; select bank0
 14701  1CFF  00AC               	movwf	display@a
 14702  1D00  30A8               	movlw	high (STR_11| (0+32768))
 14703  1D01  00AD               	movwf	display@a+1
 14704  1D02  3080               	movlw	128
 14705  1D03  0141               	movlb	1	; select bank1
 14706  1D04  00AF               	movwf	??_outputOn^(0+128)
 14707  1D05  082F               	movf	??_outputOn^(0+128),w
 14708  1D06  0140               	movlb	0	; select bank0
 14709  1D07  00AE               	movwf	display@add
 14710  1D08  31A2  2297  319C   	fcall	_display
 14711                           
 14712                           ;main.c: 767: lcd(((0x80)+3),(0));
 14713  1D0B  0140               	movlb	0	; select bank0
 14714  1D0C  01A9               	clrf	lcd@b
 14715  1D0D  3083               	movlw	131
 14716  1D0E  31A4  245E  319C   	fcall	_lcd
 14717                           
 14718                           ;main.c: 768: number_3(cnfHoldTime);
 14719  1D11  0142               	movlb	2	; select bank2
 14720  1D12  0857               	movf	(_cnfHoldTime+1)^(0+256),w
 14721  1D13  0140               	movlb	0	; select bank0
 14722  1D14  00AD               	movwf	number_3@num+1
 14723  1D15  0142               	movlb	2	; select bank2
 14724  1D16  0856               	movf	_cnfHoldTime^(0+256),w
 14725  1D17  0140               	movlb	0	; select bank0
 14726  1D18  00AC               	movwf	number_3@num
 14727  1D19  31A6  26BB  319C   	fcall	_number_3
 14728  1D1C                     L5:	
 14729                           
 14730                           ;main.c: 769: lcd(((0x80) + 10),(0));
 14731  1D1C  0140               	movlb	0	; select bank0
 14732  1D1D  01A9               	clrf	lcd@b
 14733  1D1E  308A               	movlw	138
 14734  1D1F  31A4  245E  319C   	fcall	_lcd
 14735                           
 14736                           ;main.c: 770: number_2(min);
 14737  1D22  0141               	movlb	1	; select bank1
 14738  1D23  0846               	movf	_min^(0+128),w
 14739  1D24  31A3  239E  319C   	fcall	_number_2
 14740                           
 14741                           ;main.c: 771: lcd(((0x80) + 13),(0));
 14742  1D27  0140               	movlb	0	; select bank0
 14743  1D28  01A9               	clrf	lcd@b
 14744  1D29  308D               	movlw	141
 14745  1D2A  31A4  245E  319C   	fcall	_lcd
 14746                           
 14747                           ;main.c: 772: number_2(sec);
 14748  1D2D  0141               	movlb	1	; select bank1
 14749  1D2E  0847               	movf	_sec^(0+128),w
 14750  1D2F  31A3  239E  319C   	fcall	_number_2
 14751  1D32                     l9533:	
 14752                           ;main.c: 775: while((cnfHoldTime - 1) >= sec)
 14753                           
 14754  1D32  0141               	movlb	1	; select bank1
 14755  1D33  0847               	movf	_sec^(0+128),w
 14756  1D34  00AF               	movwf	??_outputOn^(0+128)
 14757  1D35  01B0               	clrf	(??_outputOn^(0+128)+1)
 14758  1D36  0142               	movlb	2	; select bank2
 14759  1D37  0856               	movf	_cnfHoldTime^(0+256),w
 14760  1D38  3EFF               	addlw	255
 14761  1D39  0141               	movlb	1	; select bank1
 14762  1D3A  00B1               	movwf	(??_outputOn+2)^(0+128)
 14763  1D3B  30FF               	movlw	255
 14764  1D3C  0142               	movlb	2	; select bank2
 14765  1D3D  3D57               	addwfc	(_cnfHoldTime+1)^(0+256),w
 14766  1D3E  0141               	movlb	1	; select bank1
 14767  1D3F  00B2               	movwf	(??_outputOn+3)^(0+128)
 14768  1D40  0830               	movf	(??_outputOn+1)^(0+128),w
 14769  1D41  0232               	subwf	(??_outputOn+3)^(0+128),w
 14770  1D42  1D03               	skipz
 14771  1D43  2D46               	goto	u6275
 14772  1D44  082F               	movf	??_outputOn^(0+128),w
 14773  1D45  0231               	subwf	(??_outputOn+2)^(0+128),w
 14774  1D46                     u6275:	
 14775  1D46  1C03               	btfss	3,0
 14776  1D47  2D4B               	goto	l9535
 14777                           
 14778                           ;main.c: 776: {
 14779                           ;main.c: 777: if(updateTime)
 14780  1D48  1DF0               	btfss	_updateTime/(0+8),_updateTime& (0+7)
 14781  1D49  2D32               	goto	l9533
 14782  1D4A  2D1C               	goto	L5
 14783  1D4B                     l9535:	
 14784                           ;main.c: 782: number_2(sec);
 14785                           
 14786                           ;main.c: 781: lcd(((0x80) + 13),(0));
 14787                           
 14788                           ;main.c: 780: number_2(min);
 14789                           
 14790                           ;main.c: 778: {
 14791                           ;main.c: 779: lcd(((0x80) + 10),(0));
 14792                           
 14793                           
 14794                           ;main.c: 783: }
 14795                           ;main.c: 784: }
 14796                           ;main.c: 786: sec = 0;
 14797  1D4B  01C7               	clrf	_sec^(0+128)
 14798                           
 14799                           ;main.c: 788: if((RB0) == 1)
 14800  1D4C  0140               	movlb	0	; select bank0
 14801  1D4D  1C0D               	btfss	13,0	;volatile
 14802  1D4E  2D5F               	goto	l9541
 14803                           
 14804                           ;main.c: 789: {
 14805                           ;main.c: 790: _delay((unsigned long)((100)*(8000000/4000.0)));
 14806  1D4F  3002               	movlw	2
 14807  1D50  0141               	movlb	1	; select bank1
 14808  1D51  00B0               	movwf	(??_outputOn^(0+128)+1)
 14809  1D52  3004               	movlw	4
 14810  1D53  00AF               	movwf	??_outputOn^(0+128)
 14811  1D54  30BA               	movlw	186
 14812  1D55                     u7627:	
 14813  1D55  0B89               	decfsz	9,f
 14814  1D56  2D55               	goto	u7627
 14815  1D57  0BAF               	decfsz	??_outputOn^(0+128),f
 14816  1D58  2D55               	goto	u7627
 14817  1D59  0BB0               	decfsz	(??_outputOn^(0+128)+1),f
 14818  1D5A  2D55               	goto	u7627
 14819  1D5B  0000               	nop
 14820  1D5C                     l1239:	
 14821                           ;main.c: 791: while((RB0) == 1);
 14822                           
 14823  1D5C  0140               	movlb	0	; select bank0
 14824  1D5D  180D               	btfsc	13,0	;volatile
 14825  1D5E  2D5C               	goto	l1239
 14826  1D5F                     l9541:	
 14827                           
 14828                           ;main.c: 792: }
 14829                           ;main.c: 795: ouputOnAntiClock();
 14830  1D5F  3188  20FA  319C   	fcall	_ouputOnAntiClock
 14831                           
 14832                           ;main.c: 796: _delay((unsigned long)((50)*(8000000/4000.0)));
 14833  1D62  3082               	movlw	130
 14834  1D63  0141               	movlb	1	; select bank1
 14835  1D64  00AF               	movwf	??_outputOn^(0+128)
 14836  1D65  30DD               	movlw	221
 14837  1D66                     u7637:	
 14838  1D66  0B89               	decfsz	9,f
 14839  1D67  2D66               	goto	u7637
 14840  1D68  0BAF               	decfsz	??_outputOn^(0+128),f
 14841  1D69  2D66               	goto	u7637
 14842  1D6A  3200               	nop2
 14843  1D6B  2CDA               	goto	l9545
 14844  1D6C                     l9551:	
 14845                           ;main.c: 808: }
 14846                           
 14847                           ;main.c: 807: break;
 14848                           
 14849                           ;main.c: 805: case ANTICLOCKWISE:
 14850                           
 14851                           ;main.c: 801: }
 14852                           ;main.c: 804: break;
 14853                           
 14854  1D6C  0141               	movlb	1	; select bank1
 14855  1D6D  0841               	movf	_direction^(0+128),w
 14856                           
 14857                           ; Switch size 1, requested type "space"
 14858                           ; Number of cases is 2, Range of values is 0 to 1
 14859                           ; switch strategies available:
 14860                           ; Name         Instructions Cycles
 14861                           ; simple_byte            7     4 (average)
 14862                           ; direct_byte           10     6 (fixed)
 14863                           ; jumptable            260     6 (fixed)
 14864                           ;	Chosen strategy is simple_byte
 14865  1D6E  3A00               	xorlw	0	; case 0
 14866  1D6F  1903               	skipnz
 14867  1D70  2C48               	goto	l1223
 14868  1D71  3A01               	xorlw	1	; case 1
 14869  1D72  1903               	skipnz
 14870  1D73  2D75               	goto	l1220
 14871  1D74  2D75               	goto	l1220
 14872  1D75                     l1220:	
 14873  1D75  1FF2               	btfss	_STARTED/(0+8),_STARTED& (0+7)
 14874  1D76  0008               	return
 14875  1D77  2D6C               	goto	l9551
 14876  1D78                     __end_of_outputOn:	
 14877                           
 14878                           	psect	text6
 14879  1210                     __ptext6:	
 14880 ;; *************** function _ouputOnClockwise *****************
 14881 ;; Defined at:
 14882 ;;		line 336 in file "main.c"
 14883 ;; Parameters:    Size  Location     Type
 14884 ;;		None
 14885 ;; Auto vars:     Size  Location     Type
 14886 ;;  temp            1   14[BANK1 ] unsigned char 
 14887 ;; Return value:  Size  Location     Type
 14888 ;;                  1    wreg      void 
 14889 ;; Registers used:
 14890 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14891 ;; Tracked objects:
 14892 ;;		On entry : 0/0
 14893 ;;		On exit  : 0/0
 14894 ;;		Unchanged: 0/0
 14895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 14896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14897 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14898 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14899 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14900 ;;Total ram usage:        7 bytes
 14901 ;; Hardware stack levels used:    1
 14902 ;; Hardware stack levels required when called:    7
 14903 ;; This function calls:
 14904 ;;		_PWM3_LoadDutyValue
 14905 ;;		_PWM4_LoadDutyValue
 14906 ;;		_TMR0_StartTimer
 14907 ;;		_TMR0_StopTimer
 14908 ;;		_TMR2_StartTimer
 14909 ;;		_TMR2_StopTimer
 14910 ;;		_TMR3_WriteTimer
 14911 ;;		_TMR5_WriteTimer
 14912 ;;		___aldiv
 14913 ;;		___lmul
 14914 ;;		_checkCurrentSensor
 14915 ;;		_default_menu
 14916 ;;		_display
 14917 ;;		_eeprom_write
 14918 ;;		_lcd
 14919 ;;		_number_5
 14920 ;;		_startMotor
 14921 ;;		_stopMotor
 14922 ;; This function is called by:
 14923 ;;		_outputOn
 14924 ;;		_main
 14925 ;;		_serialCommand
 14926 ;; This function uses a non-reentrant model
 14927 ;;
 14928                           
 14929                           
 14930                           ;psect for function _ouputOnClockwise
 14931  1210                     _ouputOnClockwise:	
 14932                           
 14933                           ;main.c: 339: GIE = 0;
 14934                           
 14935                           ;incstack = 0
 14936                           ; Regs used in _ouputOnClockwise: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14937  1210  138B               	bcf	11,7	;volatile
 14938                           
 14939                           ;main.c: 340: PPSLOCK = 0x55;
 14940  1211  3055               	movlw	85
 14941  1212  017D               	movlb	61	; select bank61
 14942  1213  008F               	movwf	15	;volsfr
 14943                           
 14944                           ;main.c: 341: PPSLOCK = 0xAA;
 14945  1214  30AA               	movlw	170
 14946  1215  008F               	movwf	15	;volsfr
 14947                           
 14948                           ;main.c: 342: PPSLOCKbits.PPSLOCKED = 0x00;
 14949  1216  100F               	bcf	15,0	;volsfr
 14950                           
 14951                           ;main.c: 344: RD2PPS = 0x0C;
 14952  1217  300C               	movlw	12
 14953  1218  017E               	movlb	62	; select bank62
 14954  1219  00AA               	movwf	42	;volatile
 14955                           
 14956                           ;main.c: 345: RD3PPS = 0x1D;
 14957  121A  301D               	movlw	29
 14958  121B  00AB               	movwf	43	;volatile
 14959                           
 14960                           ;main.c: 346: RD0PPS = 0x0B;
 14961  121C  300B               	movlw	11
 14962  121D  00A8               	movwf	40	;volatile
 14963                           
 14964                           ;main.c: 347: RD1PPS = 0x06;
 14965  121E  3006               	movlw	6
 14966  121F  00A9               	movwf	41	;volatile
 14967                           
 14968                           ;main.c: 348: RC6PPS = 0x10;
 14969  1220  3010               	movlw	16
 14970  1221  00A6               	movwf	38	;volatile
 14971                           
 14972                           ;main.c: 349: INTPPSbits.INTPPS = 0x00;
 14973  1222  30F0               	movlw	-16
 14974  1223  017D               	movlb	61	; select bank61
 14975  1224  0590               	andwf	16,f	;volatile
 14976                           
 14977                           ;main.c: 351: PPSLOCK = 0x55;
 14978  1225  3055               	movlw	85
 14979  1226  008F               	movwf	15	;volsfr
 14980                           
 14981                           ;main.c: 352: PPSLOCK = 0xAA;
 14982  1227  30AA               	movlw	170
 14983  1228  008F               	movwf	15	;volsfr
 14984                           
 14985                           ;main.c: 353: PPSLOCKbits.PPSLOCKED = 0x01;
 14986  1229  140F               	bsf	15,0	;volsfr
 14987                           
 14988                           ;main.c: 356: (INTCONbits.GIE = 1);
 14989  122A  178B               	bsf	11,7	;volatile
 14990                           
 14991                           ;main.c: 359: (INTCONbits.PEIE = 1);
 14992  122B  170B               	bsf	11,6	;volatile
 14993                           
 14994                           ;main.c: 360: sensorPeriodicity = 0;
 14995  122C  3000               	movlw	0
 14996  122D  0143               	movlb	3	; select bank3
 14997  122E  00E6               	movwf	(_sensorPeriodicity+3)^(0+384)
 14998  122F  3000               	movlw	0
 14999  1230  00E5               	movwf	(_sensorPeriodicity+2)^(0+384)
 15000  1231  3000               	movlw	0
 15001  1232  00E4               	movwf	(_sensorPeriodicity+1)^(0+384)
 15002  1233  3000               	movlw	0
 15003  1234  00E3               	movwf	_sensorPeriodicity^(0+384)
 15004                           
 15005                           ;main.c: 362: speedReduced = 0;
 15006  1235  1371               	bcf	_speedReduced/(0+8),_speedReduced& (0+7)
 15007                           
 15008                           ;main.c: 363: speedReduced1 = 0;
 15009  1236  12F1               	bcf	_speedReduced1/(0+8),_speedReduced1& (0+7)
 15010                           
 15011                           ;main.c: 365: display((char *)"D       C       ",(0x80));
 15012  1237  3033               	movlw	low (STR_6| (0+32768))
 15013  1238  0140               	movlb	0	; select bank0
 15014  1239  00AC               	movwf	display@a
 15015  123A  30A8               	movlw	high (STR_6| (0+32768))
 15016  123B  00AD               	movwf	display@a+1
 15017  123C  3080               	movlw	128
 15018  123D  0141               	movlb	1	; select bank1
 15019  123E  00A8               	movwf	??_ouputOnClockwise^(0+128)
 15020  123F  0828               	movf	??_ouputOnClockwise^(0+128),w
 15021  1240  0140               	movlb	0	; select bank0
 15022  1241  00AE               	movwf	display@add
 15023  1242  31A2  2297  3192   	fcall	_display
 15024                           
 15025                           ;main.c: 367: display((char *)"OPEN:           ",(0xC0));
 15026  1245  3011               	movlw	low (STR_7| (0+32768))
 15027  1246  0140               	movlb	0	; select bank0
 15028  1247  00AC               	movwf	display@a
 15029  1248  30A8               	movlw	high (STR_7| (0+32768))
 15030  1249  00AD               	movwf	display@a+1
 15031  124A  30C0               	movlw	192
 15032  124B  0141               	movlb	1	; select bank1
 15033  124C  00A8               	movwf	??_ouputOnClockwise^(0+128)
 15034  124D  0828               	movf	??_ouputOnClockwise^(0+128),w
 15035  124E  0140               	movlb	0	; select bank0
 15036  124F  00AE               	movwf	display@add
 15037  1250  31A2  2297  3192   	fcall	_display
 15038                           
 15039                           ;main.c: 370: timeInMs = 0;
 15040  1253  0142               	movlb	2	; select bank2
 15041  1254  01DE               	clrf	_timeInMs^(0+256)
 15042  1255  01DF               	clrf	(_timeInMs+1)^(0+256)
 15043                           
 15044                           ;main.c: 372: TMR2_StartTimer();
 15045  1256  31A0  2090  3192   	fcall	_TMR2_StartTimer
 15046                           
 15047                           ;main.c: 373: TMR0_StartTimer();
 15048  1259  31A0  208A  3192   	fcall	_TMR0_StartTimer
 15049                           
 15050                           ;main.c: 375: preClockWiseDistace = preClockWiseTime;
 15051  125C  0142               	movlb	2	; select bank2
 15052  125D  083F               	movf	(_preClockWiseTime+3)^(0+256),w
 15053  125E  0143               	movlb	3	; select bank3
 15054  125F  00E2               	movwf	(_preClockWiseDistace+3)^(0+384)
 15055  1260  0142               	movlb	2	; select bank2
 15056  1261  083E               	movf	(_preClockWiseTime+2)^(0+256),w
 15057  1262  0143               	movlb	3	; select bank3
 15058  1263  00E1               	movwf	(_preClockWiseDistace+2)^(0+384)
 15059  1264  0142               	movlb	2	; select bank2
 15060  1265  083D               	movf	(_preClockWiseTime+1)^(0+256),w
 15061  1266  0143               	movlb	3	; select bank3
 15062  1267  00E0               	movwf	(_preClockWiseDistace+1)^(0+384)
 15063  1268  0142               	movlb	2	; select bank2
 15064  1269  083C               	movf	_preClockWiseTime^(0+256),w
 15065  126A  0143               	movlb	3	; select bank3
 15066  126B  00DF               	movwf	_preClockWiseDistace^(0+384)
 15067                           
 15068                           ;main.c: 376: preAntiClockWiseDistace = preAntiClockWiseTime;
 15069  126C  0142               	movlb	2	; select bank2
 15070  126D  083B               	movf	(_preAntiClockWiseTime+3)^(0+256),w
 15071  126E  0143               	movlb	3	; select bank3
 15072  126F  00DE               	movwf	(_preAntiClockWiseDistace+3)^(0+384)
 15073  1270  0142               	movlb	2	; select bank2
 15074  1271  083A               	movf	(_preAntiClockWiseTime+2)^(0+256),w
 15075  1272  0143               	movlb	3	; select bank3
 15076  1273  00DD               	movwf	(_preAntiClockWiseDistace+2)^(0+384)
 15077  1274  0142               	movlb	2	; select bank2
 15078  1275  0839               	movf	(_preAntiClockWiseTime+1)^(0+256),w
 15079  1276  0143               	movlb	3	; select bank3
 15080  1277  00DC               	movwf	(_preAntiClockWiseDistace+1)^(0+384)
 15081  1278  0142               	movlb	2	; select bank2
 15082  1279  0838               	movf	_preAntiClockWiseTime^(0+256),w
 15083  127A  0143               	movlb	3	; select bank3
 15084  127B  00DB               	movwf	_preAntiClockWiseDistace^(0+384)
 15085                           
 15086                           ;main.c: 379: disToBeCovered = ((preClockWiseDistace * (80))/100);
 15087  127C  3000               	movlw	0
 15088  127D  0140               	movlb	0	; select bank0
 15089  127E  00AF               	movwf	___aldiv@divisor+3
 15090  127F  3000               	movlw	0
 15091  1280  00AE               	movwf	___aldiv@divisor+2
 15092  1281  3000               	movlw	0
 15093  1282  00AD               	movwf	___aldiv@divisor+1
 15094  1283  3064               	movlw	100
 15095  1284  00AC               	movwf	___aldiv@divisor
 15096  1285  0143               	movlb	3	; select bank3
 15097  1286  0862               	movf	(_preClockWiseDistace+3)^(0+384),w
 15098  1287  0140               	movlb	0	; select bank0
 15099  1288  00A3               	movwf	___lmul@multiplier+3
 15100  1289  0143               	movlb	3	; select bank3
 15101  128A  0861               	movf	(_preClockWiseDistace+2)^(0+384),w
 15102  128B  0140               	movlb	0	; select bank0
 15103  128C  00A2               	movwf	___lmul@multiplier+2
 15104  128D  0143               	movlb	3	; select bank3
 15105  128E  0860               	movf	(_preClockWiseDistace+1)^(0+384),w
 15106  128F  0140               	movlb	0	; select bank0
 15107  1290  00A1               	movwf	___lmul@multiplier+1
 15108  1291  0143               	movlb	3	; select bank3
 15109  1292  085F               	movf	_preClockWiseDistace^(0+384),w
 15110  1293  0140               	movlb	0	; select bank0
 15111  1294  00A0               	movwf	___lmul@multiplier
 15112  1295  3000               	movlw	0
 15113  1296  00A7               	movwf	___lmul@multiplicand+3
 15114  1297  3000               	movlw	0
 15115  1298  00A6               	movwf	___lmul@multiplicand+2
 15116  1299  3000               	movlw	0
 15117  129A  00A5               	movwf	___lmul@multiplicand+1
 15118  129B  3050               	movlw	80
 15119  129C  00A4               	movwf	___lmul@multiplicand
 15120  129D  31A3  2339  3192   	fcall	___lmul
 15121  12A0  0140               	movlb	0	; select bank0
 15122  12A1  0823               	movf	?___lmul+3,w
 15123  12A2  00B3               	movwf	___aldiv@dividend+3
 15124  12A3  0822               	movf	?___lmul+2,w
 15125  12A4  00B2               	movwf	___aldiv@dividend+2
 15126  12A5  0821               	movf	?___lmul+1,w
 15127  12A6  00B1               	movwf	___aldiv@dividend+1
 15128  12A7  0820               	movf	?___lmul,w
 15129  12A8  00B0               	movwf	___aldiv@dividend
 15130  12A9  31A6  2639  3192   	fcall	___aldiv
 15131  12AC  0140               	movlb	0	; select bank0
 15132  12AD  082F               	movf	?___aldiv+3,w
 15133  12AE  0142               	movlb	2	; select bank2
 15134  12AF  00B7               	movwf	(_disToBeCovered+3)^(0+256)
 15135  12B0  0140               	movlb	0	; select bank0
 15136  12B1  082E               	movf	?___aldiv+2,w
 15137  12B2  0142               	movlb	2	; select bank2
 15138  12B3  00B6               	movwf	(_disToBeCovered+2)^(0+256)
 15139  12B4  0140               	movlb	0	; select bank0
 15140  12B5  082D               	movf	?___aldiv+1,w
 15141  12B6  0142               	movlb	2	; select bank2
 15142  12B7  00B5               	movwf	(_disToBeCovered+1)^(0+256)
 15143  12B8  0140               	movlb	0	; select bank0
 15144  12B9  082C               	movf	?___aldiv,w
 15145  12BA  0142               	movlb	2	; select bank2
 15146  12BB  00B4               	movwf	_disToBeCovered^(0+256)
 15147                           
 15148                           ;main.c: 380: disToBeCovered = disToBeCovered * 10;
 15149  12BC  0837               	movf	(_disToBeCovered+3)^(0+256),w
 15150  12BD  0140               	movlb	0	; select bank0
 15151  12BE  00A3               	movwf	___lmul@multiplier+3
 15152  12BF  0142               	movlb	2	; select bank2
 15153  12C0  0836               	movf	(_disToBeCovered+2)^(0+256),w
 15154  12C1  0140               	movlb	0	; select bank0
 15155  12C2  00A2               	movwf	___lmul@multiplier+2
 15156  12C3  0142               	movlb	2	; select bank2
 15157  12C4  0835               	movf	(_disToBeCovered+1)^(0+256),w
 15158  12C5  0140               	movlb	0	; select bank0
 15159  12C6  00A1               	movwf	___lmul@multiplier+1
 15160  12C7  0142               	movlb	2	; select bank2
 15161  12C8  0834               	movf	_disToBeCovered^(0+256),w
 15162  12C9  0140               	movlb	0	; select bank0
 15163  12CA  00A0               	movwf	___lmul@multiplier
 15164  12CB  3000               	movlw	0
 15165  12CC  00A7               	movwf	___lmul@multiplicand+3
 15166  12CD  3000               	movlw	0
 15167  12CE  00A6               	movwf	___lmul@multiplicand+2
 15168  12CF  3000               	movlw	0
 15169  12D0  00A5               	movwf	___lmul@multiplicand+1
 15170  12D1  300A               	movlw	10
 15171  12D2  00A4               	movwf	___lmul@multiplicand
 15172  12D3  31A3  2339  3192   	fcall	___lmul
 15173  12D6  0140               	movlb	0	; select bank0
 15174  12D7  0823               	movf	?___lmul+3,w
 15175  12D8  0142               	movlb	2	; select bank2
 15176  12D9  00B7               	movwf	(_disToBeCovered+3)^(0+256)
 15177  12DA  0140               	movlb	0	; select bank0
 15178  12DB  0822               	movf	?___lmul+2,w
 15179  12DC  0142               	movlb	2	; select bank2
 15180  12DD  00B6               	movwf	(_disToBeCovered+2)^(0+256)
 15181  12DE  0140               	movlb	0	; select bank0
 15182  12DF  0821               	movf	?___lmul+1,w
 15183  12E0  0142               	movlb	2	; select bank2
 15184  12E1  00B5               	movwf	(_disToBeCovered+1)^(0+256)
 15185  12E2  0140               	movlb	0	; select bank0
 15186  12E3  0820               	movf	?___lmul,w
 15187  12E4  0142               	movlb	2	; select bank2
 15188  12E5  00B4               	movwf	_disToBeCovered^(0+256)
 15189                           
 15190                           ;main.c: 382: lcd(((0x80)+1),(0));
 15191  12E6  0140               	movlb	0	; select bank0
 15192  12E7  01A9               	clrf	lcd@b
 15193  12E8  3081               	movlw	129
 15194  12E9  31A4  245E  3192   	fcall	_lcd
 15195                           
 15196                           ;main.c: 383: number_5(disToBeCovered);
 15197  12EC  0142               	movlb	2	; select bank2
 15198  12ED  0837               	movf	(_disToBeCovered+3)^(0+256),w
 15199  12EE  0140               	movlb	0	; select bank0
 15200  12EF  00BB               	movwf	number_5@num+3
 15201  12F0  0142               	movlb	2	; select bank2
 15202  12F1  0836               	movf	(_disToBeCovered+2)^(0+256),w
 15203  12F2  0140               	movlb	0	; select bank0
 15204  12F3  00BA               	movwf	number_5@num+2
 15205  12F4  0142               	movlb	2	; select bank2
 15206  12F5  0835               	movf	(_disToBeCovered+1)^(0+256),w
 15207  12F6  0140               	movlb	0	; select bank0
 15208  12F7  00B9               	movwf	number_5@num+1
 15209  12F8  0142               	movlb	2	; select bank2
 15210  12F9  0834               	movf	_disToBeCovered^(0+256),w
 15211  12FA  0140               	movlb	0	; select bank0
 15212  12FB  00B8               	movwf	number_5@num
 15213  12FC  3190  2058  3192   	fcall	_number_5
 15214                           
 15215                           ;main.c: 385: STARTED = 1;
 15216  12FF  17F2               	bsf	_STARTED/(0+8),_STARTED& (0+7)
 15217                           
 15218                           ;main.c: 387: TMR3_WriteTimer(0);
 15219  1300  3000               	movlw	0
 15220  1301  0140               	movlb	0	; select bank0
 15221  1302  00A0               	movwf	TMR3_WriteTimer@timerVal
 15222  1303  00A1               	movwf	TMR3_WriteTimer@timerVal+1
 15223  1304  31A1  2179  3192   	fcall	_TMR3_WriteTimer
 15224                           
 15225                           ;main.c: 388: TMR5_WriteTimer(0);
 15226  1307  3000               	movlw	0
 15227  1308  0140               	movlb	0	; select bank0
 15228  1309  00A0               	movwf	TMR5_WriteTimer@timerVal
 15229  130A  00A1               	movwf	TMR5_WriteTimer@timerVal+1
 15230  130B  31A1  2190  3192   	fcall	_TMR5_WriteTimer
 15231                           
 15232                           ;main.c: 389: tempSpeedRpm = speedRpm;
 15233  130E  0141               	movlb	1	; select bank1
 15234  130F  0840               	movf	(_speedRpm+1)^(0+128),w
 15235  1310  00BE               	movwf	(_tempSpeedRpm+1)^(0+128)
 15236  1311  083F               	movf	_speedRpm^(0+128),w
 15237  1312  00BD               	movwf	_tempSpeedRpm^(0+128)
 15238                           
 15239                           ;main.c: 391: startMotor(CLOCKWISE,tempSpeedRpm);
 15240  1313  083E               	movf	(_tempSpeedRpm+1)^(0+128),w
 15241  1314  0140               	movlb	0	; select bank0
 15242  1315  00A3               	movwf	startMotor@speed+1
 15243  1316  0141               	movlb	1	; select bank1
 15244  1317  083D               	movf	_tempSpeedRpm^(0+128),w
 15245  1318  0140               	movlb	0	; select bank0
 15246  1319  00A2               	movwf	startMotor@speed
 15247  131A  3000               	movlw	0
 15248  131B  31A5  25C3  3192   	fcall	_startMotor
 15249                           
 15250                           ;main.c: 393: lcd(((0x80) + 7),(0));
 15251  131E  0140               	movlb	0	; select bank0
 15252  131F  01A9               	clrf	lcd@b
 15253  1320  3087               	movlw	135
 15254  1321  31A4  245E  3192   	fcall	_lcd
 15255                           
 15256                           ;main.c: 394: number_5(encoderTmr3);
 15257  1324  0143               	movlb	3	; select bank3
 15258  1325  086A               	movf	(_encoderTmr3+3)^(0+384),w
 15259  1326  0140               	movlb	0	; select bank0
 15260  1327  00BB               	movwf	number_5@num+3
 15261  1328  0143               	movlb	3	; select bank3
 15262  1329  0869               	movf	(_encoderTmr3+2)^(0+384),w
 15263  132A  0140               	movlb	0	; select bank0
 15264  132B  00BA               	movwf	number_5@num+2
 15265  132C  0143               	movlb	3	; select bank3
 15266  132D  0868               	movf	(_encoderTmr3+1)^(0+384),w
 15267  132E  0140               	movlb	0	; select bank0
 15268  132F  00B9               	movwf	number_5@num+1
 15269  1330  0143               	movlb	3	; select bank3
 15270  1331  0867               	movf	_encoderTmr3^(0+384),w
 15271  1332  0140               	movlb	0	; select bank0
 15272  1333  00B8               	movwf	number_5@num
 15273  1334  3190  2058  3192   	fcall	_number_5
 15274                           
 15275                           ;main.c: 396: stopFlag = 0;
 15276  1337  1270               	bcf	_stopFlag/(0+8),_stopFlag& (0+7)
 15277  1338                     l1196:	
 15278                           ;main.c: 398: while(STARTED)
 15279                           
 15280  1338  1FF2               	btfss	_STARTED/(0+8),_STARTED& (0+7)
 15281  1339  2B5D               	goto	l8999
 15282                           
 15283                           ;main.c: 399: {
 15284                           ;main.c: 401: checkCurrentSensor(CLOCKWISE,tempSpeedRpm);
 15285  133A  0141               	movlb	1	; select bank1
 15286  133B  083E               	movf	(_tempSpeedRpm+1)^(0+128),w
 15287  133C  00A1               	movwf	(checkCurrentSensor@speed+1)^(0+128)
 15288  133D  083D               	movf	_tempSpeedRpm^(0+128),w
 15289  133E  00A0               	movwf	checkCurrentSensor@speed^(0+128)
 15290  133F  3000               	movlw	0
 15291  1340  3188  201A  3192   	fcall	_checkCurrentSensor
 15292                           
 15293                           ;main.c: 402: if((encoderTmr5 >= disToBeCovered)) {
 15294  1343  0142               	movlb	2	; select bank2
 15295  1344  0843               	movf	(_encoderTmr5+3)^(0+256),w
 15296  1345  3A80               	xorlw	128
 15297  1346  0141               	movlb	1	; select bank1
 15298  1347  00A8               	movwf	??_ouputOnClockwise^(0+128)
 15299  1348  0142               	movlb	2	; select bank2
 15300  1349  0837               	movf	(_disToBeCovered+3)^(0+256),w
 15301  134A  3A80               	xorlw	128
 15302  134B  0141               	movlb	1	; select bank1
 15303  134C  0228               	subwf	??_ouputOnClockwise^(0+128),w
 15304  134D  0142               	movlb	2	; select bank2
 15305  134E  1D03               	skipz
 15306  134F  2B5A               	goto	u5923
 15307  1350  0836               	movf	(_disToBeCovered+2)^(0+256),w
 15308  1351  0242               	subwf	(_encoderTmr5+2)^(0+256),w
 15309  1352  1D03               	skipz
 15310  1353  2B5A               	goto	u5923
 15311  1354  0835               	movf	(_disToBeCovered+1)^(0+256),w
 15312  1355  0241               	subwf	(_encoderTmr5+1)^(0+256),w
 15313  1356  1D03               	skipz
 15314  1357  2B5A               	goto	u5923
 15315  1358  0834               	movf	_disToBeCovered^(0+256),w
 15316  1359  0240               	subwf	_encoderTmr5^(0+256),w
 15317  135A                     u5923:	
 15318  135A  1C03               	skipc
 15319  135B  2B38               	goto	l1196
 15320                           
 15321                           ;main.c: 403: STARTED = 0;
 15322  135C  13F2               	bcf	_STARTED/(0+8),_STARTED& (0+7)
 15323  135D                     l8999:	
 15324                           ;main.c: 404: break;
 15325                           
 15326                           
 15327                           ;main.c: 405: }
 15328                           ;main.c: 406: }
 15329                           ;main.c: 408: stopMotor(CLOCKWISE,tempSpeedRpm);
 15330  135D  0141               	movlb	1	; select bank1
 15331  135E  083E               	movf	(_tempSpeedRpm+1)^(0+128),w
 15332  135F  0140               	movlb	0	; select bank0
 15333  1360  00A3               	movwf	stopMotor@speed+1
 15334  1361  0141               	movlb	1	; select bank1
 15335  1362  083D               	movf	_tempSpeedRpm^(0+128),w
 15336  1363  0140               	movlb	0	; select bank0
 15337  1364  00A2               	movwf	stopMotor@speed
 15338  1365  3000               	movlw	0
 15339  1366  3198  2014  3192   	fcall	_stopMotor
 15340                           
 15341                           ;main.c: 410: lcd(((0xC0)+6),(0));
 15342  1369  0140               	movlb	0	; select bank0
 15343  136A  01A9               	clrf	lcd@b
 15344  136B  30C6               	movlw	198
 15345  136C  31A4  245E  3192   	fcall	_lcd
 15346                           
 15347                           ;main.c: 411: number_5(encoderTmr5);
 15348  136F  0142               	movlb	2	; select bank2
 15349  1370  0843               	movf	(_encoderTmr5+3)^(0+256),w
 15350  1371  0140               	movlb	0	; select bank0
 15351  1372  00BB               	movwf	number_5@num+3
 15352  1373  0142               	movlb	2	; select bank2
 15353  1374  0842               	movf	(_encoderTmr5+2)^(0+256),w
 15354  1375  0140               	movlb	0	; select bank0
 15355  1376  00BA               	movwf	number_5@num+2
 15356  1377  0142               	movlb	2	; select bank2
 15357  1378  0841               	movf	(_encoderTmr5+1)^(0+256),w
 15358  1379  0140               	movlb	0	; select bank0
 15359  137A  00B9               	movwf	number_5@num+1
 15360  137B  0142               	movlb	2	; select bank2
 15361  137C  0840               	movf	_encoderTmr5^(0+256),w
 15362  137D  0140               	movlb	0	; select bank0
 15363  137E  00B8               	movwf	number_5@num
 15364  137F  3190  2058  3192   	fcall	_number_5
 15365                           
 15366                           ;main.c: 413: lcd(((0xC0)+12),(0));
 15367  1382  0140               	movlb	0	; select bank0
 15368  1383  01A9               	clrf	lcd@b
 15369  1384  30CC               	movlw	204
 15370  1385  31A4  245E  3192   	fcall	_lcd
 15371                           
 15372                           ;main.c: 414: number_5(timeInMs);
 15373  1388  0142               	movlb	2	; select bank2
 15374  1389  085E               	movf	_timeInMs^(0+256),w
 15375  138A  0140               	movlb	0	; select bank0
 15376  138B  00B8               	movwf	number_5@num
 15377  138C  0142               	movlb	2	; select bank2
 15378  138D  085F               	movf	(_timeInMs+1)^(0+256),w
 15379  138E  0140               	movlb	0	; select bank0
 15380  138F  00B9               	movwf	number_5@num+1
 15381  1390  01BA               	clrf	number_5@num+2
 15382  1391  01BB               	clrf	number_5@num+3
 15383  1392  3190  2058  3192   	fcall	_number_5
 15384                           
 15385                           ;main.c: 416: STARTED = 0;
 15386  1395  13F2               	bcf	_STARTED/(0+8),_STARTED& (0+7)
 15387                           
 15388                           ;main.c: 417: stopFlag = 0;
 15389  1396  1270               	bcf	_stopFlag/(0+8),_stopFlag& (0+7)
 15390                           
 15391                           ;main.c: 419: TMR0_StopTimer();
 15392  1397  31A0  208D  3192   	fcall	_TMR0_StopTimer
 15393                           
 15394                           ;main.c: 420: TMR2_StopTimer();
 15395  139A  3190  2000  3192   	fcall	_TMR2_StopTimer
 15396                           
 15397                           ;main.c: 422: PWM3_LoadDutyValue(0);
 15398  139D  3000               	movlw	0
 15399  139E  0140               	movlb	0	; select bank0
 15400  139F  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
 15401  13A0  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
 15402  13A1  31A2  2235  3192   	fcall	_PWM3_LoadDutyValue
 15403                           
 15404                           ;main.c: 423: PWM4_LoadDutyValue(0);
 15405  13A4  3000               	movlw	0
 15406  13A5  0140               	movlb	0	; select bank0
 15407  13A6  00A0               	movwf	PWM4_LoadDutyValue@dutyValue
 15408  13A7  00A1               	movwf	PWM4_LoadDutyValue@dutyValue+1
 15409  13A8  31A2  2254  3192   	fcall	_PWM4_LoadDutyValue
 15410                           
 15411                           ;main.c: 425: doorOpened = 1;
 15412  13AB  1772               	bsf	_doorOpened/(0+8),_doorOpened& (0+7)
 15413                           
 15414                           ;main.c: 427: eeprom_write(0x29 , doorOpened);
 15415  13AC  3000               	movlw	0
 15416  13AD  1B72               	btfsc	_doorOpened/(0+8),_doorOpened& (0+7)
 15417  13AE  3001               	movlw	1
 15418  13AF  0140               	movlb	0	; select bank0
 15419  13B0  00A0               	movwf	eeprom_write@value
 15420  13B1  3029               	movlw	41
 15421  13B2  31A2  22BC  3192   	fcall	_eeprom_write
 15422                           
 15423                           ;main.c: 428: _delay((unsigned long)(((3))*(8000000/4000.0)));
 15424  13B5  3008               	movlw	8
 15425  13B6  0141               	movlb	1	; select bank1
 15426  13B7  00A8               	movwf	??_ouputOnClockwise^(0+128)
 15427  13B8  30C9               	movlw	201
 15428  13B9                     u7647:	
 15429  13B9  0B89               	decfsz	9,f
 15430  13BA  2BB9               	goto	u7647
 15431  13BB  0BA8               	decfsz	??_ouputOnClockwise^(0+128),f
 15432  13BC  2BB9               	goto	u7647
 15433  13BD  3200               	nop2
 15434                           
 15435                           ;main.c: 432: unsigned char temp = preAntiClockWiseTime;
 15436  13BE  0142               	movlb	2	; select bank2
 15437  13BF  0838               	movf	_preAntiClockWiseTime^(0+256),w
 15438  13C0  0141               	movlb	1	; select bank1
 15439  13C1  00A8               	movwf	??_ouputOnClockwise^(0+128)
 15440  13C2  0828               	movf	??_ouputOnClockwise^(0+128),w
 15441  13C3  00AE               	movwf	ouputOnClockwise@temp^(0+128)
 15442                           
 15443                           ;main.c: 433: eeprom_write(0x34, temp);
 15444  13C4  082E               	movf	ouputOnClockwise@temp^(0+128),w
 15445  13C5  00A8               	movwf	??_ouputOnClockwise^(0+128)
 15446  13C6  0828               	movf	??_ouputOnClockwise^(0+128),w
 15447  13C7  0140               	movlb	0	; select bank0
 15448  13C8  00A0               	movwf	eeprom_write@value
 15449  13C9  3034               	movlw	52
 15450  13CA  31A2  22BC  3192   	fcall	_eeprom_write
 15451                           
 15452                           ;main.c: 435: _delay((unsigned long)(((3))*(8000000/4000.0)));
 15453  13CD  3008               	movlw	8
 15454  13CE  0141               	movlb	1	; select bank1
 15455  13CF  00A8               	movwf	??_ouputOnClockwise^(0+128)
 15456  13D0  30C9               	movlw	201
 15457  13D1                     u7657:	
 15458  13D1  0B89               	decfsz	9,f
 15459  13D2  2BD1               	goto	u7657
 15460  13D3  0BA8               	decfsz	??_ouputOnClockwise^(0+128),f
 15461  13D4  2BD1               	goto	u7657
 15462  13D5  3200               	nop2
 15463                           
 15464                           ;main.c: 437: temp = (uint8_t)((preAntiClockWiseTime >>8));
 15465  13D6  0142               	movlb	2	; select bank2
 15466  13D7  0838               	movf	_preAntiClockWiseTime^(0+256),w
 15467  13D8  0141               	movlb	1	; select bank1
 15468  13D9  00A8               	movwf	??_ouputOnClockwise^(0+128)
 15469  13DA  0142               	movlb	2	; select bank2
 15470  13DB  0839               	movf	(_preAntiClockWiseTime+1)^(0+256),w
 15471  13DC  0141               	movlb	1	; select bank1
 15472  13DD  00A9               	movwf	(??_ouputOnClockwise^(0+128)+1)
 15473  13DE  0142               	movlb	2	; select bank2
 15474  13DF  083A               	movf	(_preAntiClockWiseTime+2)^(0+256),w
 15475  13E0  0141               	movlb	1	; select bank1
 15476  13E1  00AA               	movwf	(??_ouputOnClockwise^(0+128)+2)
 15477  13E2  0142               	movlb	2	; select bank2
 15478  13E3  083B               	movf	(_preAntiClockWiseTime+3)^(0+256),w
 15479  13E4  0141               	movlb	1	; select bank1
 15480  13E5  00AB               	movwf	(??_ouputOnClockwise^(0+128)+3)
 15481  13E6  3008               	movlw	8
 15482  13E7  00AC               	movwf	(??_ouputOnClockwise+4)^(0+128)
 15483  13E8                     u5945:	
 15484  13E8  37AB               	asrf	(??_ouputOnClockwise^(0+128)+3),f
 15485  13E9  0CAA               	rrf	(??_ouputOnClockwise^(0+128)+2),f
 15486  13EA  0CA9               	rrf	(??_ouputOnClockwise^(0+128)+1),f
 15487  13EB  0CA8               	rrf	??_ouputOnClockwise^(0+128),f
 15488  13EC  0BAC               	decfsz	(??_ouputOnClockwise+4)^(0+128),f
 15489  13ED  2BE8               	goto	u5945
 15490  13EE  0828               	movf	??_ouputOnClockwise^(0+128),w
 15491  13EF  00AD               	movwf	(??_ouputOnClockwise+5)^(0+128)
 15492  13F0  082D               	movf	(??_ouputOnClockwise+5)^(0+128),w
 15493  13F1  00AE               	movwf	ouputOnClockwise@temp^(0+128)
 15494                           
 15495                           ;main.c: 439: eeprom_write(0x34+1, temp);
 15496  13F2  082E               	movf	ouputOnClockwise@temp^(0+128),w
 15497  13F3  00A8               	movwf	??_ouputOnClockwise^(0+128)
 15498  13F4  0828               	movf	??_ouputOnClockwise^(0+128),w
 15499  13F5  0140               	movlb	0	; select bank0
 15500  13F6  00A0               	movwf	eeprom_write@value
 15501  13F7  3035               	movlw	53
 15502  13F8  31A2  22BC  3192   	fcall	_eeprom_write
 15503                           
 15504                           ;main.c: 441: _delay((unsigned long)(((3))*(8000000/4000.0)));
 15505  13FB  3008               	movlw	8
 15506  13FC  0141               	movlb	1	; select bank1
 15507  13FD  00A8               	movwf	??_ouputOnClockwise^(0+128)
 15508  13FE  30C9               	movlw	201
 15509  13FF                     u7667:	
 15510  13FF  0B89               	decfsz	9,f
 15511  1400  2BFF               	goto	u7667
 15512  1401  0BA8               	decfsz	??_ouputOnClockwise^(0+128),f
 15513  1402  2BFF               	goto	u7667
 15514  1403  3200               	nop2
 15515                           
 15516                           ;main.c: 445: (INTCONbits.GIE = 0);
 15517  1404  138B               	bcf	11,7	;volatile
 15518                           
 15519                           ;main.c: 448: (INTCONbits.PEIE = 0);
 15520  1405  130B               	bcf	11,6	;volatile
 15521                           
 15522                           ;main.c: 450: GIE = 0;
 15523  1406  138B               	bcf	11,7	;volatile
 15524                           
 15525                           ;main.c: 451: PPSLOCK = 0x55;
 15526  1407  3055               	movlw	85
 15527  1408  017D               	movlb	61	; select bank61
 15528  1409  008F               	movwf	15	;volsfr
 15529                           
 15530                           ;main.c: 452: PPSLOCK = 0xAA;
 15531  140A  30AA               	movlw	170
 15532  140B  008F               	movwf	15	;volsfr
 15533                           
 15534                           ;main.c: 453: PPSLOCKbits.PPSLOCKED = 0x00;
 15535  140C  100F               	bcf	15,0	;volsfr
 15536                           
 15537                           ;main.c: 455: RD2PPS = 0x00;
 15538  140D  017E               	movlb	62	; select bank62
 15539  140E  01AA               	clrf	42	;volatile
 15540                           
 15541                           ;main.c: 456: RD3PPS = 0x00;
 15542  140F  01AB               	clrf	43	;volatile
 15543                           
 15544                           ;main.c: 457: RD0PPS = 0x00;
 15545  1410  01A8               	clrf	40	;volatile
 15546                           
 15547                           ;main.c: 458: RD1PPS = 0x00;
 15548  1411  01A9               	clrf	41	;volatile
 15549                           
 15550                           ;main.c: 459: RC6PPS = 0x00;
 15551  1412  01A6               	clrf	38	;volatile
 15552                           
 15553                           ;main.c: 460: INTPPSbits.INTPPS = 0x00;
 15554  1413  30F0               	movlw	-16
 15555  1414  017D               	movlb	61	; select bank61
 15556  1415  0590               	andwf	16,f	;volatile
 15557                           
 15558                           ;main.c: 462: PPSLOCK = 0x55;
 15559  1416  3055               	movlw	85
 15560  1417  008F               	movwf	15	;volsfr
 15561                           
 15562                           ;main.c: 463: PPSLOCK = 0xAA;
 15563  1418  30AA               	movlw	170
 15564  1419  008F               	movwf	15	;volsfr
 15565                           
 15566                           ;main.c: 464: PPSLOCKbits.PPSLOCKED = 0x01;
 15567  141A  140F               	bsf	15,0	;volsfr
 15568                           
 15569                           ;main.c: 466: _delay((unsigned long)((500)*(8000000/4000.0)));
 15570  141B  3006               	movlw	6
 15571  141C  0141               	movlb	1	; select bank1
 15572  141D  00A9               	movwf	(??_ouputOnClockwise^(0+128)+1)
 15573  141E  3013               	movlw	19
 15574  141F  00A8               	movwf	??_ouputOnClockwise^(0+128)
 15575  1420  30AD               	movlw	173
 15576  1421                     u7677:	
 15577  1421  0B89               	decfsz	9,f
 15578  1422  2C21               	goto	u7677
 15579  1423  0BA8               	decfsz	??_ouputOnClockwise^(0+128),f
 15580  1424  2C21               	goto	u7677
 15581  1425  0BA9               	decfsz	(??_ouputOnClockwise^(0+128)+1),f
 15582  1426  2C21               	goto	u7677
 15583  1427  3200               	nop2
 15584                           
 15585                           ;main.c: 468: (RD6) = 1;
 15586  1428  0140               	movlb	0	; select bank0
 15587  1429  170F               	bsf	15,6	;volatile
 15588                           
 15589                           ;main.c: 469: _delay((unsigned long)((500)*(8000000/4000.0)));
 15590  142A  3006               	movlw	6
 15591  142B  0141               	movlb	1	; select bank1
 15592  142C  00A9               	movwf	(??_ouputOnClockwise^(0+128)+1)
 15593  142D  3013               	movlw	19
 15594  142E  00A8               	movwf	??_ouputOnClockwise^(0+128)
 15595  142F  30AD               	movlw	173
 15596  1430                     u7687:	
 15597  1430  0B89               	decfsz	9,f
 15598  1431  2C30               	goto	u7687
 15599  1432  0BA8               	decfsz	??_ouputOnClockwise^(0+128),f
 15600  1433  2C30               	goto	u7687
 15601  1434  0BA9               	decfsz	(??_ouputOnClockwise^(0+128)+1),f
 15602  1435  2C30               	goto	u7687
 15603  1436  3200               	nop2
 15604                           
 15605                           ;main.c: 470: (RD6) = 0;
 15606  1437  0140               	movlb	0	; select bank0
 15607  1438  130F               	bcf	15,6	;volatile
 15608                           
 15609                           ;main.c: 472: default_menu();
 15610  1439  3199  2168         	fcall	_default_menu
 15611  143B  0008               	return
 15612  143C                     __end_of_ouputOnClockwise:	
 15613                           
 15614                           	psect	text7
 15615  08FA                     __ptext7:	
 15616 ;; *************** function _ouputOnAntiClock *****************
 15617 ;; Defined at:
 15618 ;;		line 478 in file "main.c"
 15619 ;; Parameters:    Size  Location     Type
 15620 ;;		None
 15621 ;; Auto vars:     Size  Location     Type
 15622 ;;  tempEncoderV    2   10[BANK1 ] unsigned int 
 15623 ;; Return value:  Size  Location     Type
 15624 ;;                  1    wreg      void 
 15625 ;; Registers used:
 15626 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15627 ;; Tracked objects:
 15628 ;;		On entry : 0/0
 15629 ;;		On exit  : 0/0
 15630 ;;		Unchanged: 0/0
 15631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 15632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15633 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15634 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15635 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15636 ;;Total ram usage:        4 bytes
 15637 ;; Hardware stack levels used:    1
 15638 ;; Hardware stack levels required when called:    7
 15639 ;; This function calls:
 15640 ;;		_TMR0_StartTimer
 15641 ;;		_TMR0_StopTimer
 15642 ;;		_TMR2_StartTimer
 15643 ;;		_TMR2_StopTimer
 15644 ;;		_TMR3_WriteTimer
 15645 ;;		_TMR5_WriteTimer
 15646 ;;		___aldiv
 15647 ;;		___lmul
 15648 ;;		_checkCurrentSensor
 15649 ;;		_default_menu
 15650 ;;		_display
 15651 ;;		_eeprom_write
 15652 ;;		_lcd
 15653 ;;		_number_5
 15654 ;;		_startMotor
 15655 ;;		_stopMotor
 15656 ;; This function is called by:
 15657 ;;		_outputOn
 15658 ;;		_main
 15659 ;;		_serialCommand
 15660 ;; This function uses a non-reentrant model
 15661 ;;
 15662                           
 15663                           
 15664                           ;psect for function _ouputOnAntiClock
 15665  08FA                     _ouputOnAntiClock:	
 15666                           
 15667                           ;main.c: 482: uint16_t tempEncoderVal = 0;
 15668                           
 15669                           ;incstack = 0
 15670                           ; Regs used in _ouputOnAntiClock: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15671  08FA  0141               	movlb	1	; select bank1
 15672  08FB  01AA               	clrf	ouputOnAntiClock@tempEncoderVal^(0+128)
 15673  08FC  01AB               	clrf	(ouputOnAntiClock@tempEncoderVal+1)^(0+128)
 15674                           
 15675                           ;main.c: 484: GIE = 0;
 15676  08FD  138B               	bcf	11,7	;volatile
 15677                           
 15678                           ;main.c: 485: PPSLOCK = 0x55;
 15679  08FE  3055               	movlw	85
 15680  08FF  017D               	movlb	61	; select bank61
 15681  0900  008F               	movwf	15	;volsfr
 15682                           
 15683                           ;main.c: 486: PPSLOCK = 0xAA;
 15684  0901  30AA               	movlw	170
 15685  0902  008F               	movwf	15	;volsfr
 15686                           
 15687                           ;main.c: 487: PPSLOCKbits.PPSLOCKED = 0x00;
 15688  0903  100F               	bcf	15,0	;volsfr
 15689                           
 15690                           ;main.c: 489: RD2PPS = 0x0C;
 15691  0904  300C               	movlw	12
 15692  0905  017E               	movlb	62	; select bank62
 15693  0906  00AA               	movwf	42	;volatile
 15694                           
 15695                           ;main.c: 490: RD3PPS = 0x1D;
 15696  0907  301D               	movlw	29
 15697  0908  00AB               	movwf	43	;volatile
 15698                           
 15699                           ;main.c: 491: RD0PPS = 0x0B;
 15700  0909  300B               	movlw	11
 15701  090A  00A8               	movwf	40	;volatile
 15702                           
 15703                           ;main.c: 492: RD1PPS = 0x06;
 15704  090B  3006               	movlw	6
 15705  090C  00A9               	movwf	41	;volatile
 15706                           
 15707                           ;main.c: 493: RC6PPS = 0x10;
 15708  090D  3010               	movlw	16
 15709  090E  00A6               	movwf	38	;volatile
 15710                           
 15711                           ;main.c: 494: INTPPSbits.INTPPS = 0x00;
 15712  090F  30F0               	movlw	-16
 15713  0910  017D               	movlb	61	; select bank61
 15714  0911  0590               	andwf	16,f	;volatile
 15715                           
 15716                           ;main.c: 496: PPSLOCK = 0x55;
 15717  0912  3055               	movlw	85
 15718  0913  008F               	movwf	15	;volsfr
 15719                           
 15720                           ;main.c: 497: PPSLOCK = 0xAA;
 15721  0914  30AA               	movlw	170
 15722  0915  008F               	movwf	15	;volsfr
 15723                           
 15724                           ;main.c: 498: PPSLOCKbits.PPSLOCKED = 0x01;
 15725  0916  140F               	bsf	15,0	;volsfr
 15726                           
 15727                           ;main.c: 502: (INTCONbits.GIE = 1);
 15728  0917  178B               	bsf	11,7	;volatile
 15729                           
 15730                           ;main.c: 505: (INTCONbits.PEIE = 1);
 15731  0918  170B               	bsf	11,6	;volatile
 15732                           
 15733                           ;main.c: 507: sensorPeriodicity = 0;
 15734  0919  3000               	movlw	0
 15735  091A  0143               	movlb	3	; select bank3
 15736  091B  00E6               	movwf	(_sensorPeriodicity+3)^(0+384)
 15737  091C  3000               	movlw	0
 15738  091D  00E5               	movwf	(_sensorPeriodicity+2)^(0+384)
 15739  091E  3000               	movlw	0
 15740  091F  00E4               	movwf	(_sensorPeriodicity+1)^(0+384)
 15741  0920  3000               	movlw	0
 15742  0921  00E3               	movwf	_sensorPeriodicity^(0+384)
 15743                           
 15744                           ;main.c: 509: TMR2_StartTimer();
 15745  0922  31A0  2090  3188   	fcall	_TMR2_StartTimer
 15746                           
 15747                           ;main.c: 510: TMR0_StartTimer();
 15748  0925  31A0  208A  3188   	fcall	_TMR0_StartTimer
 15749                           
 15750                           ;main.c: 512: timeInMs = 0;
 15751  0928  0142               	movlb	2	; select bank2
 15752  0929  01DE               	clrf	_timeInMs^(0+256)
 15753  092A  01DF               	clrf	(_timeInMs+1)^(0+256)
 15754                           
 15755                           ;main.c: 514: TMR3_WriteTimer(0);
 15756  092B  3000               	movlw	0
 15757  092C  0140               	movlb	0	; select bank0
 15758  092D  00A0               	movwf	TMR3_WriteTimer@timerVal
 15759  092E  00A1               	movwf	TMR3_WriteTimer@timerVal+1
 15760  092F  31A1  2179  3188   	fcall	_TMR3_WriteTimer
 15761                           
 15762                           ;main.c: 515: TMR5_WriteTimer(0);
 15763  0932  3000               	movlw	0
 15764  0933  0140               	movlb	0	; select bank0
 15765  0934  00A0               	movwf	TMR5_WriteTimer@timerVal
 15766  0935  00A1               	movwf	TMR5_WriteTimer@timerVal+1
 15767  0936  31A1  2190  3188   	fcall	_TMR5_WriteTimer
 15768                           
 15769                           ;main.c: 518: display((char *)"D       C       ",(0x80));
 15770  0939  3033               	movlw	low (STR_6| (0+32768))
 15771  093A  0140               	movlb	0	; select bank0
 15772  093B  00AC               	movwf	display@a
 15773  093C  30A8               	movlw	high (STR_6| (0+32768))
 15774  093D  00AD               	movwf	display@a+1
 15775  093E  3080               	movlw	128
 15776  093F  0141               	movlb	1	; select bank1
 15777  0940  00A8               	movwf	??_ouputOnAntiClock^(0+128)
 15778  0941  0828               	movf	??_ouputOnAntiClock^(0+128),w
 15779  0942  0140               	movlb	0	; select bank0
 15780  0943  00AE               	movwf	display@add
 15781  0944  31A2  2297  3188   	fcall	_display
 15782                           
 15783                           ;main.c: 520: display((char *)"CLOS:           ",(0xC0));
 15784  0947  3022               	movlw	low (STR_9| (0+32768))
 15785  0948  0140               	movlb	0	; select bank0
 15786  0949  00AC               	movwf	display@a
 15787  094A  30A8               	movlw	high (STR_9| (0+32768))
 15788  094B  00AD               	movwf	display@a+1
 15789  094C  30C0               	movlw	192
 15790  094D  0141               	movlb	1	; select bank1
 15791  094E  00A8               	movwf	??_ouputOnAntiClock^(0+128)
 15792  094F  0828               	movf	??_ouputOnAntiClock^(0+128),w
 15793  0950  0140               	movlb	0	; select bank0
 15794  0951  00AE               	movwf	display@add
 15795  0952  31A2  2297  3188   	fcall	_display
 15796                           
 15797                           ;main.c: 522: preClockWiseDistace = preClockWiseTime;
 15798  0955  0142               	movlb	2	; select bank2
 15799  0956  083F               	movf	(_preClockWiseTime+3)^(0+256),w
 15800  0957  0143               	movlb	3	; select bank3
 15801  0958  00E2               	movwf	(_preClockWiseDistace+3)^(0+384)
 15802  0959  0142               	movlb	2	; select bank2
 15803  095A  083E               	movf	(_preClockWiseTime+2)^(0+256),w
 15804  095B  0143               	movlb	3	; select bank3
 15805  095C  00E1               	movwf	(_preClockWiseDistace+2)^(0+384)
 15806  095D  0142               	movlb	2	; select bank2
 15807  095E  083D               	movf	(_preClockWiseTime+1)^(0+256),w
 15808  095F  0143               	movlb	3	; select bank3
 15809  0960  00E0               	movwf	(_preClockWiseDistace+1)^(0+384)
 15810  0961  0142               	movlb	2	; select bank2
 15811  0962  083C               	movf	_preClockWiseTime^(0+256),w
 15812  0963  0143               	movlb	3	; select bank3
 15813  0964  00DF               	movwf	_preClockWiseDistace^(0+384)
 15814                           
 15815                           ;main.c: 523: preAntiClockWiseDistace = preAntiClockWiseTime;
 15816  0965  0142               	movlb	2	; select bank2
 15817  0966  083B               	movf	(_preAntiClockWiseTime+3)^(0+256),w
 15818  0967  0143               	movlb	3	; select bank3
 15819  0968  00DE               	movwf	(_preAntiClockWiseDistace+3)^(0+384)
 15820  0969  0142               	movlb	2	; select bank2
 15821  096A  083A               	movf	(_preAntiClockWiseTime+2)^(0+256),w
 15822  096B  0143               	movlb	3	; select bank3
 15823  096C  00DD               	movwf	(_preAntiClockWiseDistace+2)^(0+384)
 15824  096D  0142               	movlb	2	; select bank2
 15825  096E  0839               	movf	(_preAntiClockWiseTime+1)^(0+256),w
 15826  096F  0143               	movlb	3	; select bank3
 15827  0970  00DC               	movwf	(_preAntiClockWiseDistace+1)^(0+384)
 15828  0971  0142               	movlb	2	; select bank2
 15829  0972  0838               	movf	_preAntiClockWiseTime^(0+256),w
 15830  0973  0143               	movlb	3	; select bank3
 15831  0974  00DB               	movwf	_preAntiClockWiseDistace^(0+384)
 15832                           
 15833                           ;main.c: 525: disToBeCovered = ((preAntiClockWiseDistace * ((80)))/100);
 15834  0975  3000               	movlw	0
 15835  0976  0140               	movlb	0	; select bank0
 15836  0977  00AF               	movwf	___aldiv@divisor+3
 15837  0978  3000               	movlw	0
 15838  0979  00AE               	movwf	___aldiv@divisor+2
 15839  097A  3000               	movlw	0
 15840  097B  00AD               	movwf	___aldiv@divisor+1
 15841  097C  3064               	movlw	100
 15842  097D  00AC               	movwf	___aldiv@divisor
 15843  097E  0143               	movlb	3	; select bank3
 15844  097F  085E               	movf	(_preAntiClockWiseDistace+3)^(0+384),w
 15845  0980  0140               	movlb	0	; select bank0
 15846  0981  00A3               	movwf	___lmul@multiplier+3
 15847  0982  0143               	movlb	3	; select bank3
 15848  0983  085D               	movf	(_preAntiClockWiseDistace+2)^(0+384),w
 15849  0984  0140               	movlb	0	; select bank0
 15850  0985  00A2               	movwf	___lmul@multiplier+2
 15851  0986  0143               	movlb	3	; select bank3
 15852  0987  085C               	movf	(_preAntiClockWiseDistace+1)^(0+384),w
 15853  0988  0140               	movlb	0	; select bank0
 15854  0989  00A1               	movwf	___lmul@multiplier+1
 15855  098A  0143               	movlb	3	; select bank3
 15856  098B  085B               	movf	_preAntiClockWiseDistace^(0+384),w
 15857  098C  0140               	movlb	0	; select bank0
 15858  098D  00A0               	movwf	___lmul@multiplier
 15859  098E  3000               	movlw	0
 15860  098F  00A7               	movwf	___lmul@multiplicand+3
 15861  0990  3000               	movlw	0
 15862  0991  00A6               	movwf	___lmul@multiplicand+2
 15863  0992  3000               	movlw	0
 15864  0993  00A5               	movwf	___lmul@multiplicand+1
 15865  0994  3050               	movlw	80
 15866  0995  00A4               	movwf	___lmul@multiplicand
 15867  0996  31A3  2339  3188   	fcall	___lmul
 15868  0999  0140               	movlb	0	; select bank0
 15869  099A  0823               	movf	?___lmul+3,w
 15870  099B  00B3               	movwf	___aldiv@dividend+3
 15871  099C  0822               	movf	?___lmul+2,w
 15872  099D  00B2               	movwf	___aldiv@dividend+2
 15873  099E  0821               	movf	?___lmul+1,w
 15874  099F  00B1               	movwf	___aldiv@dividend+1
 15875  09A0  0820               	movf	?___lmul,w
 15876  09A1  00B0               	movwf	___aldiv@dividend
 15877  09A2  31A6  2639  3188   	fcall	___aldiv
 15878  09A5  0140               	movlb	0	; select bank0
 15879  09A6  082F               	movf	?___aldiv+3,w
 15880  09A7  0142               	movlb	2	; select bank2
 15881  09A8  00B7               	movwf	(_disToBeCovered+3)^(0+256)
 15882  09A9  0140               	movlb	0	; select bank0
 15883  09AA  082E               	movf	?___aldiv+2,w
 15884  09AB  0142               	movlb	2	; select bank2
 15885  09AC  00B6               	movwf	(_disToBeCovered+2)^(0+256)
 15886  09AD  0140               	movlb	0	; select bank0
 15887  09AE  082D               	movf	?___aldiv+1,w
 15888  09AF  0142               	movlb	2	; select bank2
 15889  09B0  00B5               	movwf	(_disToBeCovered+1)^(0+256)
 15890  09B1  0140               	movlb	0	; select bank0
 15891  09B2  082C               	movf	?___aldiv,w
 15892  09B3  0142               	movlb	2	; select bank2
 15893  09B4  00B4               	movwf	_disToBeCovered^(0+256)
 15894                           
 15895                           ;main.c: 527: disToBeCovered = disToBeCovered * 10;
 15896  09B5  0837               	movf	(_disToBeCovered+3)^(0+256),w
 15897  09B6  0140               	movlb	0	; select bank0
 15898  09B7  00A3               	movwf	___lmul@multiplier+3
 15899  09B8  0142               	movlb	2	; select bank2
 15900  09B9  0836               	movf	(_disToBeCovered+2)^(0+256),w
 15901  09BA  0140               	movlb	0	; select bank0
 15902  09BB  00A2               	movwf	___lmul@multiplier+2
 15903  09BC  0142               	movlb	2	; select bank2
 15904  09BD  0835               	movf	(_disToBeCovered+1)^(0+256),w
 15905  09BE  0140               	movlb	0	; select bank0
 15906  09BF  00A1               	movwf	___lmul@multiplier+1
 15907  09C0  0142               	movlb	2	; select bank2
 15908  09C1  0834               	movf	_disToBeCovered^(0+256),w
 15909  09C2  0140               	movlb	0	; select bank0
 15910  09C3  00A0               	movwf	___lmul@multiplier
 15911  09C4  3000               	movlw	0
 15912  09C5  00A7               	movwf	___lmul@multiplicand+3
 15913  09C6  3000               	movlw	0
 15914  09C7  00A6               	movwf	___lmul@multiplicand+2
 15915  09C8  3000               	movlw	0
 15916  09C9  00A5               	movwf	___lmul@multiplicand+1
 15917  09CA  300A               	movlw	10
 15918  09CB  00A4               	movwf	___lmul@multiplicand
 15919  09CC  31A3  2339  3188   	fcall	___lmul
 15920  09CF  0140               	movlb	0	; select bank0
 15921  09D0  0823               	movf	?___lmul+3,w
 15922  09D1  0142               	movlb	2	; select bank2
 15923  09D2  00B7               	movwf	(_disToBeCovered+3)^(0+256)
 15924  09D3  0140               	movlb	0	; select bank0
 15925  09D4  0822               	movf	?___lmul+2,w
 15926  09D5  0142               	movlb	2	; select bank2
 15927  09D6  00B6               	movwf	(_disToBeCovered+2)^(0+256)
 15928  09D7  0140               	movlb	0	; select bank0
 15929  09D8  0821               	movf	?___lmul+1,w
 15930  09D9  0142               	movlb	2	; select bank2
 15931  09DA  00B5               	movwf	(_disToBeCovered+1)^(0+256)
 15932  09DB  0140               	movlb	0	; select bank0
 15933  09DC  0820               	movf	?___lmul,w
 15934  09DD  0142               	movlb	2	; select bank2
 15935  09DE  00B4               	movwf	_disToBeCovered^(0+256)
 15936                           
 15937                           ;main.c: 529: lcd(((0x80)+1),(0));
 15938  09DF  0140               	movlb	0	; select bank0
 15939  09E0  01A9               	clrf	lcd@b
 15940  09E1  3081               	movlw	129
 15941  09E2  31A4  245E  3188   	fcall	_lcd
 15942                           
 15943                           ;main.c: 530: number_5(disToBeCovered);
 15944  09E5  0142               	movlb	2	; select bank2
 15945  09E6  0837               	movf	(_disToBeCovered+3)^(0+256),w
 15946  09E7  0140               	movlb	0	; select bank0
 15947  09E8  00BB               	movwf	number_5@num+3
 15948  09E9  0142               	movlb	2	; select bank2
 15949  09EA  0836               	movf	(_disToBeCovered+2)^(0+256),w
 15950  09EB  0140               	movlb	0	; select bank0
 15951  09EC  00BA               	movwf	number_5@num+2
 15952  09ED  0142               	movlb	2	; select bank2
 15953  09EE  0835               	movf	(_disToBeCovered+1)^(0+256),w
 15954  09EF  0140               	movlb	0	; select bank0
 15955  09F0  00B9               	movwf	number_5@num+1
 15956  09F1  0142               	movlb	2	; select bank2
 15957  09F2  0834               	movf	_disToBeCovered^(0+256),w
 15958  09F3  0140               	movlb	0	; select bank0
 15959  09F4  00B8               	movwf	number_5@num
 15960  09F5  3190  2058  3188   	fcall	_number_5
 15961                           
 15962                           ;main.c: 532: STARTED = 1;
 15963  09F8  17F2               	bsf	_STARTED/(0+8),_STARTED& (0+7)
 15964                           
 15965                           ;main.c: 534: tempSpeedRpm = speedRpm;
 15966  09F9  0141               	movlb	1	; select bank1
 15967  09FA  0840               	movf	(_speedRpm+1)^(0+128),w
 15968  09FB  00BE               	movwf	(_tempSpeedRpm+1)^(0+128)
 15969  09FC  083F               	movf	_speedRpm^(0+128),w
 15970  09FD  00BD               	movwf	_tempSpeedRpm^(0+128)
 15971                           
 15972                           ;main.c: 536: startMotor(ANTICLOCKWISE,tempSpeedRpm);
 15973  09FE  083E               	movf	(_tempSpeedRpm+1)^(0+128),w
 15974  09FF  0140               	movlb	0	; select bank0
 15975  0A00  00A3               	movwf	startMotor@speed+1
 15976  0A01  0141               	movlb	1	; select bank1
 15977  0A02  083D               	movf	_tempSpeedRpm^(0+128),w
 15978  0A03  0140               	movlb	0	; select bank0
 15979  0A04  00A2               	movwf	startMotor@speed
 15980  0A05  3001               	movlw	1
 15981  0A06  31A5  25C3  3188   	fcall	_startMotor
 15982                           
 15983                           ;main.c: 538: lcd(((0x80)+7),(0));
 15984  0A09  0140               	movlb	0	; select bank0
 15985  0A0A  01A9               	clrf	lcd@b
 15986  0A0B  3087               	movlw	135
 15987  0A0C  31A4  245E  3188   	fcall	_lcd
 15988                           
 15989                           ;main.c: 539: number_5(encoderTmr5);
 15990  0A0F  0142               	movlb	2	; select bank2
 15991  0A10  0843               	movf	(_encoderTmr5+3)^(0+256),w
 15992  0A11  0140               	movlb	0	; select bank0
 15993  0A12  00BB               	movwf	number_5@num+3
 15994  0A13  0142               	movlb	2	; select bank2
 15995  0A14  0842               	movf	(_encoderTmr5+2)^(0+256),w
 15996  0A15  0140               	movlb	0	; select bank0
 15997  0A16  00BA               	movwf	number_5@num+2
 15998  0A17  0142               	movlb	2	; select bank2
 15999  0A18  0841               	movf	(_encoderTmr5+1)^(0+256),w
 16000  0A19  0140               	movlb	0	; select bank0
 16001  0A1A  00B9               	movwf	number_5@num+1
 16002  0A1B  0142               	movlb	2	; select bank2
 16003  0A1C  0840               	movf	_encoderTmr5^(0+256),w
 16004  0A1D  0140               	movlb	0	; select bank0
 16005  0A1E  00B8               	movwf	number_5@num
 16006  0A1F  3190  2058  3188   	fcall	_number_5
 16007                           
 16008                           ;main.c: 541: doorOpenedWhileClosing = 0;
 16009  0A22  11F2               	bcf	_doorOpenedWhileClosing/(0+8),_doorOpenedWhileClosing& (0+7)
 16010                           
 16011                           ;main.c: 542: irSensorDetected = 0;
 16012  0A23  12F0               	bcf	_irSensorDetected/(0+8),_irSensorDetected& (0+7)
 16013                           
 16014                           ;main.c: 544: forceStop = 0;
 16015  0A24  10F0               	bcf	_forceStop/(0+8),_forceStop& (0+7)
 16016                           
 16017                           ;main.c: 546: while(STARTED)
 16018  0A25  2AF6               	goto	l9223
 16019  0A26                     l1205:	
 16020                           ;main.c: 554: break;
 16021                           
 16022                           
 16023                           ;main.c: 555: }
 16024                           ;main.c: 557: if((((RE1) == 0) || ((RA5) == 0) || ((RC0) == 1) || ((RB0) == 1) || (force
      +                          Stop == 1)) && (doNotOperateWhileOpeningDoor == 0))
 16025  0A26  0140               	movlb	0	; select bank0
 16026  0A27  1890               	btfsc	16,1	;volatile
 16027  0A28  1E8C               	btfss	12,5	;volatile
 16028  0A29  2A2F               	goto	l1209
 16029  0A2A  1C0E               	btfss	14,0	;volatile
 16030  0A2B  180D               	btfsc	13,0	;volatile
 16031  0A2C  2A2F               	goto	l1209
 16032  0A2D  1CF0               	btfss	_forceStop/(0+8),_forceStop& (0+7)
 16033  0A2E  2AF6               	goto	l9223
 16034  0A2F                     l1209:	
 16035  0A2F  1B70               	btfsc	_doNotOperateWhileOpeningDoor/(0+8),_doNotOperateWhileOpeningDoor& (0+7)
 16036  0A30  2AF6               	goto	l9223
 16037                           
 16038                           ;main.c: 560: {
 16039                           ;main.c: 561: _delay((unsigned long)((50)*(8000000/4000.0)));
 16040  0A31  3082               	movlw	130
 16041  0A32  0141               	movlb	1	; select bank1
 16042  0A33  00A8               	movwf	??_ouputOnAntiClock^(0+128)
 16043  0A34  30DD               	movlw	221
 16044  0A35                     u7697:	
 16045  0A35  0B89               	decfsz	9,f
 16046  0A36  2A35               	goto	u7697
 16047  0A37  0BA8               	decfsz	??_ouputOnAntiClock^(0+128),f
 16048  0A38  2A35               	goto	u7697
 16049  0A39  3200               	nop2
 16050                           
 16051                           ;main.c: 562: if((((RE1) == 0) || ((RA5) == 0) || ((RC0) == 1) || ((RB0) == 1) || (force
      +                          Stop ==1) ) && (doNotOperateWhileOpeningDoor == 0))
 16052  0A3A  0140               	movlb	0	; select bank0
 16053  0A3B  1890               	btfsc	16,1	;volatile
 16054  0A3C  1E8C               	btfss	12,5	;volatile
 16055  0A3D  2A43               	goto	l1212
 16056  0A3E  1C0E               	btfss	14,0	;volatile
 16057  0A3F  180D               	btfsc	13,0	;volatile
 16058  0A40  2A43               	goto	l1212
 16059  0A41  1CF0               	btfss	_forceStop/(0+8),_forceStop& (0+7)
 16060  0A42  2AF6               	goto	l9223
 16061  0A43                     l1212:	
 16062  0A43  1B70               	btfsc	_doNotOperateWhileOpeningDoor/(0+8),_doNotOperateWhileOpeningDoor& (0+7)
 16063  0A44  2AF6               	goto	l9223
 16064                           
 16065                           ;main.c: 565: {
 16066                           ;main.c: 567: irSensorDetected = 1;
 16067  0A45  16F0               	bsf	_irSensorDetected/(0+8),_irSensorDetected& (0+7)
 16068                           
 16069                           ;main.c: 570: stopMotor(ANTICLOCKWISE,tempSpeedRpm);
 16070  0A46  0141               	movlb	1	; select bank1
 16071  0A47  083E               	movf	(_tempSpeedRpm+1)^(0+128),w
 16072  0A48  0140               	movlb	0	; select bank0
 16073  0A49  00A3               	movwf	stopMotor@speed+1
 16074  0A4A  0141               	movlb	1	; select bank1
 16075  0A4B  083D               	movf	_tempSpeedRpm^(0+128),w
 16076  0A4C  0140               	movlb	0	; select bank0
 16077  0A4D  00A2               	movwf	stopMotor@speed
 16078  0A4E  3001               	movlw	1
 16079  0A4F  3198  2014  3188   	fcall	_stopMotor
 16080                           
 16081                           ;main.c: 572: lcd(((0x80)+7),(0));
 16082  0A52  0140               	movlb	0	; select bank0
 16083  0A53  01A9               	clrf	lcd@b
 16084  0A54  3087               	movlw	135
 16085  0A55  31A4  245E  3188   	fcall	_lcd
 16086                           
 16087                           ;main.c: 573: number_5(encoderTmr5);
 16088  0A58  0142               	movlb	2	; select bank2
 16089  0A59  0843               	movf	(_encoderTmr5+3)^(0+256),w
 16090  0A5A  0140               	movlb	0	; select bank0
 16091  0A5B  00BB               	movwf	number_5@num+3
 16092  0A5C  0142               	movlb	2	; select bank2
 16093  0A5D  0842               	movf	(_encoderTmr5+2)^(0+256),w
 16094  0A5E  0140               	movlb	0	; select bank0
 16095  0A5F  00BA               	movwf	number_5@num+2
 16096  0A60  0142               	movlb	2	; select bank2
 16097  0A61  0841               	movf	(_encoderTmr5+1)^(0+256),w
 16098  0A62  0140               	movlb	0	; select bank0
 16099  0A63  00B9               	movwf	number_5@num+1
 16100  0A64  0142               	movlb	2	; select bank2
 16101  0A65  0840               	movf	_encoderTmr5^(0+256),w
 16102  0A66  0140               	movlb	0	; select bank0
 16103  0A67  00B8               	movwf	number_5@num
 16104  0A68  3190  2058  3188   	fcall	_number_5
 16105                           
 16106                           ;main.c: 576: disToBeCovered = encoderTmr5 - (1106);
 16107  0A6B  30AE               	movlw	174
 16108  0A6C  0142               	movlb	2	; select bank2
 16109  0A6D  0740               	addwf	_encoderTmr5^(0+256),w
 16110  0A6E  00B4               	movwf	_disToBeCovered^(0+256)
 16111  0A6F  30FB               	movlw	251
 16112  0A70  3D41               	addwfc	(_encoderTmr5+1)^(0+256),w
 16113  0A71  00B5               	movwf	(_disToBeCovered+1)^(0+256)
 16114  0A72  30FF               	movlw	255
 16115  0A73  3D42               	addwfc	(_encoderTmr5+2)^(0+256),w
 16116  0A74  00B6               	movwf	(_disToBeCovered+2)^(0+256)
 16117  0A75  30FF               	movlw	255
 16118  0A76  3D43               	addwfc	(_encoderTmr5+3)^(0+256),w
 16119  0A77  00B7               	movwf	(_disToBeCovered+3)^(0+256)
 16120                           
 16121                           ;main.c: 579: if(disToBeCovered < 0)
 16122  0A78  1FB7               	btfss	(_disToBeCovered+3)^(0+256),7
 16123  0A79  2A82               	goto	l9189
 16124                           
 16125                           ;main.c: 580: disToBeCovered = (1106);
 16126  0A7A  3000               	movlw	0
 16127  0A7B  00B7               	movwf	(_disToBeCovered+3)^(0+256)
 16128  0A7C  3000               	movlw	0
 16129  0A7D  00B6               	movwf	(_disToBeCovered+2)^(0+256)
 16130  0A7E  3004               	movlw	4
 16131  0A7F  00B5               	movwf	(_disToBeCovered+1)^(0+256)
 16132  0A80  3052               	movlw	82
 16133  0A81  00B4               	movwf	_disToBeCovered^(0+256)
 16134  0A82                     l9189:	
 16135                           
 16136                           ;main.c: 582: lcd(((0x80)+1),(0));
 16137  0A82  0140               	movlb	0	; select bank0
 16138  0A83  01A9               	clrf	lcd@b
 16139  0A84  3081               	movlw	129
 16140  0A85  31A4  245E  3188   	fcall	_lcd
 16141                           
 16142                           ;main.c: 583: number_5(disToBeCovered);
 16143  0A88  0142               	movlb	2	; select bank2
 16144  0A89  0837               	movf	(_disToBeCovered+3)^(0+256),w
 16145  0A8A  0140               	movlb	0	; select bank0
 16146  0A8B  00BB               	movwf	number_5@num+3
 16147  0A8C  0142               	movlb	2	; select bank2
 16148  0A8D  0836               	movf	(_disToBeCovered+2)^(0+256),w
 16149  0A8E  0140               	movlb	0	; select bank0
 16150  0A8F  00BA               	movwf	number_5@num+2
 16151  0A90  0142               	movlb	2	; select bank2
 16152  0A91  0835               	movf	(_disToBeCovered+1)^(0+256),w
 16153  0A92  0140               	movlb	0	; select bank0
 16154  0A93  00B9               	movwf	number_5@num+1
 16155  0A94  0142               	movlb	2	; select bank2
 16156  0A95  0834               	movf	_disToBeCovered^(0+256),w
 16157  0A96  0140               	movlb	0	; select bank0
 16158  0A97  00B8               	movwf	number_5@num
 16159  0A98  3190  2058  3188   	fcall	_number_5
 16160                           
 16161                           ;main.c: 584: (RD6) = 1;
 16162  0A9B  0140               	movlb	0	; select bank0
 16163  0A9C  170F               	bsf	15,6	;volatile
 16164                           
 16165                           ;main.c: 585: _delay((unsigned long)((500)*(8000000/4000.0)));
 16166  0A9D  3006               	movlw	6
 16167  0A9E  0141               	movlb	1	; select bank1
 16168  0A9F  00A9               	movwf	(??_ouputOnAntiClock^(0+128)+1)
 16169  0AA0  3013               	movlw	19
 16170  0AA1  00A8               	movwf	??_ouputOnAntiClock^(0+128)
 16171  0AA2  30AD               	movlw	173
 16172  0AA3                     u7707:	
 16173  0AA3  0B89               	decfsz	9,f
 16174  0AA4  2AA3               	goto	u7707
 16175  0AA5  0BA8               	decfsz	??_ouputOnAntiClock^(0+128),f
 16176  0AA6  2AA3               	goto	u7707
 16177  0AA7  0BA9               	decfsz	(??_ouputOnAntiClock^(0+128)+1),f
 16178  0AA8  2AA3               	goto	u7707
 16179  0AA9  3200               	nop2
 16180                           
 16181                           ;main.c: 587: _delay((unsigned long)((500)*(8000000/4000.0)));
 16182  0AAA  3006               	movlw	6
 16183  0AAB  0141               	movlb	1	; select bank1
 16184  0AAC  00A9               	movwf	(??_ouputOnAntiClock^(0+128)+1)
 16185  0AAD  3013               	movlw	19
 16186  0AAE  00A8               	movwf	??_ouputOnAntiClock^(0+128)
 16187  0AAF  30AD               	movlw	173
 16188  0AB0                     u7717:	
 16189  0AB0  0B89               	decfsz	9,f
 16190  0AB1  2AB0               	goto	u7717
 16191  0AB2  0BA8               	decfsz	??_ouputOnAntiClock^(0+128),f
 16192  0AB3  2AB0               	goto	u7717
 16193  0AB4  0BA9               	decfsz	(??_ouputOnAntiClock^(0+128)+1),f
 16194  0AB5  2AB0               	goto	u7717
 16195  0AB6  3200               	nop2
 16196                           
 16197                           ;main.c: 588: _delay((unsigned long)((500)*(8000000/4000.0)));
 16198  0AB7  3006               	movlw	6
 16199  0AB8  0141               	movlb	1	; select bank1
 16200  0AB9  00A9               	movwf	(??_ouputOnAntiClock^(0+128)+1)
 16201  0ABA  3013               	movlw	19
 16202  0ABB  00A8               	movwf	??_ouputOnAntiClock^(0+128)
 16203  0ABC  30AD               	movlw	173
 16204  0ABD                     u7727:	
 16205  0ABD  0B89               	decfsz	9,f
 16206  0ABE  2ABD               	goto	u7727
 16207  0ABF  0BA8               	decfsz	??_ouputOnAntiClock^(0+128),f
 16208  0AC0  2ABD               	goto	u7727
 16209  0AC1  0BA9               	decfsz	(??_ouputOnAntiClock^(0+128)+1),f
 16210  0AC2  2ABD               	goto	u7727
 16211  0AC3  3200               	nop2
 16212                           
 16213                           ;main.c: 590: (RD6) = 0;
 16214  0AC4  0140               	movlb	0	; select bank0
 16215  0AC5  130F               	bcf	15,6	;volatile
 16216                           
 16217                           ;main.c: 592: stopFlag = 0;
 16218  0AC6  1270               	bcf	_stopFlag/(0+8),_stopFlag& (0+7)
 16219                           
 16220                           ;main.c: 593: forceStop = 0;
 16221  0AC7  10F0               	bcf	_forceStop/(0+8),_forceStop& (0+7)
 16222                           
 16223                           ;main.c: 595: tempEncoderVal = encoderTmr5;
 16224  0AC8  0142               	movlb	2	; select bank2
 16225  0AC9  0841               	movf	(_encoderTmr5+1)^(0+256),w
 16226  0ACA  0141               	movlb	1	; select bank1
 16227  0ACB  00AB               	movwf	(ouputOnAntiClock@tempEncoderVal+1)^(0+128)
 16228  0ACC  0142               	movlb	2	; select bank2
 16229  0ACD  0840               	movf	_encoderTmr5^(0+256),w
 16230  0ACE  0141               	movlb	1	; select bank1
 16231  0ACF  00AA               	movwf	ouputOnAntiClock@tempEncoderVal^(0+128)
 16232                           
 16233                           ;main.c: 598: encoderTmr5 = 0;
 16234  0AD0  3000               	movlw	0
 16235  0AD1  0142               	movlb	2	; select bank2
 16236  0AD2  00C3               	movwf	(_encoderTmr5+3)^(0+256)
 16237  0AD3  3000               	movlw	0
 16238  0AD4  00C2               	movwf	(_encoderTmr5+2)^(0+256)
 16239  0AD5  3000               	movlw	0
 16240  0AD6  00C1               	movwf	(_encoderTmr5+1)^(0+256)
 16241  0AD7  3000               	movlw	0
 16242  0AD8  00C0               	movwf	_encoderTmr5^(0+256)
 16243                           
 16244                           ;main.c: 600: doNotOperateWhileOpeningDoor = 1;
 16245  0AD9  1770               	bsf	_doNotOperateWhileOpeningDoor/(0+8),_doNotOperateWhileOpeningDoor& (0+7)
 16246                           
 16247                           ;main.c: 602: TMR3_WriteTimer(0);
 16248  0ADA  3000               	movlw	0
 16249  0ADB  0140               	movlb	0	; select bank0
 16250  0ADC  00A0               	movwf	TMR3_WriteTimer@timerVal
 16251  0ADD  00A1               	movwf	TMR3_WriteTimer@timerVal+1
 16252  0ADE  31A1  2179  3188   	fcall	_TMR3_WriteTimer
 16253                           
 16254                           ;main.c: 603: TMR5_WriteTimer(0);
 16255  0AE1  3000               	movlw	0
 16256  0AE2  0140               	movlb	0	; select bank0
 16257  0AE3  00A0               	movwf	TMR5_WriteTimer@timerVal
 16258  0AE4  00A1               	movwf	TMR5_WriteTimer@timerVal+1
 16259  0AE5  31A1  2190  3188   	fcall	_TMR5_WriteTimer
 16260                           
 16261                           ;main.c: 606: startMotor(CLOCKWISE,tempSpeedRpm);
 16262  0AE8  0141               	movlb	1	; select bank1
 16263  0AE9  083E               	movf	(_tempSpeedRpm+1)^(0+128),w
 16264  0AEA  0140               	movlb	0	; select bank0
 16265  0AEB  00A3               	movwf	startMotor@speed+1
 16266  0AEC  0141               	movlb	1	; select bank1
 16267  0AED  083D               	movf	_tempSpeedRpm^(0+128),w
 16268  0AEE  0140               	movlb	0	; select bank0
 16269  0AEF  00A2               	movwf	startMotor@speed
 16270  0AF0  3000               	movlw	0
 16271  0AF1  31A5  25C3  3188   	fcall	_startMotor
 16272                           
 16273                           ;main.c: 607: IR = 1; doorOpened=1;
 16274  0AF4  1470               	bsf	_IR/(0+8),_IR& (0+7)
 16275  0AF5  1772               	bsf	_doorOpened/(0+8),_doorOpened& (0+7)
 16276  0AF6                     l9223:	
 16277  0AF6  1FF2               	btfss	_STARTED/(0+8),_STARTED& (0+7)
 16278  0AF7  2B1B               	goto	l1206
 16279                           
 16280                           ;main.c: 547: {
 16281                           ;main.c: 549: checkCurrentSensor(ANTICLOCKWISE,tempSpeedRpm);
 16282  0AF8  0141               	movlb	1	; select bank1
 16283  0AF9  083E               	movf	(_tempSpeedRpm+1)^(0+128),w
 16284  0AFA  00A1               	movwf	(checkCurrentSensor@speed+1)^(0+128)
 16285  0AFB  083D               	movf	_tempSpeedRpm^(0+128),w
 16286  0AFC  00A0               	movwf	checkCurrentSensor@speed^(0+128)
 16287  0AFD  3001               	movlw	1
 16288  0AFE  3188  201A  3188   	fcall	_checkCurrentSensor
 16289                           
 16290                           ;main.c: 551: if(encoderTmr5 >= disToBeCovered)
 16291  0B01  0142               	movlb	2	; select bank2
 16292  0B02  0843               	movf	(_encoderTmr5+3)^(0+256),w
 16293  0B03  3A80               	xorlw	128
 16294  0B04  0141               	movlb	1	; select bank1
 16295  0B05  00A8               	movwf	??_ouputOnAntiClock^(0+128)
 16296  0B06  0142               	movlb	2	; select bank2
 16297  0B07  0837               	movf	(_disToBeCovered+3)^(0+256),w
 16298  0B08  3A80               	xorlw	128
 16299  0B09  0141               	movlb	1	; select bank1
 16300  0B0A  0228               	subwf	??_ouputOnAntiClock^(0+128),w
 16301  0B0B  0142               	movlb	2	; select bank2
 16302  0B0C  1D03               	skipz
 16303  0B0D  2B18               	goto	u5953
 16304  0B0E  0836               	movf	(_disToBeCovered+2)^(0+256),w
 16305  0B0F  0242               	subwf	(_encoderTmr5+2)^(0+256),w
 16306  0B10  1D03               	skipz
 16307  0B11  2B18               	goto	u5953
 16308  0B12  0835               	movf	(_disToBeCovered+1)^(0+256),w
 16309  0B13  0241               	subwf	(_encoderTmr5+1)^(0+256),w
 16310  0B14  1D03               	skipz
 16311  0B15  2B18               	goto	u5953
 16312  0B16  0834               	movf	_disToBeCovered^(0+256),w
 16313  0B17  0240               	subwf	_encoderTmr5^(0+256),w
 16314  0B18                     u5953:	
 16315  0B18  1C03               	skipc
 16316  0B19  2A26               	goto	l1205
 16317                           
 16318                           ;main.c: 552: {
 16319                           ;main.c: 553: STARTED = 0;
 16320  0B1A  13F2               	bcf	_STARTED/(0+8),_STARTED& (0+7)
 16321  0B1B                     l1206:	
 16322                           
 16323                           ;main.c: 608: }
 16324                           ;main.c: 609: }
 16325                           ;main.c: 610: }
 16326                           ;main.c: 612: if(irSensorDetected)
 16327  0B1B  1EF0               	btfss	_irSensorDetected/(0+8),_irSensorDetected& (0+7)
 16328  0B1C  2B2B               	goto	l9229
 16329                           
 16330                           ;main.c: 613: {
 16331                           ;main.c: 614: stopMotor(CLOCKWISE,tempSpeedRpm);
 16332  0B1D  0141               	movlb	1	; select bank1
 16333  0B1E  083E               	movf	(_tempSpeedRpm+1)^(0+128),w
 16334  0B1F  0140               	movlb	0	; select bank0
 16335  0B20  00A3               	movwf	stopMotor@speed+1
 16336  0B21  0141               	movlb	1	; select bank1
 16337  0B22  083D               	movf	_tempSpeedRpm^(0+128),w
 16338  0B23  0140               	movlb	0	; select bank0
 16339  0B24  00A2               	movwf	stopMotor@speed
 16340  0B25  3000               	movlw	0
 16341  0B26  3198  2014  3188   	fcall	_stopMotor
 16342                           
 16343                           ;main.c: 615: doorOpened = 1;
 16344  0B29  1772               	bsf	_doorOpened/(0+8),_doorOpened& (0+7)
 16345                           
 16346                           ;main.c: 616: }
 16347  0B2A  2B3D               	goto	l9239
 16348  0B2B                     l9229:	
 16349                           
 16350                           ;main.c: 617: else
 16351                           ;main.c: 618: {
 16352                           ;main.c: 620: stopMotor(ANTICLOCKWISE,tempSpeedRpm);
 16353  0B2B  0141               	movlb	1	; select bank1
 16354  0B2C  083E               	movf	(_tempSpeedRpm+1)^(0+128),w
 16355  0B2D  0140               	movlb	0	; select bank0
 16356  0B2E  00A3               	movwf	stopMotor@speed+1
 16357  0B2F  0141               	movlb	1	; select bank1
 16358  0B30  083D               	movf	_tempSpeedRpm^(0+128),w
 16359  0B31  0140               	movlb	0	; select bank0
 16360  0B32  00A2               	movwf	stopMotor@speed
 16361  0B33  3001               	movlw	1
 16362  0B34  3198  2014  3188   	fcall	_stopMotor
 16363                           
 16364                           ;main.c: 622: doorOpened = 0;
 16365  0B37  1372               	bcf	_doorOpened/(0+8),_doorOpened& (0+7)
 16366                           
 16367                           ;main.c: 623: if(openedByFoot)
 16368  0B38  1A72               	btfsc	_openedByFoot/(0+8),_openedByFoot& (0+7)
 16369                           
 16370                           ;main.c: 624: openedByFoot = 0;
 16371  0B39  1272               	bcf	_openedByFoot/(0+8),_openedByFoot& (0+7)
 16372                           
 16373                           ;main.c: 625: stopCount = 0;
 16374  0B3A  0142               	movlb	2	; select bank2
 16375  0B3B  01D4               	clrf	_stopCount^(0+256)
 16376  0B3C  01D5               	clrf	(_stopCount+1)^(0+256)
 16377  0B3D                     l9239:	
 16378                           
 16379                           ;main.c: 626: }
 16380                           ;main.c: 628: eeprom_write(0x29 , doorOpened);
 16381  0B3D  3000               	movlw	0
 16382  0B3E  1B72               	btfsc	_doorOpened/(0+8),_doorOpened& (0+7)
 16383  0B3F  3001               	movlw	1
 16384  0B40  0140               	movlb	0	; select bank0
 16385  0B41  00A0               	movwf	eeprom_write@value
 16386  0B42  3029               	movlw	41
 16387  0B43  31A2  22BC  3188   	fcall	_eeprom_write
 16388                           
 16389                           ;main.c: 629: _delay((unsigned long)(((3))*(8000000/4000.0)));
 16390  0B46  3008               	movlw	8
 16391  0B47  0141               	movlb	1	; select bank1
 16392  0B48  00A8               	movwf	??_ouputOnAntiClock^(0+128)
 16393  0B49  30C9               	movlw	201
 16394  0B4A                     u7737:	
 16395  0B4A  0B89               	decfsz	9,f
 16396  0B4B  2B4A               	goto	u7737
 16397  0B4C  0BA8               	decfsz	??_ouputOnAntiClock^(0+128),f
 16398  0B4D  2B4A               	goto	u7737
 16399  0B4E  3200               	nop2
 16400                           
 16401                           ;main.c: 631: doNotOperateWhileOpeningDoor = 0;
 16402  0B4F  1370               	bcf	_doNotOperateWhileOpeningDoor/(0+8),_doNotOperateWhileOpeningDoor& (0+7)
 16403                           
 16404                           ;main.c: 632: lcd(((0xC0)+6),(0));
 16405  0B50  0140               	movlb	0	; select bank0
 16406  0B51  01A9               	clrf	lcd@b
 16407  0B52  30C6               	movlw	198
 16408  0B53  31A4  245E  3188   	fcall	_lcd
 16409                           
 16410                           ;main.c: 633: number_5(encoderTmr5);
 16411  0B56  0142               	movlb	2	; select bank2
 16412  0B57  0843               	movf	(_encoderTmr5+3)^(0+256),w
 16413  0B58  0140               	movlb	0	; select bank0
 16414  0B59  00BB               	movwf	number_5@num+3
 16415  0B5A  0142               	movlb	2	; select bank2
 16416  0B5B  0842               	movf	(_encoderTmr5+2)^(0+256),w
 16417  0B5C  0140               	movlb	0	; select bank0
 16418  0B5D  00BA               	movwf	number_5@num+2
 16419  0B5E  0142               	movlb	2	; select bank2
 16420  0B5F  0841               	movf	(_encoderTmr5+1)^(0+256),w
 16421  0B60  0140               	movlb	0	; select bank0
 16422  0B61  00B9               	movwf	number_5@num+1
 16423  0B62  0142               	movlb	2	; select bank2
 16424  0B63  0840               	movf	_encoderTmr5^(0+256),w
 16425  0B64  0140               	movlb	0	; select bank0
 16426  0B65  00B8               	movwf	number_5@num
 16427  0B66  3190  2058  3188   	fcall	_number_5
 16428                           
 16429                           ;main.c: 635: lcd(((0xC0)+12),(0));
 16430  0B69  0140               	movlb	0	; select bank0
 16431  0B6A  01A9               	clrf	lcd@b
 16432  0B6B  30CC               	movlw	204
 16433  0B6C  31A4  245E  3188   	fcall	_lcd
 16434                           
 16435                           ;main.c: 636: number_5(timeInMs);
 16436  0B6F  0142               	movlb	2	; select bank2
 16437  0B70  085E               	movf	_timeInMs^(0+256),w
 16438  0B71  0140               	movlb	0	; select bank0
 16439  0B72  00B8               	movwf	number_5@num
 16440  0B73  0142               	movlb	2	; select bank2
 16441  0B74  085F               	movf	(_timeInMs+1)^(0+256),w
 16442  0B75  0140               	movlb	0	; select bank0
 16443  0B76  00B9               	movwf	number_5@num+1
 16444  0B77  01BA               	clrf	number_5@num+2
 16445  0B78  01BB               	clrf	number_5@num+3
 16446  0B79  3190  2058  3188   	fcall	_number_5
 16447                           
 16448                           ;main.c: 638: stopFlag = 0;
 16449  0B7C  1270               	bcf	_stopFlag/(0+8),_stopFlag& (0+7)
 16450                           
 16451                           ;main.c: 639: irSensorDetected = 0;
 16452  0B7D  12F0               	bcf	_irSensorDetected/(0+8),_irSensorDetected& (0+7)
 16453                           
 16454                           ;main.c: 641: (RD4) = 0;
 16455  0B7E  0140               	movlb	0	; select bank0
 16456  0B7F  120F               	bcf	15,4	;volatile
 16457                           
 16458                           ;main.c: 643: TMR0_StopTimer();
 16459  0B80  31A0  208D  3188   	fcall	_TMR0_StopTimer
 16460                           
 16461                           ;main.c: 644: TMR2_StopTimer();
 16462  0B83  3190  2000  3188   	fcall	_TMR2_StopTimer
 16463                           
 16464                           ;main.c: 647: (INTCONbits.GIE = 0);
 16465  0B86  138B               	bcf	11,7	;volatile
 16466                           
 16467                           ;main.c: 650: (INTCONbits.PEIE = 0);
 16468  0B87  130B               	bcf	11,6	;volatile
 16469                           
 16470                           ;main.c: 652: GIE = 0;
 16471  0B88  138B               	bcf	11,7	;volatile
 16472                           
 16473                           ;main.c: 653: PPSLOCK = 0x55;
 16474  0B89  3055               	movlw	85
 16475  0B8A  017D               	movlb	61	; select bank61
 16476  0B8B  008F               	movwf	15	;volsfr
 16477                           
 16478                           ;main.c: 654: PPSLOCK = 0xAA;
 16479  0B8C  30AA               	movlw	170
 16480  0B8D  008F               	movwf	15	;volsfr
 16481                           
 16482                           ;main.c: 655: PPSLOCKbits.PPSLOCKED = 0x00;
 16483  0B8E  100F               	bcf	15,0	;volsfr
 16484                           
 16485                           ;main.c: 657: RD2PPS = 0x00;
 16486  0B8F  017E               	movlb	62	; select bank62
 16487  0B90  01AA               	clrf	42	;volatile
 16488                           
 16489                           ;main.c: 658: RD3PPS = 0x00;
 16490  0B91  01AB               	clrf	43	;volatile
 16491                           
 16492                           ;main.c: 659: RD0PPS = 0x00;
 16493  0B92  01A8               	clrf	40	;volatile
 16494                           
 16495                           ;main.c: 660: RD1PPS = 0x00;
 16496  0B93  01A9               	clrf	41	;volatile
 16497                           
 16498                           ;main.c: 661: RC6PPS = 0x00;
 16499  0B94  01A6               	clrf	38	;volatile
 16500                           
 16501                           ;main.c: 662: INTPPSbits.INTPPS = 0x00;
 16502  0B95  30F0               	movlw	-16
 16503  0B96  017D               	movlb	61	; select bank61
 16504  0B97  0590               	andwf	16,f	;volatile
 16505                           
 16506                           ;main.c: 664: PPSLOCK = 0x55;
 16507  0B98  3055               	movlw	85
 16508  0B99  008F               	movwf	15	;volsfr
 16509                           
 16510                           ;main.c: 665: PPSLOCK = 0xAA;
 16511  0B9A  30AA               	movlw	170
 16512  0B9B  008F               	movwf	15	;volsfr
 16513                           
 16514                           ;main.c: 666: PPSLOCKbits.PPSLOCKED = 0x01;
 16515  0B9C  140F               	bsf	15,0	;volsfr
 16516                           
 16517                           ;main.c: 668: _delay((unsigned long)((500)*(8000000/4000.0)));
 16518  0B9D  3006               	movlw	6
 16519  0B9E  0141               	movlb	1	; select bank1
 16520  0B9F  00A9               	movwf	(??_ouputOnAntiClock^(0+128)+1)
 16521  0BA0  3013               	movlw	19
 16522  0BA1  00A8               	movwf	??_ouputOnAntiClock^(0+128)
 16523  0BA2  30AD               	movlw	173
 16524  0BA3                     u7747:	
 16525  0BA3  0B89               	decfsz	9,f
 16526  0BA4  2BA3               	goto	u7747
 16527  0BA5  0BA8               	decfsz	??_ouputOnAntiClock^(0+128),f
 16528  0BA6  2BA3               	goto	u7747
 16529  0BA7  0BA9               	decfsz	(??_ouputOnAntiClock^(0+128)+1),f
 16530  0BA8  2BA3               	goto	u7747
 16531  0BA9  3200               	nop2
 16532                           
 16533                           ;main.c: 669: (RD6) = 1;
 16534  0BAA  0140               	movlb	0	; select bank0
 16535  0BAB  170F               	bsf	15,6	;volatile
 16536                           
 16537                           ;main.c: 670: _delay((unsigned long)((500)*(8000000/4000.0)));
 16538  0BAC  3006               	movlw	6
 16539  0BAD  0141               	movlb	1	; select bank1
 16540  0BAE  00A9               	movwf	(??_ouputOnAntiClock^(0+128)+1)
 16541  0BAF  3013               	movlw	19
 16542  0BB0  00A8               	movwf	??_ouputOnAntiClock^(0+128)
 16543  0BB1  30AD               	movlw	173
 16544  0BB2                     u7757:	
 16545  0BB2  0B89               	decfsz	9,f
 16546  0BB3  2BB2               	goto	u7757
 16547  0BB4  0BA8               	decfsz	??_ouputOnAntiClock^(0+128),f
 16548  0BB5  2BB2               	goto	u7757
 16549  0BB6  0BA9               	decfsz	(??_ouputOnAntiClock^(0+128)+1),f
 16550  0BB7  2BB2               	goto	u7757
 16551  0BB8  3200               	nop2
 16552                           
 16553                           ;main.c: 671: (RD6) = 0;
 16554  0BB9  0140               	movlb	0	; select bank0
 16555  0BBA  130F               	bcf	15,6	;volatile
 16556                           
 16557                           ;main.c: 672: default_menu();
 16558  0BBB  3199  2168         	fcall	_default_menu
 16559  0BBD  0008               	return
 16560  0BBE                     __end_of_ouputOnAntiClock:	
 16561                           
 16562                           	psect	text8
 16563  1814                     __ptext8:	
 16564 ;; *************** function _stopMotor *****************
 16565 ;; Defined at:
 16566 ;;		line 244 in file "main.c"
 16567 ;; Parameters:    Size  Location     Type
 16568 ;;  dir             1    wreg     unsigned char 
 16569 ;;  speed           2    2[BANK0 ] unsigned int 
 16570 ;; Auto vars:     Size  Location     Type
 16571 ;;  dir             1    5[BANK0 ] unsigned char 
 16572 ;;  i               2    8[BANK0 ] int 
 16573 ;;  i               2    6[BANK0 ] int 
 16574 ;; Return value:  Size  Location     Type
 16575 ;;                  1    wreg      void 
 16576 ;; Registers used:
 16577 ;;		wreg, status,2, status,0, pclath, cstack
 16578 ;; Tracked objects:
 16579 ;;		On entry : 0/0
 16580 ;;		On exit  : 0/0
 16581 ;;		Unchanged: 0/0
 16582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 16583 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16584 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16585 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16586 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16587 ;;Total ram usage:        8 bytes
 16588 ;; Hardware stack levels used:    1
 16589 ;; Hardware stack levels required when called:    5
 16590 ;; This function calls:
 16591 ;;		_PWM3_LoadDutyValue
 16592 ;;		_PWM4_LoadDutyValue
 16593 ;; This function is called by:
 16594 ;;		_ouputOnClockwise
 16595 ;;		_ouputOnAntiClock
 16596 ;; This function uses a non-reentrant model
 16597 ;;
 16598                           
 16599                           
 16600                           ;psect for function _stopMotor
 16601  1814                     _stopMotor:	
 16602                           
 16603                           ;incstack = 0
 16604                           ; Regs used in _stopMotor: [wreg+status,2+status,0+pclath+cstack]
 16605                           ;stopMotor@dir stored from wreg
 16606  1814  0140               	movlb	0	; select bank0
 16607  1815  00A5               	movwf	stopMotor@dir
 16608                           
 16609                           ;main.c: 246: if(dir != CLOCKWISE)
 16610  1816  0825               	movf	stopMotor@dir,w
 16611  1817  1903               	btfsc	3,2
 16612  1818  2852               	goto	l8589
 16613                           
 16614                           ;main.c: 247: {
 16615                           ;main.c: 249: for(int i = speed; i > 0; i-- ) {
 16616  1819  0823               	movf	stopMotor@speed+1,w
 16617  181A  00A7               	movwf	stopMotor@i+1
 16618  181B  0822               	movf	stopMotor@speed,w
 16619  181C  00A6               	movwf	stopMotor@i
 16620  181D                     L6:	
 16621  181D  0827               	movf	stopMotor@i+1,w
 16622  181E  3A80               	xorlw	128
 16623  181F  00A4               	movwf	??_stopMotor
 16624  1820  3080               	movlw	128
 16625  1821  0224               	subwf	??_stopMotor,w
 16626  1822  1D03               	skipz
 16627  1823  2826               	goto	u5675
 16628  1824  3001               	movlw	1
 16629  1825  0226               	subwf	stopMotor@i,w
 16630  1826                     u5675:	
 16631  1826  1C03               	btfss	3,0
 16632  1827  2896               	goto	l8605
 16633                           
 16634                           ;main.c: 250: PWM3_LoadDutyValue(0);
 16635  1828  3000               	movlw	0
 16636  1829  0140               	movlb	0	; select bank0
 16637  182A  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
 16638  182B  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
 16639  182C  31A2  2235  3198   	fcall	_PWM3_LoadDutyValue
 16640                           
 16641                           ;main.c: 251: if(i > 1)
 16642  182F  0140               	movlb	0	; select bank0
 16643  1830  0827               	movf	stopMotor@i+1,w
 16644  1831  3A80               	xorlw	128
 16645  1832  00A4               	movwf	??_stopMotor
 16646  1833  3080               	movlw	128
 16647  1834  0224               	subwf	??_stopMotor,w
 16648  1835  1D03               	skipz
 16649  1836  2839               	goto	u5685
 16650  1837  3002               	movlw	2
 16651  1838  0226               	subwf	stopMotor@i,w
 16652  1839                     u5685:	
 16653  1839  1C03               	skipc
 16654  183A  2843               	goto	l8583
 16655                           
 16656                           ;main.c: 252: PWM4_LoadDutyValue(i);
 16657  183B  0140               	movlb	0	; select bank0
 16658  183C  0827               	movf	stopMotor@i+1,w
 16659  183D  00A1               	movwf	PWM4_LoadDutyValue@dutyValue+1
 16660  183E  0826               	movf	stopMotor@i,w
 16661  183F  00A0               	movwf	PWM4_LoadDutyValue@dutyValue
 16662  1840  31A2  2254  3198   	fcall	_PWM4_LoadDutyValue
 16663  1843                     l8583:	
 16664                           
 16665                           ;main.c: 253: _delay((unsigned long)(((12))*(8000000/4000.0)));
 16666  1843  3020               	movlw	32
 16667  1844  0140               	movlb	0	; select bank0
 16668  1845  00A4               	movwf	??_stopMotor
 16669  1846  3029               	movlw	41
 16670  1847                     u7767:	
 16671  1847  0B89               	decfsz	9,f
 16672  1848  2847               	goto	u7767
 16673  1849  0BA4               	decfsz	??_stopMotor,f
 16674  184A  2847               	goto	u7767
 16675  184B  3200               	nop2
 16676  184C  30FF               	movlw	255
 16677  184D  0140               	movlb	0	; select bank0
 16678  184E  07A6               	addwf	stopMotor@i,f
 16679  184F  30FF               	movlw	255
 16680  1850  3DA7               	addwfc	stopMotor@i+1,f
 16681  1851  281D               	goto	L6
 16682  1852                     l8589:	
 16683                           ;main.c: 254: }
 16684                           ;main.c: 255: }
 16685                           
 16686                           
 16687                           ;main.c: 256: else
 16688                           ;main.c: 257: {
 16689                           ;main.c: 259: for(int i = speed; i > 0; i-- ) {
 16690  1852  0140               	movlb	0	; select bank0
 16691  1853  0823               	movf	stopMotor@speed+1,w
 16692  1854  00A9               	movwf	stopMotor@i_2071+1
 16693  1855  0822               	movf	stopMotor@speed,w
 16694  1856  00A8               	movwf	stopMotor@i_2071
 16695  1857  0829               	movf	stopMotor@i_2071+1,w
 16696  1858  3A80               	xorlw	128
 16697  1859  00A4               	movwf	??_stopMotor
 16698  185A  3080               	movlw	128
 16699  185B  0224               	subwf	??_stopMotor,w
 16700  185C  1D03               	skipz
 16701  185D  2860               	goto	u5705
 16702  185E  3001               	movlw	1
 16703  185F  0228               	subwf	stopMotor@i_2071,w
 16704  1860                     u5705:	
 16705  1860  1C03               	btfss	3,0
 16706  1861  2896               	goto	l8605
 16707  1862                     l8593:	
 16708                           
 16709                           ;main.c: 260: PWM4_LoadDutyValue(0);
 16710  1862  3000               	movlw	0
 16711  1863  0140               	movlb	0	; select bank0
 16712  1864  00A0               	movwf	PWM4_LoadDutyValue@dutyValue
 16713  1865  00A1               	movwf	PWM4_LoadDutyValue@dutyValue+1
 16714  1866  31A2  2254  3198   	fcall	_PWM4_LoadDutyValue
 16715                           
 16716                           ;main.c: 261: if(i > 1)
 16717  1869  0140               	movlb	0	; select bank0
 16718  186A  0829               	movf	stopMotor@i_2071+1,w
 16719  186B  3A80               	xorlw	128
 16720  186C  00A4               	movwf	??_stopMotor
 16721  186D  3080               	movlw	128
 16722  186E  0224               	subwf	??_stopMotor,w
 16723  186F  1D03               	skipz
 16724  1870  2873               	goto	u5715
 16725  1871  3002               	movlw	2
 16726  1872  0228               	subwf	stopMotor@i_2071,w
 16727  1873                     u5715:	
 16728  1873  1C03               	skipc
 16729  1874  287D               	goto	l8599
 16730                           
 16731                           ;main.c: 262: PWM3_LoadDutyValue(i);
 16732  1875  0140               	movlb	0	; select bank0
 16733  1876  0829               	movf	stopMotor@i_2071+1,w
 16734  1877  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
 16735  1878  0828               	movf	stopMotor@i_2071,w
 16736  1879  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
 16737  187A  31A2  2235  3198   	fcall	_PWM3_LoadDutyValue
 16738  187D                     l8599:	
 16739                           
 16740                           ;main.c: 263: _delay((unsigned long)(((12))*(8000000/4000.0)));
 16741  187D  3020               	movlw	32
 16742  187E  0140               	movlb	0	; select bank0
 16743  187F  00A4               	movwf	??_stopMotor
 16744  1880  3029               	movlw	41
 16745  1881                     u7777:	
 16746  1881  0B89               	decfsz	9,f
 16747  1882  2881               	goto	u7777
 16748  1883  0BA4               	decfsz	??_stopMotor,f
 16749  1884  2881               	goto	u7777
 16750  1885  3200               	nop2
 16751  1886  30FF               	movlw	255
 16752  1887  0140               	movlb	0	; select bank0
 16753  1888  07A8               	addwf	stopMotor@i_2071,f
 16754  1889  30FF               	movlw	255
 16755  188A  3DA9               	addwfc	stopMotor@i_2071+1,f
 16756  188B  0829               	movf	stopMotor@i_2071+1,w
 16757  188C  3A80               	xorlw	128
 16758  188D  00A4               	movwf	??_stopMotor
 16759  188E  3080               	movlw	128
 16760  188F  0224               	subwf	??_stopMotor,w
 16761  1890  1D03               	skipz
 16762  1891  2894               	goto	u5725
 16763  1892  3001               	movlw	1
 16764  1893  0228               	subwf	stopMotor@i_2071,w
 16765  1894                     u5725:	
 16766  1894  1803               	skipnc
 16767  1895  2862               	goto	l8593
 16768  1896                     l8605:	
 16769                           
 16770                           ;main.c: 264: }
 16771                           ;main.c: 266: }
 16772                           ;main.c: 267: PWM3_LoadDutyValue(0);
 16773  1896  3000               	movlw	0
 16774  1897  0140               	movlb	0	; select bank0
 16775  1898  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
 16776  1899  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
 16777  189A  31A2  2235  3198   	fcall	_PWM3_LoadDutyValue
 16778                           
 16779                           ;main.c: 268: PWM4_LoadDutyValue(0);
 16780  189D  3000               	movlw	0
 16781  189E  0140               	movlb	0	; select bank0
 16782  189F  00A0               	movwf	PWM4_LoadDutyValue@dutyValue
 16783  18A0  00A1               	movwf	PWM4_LoadDutyValue@dutyValue+1
 16784  18A1  31A2  2254         	fcall	_PWM4_LoadDutyValue
 16785                           
 16786                           ;main.c: 270: RD7 = 0;
 16787  18A3  0140               	movlb	0	; select bank0
 16788  18A4  138F               	bcf	15,7	;volatile
 16789  18A5  0008               	return
 16790  18A6                     __end_of_stopMotor:	
 16791                           
 16792                           	psect	text9
 16793  25C3                     __ptext9:	
 16794 ;; *************** function _startMotor *****************
 16795 ;; Defined at:
 16796 ;;		line 285 in file "main.c"
 16797 ;; Parameters:    Size  Location     Type
 16798 ;;  dir             1    wreg     unsigned char 
 16799 ;;  speed           2    2[BANK0 ] unsigned int 
 16800 ;; Auto vars:     Size  Location     Type
 16801 ;;  dir             1    5[BANK0 ] unsigned char 
 16802 ;;  i               2    8[BANK0 ] int 
 16803 ;;  i               2    6[BANK0 ] int 
 16804 ;; Return value:  Size  Location     Type
 16805 ;;                  1    wreg      void 
 16806 ;; Registers used:
 16807 ;;		wreg, status,2, status,0, pclath, cstack
 16808 ;; Tracked objects:
 16809 ;;		On entry : 0/0
 16810 ;;		On exit  : 0/0
 16811 ;;		Unchanged: 0/0
 16812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 16813 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16814 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16815 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16816 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 16817 ;;Total ram usage:        8 bytes
 16818 ;; Hardware stack levels used:    1
 16819 ;; Hardware stack levels required when called:    5
 16820 ;; This function calls:
 16821 ;;		_PWM3_LoadDutyValue
 16822 ;;		_PWM4_LoadDutyValue
 16823 ;; This function is called by:
 16824 ;;		_ouputOnClockwise
 16825 ;;		_ouputOnAntiClock
 16826 ;; This function uses a non-reentrant model
 16827 ;;
 16828                           
 16829                           
 16830                           ;psect for function _startMotor
 16831  25C3                     _startMotor:	
 16832                           
 16833                           ;incstack = 0
 16834                           ; Regs used in _startMotor: [wreg+status,2+status,0+pclath+cstack]
 16835                           ;startMotor@dir stored from wreg
 16836  25C3  0140               	movlb	0	; select bank0
 16837  25C4  00A5               	movwf	startMotor@dir
 16838                           
 16839                           ;main.c: 287: RD7 = 1;
 16840  25C5  178F               	bsf	15,7	;volatile
 16841                           
 16842                           ;main.c: 288: ADCON0bits.ADON = 1;
 16843  25C6  0141               	movlb	1	; select bank1
 16844  25C7  1793               	bsf	19,7	;volatile
 16845                           
 16846                           ;main.c: 309: if(dir != CLOCKWISE)
 16847  25C8  0140               	movlb	0	; select bank0
 16848  25C9  0825               	movf	startMotor@dir,w
 16849  25CA  1903               	btfsc	3,2
 16850  25CB  2E02               	goto	l8629
 16851                           
 16852                           ;main.c: 310: {
 16853                           ;main.c: 312: for(int i = 0; i < speed; i++ ) {
 16854  25CC  01A6               	clrf	startMotor@i
 16855  25CD  01A7               	clrf	startMotor@i+1
 16856  25CE                     l8625:	
 16857  25CE  0823               	movf	startMotor@speed+1,w
 16858  25CF  0227               	subwf	startMotor@i+1,w
 16859  25D0  1D03               	skipz
 16860  25D1  2DD4               	goto	u5755
 16861  25D2  0822               	movf	startMotor@speed,w
 16862  25D3  0226               	subwf	startMotor@i,w
 16863  25D4                     u5755:	
 16864  25D4  1803               	btfsc	3,0
 16865  25D5  2DFB               	goto	l8627
 16866                           
 16867                           ;main.c: 313: PWM3_LoadDutyValue(0);
 16868  25D6  3000               	movlw	0
 16869  25D7  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
 16870  25D8  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
 16871  25D9  31A2  2235  31A5   	fcall	_PWM3_LoadDutyValue
 16872                           
 16873                           ;main.c: 314: if(i < speed)
 16874  25DC  0140               	movlb	0	; select bank0
 16875  25DD  0823               	movf	startMotor@speed+1,w
 16876  25DE  0227               	subwf	startMotor@i+1,w
 16877  25DF  1D03               	skipz
 16878  25E0  2DE3               	goto	u5745
 16879  25E1  0822               	movf	startMotor@speed,w
 16880  25E2  0226               	subwf	startMotor@i,w
 16881  25E3                     u5745:	
 16882  25E3  1803               	skipnc
 16883  25E4  2DEC               	goto	l8621
 16884                           
 16885                           ;main.c: 315: PWM4_LoadDutyValue(i);
 16886  25E5  0827               	movf	startMotor@i+1,w
 16887  25E6  00A1               	movwf	PWM4_LoadDutyValue@dutyValue+1
 16888  25E7  0826               	movf	startMotor@i,w
 16889  25E8  00A0               	movwf	PWM4_LoadDutyValue@dutyValue
 16890  25E9  31A2  2254  31A5   	fcall	_PWM4_LoadDutyValue
 16891  25EC                     l8621:	
 16892                           
 16893                           ;main.c: 316: _delay((unsigned long)(((12))*(8000000/4000.0)));
 16894  25EC  3020               	movlw	32
 16895  25ED  0140               	movlb	0	; select bank0
 16896  25EE  00A4               	movwf	??_startMotor
 16897  25EF  3029               	movlw	41
 16898  25F0                     u7787:	
 16899  25F0  0B89               	decfsz	9,f
 16900  25F1  2DF0               	goto	u7787
 16901  25F2  0BA4               	decfsz	??_startMotor,f
 16902  25F3  2DF0               	goto	u7787
 16903  25F4  3200               	nop2
 16904  25F5  3001               	movlw	1
 16905  25F6  0140               	movlb	0	; select bank0
 16906  25F7  07A6               	addwf	startMotor@i,f
 16907  25F8  3000               	movlw	0
 16908  25F9  3DA7               	addwfc	startMotor@i+1,f
 16909  25FA  2DCE               	goto	l8625
 16910  25FB                     l8627:	
 16911                           
 16912                           ;main.c: 317: }
 16913                           ;main.c: 318: PWM4_LoadDutyValue(speed);
 16914  25FB  0823               	movf	startMotor@speed+1,w
 16915  25FC  00A1               	movwf	PWM4_LoadDutyValue@dutyValue+1
 16916  25FD  0822               	movf	startMotor@speed,w
 16917  25FE  00A0               	movwf	PWM4_LoadDutyValue@dutyValue
 16918  25FF  31A2  2254         	fcall	_PWM4_LoadDutyValue
 16919                           
 16920                           ;main.c: 319: }
 16921  2601  0008               	return
 16922  2602                     l8629:	
 16923                           
 16924                           ;main.c: 320: else
 16925                           ;main.c: 321: {
 16926                           ;main.c: 323: for(int i = 0; i < speed; i++ ) {
 16927  2602  0140               	movlb	0	; select bank0
 16928  2603  01A8               	clrf	startMotor@i_2076
 16929  2604  01A9               	clrf	startMotor@i_2076+1
 16930  2605                     l8641:	
 16931  2605  0823               	movf	startMotor@speed+1,w
 16932  2606  0229               	subwf	startMotor@i_2076+1,w
 16933  2607  1D03               	skipz
 16934  2608  2E0B               	goto	u5775
 16935  2609  0822               	movf	startMotor@speed,w
 16936  260A  0228               	subwf	startMotor@i_2076,w
 16937  260B                     u5775:	
 16938  260B  1803               	btfsc	3,0
 16939  260C  2E32               	goto	l8643
 16940                           
 16941                           ;main.c: 324: PWM4_LoadDutyValue(0);
 16942  260D  3000               	movlw	0
 16943  260E  00A0               	movwf	PWM4_LoadDutyValue@dutyValue
 16944  260F  00A1               	movwf	PWM4_LoadDutyValue@dutyValue+1
 16945  2610  31A2  2254  31A5   	fcall	_PWM4_LoadDutyValue
 16946                           
 16947                           ;main.c: 325: if(i < speed)
 16948  2613  0140               	movlb	0	; select bank0
 16949  2614  0823               	movf	startMotor@speed+1,w
 16950  2615  0229               	subwf	startMotor@i_2076+1,w
 16951  2616  1D03               	skipz
 16952  2617  2E1A               	goto	u5765
 16953  2618  0822               	movf	startMotor@speed,w
 16954  2619  0228               	subwf	startMotor@i_2076,w
 16955  261A                     u5765:	
 16956  261A  1803               	skipnc
 16957  261B  2E23               	goto	l8637
 16958                           
 16959                           ;main.c: 326: PWM3_LoadDutyValue(i);
 16960  261C  0829               	movf	startMotor@i_2076+1,w
 16961  261D  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
 16962  261E  0828               	movf	startMotor@i_2076,w
 16963  261F  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
 16964  2620  31A2  2235  31A5   	fcall	_PWM3_LoadDutyValue
 16965  2623                     l8637:	
 16966                           
 16967                           ;main.c: 327: _delay((unsigned long)(((12))*(8000000/4000.0)));
 16968  2623  3020               	movlw	32
 16969  2624  0140               	movlb	0	; select bank0
 16970  2625  00A4               	movwf	??_startMotor
 16971  2626  3029               	movlw	41
 16972  2627                     u7797:	
 16973  2627  0B89               	decfsz	9,f
 16974  2628  2E27               	goto	u7797
 16975  2629  0BA4               	decfsz	??_startMotor,f
 16976  262A  2E27               	goto	u7797
 16977  262B  3200               	nop2
 16978  262C  3001               	movlw	1
 16979  262D  0140               	movlb	0	; select bank0
 16980  262E  07A8               	addwf	startMotor@i_2076,f
 16981  262F  3000               	movlw	0
 16982  2630  3DA9               	addwfc	startMotor@i_2076+1,f
 16983  2631  2E05               	goto	l8641
 16984  2632                     l8643:	
 16985                           
 16986                           ;main.c: 328: }
 16987                           ;main.c: 329: PWM3_LoadDutyValue(speed);
 16988  2632  0823               	movf	startMotor@speed+1,w
 16989  2633  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
 16990  2634  0822               	movf	startMotor@speed,w
 16991  2635  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
 16992  2636  31A2  2235         	fcall	_PWM3_LoadDutyValue
 16993  2638  0008               	return
 16994  2639                     __end_of_startMotor:	
 16995                           
 16996                           	psect	text10
 16997  2254                     __ptext10:	
 16998 ;; *************** function _PWM4_LoadDutyValue *****************
 16999 ;; Defined at:
 17000 ;;		line 80 in file "mcc_generated_files/pwm4.c"
 17001 ;; Parameters:    Size  Location     Type
 17002 ;;  dutyValue       2    0[BANK0 ] unsigned int 
 17003 ;; Auto vars:     Size  Location     Type
 17004 ;;		None
 17005 ;; Return value:  Size  Location     Type
 17006 ;;                  1    wreg      void 
 17007 ;; Registers used:
 17008 ;;		wreg, status,2
 17009 ;; Tracked objects:
 17010 ;;		On entry : 0/0
 17011 ;;		On exit  : 0/0
 17012 ;;		Unchanged: 0/0
 17013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 17014 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17017 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17018 ;;Total ram usage:        2 bytes
 17019 ;; Hardware stack levels used:    1
 17020 ;; Hardware stack levels required when called:    4
 17021 ;; This function calls:
 17022 ;;		Nothing
 17023 ;; This function is called by:
 17024 ;;		_stopMotor
 17025 ;;		_startMotor
 17026 ;;		_ouputOnClockwise
 17027 ;;		_main
 17028 ;; This function uses a non-reentrant model
 17029 ;;
 17030                           
 17031                           
 17032                           ;psect for function _PWM4_LoadDutyValue
 17033  2254                     _PWM4_LoadDutyValue:	
 17034                           
 17035                           ;pwm4.c: 82: dutyValue &= 0x03FF;
 17036                           
 17037                           ;incstack = 0
 17038                           ; Regs used in _PWM4_LoadDutyValue: [wreg+status,2]
 17039  2254  30FF               	movlw	255
 17040  2255  0140               	movlb	0	; select bank0
 17041  2256  05A0               	andwf	PWM4_LoadDutyValue@dutyValue,f
 17042  2257  3003               	movlw	3
 17043  2258  05A1               	andwf	PWM4_LoadDutyValue@dutyValue+1,f
 17044                           
 17045                           ;pwm4.c: 85: if(CCP4CONbits.CCP4FMT)
 17046  2259  0146               	movlb	6	; select bank6
 17047  225A  1E1A               	btfss	26,4	;volatile
 17048  225B  2A6A               	goto	l8347
 17049                           
 17050                           ;pwm4.c: 86: {
 17051                           ;pwm4.c: 87: dutyValue <<= 6;
 17052  225C  3006               	movlw	6
 17053  225D  0140               	movlb	0	; select bank0
 17054  225E                     u5395:	
 17055  225E  35A0               	lslf	PWM4_LoadDutyValue@dutyValue,f
 17056  225F  0DA1               	rlf	PWM4_LoadDutyValue@dutyValue+1,f
 17057  2260  0B89               	decfsz	9,f
 17058  2261  2A5E               	goto	u5395
 17059                           
 17060                           ;pwm4.c: 88: CCPR4H = dutyValue >> 8;
 17061  2262  0821               	movf	PWM4_LoadDutyValue@dutyValue+1,w
 17062  2263  0146               	movlb	6	; select bank6
 17063  2264  0099               	movwf	25	;volatile
 17064                           
 17065                           ;pwm4.c: 89: CCPR4L = dutyValue;
 17066  2265  0140               	movlb	0	; select bank0
 17067  2266  0820               	movf	PWM4_LoadDutyValue@dutyValue,w
 17068  2267  0146               	movlb	6	; select bank6
 17069  2268  0098               	movwf	24	;volatile
 17070                           
 17071                           ;pwm4.c: 90: }
 17072  2269  0008               	return
 17073  226A                     l8347:	
 17074                           
 17075                           ;pwm4.c: 91: else
 17076                           ;pwm4.c: 92: {
 17077                           ;pwm4.c: 93: CCPR4H = dutyValue >> 8;
 17078  226A  0140               	movlb	0	; select bank0
 17079  226B  0821               	movf	PWM4_LoadDutyValue@dutyValue+1,w
 17080  226C  0146               	movlb	6	; select bank6
 17081  226D  0099               	movwf	25	;volatile
 17082                           
 17083                           ;pwm4.c: 94: CCPR4L = dutyValue;
 17084  226E  0140               	movlb	0	; select bank0
 17085  226F  0820               	movf	PWM4_LoadDutyValue@dutyValue,w
 17086  2270  0146               	movlb	6	; select bank6
 17087  2271  0098               	movwf	24	;volatile
 17088  2272  0008               	return
 17089  2273                     __end_of_PWM4_LoadDutyValue:	
 17090                           
 17091                           	psect	text11
 17092  2235                     __ptext11:	
 17093 ;; *************** function _PWM3_LoadDutyValue *****************
 17094 ;; Defined at:
 17095 ;;		line 80 in file "mcc_generated_files/pwm3.c"
 17096 ;; Parameters:    Size  Location     Type
 17097 ;;  dutyValue       2    0[BANK0 ] unsigned int 
 17098 ;; Auto vars:     Size  Location     Type
 17099 ;;		None
 17100 ;; Return value:  Size  Location     Type
 17101 ;;                  1    wreg      void 
 17102 ;; Registers used:
 17103 ;;		wreg, status,2
 17104 ;; Tracked objects:
 17105 ;;		On entry : 0/0
 17106 ;;		On exit  : 0/0
 17107 ;;		Unchanged: 0/0
 17108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 17109 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17112 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17113 ;;Total ram usage:        2 bytes
 17114 ;; Hardware stack levels used:    1
 17115 ;; Hardware stack levels required when called:    4
 17116 ;; This function calls:
 17117 ;;		Nothing
 17118 ;; This function is called by:
 17119 ;;		_stopMotor
 17120 ;;		_startMotor
 17121 ;;		_ouputOnClockwise
 17122 ;;		_main
 17123 ;; This function uses a non-reentrant model
 17124 ;;
 17125                           
 17126                           
 17127                           ;psect for function _PWM3_LoadDutyValue
 17128  2235                     _PWM3_LoadDutyValue:	
 17129                           
 17130                           ;pwm3.c: 82: dutyValue &= 0x03FF;
 17131                           
 17132                           ;incstack = 0
 17133                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2]
 17134  2235  30FF               	movlw	255
 17135  2236  0140               	movlb	0	; select bank0
 17136  2237  05A0               	andwf	PWM3_LoadDutyValue@dutyValue,f
 17137  2238  3003               	movlw	3
 17138  2239  05A1               	andwf	PWM3_LoadDutyValue@dutyValue+1,f
 17139                           
 17140                           ;pwm3.c: 85: if(CCP3CONbits.CCP3FMT)
 17141  223A  0146               	movlb	6	; select bank6
 17142  223B  1E16               	btfss	22,4	;volatile
 17143  223C  2A4B               	goto	l8333
 17144                           
 17145                           ;pwm3.c: 86: {
 17146                           ;pwm3.c: 87: dutyValue <<= 6;
 17147  223D  3006               	movlw	6
 17148  223E  0140               	movlb	0	; select bank0
 17149  223F                     u5375:	
 17150  223F  35A0               	lslf	PWM3_LoadDutyValue@dutyValue,f
 17151  2240  0DA1               	rlf	PWM3_LoadDutyValue@dutyValue+1,f
 17152  2241  0B89               	decfsz	9,f
 17153  2242  2A3F               	goto	u5375
 17154                           
 17155                           ;pwm3.c: 88: CCPR3H = dutyValue >> 8;
 17156  2243  0821               	movf	PWM3_LoadDutyValue@dutyValue+1,w
 17157  2244  0146               	movlb	6	; select bank6
 17158  2245  0095               	movwf	21	;volatile
 17159                           
 17160                           ;pwm3.c: 89: CCPR3L = dutyValue;
 17161  2246  0140               	movlb	0	; select bank0
 17162  2247  0820               	movf	PWM3_LoadDutyValue@dutyValue,w
 17163  2248  0146               	movlb	6	; select bank6
 17164  2249  0094               	movwf	20	;volatile
 17165                           
 17166                           ;pwm3.c: 90: }
 17167  224A  0008               	return
 17168  224B                     l8333:	
 17169                           
 17170                           ;pwm3.c: 91: else
 17171                           ;pwm3.c: 92: {
 17172                           ;pwm3.c: 93: CCPR3H = dutyValue >> 8;
 17173  224B  0140               	movlb	0	; select bank0
 17174  224C  0821               	movf	PWM3_LoadDutyValue@dutyValue+1,w
 17175  224D  0146               	movlb	6	; select bank6
 17176  224E  0095               	movwf	21	;volatile
 17177                           
 17178                           ;pwm3.c: 94: CCPR3L = dutyValue;
 17179  224F  0140               	movlb	0	; select bank0
 17180  2250  0820               	movf	PWM3_LoadDutyValue@dutyValue,w
 17181  2251  0146               	movlb	6	; select bank6
 17182  2252  0094               	movwf	20	;volatile
 17183  2253  0008               	return
 17184  2254                     __end_of_PWM3_LoadDutyValue:	
 17185                           
 17186                           	psect	text12
 17187  1968                     __ptext12:	
 17188 ;; *************** function _default_menu *****************
 17189 ;; Defined at:
 17190 ;;		line 816 in file "main.c"
 17191 ;; Parameters:    Size  Location     Type
 17192 ;;		None
 17193 ;; Auto vars:     Size  Location     Type
 17194 ;;		None
 17195 ;; Return value:  Size  Location     Type
 17196 ;;                  1    wreg      void 
 17197 ;; Registers used:
 17198 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17199 ;; Tracked objects:
 17200 ;;		On entry : 0/0
 17201 ;;		On exit  : 0/0
 17202 ;;		Unchanged: 0/0
 17203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 17204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17206 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17207 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17208 ;;Total ram usage:        1 bytes
 17209 ;; Hardware stack levels used:    1
 17210 ;; Hardware stack levels required when called:    6
 17211 ;; This function calls:
 17212 ;;		_display
 17213 ;;		_lcd
 17214 ;;		_number_2
 17215 ;;		_number_3
 17216 ;;		_number_5
 17217 ;; This function is called by:
 17218 ;;		_ouputOnClockwise
 17219 ;;		_ouputOnAntiClock
 17220 ;;		_main
 17221 ;; This function uses a non-reentrant model
 17222 ;;
 17223                           
 17224                           
 17225                           ;psect for function _default_menu
 17226  1968                     _default_menu:	
 17227                           
 17228                           ;main.c: 818: lcd((0x01),(0));
 17229                           
 17230                           ;incstack = 0
 17231                           ; Regs used in _default_menu: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17232  1968  0140               	movlb	0	; select bank0
 17233  1969  01A9               	clrf	lcd@b
 17234  196A  3001               	movlw	1
 17235  196B  31A4  245E  3199   	fcall	_lcd
 17236                           
 17237                           ;main.c: 821: display((char *)"                ",(0x80));
 17238  196E  3000               	movlw	low (STR_10| (0+32768))
 17239  196F  0140               	movlb	0	; select bank0
 17240  1970  00AC               	movwf	display@a
 17241  1971  30A8               	movlw	high (STR_10| (0+32768))
 17242  1972  00AD               	movwf	display@a+1
 17243  1973  3080               	movlw	128
 17244  1974  0141               	movlb	1	; select bank1
 17245  1975  00A0               	movwf	??_default_menu^(0+128)
 17246  1976  0820               	movf	??_default_menu^(0+128),w
 17247  1977  0140               	movlb	0	; select bank0
 17248  1978  00AE               	movwf	display@add
 17249  1979  31A2  2297  3199   	fcall	_display
 17250                           
 17251                           ;main.c: 822: lcd(((0xC0)),(0));
 17252  197C  0140               	movlb	0	; select bank0
 17253  197D  01A9               	clrf	lcd@b
 17254  197E  30C0               	movlw	192
 17255  197F  31A4  245E  3199   	fcall	_lcd
 17256                           
 17257                           ;main.c: 823: number_3(speedRpm);
 17258  1982  0141               	movlb	1	; select bank1
 17259  1983  0840               	movf	(_speedRpm+1)^(0+128),w
 17260  1984  0140               	movlb	0	; select bank0
 17261  1985  00AD               	movwf	number_3@num+1
 17262  1986  0141               	movlb	1	; select bank1
 17263  1987  083F               	movf	_speedRpm^(0+128),w
 17264  1988  0140               	movlb	0	; select bank0
 17265  1989  00AC               	movwf	number_3@num
 17266  198A  31A6  26BB  3199   	fcall	_number_3
 17267                           
 17268                           ;main.c: 824: lcd(((0xC0)+4),(0));
 17269  198D  0140               	movlb	0	; select bank0
 17270  198E  01A9               	clrf	lcd@b
 17271  198F  30C4               	movlw	196
 17272  1990  31A4  245E  3199   	fcall	_lcd
 17273                           
 17274                           ;main.c: 825: number_3(clockWiseTime);
 17275  1993  0141               	movlb	1	; select bank1
 17276  1994  084D               	movf	(_clockWiseTime+1)^(0+128),w
 17277  1995  0140               	movlb	0	; select bank0
 17278  1996  00AD               	movwf	number_3@num+1
 17279  1997  0141               	movlb	1	; select bank1
 17280  1998  084C               	movf	_clockWiseTime^(0+128),w
 17281  1999  0140               	movlb	0	; select bank0
 17282  199A  00AC               	movwf	number_3@num
 17283  199B  31A6  26BB  3199   	fcall	_number_3
 17284                           
 17285                           ;main.c: 826: lcd(((0xC0)+8),(0));
 17286  199E  0140               	movlb	0	; select bank0
 17287  199F  01A9               	clrf	lcd@b
 17288  19A0  30C8               	movlw	200
 17289  19A1  31A4  245E  3199   	fcall	_lcd
 17290                           
 17291                           ;main.c: 827: number_3(antiClockWiseTime);
 17292  19A4  0141               	movlb	1	; select bank1
 17293  19A5  0849               	movf	(_antiClockWiseTime+1)^(0+128),w
 17294  19A6  0140               	movlb	0	; select bank0
 17295  19A7  00AD               	movwf	number_3@num+1
 17296  19A8  0141               	movlb	1	; select bank1
 17297  19A9  0848               	movf	_antiClockWiseTime^(0+128),w
 17298  19AA  0140               	movlb	0	; select bank0
 17299  19AB  00AC               	movwf	number_3@num
 17300  19AC  31A6  26BB  3199   	fcall	_number_3
 17301                           
 17302                           ;main.c: 828: lcd(((0xC0)+12),(0));
 17303  19AF  0140               	movlb	0	; select bank0
 17304  19B0  01A9               	clrf	lcd@b
 17305  19B1  30CC               	movlw	204
 17306  19B2  31A4  245E  3199   	fcall	_lcd
 17307                           
 17308                           ;main.c: 829: number_2(holdTime);
 17309  19B5  0141               	movlb	1	; select bank1
 17310  19B6  0842               	movf	_holdTime^(0+128),w
 17311  19B7  31A3  239E  3199   	fcall	_number_2
 17312                           
 17313                           ;main.c: 831: if(direction == STOP)
 17314  19BA  3002               	movlw	2
 17315  19BB  0141               	movlb	1	; select bank1
 17316  19BC  0641               	xorwf	_direction^(0+128),w
 17317  19BD  1D03               	btfss	3,2
 17318  19BE  29C4               	goto	l8687
 17319                           
 17320                           ;main.c: 832: display((char *)"S",(0xC0)+15);
 17321  19BF  30BE               	movlw	low (STR_15| (0+32768))
 17322  19C0  0140               	movlb	0	; select bank0
 17323  19C1  00AC               	movwf	display@a
 17324  19C2  30A8               	movlw	high (STR_15| (0+32768))
 17325  19C3  29D5               	goto	L7
 17326  19C4                     l8687:	
 17327                           
 17328                           ;main.c: 833: else if(direction == CLOCKWISE)
 17329  19C4  0141               	movlb	1	; select bank1
 17330  19C5  0841               	movf	_direction^(0+128),w
 17331  19C6  1D03               	btfss	3,2
 17332  19C7  29CD               	goto	l8691
 17333                           
 17334                           ;main.c: 834: display((char *)"C",(0xC0)+15);
 17335  19C8  30BC               	movlw	low (STR_16| (0+32768))
 17336  19C9  0140               	movlb	0	; select bank0
 17337  19CA  00AC               	movwf	display@a
 17338  19CB  30A8               	movlw	high (STR_16| (0+32768))
 17339  19CC  29D5               	goto	L7
 17340  19CD                     l8691:	
 17341                           
 17342                           ;main.c: 835: else if(direction == ANTICLOCKWISE)
 17343  19CD  0141               	movlb	1	; select bank1
 17344  19CE  0341               	decf	_direction^(0+128),w
 17345  19CF  1D03               	btfss	3,2
 17346  19D0  29DF               	goto	l1252
 17347                           
 17348                           ;main.c: 836: display((char *)"A",(0xC0)+15);
 17349  19D1  30BA               	movlw	low (STR_17| (0+32768))
 17350  19D2  0140               	movlb	0	; select bank0
 17351  19D3  00AC               	movwf	display@a
 17352  19D4  30A8               	movlw	high (STR_17| (0+32768))
 17353  19D5                     L7:	
 17354  19D5  00AD               	movwf	display@a+1
 17355  19D6  30CF               	movlw	207
 17356  19D7  0141               	movlb	1	; select bank1
 17357  19D8  00A0               	movwf	??_default_menu^(0+128)
 17358  19D9  0820               	movf	??_default_menu^(0+128),w
 17359  19DA  0140               	movlb	0	; select bank0
 17360  19DB  00AE               	movwf	display@add
 17361  19DC  31A2  2297  3199   	fcall	_display
 17362  19DF                     l1252:	
 17363                           
 17364                           ;main.c: 839: display((char *)"B: ",(0x80));
 17365  19DF  30B2               	movlw	low (STR_2| (0+32768))
 17366  19E0  0140               	movlb	0	; select bank0
 17367  19E1  00AC               	movwf	display@a
 17368  19E2  30A8               	movlw	high (STR_2| (0+32768))
 17369  19E3  00AD               	movwf	display@a+1
 17370  19E4  3080               	movlw	128
 17371  19E5  0141               	movlb	1	; select bank1
 17372  19E6  00A0               	movwf	??_default_menu^(0+128)
 17373  19E7  0820               	movf	??_default_menu^(0+128),w
 17374  19E8  0140               	movlb	0	; select bank0
 17375  19E9  00AE               	movwf	display@add
 17376  19EA  31A2  2297  3199   	fcall	_display
 17377                           
 17378                           ;main.c: 840: lcd(((0x80)+2),(0));
 17379  19ED  0140               	movlb	0	; select bank0
 17380  19EE  01A9               	clrf	lcd@b
 17381  19EF  3082               	movlw	130
 17382  19F0  31A4  245E  3199   	fcall	_lcd
 17383                           
 17384                           ;main.c: 841: number_5(battVoltSamples);
 17385  19F3  0141               	movlb	1	; select bank1
 17386  19F4  083C               	movf	(_battVoltSamples+3)^(0+128),w
 17387  19F5  0140               	movlb	0	; select bank0
 17388  19F6  00BB               	movwf	number_5@num+3
 17389  19F7  0141               	movlb	1	; select bank1
 17390  19F8  083B               	movf	(_battVoltSamples+2)^(0+128),w
 17391  19F9  0140               	movlb	0	; select bank0
 17392  19FA  00BA               	movwf	number_5@num+2
 17393  19FB  0141               	movlb	1	; select bank1
 17394  19FC  083A               	movf	(_battVoltSamples+1)^(0+128),w
 17395  19FD  0140               	movlb	0	; select bank0
 17396  19FE  00B9               	movwf	number_5@num+1
 17397  19FF  0141               	movlb	1	; select bank1
 17398  1A00  0839               	movf	_battVoltSamples^(0+128),w
 17399  1A01  0140               	movlb	0	; select bank0
 17400  1A02  00B8               	movwf	number_5@num
 17401  1A03  3190  2058  3199   	fcall	_number_5
 17402                           
 17403                           ;main.c: 843: display((char *)"M: ",(0x80));
 17404  1A06  30B6               	movlw	low (STR_5| (0+32768))
 17405  1A07  0140               	movlb	0	; select bank0
 17406  1A08  00AC               	movwf	display@a
 17407  1A09  30A8               	movlw	high (STR_5| (0+32768))
 17408  1A0A  00AD               	movwf	display@a+1
 17409  1A0B  3080               	movlw	128
 17410  1A0C  0141               	movlb	1	; select bank1
 17411  1A0D  00A0               	movwf	??_default_menu^(0+128)
 17412  1A0E  0820               	movf	??_default_menu^(0+128),w
 17413  1A0F  0140               	movlb	0	; select bank0
 17414  1A10  00AE               	movwf	display@add
 17415  1A11  31A2  2297  3199   	fcall	_display
 17416                           
 17417                           ;main.c: 844: lcd(((0x80)+10),(0));
 17418  1A14  0140               	movlb	0	; select bank0
 17419  1A15  01A9               	clrf	lcd@b
 17420  1A16  308A               	movlw	138
 17421  1A17  31A4  245E  3199   	fcall	_lcd
 17422                           
 17423                           ;main.c: 845: number_5(mainsVoltSamples);
 17424  1A1A  0142               	movlb	2	; select bank2
 17425  1A1B  0823               	movf	(_mainsVoltSamples+3)^(0+256),w
 17426  1A1C  0140               	movlb	0	; select bank0
 17427  1A1D  00BB               	movwf	number_5@num+3
 17428  1A1E  0142               	movlb	2	; select bank2
 17429  1A1F  0822               	movf	(_mainsVoltSamples+2)^(0+256),w
 17430  1A20  0140               	movlb	0	; select bank0
 17431  1A21  00BA               	movwf	number_5@num+2
 17432  1A22  0142               	movlb	2	; select bank2
 17433  1A23  0821               	movf	(_mainsVoltSamples+1)^(0+256),w
 17434  1A24  0140               	movlb	0	; select bank0
 17435  1A25  00B9               	movwf	number_5@num+1
 17436  1A26  0142               	movlb	2	; select bank2
 17437  1A27  0820               	movf	_mainsVoltSamples^(0+256),w
 17438  1A28  0140               	movlb	0	; select bank0
 17439  1A29  00B8               	movwf	number_5@num
 17440  1A2A  3190  2058         	fcall	_number_5
 17441  1A2C  0008               	return
 17442  1A2D                     __end_of_default_menu:	
 17443                           
 17444                           	psect	text13
 17445  081A                     __ptext13:	
 17446 ;; *************** function _checkCurrentSensor *****************
 17447 ;; Defined at:
 17448 ;;		line 104 in file "main.c"
 17449 ;; Parameters:    Size  Location     Type
 17450 ;;  dir             1    wreg     unsigned char 
 17451 ;;  speed           2    0[BANK1 ] unsigned int 
 17452 ;; Auto vars:     Size  Location     Type
 17453 ;;  dir             1    0[COMMON] unsigned char 
 17454 ;;  tempEncoderV    2    6[BANK1 ] unsigned int 
 17455 ;; Return value:  Size  Location     Type
 17456 ;;                  1    wreg      void 
 17457 ;; Registers used:
 17458 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17459 ;; Tracked objects:
 17460 ;;		On entry : 0/0
 17461 ;;		On exit  : 0/0
 17462 ;;		Unchanged: 0/0
 17463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 17464 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17465 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17466 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17467 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17468 ;;Total ram usage:        8 bytes
 17469 ;; Hardware stack levels used:    1
 17470 ;; Hardware stack levels required when called:    6
 17471 ;; This function calls:
 17472 ;;		_ADCC_GetSingleConversion
 17473 ;;		___aldiv
 17474 ;;		_display
 17475 ;;		_lcd
 17476 ;;		_number_5
 17477 ;; This function is called by:
 17478 ;;		_ouputOnClockwise
 17479 ;;		_ouputOnAntiClock
 17480 ;; This function uses a non-reentrant model
 17481 ;;
 17482                           
 17483                           
 17484                           ;psect for function _checkCurrentSensor
 17485  081A                     _checkCurrentSensor:	
 17486                           
 17487                           ;main.c: 106: uint16_t tempEncoderVal = 0;
 17488                           
 17489                           ;incstack = 0
 17490                           ; Regs used in _checkCurrentSensor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17491  081A  0141               	movlb	1	; select bank1
 17492  081B  01A6               	clrf	checkCurrentSensor@tempEncoderVal^(0+128)
 17493  081C  01A7               	clrf	(checkCurrentSensor@tempEncoderVal+1)^(0+128)
 17494                           
 17495                           ;main.c: 108: forceStop = 0;
 17496  081D  10F0               	bcf	_forceStop/(0+8),_forceStop& (0+7)
 17497                           
 17498                           ;main.c: 110: if(adcSamplingTimeExpired)
 17499  081E  1CF2               	btfss	_adcSamplingTimeExpired/(0+8),_adcSamplingTimeExpired& (0+7)
 17500  081F  0008               	return
 17501                           
 17502                           ;main.c: 111: {
 17503                           ;main.c: 112: tempSamples = ADCC_GetSingleConversion(channel_ANA0);
 17504  0820  3000               	movlw	0
 17505  0821  31A1  2117  3188   	fcall	_ADCC_GetSingleConversion
 17506  0824  0140               	movlb	0	; select bank0
 17507  0825  0820               	movf	?_ADCC_GetSingleConversion,w
 17508  0826  0142               	movlb	2	; select bank2
 17509  0827  00B0               	movwf	_tempSamples^(0+256)
 17510  0828  0140               	movlb	0	; select bank0
 17511  0829  0821               	movf	?_ADCC_GetSingleConversion+1,w
 17512  082A  0142               	movlb	2	; select bank2
 17513  082B  00B1               	movwf	(_tempSamples^(0+256)+1)
 17514  082C  01B2               	clrf	(_tempSamples^(0+256)+2)
 17515  082D  01B3               	clrf	(_tempSamples^(0+256)+3)
 17516                           
 17517                           ;main.c: 113: if(sampleCount < ((5)))
 17518  082E  3005               	movlw	5
 17519  082F  0264               	subwf	_sampleCount^(0+256),w
 17520  0830  1803               	skipnc
 17521  0831  2863               	goto	l8551
 17522                           
 17523                           ;main.c: 114: {
 17524                           ;main.c: 115: sampleCount++;
 17525  0832  3001               	movlw	1
 17526  0833  0141               	movlb	1	; select bank1
 17527  0834  00A2               	movwf	??_checkCurrentSensor^(0+128)
 17528  0835  0822               	movf	??_checkCurrentSensor^(0+128),w
 17529  0836  0142               	movlb	2	; select bank2
 17530  0837  07E4               	addwf	_sampleCount^(0+256),f
 17531                           
 17532                           ;main.c: 116: currentSensorSamples = tempSamples + currentSensorSamples;
 17533  0838  0830               	movf	_tempSamples^(0+256),w
 17534  0839  072C               	addwf	_currentSensorSamples^(0+256),w
 17535  083A  0141               	movlb	1	; select bank1
 17536  083B  00A2               	movwf	??_checkCurrentSensor^(0+128)
 17537  083C  0142               	movlb	2	; select bank2
 17538  083D  0831               	movf	(_tempSamples+1)^(0+256),w
 17539  083E  3D2D               	addwfc	(_currentSensorSamples+1)^(0+256),w
 17540  083F  0141               	movlb	1	; select bank1
 17541  0840  00A3               	movwf	(??_checkCurrentSensor^(0+128)+1)
 17542  0841  0142               	movlb	2	; select bank2
 17543  0842  0832               	movf	(_tempSamples+2)^(0+256),w
 17544  0843  3D2E               	addwfc	(_currentSensorSamples+2)^(0+256),w
 17545  0844  0141               	movlb	1	; select bank1
 17546  0845  00A4               	movwf	(??_checkCurrentSensor^(0+128)+2)
 17547  0846  0142               	movlb	2	; select bank2
 17548  0847  0833               	movf	(_tempSamples+3)^(0+256),w
 17549  0848  3D2F               	addwfc	(_currentSensorSamples+3)^(0+256),w
 17550  0849  0141               	movlb	1	; select bank1
 17551  084A  00A5               	movwf	(??_checkCurrentSensor^(0+128)+3)
 17552  084B  0825               	movf	(??_checkCurrentSensor+3)^(0+128),w
 17553  084C  0142               	movlb	2	; select bank2
 17554  084D  00AF               	movwf	(_currentSensorSamples+3)^(0+256)
 17555  084E  0141               	movlb	1	; select bank1
 17556  084F  0824               	movf	(??_checkCurrentSensor+2)^(0+128),w
 17557  0850  0142               	movlb	2	; select bank2
 17558  0851  00AE               	movwf	(_currentSensorSamples+2)^(0+256)
 17559  0852  0141               	movlb	1	; select bank1
 17560  0853  0823               	movf	(??_checkCurrentSensor+1)^(0+128),w
 17561  0854  0142               	movlb	2	; select bank2
 17562  0855  00AD               	movwf	(_currentSensorSamples+1)^(0+256)
 17563  0856  0141               	movlb	1	; select bank1
 17564  0857  0822               	movf	??_checkCurrentSensor^(0+128),w
 17565  0858  0142               	movlb	2	; select bank2
 17566  0859  00AC               	movwf	_currentSensorSamples^(0+256)
 17567                           
 17568                           ;main.c: 117: tempSamples = 0;
 17569  085A  3000               	movlw	0
 17570  085B  00B3               	movwf	(_tempSamples+3)^(0+256)
 17571  085C  3000               	movlw	0
 17572  085D  00B2               	movwf	(_tempSamples+2)^(0+256)
 17573  085E  3000               	movlw	0
 17574  085F  00B1               	movwf	(_tempSamples+1)^(0+256)
 17575  0860  3000               	movlw	0
 17576  0861  00B0               	movwf	_tempSamples^(0+256)
 17577                           
 17578                           ;main.c: 118: }
 17579  0862  28F8               	goto	l8569
 17580  0863                     l8551:	
 17581                           
 17582                           ;main.c: 119: else
 17583                           ;main.c: 120: {
 17584                           ;main.c: 121: sampleCount = 0;
 17585  0863  01E4               	clrf	_sampleCount^(0+256)
 17586                           
 17587                           ;main.c: 122: currentSensorSamples = tempSamples + currentSensorSamples;
 17588  0864  0830               	movf	_tempSamples^(0+256),w
 17589  0865  072C               	addwf	_currentSensorSamples^(0+256),w
 17590  0866  0141               	movlb	1	; select bank1
 17591  0867  00A2               	movwf	??_checkCurrentSensor^(0+128)
 17592  0868  0142               	movlb	2	; select bank2
 17593  0869  0831               	movf	(_tempSamples+1)^(0+256),w
 17594  086A  3D2D               	addwfc	(_currentSensorSamples+1)^(0+256),w
 17595  086B  0141               	movlb	1	; select bank1
 17596  086C  00A3               	movwf	(??_checkCurrentSensor^(0+128)+1)
 17597  086D  0142               	movlb	2	; select bank2
 17598  086E  0832               	movf	(_tempSamples+2)^(0+256),w
 17599  086F  3D2E               	addwfc	(_currentSensorSamples+2)^(0+256),w
 17600  0870  0141               	movlb	1	; select bank1
 17601  0871  00A4               	movwf	(??_checkCurrentSensor^(0+128)+2)
 17602  0872  0142               	movlb	2	; select bank2
 17603  0873  0833               	movf	(_tempSamples+3)^(0+256),w
 17604  0874  3D2F               	addwfc	(_currentSensorSamples+3)^(0+256),w
 17605  0875  0141               	movlb	1	; select bank1
 17606  0876  00A5               	movwf	(??_checkCurrentSensor^(0+128)+3)
 17607  0877  0825               	movf	(??_checkCurrentSensor+3)^(0+128),w
 17608  0878  0142               	movlb	2	; select bank2
 17609  0879  00AF               	movwf	(_currentSensorSamples+3)^(0+256)
 17610  087A  0141               	movlb	1	; select bank1
 17611  087B  0824               	movf	(??_checkCurrentSensor+2)^(0+128),w
 17612  087C  0142               	movlb	2	; select bank2
 17613  087D  00AE               	movwf	(_currentSensorSamples+2)^(0+256)
 17614  087E  0141               	movlb	1	; select bank1
 17615  087F  0823               	movf	(??_checkCurrentSensor+1)^(0+128),w
 17616  0880  0142               	movlb	2	; select bank2
 17617  0881  00AD               	movwf	(_currentSensorSamples+1)^(0+256)
 17618  0882  0141               	movlb	1	; select bank1
 17619  0883  0822               	movf	??_checkCurrentSensor^(0+128),w
 17620  0884  0142               	movlb	2	; select bank2
 17621  0885  00AC               	movwf	_currentSensorSamples^(0+256)
 17622                           
 17623                           ;main.c: 123: currentSensorSamples = currentSensorSamples/((5));
 17624  0886  3000               	movlw	0
 17625  0887  0140               	movlb	0	; select bank0
 17626  0888  00AF               	movwf	___aldiv@divisor+3
 17627  0889  3000               	movlw	0
 17628  088A  00AE               	movwf	___aldiv@divisor+2
 17629  088B  3000               	movlw	0
 17630  088C  00AD               	movwf	___aldiv@divisor+1
 17631  088D  3005               	movlw	5
 17632  088E  00AC               	movwf	___aldiv@divisor
 17633  088F  0142               	movlb	2	; select bank2
 17634  0890  082F               	movf	(_currentSensorSamples+3)^(0+256),w
 17635  0891  0140               	movlb	0	; select bank0
 17636  0892  00B3               	movwf	___aldiv@dividend+3
 17637  0893  0142               	movlb	2	; select bank2
 17638  0894  082E               	movf	(_currentSensorSamples+2)^(0+256),w
 17639  0895  0140               	movlb	0	; select bank0
 17640  0896  00B2               	movwf	___aldiv@dividend+2
 17641  0897  0142               	movlb	2	; select bank2
 17642  0898  082D               	movf	(_currentSensorSamples+1)^(0+256),w
 17643  0899  0140               	movlb	0	; select bank0
 17644  089A  00B1               	movwf	___aldiv@dividend+1
 17645  089B  0142               	movlb	2	; select bank2
 17646  089C  082C               	movf	_currentSensorSamples^(0+256),w
 17647  089D  0140               	movlb	0	; select bank0
 17648  089E  00B0               	movwf	___aldiv@dividend
 17649  089F  31A6  2639  3188   	fcall	___aldiv
 17650  08A2  0140               	movlb	0	; select bank0
 17651  08A3  082F               	movf	?___aldiv+3,w
 17652  08A4  0142               	movlb	2	; select bank2
 17653  08A5  00AF               	movwf	(_currentSensorSamples+3)^(0+256)
 17654  08A6  0140               	movlb	0	; select bank0
 17655  08A7  082E               	movf	?___aldiv+2,w
 17656  08A8  0142               	movlb	2	; select bank2
 17657  08A9  00AE               	movwf	(_currentSensorSamples+2)^(0+256)
 17658  08AA  0140               	movlb	0	; select bank0
 17659  08AB  082D               	movf	?___aldiv+1,w
 17660  08AC  0142               	movlb	2	; select bank2
 17661  08AD  00AD               	movwf	(_currentSensorSamples+1)^(0+256)
 17662  08AE  0140               	movlb	0	; select bank0
 17663  08AF  082C               	movf	?___aldiv,w
 17664  08B0  0142               	movlb	2	; select bank2
 17665  08B1  00AC               	movwf	_currentSensorSamples^(0+256)
 17666                           
 17667                           ;main.c: 125: if(currentSensorSamples > (800))
 17668  08B2  1BAF               	btfsc	(_currentSensorSamples+3)^(0+256),7
 17669  08B3  28E7               	goto	l8567
 17670  08B4  082F               	movf	(_currentSensorSamples+3)^(0+256),w
 17671  08B5  1D03               	btfss	3,2
 17672  08B6  28C0               	goto	l8559
 17673  08B7  082E               	movf	(_currentSensorSamples+2)^(0+256),w
 17674  08B8  1D03               	btfss	3,2
 17675  08B9  28C0               	goto	l8559
 17676  08BA  3021               	movlw	33
 17677  08BB  022C               	subwf	_currentSensorSamples^(0+256),w
 17678  08BC  3003               	movlw	3
 17679  08BD  3B2D               	subwfb	(_currentSensorSamples+1)^(0+256),w
 17680  08BE  1C03               	btfss	3,0
 17681  08BF  28E7               	goto	l8567
 17682  08C0                     l8559:	
 17683                           
 17684                           ;main.c: 126: {
 17685                           ;main.c: 129: display((char *)"Current: ",(0xC0));
 17686  08C0  30A8               	movlw	low (STR_1| (0+32768))
 17687  08C1  0140               	movlb	0	; select bank0
 17688  08C2  00AC               	movwf	display@a
 17689  08C3  30A8               	movlw	high (STR_1| (0+32768))
 17690  08C4  00AD               	movwf	display@a+1
 17691  08C5  30C0               	movlw	192
 17692  08C6  0141               	movlb	1	; select bank1
 17693  08C7  00A2               	movwf	??_checkCurrentSensor^(0+128)
 17694  08C8  0822               	movf	??_checkCurrentSensor^(0+128),w
 17695  08C9  0140               	movlb	0	; select bank0
 17696  08CA  00AE               	movwf	display@add
 17697  08CB  31A2  2297  3188   	fcall	_display
 17698                           
 17699                           ;main.c: 130: lcd(((0xC0)+9),(0));
 17700  08CE  0140               	movlb	0	; select bank0
 17701  08CF  01A9               	clrf	lcd@b
 17702  08D0  30C9               	movlw	201
 17703  08D1  31A4  245E  3188   	fcall	_lcd
 17704                           
 17705                           ;main.c: 131: number_5(currentSensorSamples);
 17706  08D4  0142               	movlb	2	; select bank2
 17707  08D5  082F               	movf	(_currentSensorSamples+3)^(0+256),w
 17708  08D6  0140               	movlb	0	; select bank0
 17709  08D7  00BB               	movwf	number_5@num+3
 17710  08D8  0142               	movlb	2	; select bank2
 17711  08D9  082E               	movf	(_currentSensorSamples+2)^(0+256),w
 17712  08DA  0140               	movlb	0	; select bank0
 17713  08DB  00BA               	movwf	number_5@num+2
 17714  08DC  0142               	movlb	2	; select bank2
 17715  08DD  082D               	movf	(_currentSensorSamples+1)^(0+256),w
 17716  08DE  0140               	movlb	0	; select bank0
 17717  08DF  00B9               	movwf	number_5@num+1
 17718  08E0  0142               	movlb	2	; select bank2
 17719  08E1  082C               	movf	_currentSensorSamples^(0+256),w
 17720  08E2  0140               	movlb	0	; select bank0
 17721  08E3  00B8               	movwf	number_5@num
 17722  08E4  3190  2058         	fcall	_number_5
 17723                           
 17724                           ;main.c: 132: forceStop = 1;
 17725  08E6  14F0               	bsf	_forceStop/(0+8),_forceStop& (0+7)
 17726  08E7                     l8567:	
 17727                           
 17728                           ;main.c: 133: }
 17729                           ;main.c: 134: currentSensorSamples = tempSamples = 0;
 17730  08E7  3000               	movlw	0
 17731  08E8  0142               	movlb	2	; select bank2
 17732  08E9  00B3               	movwf	(_tempSamples+3)^(0+256)
 17733  08EA  3000               	movlw	0
 17734  08EB  00B2               	movwf	(_tempSamples+2)^(0+256)
 17735  08EC  3000               	movlw	0
 17736  08ED  00B1               	movwf	(_tempSamples+1)^(0+256)
 17737  08EE  3000               	movlw	0
 17738  08EF  00B0               	movwf	_tempSamples^(0+256)
 17739  08F0  0833               	movf	(_tempSamples+3)^(0+256),w
 17740  08F1  00AF               	movwf	(_currentSensorSamples+3)^(0+256)
 17741  08F2  0832               	movf	(_tempSamples+2)^(0+256),w
 17742  08F3  00AE               	movwf	(_currentSensorSamples+2)^(0+256)
 17743  08F4  0831               	movf	(_tempSamples+1)^(0+256),w
 17744  08F5  00AD               	movwf	(_currentSensorSamples+1)^(0+256)
 17745  08F6  0830               	movf	_tempSamples^(0+256),w
 17746  08F7  00AC               	movwf	_currentSensorSamples^(0+256)
 17747  08F8                     l8569:	
 17748                           
 17749                           ;main.c: 135: }
 17750                           ;main.c: 136: adcSamplingTimeExpired = 0;
 17751  08F8  10F2               	bcf	_adcSamplingTimeExpired/(0+8),_adcSamplingTimeExpired& (0+7)
 17752  08F9  0008               	return
 17753  08FA                     __end_of_checkCurrentSensor:	
 17754                           
 17755                           	psect	text14
 17756  2339                     __ptext14:	
 17757 ;; *************** function ___lmul *****************
 17758 ;; Defined at:
 17759 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\Umul32.c"
 17760 ;; Parameters:    Size  Location     Type
 17761 ;;  multiplier      4    0[BANK0 ] unsigned long 
 17762 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 17763 ;; Auto vars:     Size  Location     Type
 17764 ;;  product         4    8[BANK0 ] unsigned long 
 17765 ;; Return value:  Size  Location     Type
 17766 ;;                  4    0[BANK0 ] unsigned long 
 17767 ;; Registers used:
 17768 ;;		wreg, status,2, status,0
 17769 ;; Tracked objects:
 17770 ;;		On entry : 0/0
 17771 ;;		On exit  : 0/0
 17772 ;;		Unchanged: 0/0
 17773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 17774 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17775 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17777 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17778 ;;Total ram usage:       12 bytes
 17779 ;; Hardware stack levels used:    1
 17780 ;; Hardware stack levels required when called:    4
 17781 ;; This function calls:
 17782 ;;		Nothing
 17783 ;; This function is called by:
 17784 ;;		_ouputOnClockwise
 17785 ;;		_ouputOnAntiClock
 17786 ;;		_main
 17787 ;;		_serialCommand
 17788 ;; This function uses a non-reentrant model
 17789 ;;
 17790                           
 17791                           
 17792                           ;psect for function ___lmul
 17793  2339                     ___lmul:	
 17794                           
 17795                           ;incstack = 0
 17796                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 17797  2339  3000               	movlw	0
 17798  233A  0140               	movlb	0	; select bank0
 17799  233B  00AB               	movwf	___lmul@product+3
 17800  233C  3000               	movlw	0
 17801  233D  00AA               	movwf	___lmul@product+2
 17802  233E  3000               	movlw	0
 17803  233F  00A9               	movwf	___lmul@product+1
 17804  2340  3000               	movlw	0
 17805  2341  00A8               	movwf	___lmul@product
 17806  2342                     l8705:	
 17807  2342  1C20               	btfss	___lmul@multiplier,0
 17808  2343  2B4C               	goto	l8709
 17809  2344  0824               	movf	___lmul@multiplicand,w
 17810  2345  07A8               	addwf	___lmul@product,f
 17811  2346  0825               	movf	___lmul@multiplicand+1,w
 17812  2347  3DA9               	addwfc	___lmul@product+1,f
 17813  2348  0826               	movf	___lmul@multiplicand+2,w
 17814  2349  3DAA               	addwfc	___lmul@product+2,f
 17815  234A  0827               	movf	___lmul@multiplicand+3,w
 17816  234B  3DAB               	addwfc	___lmul@product+3,f
 17817  234C                     l8709:	
 17818  234C  3001               	movlw	1
 17819  234D                     u5865:	
 17820  234D  35A4               	lslf	___lmul@multiplicand,f
 17821  234E  0DA5               	rlf	___lmul@multiplicand+1,f
 17822  234F  0DA6               	rlf	___lmul@multiplicand+2,f
 17823  2350  0DA7               	rlf	___lmul@multiplicand+3,f
 17824  2351  0B89               	decfsz	9,f
 17825  2352  2B4D               	goto	u5865
 17826  2353  3001               	movlw	1
 17827  2354                     u5875:	
 17828  2354  36A3               	lsrf	___lmul@multiplier+3,f
 17829  2355  0CA2               	rrf	___lmul@multiplier+2,f
 17830  2356  0CA1               	rrf	___lmul@multiplier+1,f
 17831  2357  0CA0               	rrf	___lmul@multiplier,f
 17832  2358  0B89               	decfsz	9,f
 17833  2359  2B54               	goto	u5875
 17834  235A  0823               	movf	___lmul@multiplier+3,w
 17835  235B  0422               	iorwf	___lmul@multiplier+2,w
 17836  235C  0421               	iorwf	___lmul@multiplier+1,w
 17837  235D  0420               	iorwf	___lmul@multiplier,w
 17838  235E  1D03               	skipz
 17839  235F  2B42               	goto	l8705
 17840  2360  082B               	movf	___lmul@product+3,w
 17841  2361  00A3               	movwf	?___lmul+3
 17842  2362  082A               	movf	___lmul@product+2,w
 17843  2363  00A2               	movwf	?___lmul+2
 17844  2364  0829               	movf	___lmul@product+1,w
 17845  2365  00A1               	movwf	?___lmul+1
 17846  2366  0828               	movf	___lmul@product,w
 17847  2367  00A0               	movwf	?___lmul
 17848  2368  0008               	return
 17849  2369                     __end_of___lmul:	
 17850                           
 17851                           	psect	text15
 17852  2190                     __ptext15:	
 17853 ;; *************** function _TMR5_WriteTimer *****************
 17854 ;; Defined at:
 17855 ;;		line 116 in file "mcc_generated_files/tmr5.c"
 17856 ;; Parameters:    Size  Location     Type
 17857 ;;  timerVal        2    0[BANK0 ] unsigned int 
 17858 ;; Auto vars:     Size  Location     Type
 17859 ;;		None
 17860 ;; Return value:  Size  Location     Type
 17861 ;;                  1    wreg      void 
 17862 ;; Registers used:
 17863 ;;		wreg, status,2
 17864 ;; Tracked objects:
 17865 ;;		On entry : 0/0
 17866 ;;		On exit  : 0/0
 17867 ;;		Unchanged: 0/0
 17868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 17869 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17872 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17873 ;;Total ram usage:        2 bytes
 17874 ;; Hardware stack levels used:    1
 17875 ;; Hardware stack levels required when called:    4
 17876 ;; This function calls:
 17877 ;;		Nothing
 17878 ;; This function is called by:
 17879 ;;		_ouputOnClockwise
 17880 ;;		_ouputOnAntiClock
 17881 ;; This function uses a non-reentrant model
 17882 ;;
 17883                           
 17884                           
 17885                           ;psect for function _TMR5_WriteTimer
 17886  2190                     _TMR5_WriteTimer:	
 17887                           
 17888                           ;tmr5.c: 118: if (T5CONbits.nT5SYNC == 1)
 17889                           
 17890                           ;incstack = 0
 17891                           ; Regs used in _TMR5_WriteTimer: [wreg+status,2]
 17892  2190  0144               	movlb	4	; select bank4
 17893  2191  1D1A               	btfss	26,2	;volatile
 17894  2192  299E               	goto	l8531
 17895                           
 17896                           ;tmr5.c: 119: {
 17897                           ;tmr5.c: 121: T5CONbits.TMR5ON = 0;
 17898  2193  101A               	bcf	26,0	;volatile
 17899                           
 17900                           ;tmr5.c: 124: TMR5H = (timerVal >> 8);
 17901  2194  0140               	movlb	0	; select bank0
 17902  2195  0821               	movf	TMR5_WriteTimer@timerVal+1,w
 17903  2196  0144               	movlb	4	; select bank4
 17904  2197  0099               	movwf	25	;volatile
 17905                           
 17906                           ;tmr5.c: 125: TMR5L = timerVal;
 17907  2198  0140               	movlb	0	; select bank0
 17908  2199  0820               	movf	TMR5_WriteTimer@timerVal,w
 17909  219A  0144               	movlb	4	; select bank4
 17910  219B  0098               	movwf	24	;volatile
 17911                           
 17912                           ;tmr5.c: 128: T5CONbits.TMR5ON =1;
 17913  219C  141A               	bsf	26,0	;volatile
 17914                           
 17915                           ;tmr5.c: 129: }
 17916  219D  0008               	return
 17917  219E                     l8531:	
 17918                           
 17919                           ;tmr5.c: 130: else
 17920                           ;tmr5.c: 131: {
 17921                           ;tmr5.c: 133: TMR5H = (timerVal >> 8);
 17922  219E  0140               	movlb	0	; select bank0
 17923  219F  0821               	movf	TMR5_WriteTimer@timerVal+1,w
 17924  21A0  0144               	movlb	4	; select bank4
 17925  21A1  0099               	movwf	25	;volatile
 17926                           
 17927                           ;tmr5.c: 134: TMR5L = timerVal;
 17928  21A2  0140               	movlb	0	; select bank0
 17929  21A3  0820               	movf	TMR5_WriteTimer@timerVal,w
 17930  21A4  0144               	movlb	4	; select bank4
 17931  21A5  0098               	movwf	24	;volatile
 17932  21A6  0008               	return
 17933  21A7                     __end_of_TMR5_WriteTimer:	
 17934                           
 17935                           	psect	text16
 17936  2179                     __ptext16:	
 17937 ;; *************** function _TMR3_WriteTimer *****************
 17938 ;; Defined at:
 17939 ;;		line 116 in file "mcc_generated_files/tmr3.c"
 17940 ;; Parameters:    Size  Location     Type
 17941 ;;  timerVal        2    0[BANK0 ] unsigned int 
 17942 ;; Auto vars:     Size  Location     Type
 17943 ;;		None
 17944 ;; Return value:  Size  Location     Type
 17945 ;;                  1    wreg      void 
 17946 ;; Registers used:
 17947 ;;		wreg, status,2
 17948 ;; Tracked objects:
 17949 ;;		On entry : 0/0
 17950 ;;		On exit  : 0/0
 17951 ;;		Unchanged: 0/0
 17952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 17953 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17956 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17957 ;;Total ram usage:        2 bytes
 17958 ;; Hardware stack levels used:    1
 17959 ;; Hardware stack levels required when called:    4
 17960 ;; This function calls:
 17961 ;;		Nothing
 17962 ;; This function is called by:
 17963 ;;		_ouputOnClockwise
 17964 ;;		_ouputOnAntiClock
 17965 ;; This function uses a non-reentrant model
 17966 ;;
 17967                           
 17968                           
 17969                           ;psect for function _TMR3_WriteTimer
 17970  2179                     _TMR3_WriteTimer:	
 17971                           
 17972                           ;tmr3.c: 118: if (T3CONbits.nT3SYNC == 1)
 17973                           
 17974                           ;incstack = 0
 17975                           ; Regs used in _TMR3_WriteTimer: [wreg+status,2]
 17976  2179  0144               	movlb	4	; select bank4
 17977  217A  1D14               	btfss	20,2	;volatile
 17978  217B  2987               	goto	l8515
 17979                           
 17980                           ;tmr3.c: 119: {
 17981                           ;tmr3.c: 121: T3CONbits.TMR3ON = 0;
 17982  217C  1014               	bcf	20,0	;volatile
 17983                           
 17984                           ;tmr3.c: 124: TMR3H = (timerVal >> 8);
 17985  217D  0140               	movlb	0	; select bank0
 17986  217E  0821               	movf	TMR3_WriteTimer@timerVal+1,w
 17987  217F  0144               	movlb	4	; select bank4
 17988  2180  0093               	movwf	19	;volatile
 17989                           
 17990                           ;tmr3.c: 125: TMR3L = timerVal;
 17991  2181  0140               	movlb	0	; select bank0
 17992  2182  0820               	movf	TMR3_WriteTimer@timerVal,w
 17993  2183  0144               	movlb	4	; select bank4
 17994  2184  0092               	movwf	18	;volatile
 17995                           
 17996                           ;tmr3.c: 128: T3CONbits.TMR3ON =1;
 17997  2185  1414               	bsf	20,0	;volatile
 17998                           
 17999                           ;tmr3.c: 129: }
 18000  2186  0008               	return
 18001  2187                     l8515:	
 18002                           
 18003                           ;tmr3.c: 130: else
 18004                           ;tmr3.c: 131: {
 18005                           ;tmr3.c: 133: TMR3H = (timerVal >> 8);
 18006  2187  0140               	movlb	0	; select bank0
 18007  2188  0821               	movf	TMR3_WriteTimer@timerVal+1,w
 18008  2189  0144               	movlb	4	; select bank4
 18009  218A  0093               	movwf	19	;volatile
 18010                           
 18011                           ;tmr3.c: 134: TMR3L = timerVal;
 18012  218B  0140               	movlb	0	; select bank0
 18013  218C  0820               	movf	TMR3_WriteTimer@timerVal,w
 18014  218D  0144               	movlb	4	; select bank4
 18015  218E  0092               	movwf	18	;volatile
 18016  218F  0008               	return
 18017  2190                     __end_of_TMR3_WriteTimer:	
 18018                           
 18019                           	psect	text17
 18020  1000                     __ptext17:	
 18021 ;; *************** function _TMR2_StopTimer *****************
 18022 ;; Defined at:
 18023 ;;		line 121 in file "mcc_generated_files/tmr2.c"
 18024 ;; Parameters:    Size  Location     Type
 18025 ;;		None
 18026 ;; Auto vars:     Size  Location     Type
 18027 ;;		None
 18028 ;; Return value:  Size  Location     Type
 18029 ;;                  1    wreg      void 
 18030 ;; Registers used:
 18031 ;;		status,2, status,0, pclath, cstack
 18032 ;; Tracked objects:
 18033 ;;		On entry : 0/0
 18034 ;;		On exit  : 0/0
 18035 ;;		Unchanged: 0/0
 18036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 18037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18041 ;;Total ram usage:        0 bytes
 18042 ;; Hardware stack levels used:    1
 18043 ;; Hardware stack levels required when called:    5
 18044 ;; This function calls:
 18045 ;;		_TMR2_Stop
 18046 ;; This function is called by:
 18047 ;;		_ouputOnClockwise
 18048 ;;		_ouputOnAntiClock
 18049 ;;		_main
 18050 ;; This function uses a non-reentrant model
 18051 ;;
 18052                           
 18053                           
 18054                           ;psect for function _TMR2_StopTimer
 18055  1000                     _TMR2_StopTimer:	
 18056                           
 18057                           ;tmr2.c: 123: TMR2_Stop();
 18058                           
 18059                           ;incstack = 0
 18060                           ; Regs used in _TMR2_StopTimer: [status,2+status,0+pclath+cstack]
 18061  1000  31A0  2093         	fcall	_TMR2_Stop
 18062  1002  0008               	return
 18063  1003                     __end_of_TMR2_StopTimer:	
 18064                           
 18065                           	psect	text18
 18066  2093                     __ptext18:	
 18067 ;; *************** function _TMR2_Stop *****************
 18068 ;; Defined at:
 18069 ;;		line 115 in file "mcc_generated_files/tmr2.c"
 18070 ;; Parameters:    Size  Location     Type
 18071 ;;		None
 18072 ;; Auto vars:     Size  Location     Type
 18073 ;;		None
 18074 ;; Return value:  Size  Location     Type
 18075 ;;                  1    wreg      void 
 18076 ;; Registers used:
 18077 ;;		None
 18078 ;; Tracked objects:
 18079 ;;		On entry : 0/0
 18080 ;;		On exit  : 0/0
 18081 ;;		Unchanged: 0/0
 18082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 18083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18087 ;;Total ram usage:        0 bytes
 18088 ;; Hardware stack levels used:    1
 18089 ;; Hardware stack levels required when called:    4
 18090 ;; This function calls:
 18091 ;;		Nothing
 18092 ;; This function is called by:
 18093 ;;		_TMR2_StopTimer
 18094 ;; This function uses a non-reentrant model
 18095 ;;
 18096                           
 18097                           
 18098                           ;psect for function _TMR2_Stop
 18099  2093                     _TMR2_Stop:	
 18100                           
 18101                           ;tmr2.c: 118: T2CONbits.TMR2ON = 0;
 18102                           
 18103                           ;incstack = 0
 18104                           ; Regs used in _TMR2_Stop: []
 18105  2093  0145               	movlb	5	; select bank5
 18106  2094  138E               	bcf	14,7	;volatile
 18107  2095  0008               	return
 18108  2096                     __end_of_TMR2_Stop:	
 18109                           
 18110                           	psect	text19
 18111  2090                     __ptext19:	
 18112 ;; *************** function _TMR2_StartTimer *****************
 18113 ;; Defined at:
 18114 ;;		line 110 in file "mcc_generated_files/tmr2.c"
 18115 ;; Parameters:    Size  Location     Type
 18116 ;;		None
 18117 ;; Auto vars:     Size  Location     Type
 18118 ;;		None
 18119 ;; Return value:  Size  Location     Type
 18120 ;;                  1    wreg      void 
 18121 ;; Registers used:
 18122 ;;		status,2, status,0, pclath, cstack
 18123 ;; Tracked objects:
 18124 ;;		On entry : 0/0
 18125 ;;		On exit  : 0/0
 18126 ;;		Unchanged: 0/0
 18127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 18128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18132 ;;Total ram usage:        0 bytes
 18133 ;; Hardware stack levels used:    1
 18134 ;; Hardware stack levels required when called:    5
 18135 ;; This function calls:
 18136 ;;		_TMR2_Start
 18137 ;; This function is called by:
 18138 ;;		_ouputOnClockwise
 18139 ;;		_ouputOnAntiClock
 18140 ;; This function uses a non-reentrant model
 18141 ;;
 18142                           
 18143                           
 18144                           ;psect for function _TMR2_StartTimer
 18145  2090                     _TMR2_StartTimer:	
 18146                           
 18147                           ;tmr2.c: 112: TMR2_Start();
 18148                           
 18149                           ;incstack = 0
 18150                           ; Regs used in _TMR2_StartTimer: [status,2+status,0+pclath+cstack]
 18151  2090  31A0  2081         	fcall	_TMR2_Start
 18152  2092  0008               	return
 18153  2093                     __end_of_TMR2_StartTimer:	
 18154                           
 18155                           	psect	text20
 18156  208D                     __ptext20:	
 18157 ;; *************** function _TMR0_StopTimer *****************
 18158 ;; Defined at:
 18159 ;;		line 101 in file "mcc_generated_files/tmr0.c"
 18160 ;; Parameters:    Size  Location     Type
 18161 ;;		None
 18162 ;; Auto vars:     Size  Location     Type
 18163 ;;		None
 18164 ;; Return value:  Size  Location     Type
 18165 ;;                  1    wreg      void 
 18166 ;; Registers used:
 18167 ;;		None
 18168 ;; Tracked objects:
 18169 ;;		On entry : 0/0
 18170 ;;		On exit  : 0/0
 18171 ;;		Unchanged: 0/0
 18172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 18173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18177 ;;Total ram usage:        0 bytes
 18178 ;; Hardware stack levels used:    1
 18179 ;; Hardware stack levels required when called:    4
 18180 ;; This function calls:
 18181 ;;		Nothing
 18182 ;; This function is called by:
 18183 ;;		_ouputOnClockwise
 18184 ;;		_ouputOnAntiClock
 18185 ;;		_main
 18186 ;; This function uses a non-reentrant model
 18187 ;;
 18188                           
 18189                           
 18190                           ;psect for function _TMR0_StopTimer
 18191  208D                     _TMR0_StopTimer:	
 18192                           
 18193                           ;tmr0.c: 104: T0CON0bits.T0EN = 0;
 18194                           
 18195                           ;incstack = 0
 18196                           ; Regs used in _TMR0_StopTimer: []
 18197  208D  0140               	movlb	0	; select bank0
 18198  208E  139E               	bcf	30,7	;volatile
 18199  208F  0008               	return
 18200  2090                     __end_of_TMR0_StopTimer:	
 18201                           
 18202                           	psect	text21
 18203  208A                     __ptext21:	
 18204 ;; *************** function _TMR0_StartTimer *****************
 18205 ;; Defined at:
 18206 ;;		line 95 in file "mcc_generated_files/tmr0.c"
 18207 ;; Parameters:    Size  Location     Type
 18208 ;;		None
 18209 ;; Auto vars:     Size  Location     Type
 18210 ;;		None
 18211 ;; Return value:  Size  Location     Type
 18212 ;;                  1    wreg      void 
 18213 ;; Registers used:
 18214 ;;		None
 18215 ;; Tracked objects:
 18216 ;;		On entry : 0/0
 18217 ;;		On exit  : 0/0
 18218 ;;		Unchanged: 0/0
 18219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 18220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18224 ;;Total ram usage:        0 bytes
 18225 ;; Hardware stack levels used:    1
 18226 ;; Hardware stack levels required when called:    4
 18227 ;; This function calls:
 18228 ;;		Nothing
 18229 ;; This function is called by:
 18230 ;;		_ouputOnClockwise
 18231 ;;		_ouputOnAntiClock
 18232 ;;		_outputOn
 18233 ;;		_main
 18234 ;; This function uses a non-reentrant model
 18235 ;;
 18236                           
 18237                           
 18238                           ;psect for function _TMR0_StartTimer
 18239  208A                     _TMR0_StartTimer:	
 18240                           
 18241                           ;tmr0.c: 98: T0CON0bits.T0EN = 1;
 18242                           
 18243                           ;incstack = 0
 18244                           ; Regs used in _TMR0_StartTimer: []
 18245  208A  0140               	movlb	0	; select bank0
 18246  208B  179E               	bsf	30,7	;volatile
 18247  208C  0008               	return
 18248  208D                     __end_of_TMR0_StartTimer:	
 18249                           
 18250                           	psect	text22
 18251  1EB8                     __ptext22:	
 18252 ;; *************** function _number_4 *****************
 18253 ;; Defined at:
 18254 ;;		line 117 in file "lcd.c"
 18255 ;; Parameters:    Size  Location     Type
 18256 ;;  num             4   24[BANK0 ] unsigned long 
 18257 ;; Auto vars:     Size  Location     Type
 18258 ;;  arr            10   32[BANK0 ] unsigned char [10]
 18259 ;;  num4            4   68[BANK0 ] unsigned long 
 18260 ;;  num3            4   64[BANK0 ] unsigned long 
 18261 ;;  num2            4   60[BANK0 ] unsigned long 
 18262 ;;  num1            4   56[BANK0 ] unsigned long 
 18263 ;;  thou            4   50[BANK0 ] unsigned long 
 18264 ;;  hun             4   46[BANK0 ] unsigned long 
 18265 ;;  ten             4   42[BANK0 ] unsigned long 
 18266 ;;  unit            2   54[BANK0 ] unsigned int 
 18267 ;;  c               2    0        unsigned int 
 18268 ;;  b               2    0        unsigned int 
 18269 ;;  a               2    0        unsigned int 
 18270 ;;  temp            2    0        unsigned int 
 18271 ;; Return value:  Size  Location     Type
 18272 ;;                  1    wreg      void 
 18273 ;; Registers used:
 18274 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18275 ;; Tracked objects:
 18276 ;;		On entry : 0/0
 18277 ;;		On exit  : 0/0
 18278 ;;		Unchanged: 0/0
 18279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 18280 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18281 ;;      Locals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18282 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18283 ;;      Totals:         0      48       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18284 ;;Total ram usage:       48 bytes
 18285 ;; Hardware stack levels used:    1
 18286 ;; Hardware stack levels required when called:    5
 18287 ;; This function calls:
 18288 ;;		___lldiv
 18289 ;;		___llmod
 18290 ;;		_lcd
 18291 ;; This function is called by:
 18292 ;;		_main
 18293 ;; This function uses a non-reentrant model
 18294 ;;
 18295                           
 18296                           
 18297                           ;psect for function _number_4
 18298  1EB8                     _number_4:	
 18299                           
 18300                           ;lcd.c: 119: char arr[10] = {"0123456789"};
 18301                           
 18302                           ;incstack = 0
 18303                           ; Regs used in _number_4: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18304  1EB8  30BB               	movlw	low number_4@F15349
 18305  1EB9  0086               	movwf	6
 18306  1EBA  3001               	movlw	high number_4@F15349
 18307  1EBB  0087               	movwf	7
 18308  1EBC  3040               	movlw	low number_4@arr
 18309  1EBD  0084               	movwf	4
 18310  1EBE  3000               	movlw	high number_4@arr
 18311  1EBF  0085               	movwf	5
 18312  1EC0  300A               	movlw	10
 18313  1EC1  0140               	movlb	0	; select bank0
 18314  1EC2  00BC               	movwf	??_number_4
 18315  1EC3                     u6690:	
 18316  1EC3  0016               	moviw fsr1++
 18317  1EC4  001A               	movwi fsr0++
 18318  1EC5  0BBC               	decfsz	??_number_4,f
 18319  1EC6  2EC3               	goto	u6690
 18320                           
 18321                           ;lcd.c: 120: U16 temp, unit;
 18322                           ;lcd.c: 121: U16 a,b,c;
 18323                           ;lcd.c: 122: U32 ten, hun,thou;
 18324                           ;lcd.c: 124: U32 num1 = 0x030;
 18325  1EC7  3000               	movlw	0
 18326  1EC8  00DB               	movwf	number_4@num1+3
 18327  1EC9  3000               	movlw	0
 18328  1ECA  00DA               	movwf	number_4@num1+2
 18329  1ECB  3000               	movlw	0
 18330  1ECC  00D9               	movwf	number_4@num1+1
 18331  1ECD  3030               	movlw	48
 18332  1ECE  00D8               	movwf	number_4@num1
 18333                           
 18334                           ;lcd.c: 125: U32 num2 = 0x030;
 18335  1ECF  3000               	movlw	0
 18336  1ED0  00DF               	movwf	number_4@num2+3
 18337  1ED1  3000               	movlw	0
 18338  1ED2  00DE               	movwf	number_4@num2+2
 18339  1ED3  3000               	movlw	0
 18340  1ED4  00DD               	movwf	number_4@num2+1
 18341  1ED5  3030               	movlw	48
 18342  1ED6  00DC               	movwf	number_4@num2
 18343                           
 18344                           ;lcd.c: 126: U32 num3 = 0x030;
 18345  1ED7  3000               	movlw	0
 18346  1ED8  00E3               	movwf	number_4@num3+3
 18347  1ED9  3000               	movlw	0
 18348  1EDA  00E2               	movwf	number_4@num3+2
 18349  1EDB  3000               	movlw	0
 18350  1EDC  00E1               	movwf	number_4@num3+1
 18351  1EDD  3030               	movlw	48
 18352  1EDE  00E0               	movwf	number_4@num3
 18353                           
 18354                           ;lcd.c: 127: U32 num4 = 0x030;
 18355  1EDF  3000               	movlw	0
 18356  1EE0  00E7               	movwf	number_4@num4+3
 18357  1EE1  3000               	movlw	0
 18358  1EE2  00E6               	movwf	number_4@num4+2
 18359  1EE3  3000               	movlw	0
 18360  1EE4  00E5               	movwf	number_4@num4+1
 18361  1EE5  3030               	movlw	48
 18362  1EE6  00E4               	movwf	number_4@num4
 18363                           
 18364                           ;lcd.c: 129: unit = num%10;
 18365  1EE7  3000               	movlw	0
 18366  1EE8  00B1               	movwf	___llmod@divisor+3
 18367  1EE9  3000               	movlw	0
 18368  1EEA  00B0               	movwf	___llmod@divisor+2
 18369  1EEB  3000               	movlw	0
 18370  1EEC  00AF               	movwf	___llmod@divisor+1
 18371  1EED  300A               	movlw	10
 18372  1EEE  00AE               	movwf	___llmod@divisor
 18373  1EEF  083B               	movf	number_4@num+3,w
 18374  1EF0  00B5               	movwf	___llmod@dividend+3
 18375  1EF1  083A               	movf	number_4@num+2,w
 18376  1EF2  00B4               	movwf	___llmod@dividend+2
 18377  1EF3  0839               	movf	number_4@num+1,w
 18378  1EF4  00B3               	movwf	___llmod@dividend+1
 18379  1EF5  0838               	movf	number_4@num,w
 18380  1EF6  00B2               	movwf	___llmod@dividend
 18381  1EF7  31A3  23D5  319E   	fcall	___llmod
 18382  1EFA  0140               	movlb	0	; select bank0
 18383  1EFB  082F               	movf	?___llmod+1,w
 18384  1EFC  00D7               	movwf	number_4@unit+1
 18385  1EFD  082E               	movf	?___llmod,w
 18386  1EFE  00D6               	movwf	number_4@unit
 18387                           
 18388                           ;lcd.c: 130: ten = (num/10)%10;
 18389  1EFF  3000               	movlw	0
 18390  1F00  00B1               	movwf	___llmod@divisor+3
 18391  1F01  3000               	movlw	0
 18392  1F02  00B0               	movwf	___llmod@divisor+2
 18393  1F03  3000               	movlw	0
 18394  1F04  00AF               	movwf	___llmod@divisor+1
 18395  1F05  300A               	movlw	10
 18396  1F06  00AE               	movwf	___llmod@divisor
 18397  1F07  3000               	movlw	0
 18398  1F08  00A3               	movwf	___lldiv@divisor+3
 18399  1F09  3000               	movlw	0
 18400  1F0A  00A2               	movwf	___lldiv@divisor+2
 18401  1F0B  3000               	movlw	0
 18402  1F0C  00A1               	movwf	___lldiv@divisor+1
 18403  1F0D  300A               	movlw	10
 18404  1F0E  00A0               	movwf	___lldiv@divisor
 18405  1F0F  083B               	movf	number_4@num+3,w
 18406  1F10  00A7               	movwf	___lldiv@dividend+3
 18407  1F11  083A               	movf	number_4@num+2,w
 18408  1F12  00A6               	movwf	___lldiv@dividend+2
 18409  1F13  0839               	movf	number_4@num+1,w
 18410  1F14  00A5               	movwf	___lldiv@dividend+1
 18411  1F15  0838               	movf	number_4@num,w
 18412  1F16  00A4               	movwf	___lldiv@dividend
 18413  1F17  31A4  24FA  319E   	fcall	___lldiv
 18414  1F1A  0140               	movlb	0	; select bank0
 18415  1F1B  0823               	movf	?___lldiv+3,w
 18416  1F1C  00B5               	movwf	___llmod@dividend+3
 18417  1F1D  0822               	movf	?___lldiv+2,w
 18418  1F1E  00B4               	movwf	___llmod@dividend+2
 18419  1F1F  0821               	movf	?___lldiv+1,w
 18420  1F20  00B3               	movwf	___llmod@dividend+1
 18421  1F21  0820               	movf	?___lldiv,w
 18422  1F22  00B2               	movwf	___llmod@dividend
 18423  1F23  31A3  23D5  319E   	fcall	___llmod
 18424  1F26  0140               	movlb	0	; select bank0
 18425  1F27  0831               	movf	?___llmod+3,w
 18426  1F28  00CD               	movwf	number_4@ten+3
 18427  1F29  0830               	movf	?___llmod+2,w
 18428  1F2A  00CC               	movwf	number_4@ten+2
 18429  1F2B  082F               	movf	?___llmod+1,w
 18430  1F2C  00CB               	movwf	number_4@ten+1
 18431  1F2D  082E               	movf	?___llmod,w
 18432  1F2E  00CA               	movwf	number_4@ten
 18433                           
 18434                           ;lcd.c: 131: hun = (num/100)%10;
 18435  1F2F  3000               	movlw	0
 18436  1F30  00B1               	movwf	___llmod@divisor+3
 18437  1F31  3000               	movlw	0
 18438  1F32  00B0               	movwf	___llmod@divisor+2
 18439  1F33  3000               	movlw	0
 18440  1F34  00AF               	movwf	___llmod@divisor+1
 18441  1F35  300A               	movlw	10
 18442  1F36  00AE               	movwf	___llmod@divisor
 18443  1F37  3000               	movlw	0
 18444  1F38  00A3               	movwf	___lldiv@divisor+3
 18445  1F39  3000               	movlw	0
 18446  1F3A  00A2               	movwf	___lldiv@divisor+2
 18447  1F3B  3000               	movlw	0
 18448  1F3C  00A1               	movwf	___lldiv@divisor+1
 18449  1F3D  3064               	movlw	100
 18450  1F3E  00A0               	movwf	___lldiv@divisor
 18451  1F3F  083B               	movf	number_4@num+3,w
 18452  1F40  00A7               	movwf	___lldiv@dividend+3
 18453  1F41  083A               	movf	number_4@num+2,w
 18454  1F42  00A6               	movwf	___lldiv@dividend+2
 18455  1F43  0839               	movf	number_4@num+1,w
 18456  1F44  00A5               	movwf	___lldiv@dividend+1
 18457  1F45  0838               	movf	number_4@num,w
 18458  1F46  00A4               	movwf	___lldiv@dividend
 18459  1F47  31A4  24FA  319E   	fcall	___lldiv
 18460  1F4A  0140               	movlb	0	; select bank0
 18461  1F4B  0823               	movf	?___lldiv+3,w
 18462  1F4C  00B5               	movwf	___llmod@dividend+3
 18463  1F4D  0822               	movf	?___lldiv+2,w
 18464  1F4E  00B4               	movwf	___llmod@dividend+2
 18465  1F4F  0821               	movf	?___lldiv+1,w
 18466  1F50  00B3               	movwf	___llmod@dividend+1
 18467  1F51  0820               	movf	?___lldiv,w
 18468  1F52  00B2               	movwf	___llmod@dividend
 18469  1F53  31A3  23D5  319E   	fcall	___llmod
 18470  1F56  0140               	movlb	0	; select bank0
 18471  1F57  0831               	movf	?___llmod+3,w
 18472  1F58  00D1               	movwf	number_4@hun+3
 18473  1F59  0830               	movf	?___llmod+2,w
 18474  1F5A  00D0               	movwf	number_4@hun+2
 18475  1F5B  082F               	movf	?___llmod+1,w
 18476  1F5C  00CF               	movwf	number_4@hun+1
 18477  1F5D  082E               	movf	?___llmod,w
 18478  1F5E  00CE               	movwf	number_4@hun
 18479                           
 18480                           ;lcd.c: 132: thou = (num/1000);
 18481  1F5F  3000               	movlw	0
 18482  1F60  00A3               	movwf	___lldiv@divisor+3
 18483  1F61  3000               	movlw	0
 18484  1F62  00A2               	movwf	___lldiv@divisor+2
 18485  1F63  3003               	movlw	3
 18486  1F64  00A1               	movwf	___lldiv@divisor+1
 18487  1F65  30E8               	movlw	232
 18488  1F66  00A0               	movwf	___lldiv@divisor
 18489  1F67  083B               	movf	number_4@num+3,w
 18490  1F68  00A7               	movwf	___lldiv@dividend+3
 18491  1F69  083A               	movf	number_4@num+2,w
 18492  1F6A  00A6               	movwf	___lldiv@dividend+2
 18493  1F6B  0839               	movf	number_4@num+1,w
 18494  1F6C  00A5               	movwf	___lldiv@dividend+1
 18495  1F6D  0838               	movf	number_4@num,w
 18496  1F6E  00A4               	movwf	___lldiv@dividend
 18497  1F6F  31A4  24FA  319E   	fcall	___lldiv
 18498  1F72  0140               	movlb	0	; select bank0
 18499  1F73  0823               	movf	?___lldiv+3,w
 18500  1F74  00D5               	movwf	number_4@thou+3
 18501  1F75  0822               	movf	?___lldiv+2,w
 18502  1F76  00D4               	movwf	number_4@thou+2
 18503  1F77  0821               	movf	?___lldiv+1,w
 18504  1F78  00D3               	movwf	number_4@thou+1
 18505  1F79  0820               	movf	?___lldiv,w
 18506  1F7A  00D2               	movwf	number_4@thou
 18507                           
 18508                           ;lcd.c: 134: if(num > 999)
 18509  1F7B  083B               	movf	number_4@num+3,w
 18510  1F7C  1D03               	btfss	3,2
 18511  1F7D  2F87               	goto	l10071
 18512  1F7E  083A               	movf	number_4@num+2,w
 18513  1F7F  1D03               	btfss	3,2
 18514  1F80  2F87               	goto	l10071
 18515  1F81  30E8               	movlw	232
 18516  1F82  0238               	subwf	number_4@num,w
 18517  1F83  3003               	movlw	3
 18518  1F84  3B39               	subwfb	number_4@num+1,w
 18519  1F85  1C03               	btfss	3,0
 18520  1F86  2F98               	goto	l10073
 18521  1F87                     l10071:	
 18522                           
 18523                           ;lcd.c: 135: num1 = arr[thou];
 18524  1F87  0852               	movf	number_4@thou,w
 18525  1F88  3E40               	addlw	(low (number_4@arr| 0))& (0+255)
 18526  1F89  0086               	movwf	6
 18527  1F8A  0187               	clrf	7
 18528  1F8B  0801               	movf	1,w
 18529  1F8C  00BC               	movwf	??_number_4
 18530  1F8D  01BD               	clrf	??_number_4+1
 18531  1F8E  01BE               	clrf	??_number_4+2
 18532  1F8F  01BF               	clrf	??_number_4+3
 18533  1F90  083F               	movf	??_number_4+3,w
 18534  1F91  00DB               	movwf	number_4@num1+3
 18535  1F92  083E               	movf	??_number_4+2,w
 18536  1F93  00DA               	movwf	number_4@num1+2
 18537  1F94  083D               	movf	??_number_4+1,w
 18538  1F95  00D9               	movwf	number_4@num1+1
 18539  1F96  083C               	movf	??_number_4,w
 18540  1F97  00D8               	movwf	number_4@num1
 18541  1F98                     l10073:	
 18542                           
 18543                           ;lcd.c: 136: if(num > 99)
 18544  1F98  083B               	movf	number_4@num+3,w
 18545  1F99  1D03               	btfss	3,2
 18546  1F9A  2FA5               	goto	l10075
 18547  1F9B  083A               	movf	number_4@num+2,w
 18548  1F9C  1D03               	btfss	3,2
 18549  1F9D  2FA5               	goto	l10075
 18550  1F9E  0839               	movf	number_4@num+1,w
 18551  1F9F  1D03               	btfss	3,2
 18552  1FA0  2FA5               	goto	l10075
 18553  1FA1  3064               	movlw	100
 18554  1FA2  0238               	subwf	number_4@num,w
 18555  1FA3  1C03               	btfss	3,0
 18556  1FA4  2FB6               	goto	l10077
 18557  1FA5                     l10075:	
 18558                           
 18559                           ;lcd.c: 137: num2 = arr[hun];
 18560  1FA5  084E               	movf	number_4@hun,w
 18561  1FA6  3E40               	addlw	(low (number_4@arr| 0))& (0+255)
 18562  1FA7  0086               	movwf	6
 18563  1FA8  0187               	clrf	7
 18564  1FA9  0801               	movf	1,w
 18565  1FAA  00BC               	movwf	??_number_4
 18566  1FAB  01BD               	clrf	??_number_4+1
 18567  1FAC  01BE               	clrf	??_number_4+2
 18568  1FAD  01BF               	clrf	??_number_4+3
 18569  1FAE  083F               	movf	??_number_4+3,w
 18570  1FAF  00DF               	movwf	number_4@num2+3
 18571  1FB0  083E               	movf	??_number_4+2,w
 18572  1FB1  00DE               	movwf	number_4@num2+2
 18573  1FB2  083D               	movf	??_number_4+1,w
 18574  1FB3  00DD               	movwf	number_4@num2+1
 18575  1FB4  083C               	movf	??_number_4,w
 18576  1FB5  00DC               	movwf	number_4@num2
 18577  1FB6                     l10077:	
 18578                           
 18579                           ;lcd.c: 138: if(num > 9)
 18580  1FB6  083B               	movf	number_4@num+3,w
 18581  1FB7  1D03               	btfss	3,2
 18582  1FB8  2FC3               	goto	l10079
 18583  1FB9  083A               	movf	number_4@num+2,w
 18584  1FBA  1D03               	btfss	3,2
 18585  1FBB  2FC3               	goto	l10079
 18586  1FBC  0839               	movf	number_4@num+1,w
 18587  1FBD  1D03               	btfss	3,2
 18588  1FBE  2FC3               	goto	l10079
 18589  1FBF  300A               	movlw	10
 18590  1FC0  0238               	subwf	number_4@num,w
 18591  1FC1  1C03               	btfss	3,0
 18592  1FC2  2FD4               	goto	l1452
 18593  1FC3                     l10079:	
 18594                           
 18595                           ;lcd.c: 139: num3 = arr[ten];
 18596  1FC3  084A               	movf	number_4@ten,w
 18597  1FC4  3E40               	addlw	(low (number_4@arr| 0))& (0+255)
 18598  1FC5  0086               	movwf	6
 18599  1FC6  0187               	clrf	7
 18600  1FC7  0801               	movf	1,w
 18601  1FC8  00BC               	movwf	??_number_4
 18602  1FC9  01BD               	clrf	??_number_4+1
 18603  1FCA  01BE               	clrf	??_number_4+2
 18604  1FCB  01BF               	clrf	??_number_4+3
 18605  1FCC  083F               	movf	??_number_4+3,w
 18606  1FCD  00E3               	movwf	number_4@num3+3
 18607  1FCE  083E               	movf	??_number_4+2,w
 18608  1FCF  00E2               	movwf	number_4@num3+2
 18609  1FD0  083D               	movf	??_number_4+1,w
 18610  1FD1  00E1               	movwf	number_4@num3+1
 18611  1FD2  083C               	movf	??_number_4,w
 18612  1FD3  00E0               	movwf	number_4@num3
 18613  1FD4                     l1452:	
 18614                           
 18615                           ;lcd.c: 141: num4 = arr[unit];
 18616  1FD4  0856               	movf	number_4@unit,w
 18617  1FD5  3E40               	addlw	(low (number_4@arr| 0))& (0+255)
 18618  1FD6  0086               	movwf	6
 18619  1FD7  0187               	clrf	7
 18620  1FD8  0801               	movf	1,w
 18621  1FD9  00BC               	movwf	??_number_4
 18622  1FDA  01BD               	clrf	??_number_4+1
 18623  1FDB  01BE               	clrf	??_number_4+2
 18624  1FDC  01BF               	clrf	??_number_4+3
 18625  1FDD  083F               	movf	??_number_4+3,w
 18626  1FDE  00E7               	movwf	number_4@num4+3
 18627  1FDF  083E               	movf	??_number_4+2,w
 18628  1FE0  00E6               	movwf	number_4@num4+2
 18629  1FE1  083D               	movf	??_number_4+1,w
 18630  1FE2  00E5               	movwf	number_4@num4+1
 18631  1FE3  083C               	movf	??_number_4,w
 18632  1FE4  00E4               	movwf	number_4@num4
 18633                           
 18634                           ;lcd.c: 144: lcd(num1,(1));
 18635  1FE5  01A9               	clrf	lcd@b
 18636  1FE6  0AA9               	incf	lcd@b,f
 18637  1FE7  0858               	movf	number_4@num1,w
 18638  1FE8  31A4  245E  319E   	fcall	_lcd
 18639                           
 18640                           ;lcd.c: 146: lcd(num2,(1));
 18641  1FEB  0140               	movlb	0	; select bank0
 18642  1FEC  01A9               	clrf	lcd@b
 18643  1FED  0AA9               	incf	lcd@b,f
 18644  1FEE  085C               	movf	number_4@num2,w
 18645  1FEF  31A4  245E  319E   	fcall	_lcd
 18646                           
 18647                           ;lcd.c: 148: lcd(num3,(1));
 18648  1FF2  0140               	movlb	0	; select bank0
 18649  1FF3  01A9               	clrf	lcd@b
 18650  1FF4  0AA9               	incf	lcd@b,f
 18651  1FF5  0860               	movf	number_4@num3,w
 18652  1FF6  31A4  245E  319E   	fcall	_lcd
 18653                           
 18654                           ;lcd.c: 150: lcd(num4,(1));
 18655  1FF9  0140               	movlb	0	; select bank0
 18656  1FFA  01A9               	clrf	lcd@b
 18657  1FFB  0AA9               	incf	lcd@b,f
 18658  1FFC  0864               	movf	number_4@num4,w
 18659  1FFD  31A4  245E         	fcall	_lcd
 18660  1FFF  0008               	return
 18661  2000                     __end_of_number_4:	
 18662                           
 18663                           	psect	text23
 18664  2217                     __ptext23:	
 18665 ;; *************** function _lcdInit *****************
 18666 ;; Defined at:
 18667 ;;		line 7 in file "lcd.c"
 18668 ;; Parameters:    Size  Location     Type
 18669 ;;		None
 18670 ;; Auto vars:     Size  Location     Type
 18671 ;;		None
 18672 ;; Return value:  Size  Location     Type
 18673 ;;                  1    wreg      void 
 18674 ;; Registers used:
 18675 ;;		wreg, status,2, status,0, pclath, cstack
 18676 ;; Tracked objects:
 18677 ;;		On entry : 0/0
 18678 ;;		On exit  : 0/0
 18679 ;;		Unchanged: 0/0
 18680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 18681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18685 ;;Total ram usage:        0 bytes
 18686 ;; Hardware stack levels used:    1
 18687 ;; Hardware stack levels required when called:    5
 18688 ;; This function calls:
 18689 ;;		_lcd
 18690 ;; This function is called by:
 18691 ;;		_main
 18692 ;; This function uses a non-reentrant model
 18693 ;;
 18694                           
 18695                           
 18696                           ;psect for function _lcdInit
 18697  2217                     _lcdInit:	
 18698                           
 18699                           ;lcd.c: 9: lcd(0x02,(0));
 18700                           
 18701                           ;incstack = 0
 18702                           ; Regs used in _lcdInit: [wreg+status,2+status,0+pclath+cstack]
 18703  2217  0140               	movlb	0	; select bank0
 18704  2218  01A9               	clrf	lcd@b
 18705  2219  3002               	movlw	2
 18706  221A  31A4  245E  31A2   	fcall	_lcd
 18707                           
 18708                           ;lcd.c: 10: lcd(0x28,(0));
 18709  221D  0140               	movlb	0	; select bank0
 18710  221E  01A9               	clrf	lcd@b
 18711  221F  3028               	movlw	40
 18712  2220  31A4  245E  31A2   	fcall	_lcd
 18713                           
 18714                           ;lcd.c: 11: lcd((0x01),(0));
 18715  2223  0140               	movlb	0	; select bank0
 18716  2224  01A9               	clrf	lcd@b
 18717  2225  3001               	movlw	1
 18718  2226  31A4  245E  31A2   	fcall	_lcd
 18719                           
 18720                           ;lcd.c: 12: lcd(0x0c,(0));
 18721  2229  0140               	movlb	0	; select bank0
 18722  222A  01A9               	clrf	lcd@b
 18723  222B  300C               	movlw	12
 18724  222C  31A4  245E  31A2   	fcall	_lcd
 18725                           
 18726                           ;lcd.c: 14: lcd((0x80),(0));
 18727  222F  0140               	movlb	0	; select bank0
 18728  2230  01A9               	clrf	lcd@b
 18729  2231  3080               	movlw	128
 18730  2232  31A4  245E         	fcall	_lcd
 18731  2234  0008               	return
 18732  2235                     __end_of_lcdInit:	
 18733                           
 18734                           	psect	text24
 18735  254D                     __ptext24:	
 18736 ;; *************** function _keypad *****************
 18737 ;; Defined at:
 18738 ;;		line 5 in file "keypad.c"
 18739 ;; Parameters:    Size  Location     Type
 18740 ;;		None
 18741 ;; Auto vars:     Size  Location     Type
 18742 ;;  retKey          1    2[BANK0 ] unsigned char 
 18743 ;; Return value:  Size  Location     Type
 18744 ;;                  1    wreg      unsigned char 
 18745 ;; Registers used:
 18746 ;;		wreg, status,2
 18747 ;; Tracked objects:
 18748 ;;		On entry : 0/0
 18749 ;;		On exit  : 0/0
 18750 ;;		Unchanged: 0/0
 18751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 18752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18753 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18754 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18755 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18756 ;;Total ram usage:        3 bytes
 18757 ;; Hardware stack levels used:    1
 18758 ;; Hardware stack levels required when called:    4
 18759 ;; This function calls:
 18760 ;;		Nothing
 18761 ;; This function is called by:
 18762 ;;		_main
 18763 ;; This function uses a non-reentrant model
 18764 ;;
 18765                           
 18766                           
 18767                           ;psect for function _keypad
 18768  254D                     _keypad:	
 18769                           
 18770                           ;keypad.c: 7: unsigned char retKey = 0;
 18771                           
 18772                           ;incstack = 0
 18773                           ; Regs used in _keypad: [wreg+status,2]
 18774  254D  0140               	movlb	0	; select bank0
 18775  254E  01A2               	clrf	keypad@retKey
 18776                           
 18777                           ;keypad.c: 8: if((RC0))
 18778  254F  1C0E               	btfss	14,0	;volatile
 18779  2550  2D63               	goto	l1525
 18780                           
 18781                           ;keypad.c: 9: {
 18782                           ;keypad.c: 10: _delay((unsigned long)((100)*(8000000/4000.0)));
 18783  2551  3002               	movlw	2
 18784  2552  0140               	movlb	0	; select bank0
 18785  2553  00A1               	movwf	??_keypad+1
 18786  2554  3004               	movlw	4
 18787  2555  00A0               	movwf	??_keypad
 18788  2556  30BA               	movlw	186
 18789  2557                     u7807:	
 18790  2557  0B89               	decfsz	9,f
 18791  2558  2D57               	goto	u7807
 18792  2559  0BA0               	decfsz	??_keypad,f
 18793  255A  2D57               	goto	u7807
 18794  255B  0BA1               	decfsz	??_keypad+1,f
 18795  255C  2D57               	goto	u7807
 18796  255D  0000               	nop
 18797  255E                     l1526:	
 18798                           ;keypad.c: 12: while((RC0));
 18799                           
 18800  255E  0140               	movlb	0	; select bank0
 18801  255F  180E               	btfsc	14,0	;volatile
 18802  2560  2D5E               	goto	l1526
 18803                           
 18804                           ;keypad.c: 13: retKey = START_KEY;
 18805  2561  01A2               	clrf	keypad@retKey
 18806  2562  0AA2               	incf	keypad@retKey,f
 18807  2563                     l1525:	
 18808                           
 18809                           ;keypad.c: 14: }
 18810                           ;keypad.c: 15: if((RC4))
 18811  2563  1E0E               	btfss	14,4	;volatile
 18812  2564  2D75               	goto	l9797
 18813                           
 18814                           ;keypad.c: 16: {
 18815                           ;keypad.c: 17: _delay((unsigned long)((50)*(8000000/4000.0)));
 18816  2565  3082               	movlw	130
 18817  2566  0140               	movlb	0	; select bank0
 18818  2567  00A0               	movwf	??_keypad
 18819  2568  30DD               	movlw	221
 18820  2569                     u7817:	
 18821  2569  0B89               	decfsz	9,f
 18822  256A  2D69               	goto	u7817
 18823  256B  0BA0               	decfsz	??_keypad,f
 18824  256C  2D69               	goto	u7817
 18825  256D  3200               	nop2
 18826                           
 18827                           ;keypad.c: 18: if((RC4))
 18828  256E  0140               	movlb	0	; select bank0
 18829  256F  1E0E               	btfss	14,4	;volatile
 18830  2570  2D75               	goto	l9797
 18831                           
 18832                           ;keypad.c: 19: retKey = SET_KEY;
 18833  2571  3002               	movlw	2
 18834  2572  00A0               	movwf	??_keypad
 18835  2573  0820               	movf	??_keypad,w
 18836  2574  00A2               	movwf	keypad@retKey
 18837  2575                     l9797:	
 18838                           
 18839                           ;keypad.c: 20: }
 18840                           ;keypad.c: 21: if((RC1))
 18841  2575  1C8E               	btfss	14,1	;volatile
 18842  2576  2D87               	goto	l9805
 18843                           
 18844                           ;keypad.c: 22: {
 18845                           ;keypad.c: 23: _delay((unsigned long)((50)*(8000000/4000.0)));
 18846  2577  3082               	movlw	130
 18847  2578  0140               	movlb	0	; select bank0
 18848  2579  00A0               	movwf	??_keypad
 18849  257A  30DD               	movlw	221
 18850  257B                     u7827:	
 18851  257B  0B89               	decfsz	9,f
 18852  257C  2D7B               	goto	u7827
 18853  257D  0BA0               	decfsz	??_keypad,f
 18854  257E  2D7B               	goto	u7827
 18855  257F  3200               	nop2
 18856                           
 18857                           ;keypad.c: 24: if((RC1))
 18858  2580  0140               	movlb	0	; select bank0
 18859  2581  1C8E               	btfss	14,1	;volatile
 18860  2582  2D87               	goto	l9805
 18861                           
 18862                           ;keypad.c: 25: retKey = INC_KEY;
 18863  2583  3003               	movlw	3
 18864  2584  00A0               	movwf	??_keypad
 18865  2585  0820               	movf	??_keypad,w
 18866  2586  00A2               	movwf	keypad@retKey
 18867  2587                     l9805:	
 18868                           
 18869                           ;keypad.c: 26: }
 18870                           ;keypad.c: 27: if((RC2))
 18871  2587  1D0E               	btfss	14,2	;volatile
 18872  2588  2D99               	goto	l9813
 18873                           
 18874                           ;keypad.c: 28: {
 18875                           ;keypad.c: 29: _delay((unsigned long)((50)*(8000000/4000.0)));
 18876  2589  3082               	movlw	130
 18877  258A  0140               	movlb	0	; select bank0
 18878  258B  00A0               	movwf	??_keypad
 18879  258C  30DD               	movlw	221
 18880  258D                     u7837:	
 18881  258D  0B89               	decfsz	9,f
 18882  258E  2D8D               	goto	u7837
 18883  258F  0BA0               	decfsz	??_keypad,f
 18884  2590  2D8D               	goto	u7837
 18885  2591  3200               	nop2
 18886                           
 18887                           ;keypad.c: 30: if((RC2))
 18888  2592  0140               	movlb	0	; select bank0
 18889  2593  1D0E               	btfss	14,2	;volatile
 18890  2594  2D99               	goto	l9813
 18891                           
 18892                           ;keypad.c: 31: retKey = DEC_KEY;
 18893  2595  3004               	movlw	4
 18894  2596  00A0               	movwf	??_keypad
 18895  2597  0820               	movf	??_keypad,w
 18896  2598  00A2               	movwf	keypad@retKey
 18897  2599                     l9813:	
 18898                           
 18899                           ;keypad.c: 32: }
 18900                           ;keypad.c: 33: if(!(RE1))
 18901  2599  1890               	btfsc	16,1	;volatile
 18902  259A  2DAF               	goto	l9819
 18903                           
 18904                           ;keypad.c: 34: {
 18905                           ;keypad.c: 35: _delay((unsigned long)((100)*(8000000/4000.0)));
 18906  259B  3002               	movlw	2
 18907  259C  0140               	movlb	0	; select bank0
 18908  259D  00A1               	movwf	??_keypad+1
 18909  259E  3004               	movlw	4
 18910  259F  00A0               	movwf	??_keypad
 18911  25A0  30BA               	movlw	186
 18912  25A1                     u7847:	
 18913  25A1  0B89               	decfsz	9,f
 18914  25A2  2DA1               	goto	u7847
 18915  25A3  0BA0               	decfsz	??_keypad,f
 18916  25A4  2DA1               	goto	u7847
 18917  25A5  0BA1               	decfsz	??_keypad+1,f
 18918  25A6  2DA1               	goto	u7847
 18919  25A7  0000               	nop
 18920  25A8                     l1536:	
 18921                           ;keypad.c: 36: while(!(RE1));
 18922                           
 18923  25A8  0140               	movlb	0	; select bank0
 18924  25A9  1C90               	btfss	16,1	;volatile
 18925  25AA  2DA8               	goto	l1536
 18926                           
 18927                           ;keypad.c: 38: retKey = FOOT_KEY;
 18928  25AB  3005               	movlw	5
 18929  25AC  00A0               	movwf	??_keypad
 18930  25AD  0820               	movf	??_keypad,w
 18931  25AE  00A2               	movwf	keypad@retKey
 18932  25AF                     l9819:	
 18933                           
 18934                           ;keypad.c: 39: }
 18935                           ;keypad.c: 40: if(!(RA5))
 18936  25AF  1A8C               	btfsc	12,5	;volatile
 18937  25B0  2DC1               	goto	l1539
 18938                           
 18939                           ;keypad.c: 41: {
 18940                           ;keypad.c: 42: _delay((unsigned long)((50)*(8000000/4000.0)));
 18941  25B1  3082               	movlw	130
 18942  25B2  0140               	movlb	0	; select bank0
 18943  25B3  00A0               	movwf	??_keypad
 18944  25B4  30DD               	movlw	221
 18945  25B5                     u7857:	
 18946  25B5  0B89               	decfsz	9,f
 18947  25B6  2DB5               	goto	u7857
 18948  25B7  0BA0               	decfsz	??_keypad,f
 18949  25B8  2DB5               	goto	u7857
 18950  25B9  3200               	nop2
 18951                           
 18952                           ;keypad.c: 43: if(!(RA5))
 18953  25BA  0140               	movlb	0	; select bank0
 18954  25BB  1A8C               	btfsc	12,5	;volatile
 18955  25BC  2DC1               	goto	l1539
 18956                           
 18957                           ;keypad.c: 44: retKey = MAGIC_KEY;
 18958  25BD  3007               	movlw	7
 18959  25BE  00A0               	movwf	??_keypad
 18960  25BF  0820               	movf	??_keypad,w
 18961  25C0  00A2               	movwf	keypad@retKey
 18962  25C1                     l1539:	
 18963                           
 18964                           ;keypad.c: 45: }
 18965                           ;keypad.c: 57: return retKey;
 18966  25C1  0822               	movf	keypad@retKey,w
 18967  25C2  0008               	return
 18968  25C3                     __end_of_keypad:	
 18969                           
 18970                           	psect	text25
 18971  143C                     __ptext25:	
 18972 ;; *************** function _initMemRead *****************
 18973 ;; Defined at:
 18974 ;;		line 126 in file "configuration.c"
 18975 ;; Parameters:    Size  Location     Type
 18976 ;;		None
 18977 ;; Auto vars:     Size  Location     Type
 18978 ;;  temp            2   34[BANK0 ] unsigned char [2]
 18979 ;;  var             2   32[BANK0 ] unsigned char [2]
 18980 ;;  incR            1   36[BANK0 ] unsigned char 
 18981 ;; Return value:  Size  Location     Type
 18982 ;;                  1    wreg      void 
 18983 ;; Registers used:
 18984 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 18985 ;; Tracked objects:
 18986 ;;		On entry : 0/0
 18987 ;;		On exit  : 0/0
 18988 ;;		Unchanged: 0/0
 18989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 18990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18991 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18992 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18993 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18994 ;;Total ram usage:       11 bytes
 18995 ;; Hardware stack levels used:    1
 18996 ;; Hardware stack levels required when called:    6
 18997 ;; This function calls:
 18998 ;;		___wmul
 18999 ;;		_display
 19000 ;;		_eeprom_read
 19001 ;;		_eeprom_write
 19002 ;;		_lcd
 19003 ;;		_number_2
 19004 ;;		_number_3
 19005 ;; This function is called by:
 19006 ;;		_main
 19007 ;; This function uses a non-reentrant model
 19008 ;;
 19009                           
 19010                           
 19011                           ;psect for function _initMemRead
 19012  143C                     _initMemRead:	
 19013                           
 19014                           ;configuration.c: 128: uint8_t incR = 0;
 19015                           
 19016                           ;incstack = 0
 19017                           ; Regs used in _initMemRead: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 19018  143C  0140               	movlb	0	; select bank0
 19019  143D  01C4               	clrf	initMemRead@incR
 19020                           
 19021                           ;configuration.c: 129: uint8_t temp[2], var[2];
 19022                           ;configuration.c: 131: incR = (0x05);
 19023  143E  3005               	movlw	5
 19024  143F  00BA               	movwf	??_initMemRead
 19025  1440  083A               	movf	??_initMemRead,w
 19026  1441  00C4               	movwf	initMemRead@incR
 19027                           
 19028                           ;configuration.c: 134: var[0] = eeprom_read(incR);
 19029  1442  0844               	movf	initMemRead@incR,w
 19030  1443  31A1  2129  3194   	fcall	_eeprom_read
 19031  1446  0140               	movlb	0	; select bank0
 19032  1447  00BA               	movwf	??_initMemRead
 19033  1448  083A               	movf	??_initMemRead,w
 19034  1449  00C0               	movwf	initMemRead@var
 19035                           
 19036                           ;configuration.c: 135: _delay((unsigned long)(((3))*(8000000/4000.0)));
 19037  144A  3008               	movlw	8
 19038  144B  0140               	movlb	0	; select bank0
 19039  144C  00BA               	movwf	??_initMemRead
 19040  144D  30C9               	movlw	201
 19041  144E                     u7867:	
 19042  144E  0B89               	decfsz	9,f
 19043  144F  2C4E               	goto	u7867
 19044  1450  0BBA               	decfsz	??_initMemRead,f
 19045  1451  2C4E               	goto	u7867
 19046  1452  3200               	nop2
 19047                           
 19048                           ;configuration.c: 137: if(var[0] != 0x11)
 19049  1453  3011               	movlw	17
 19050  1454  0140               	movlb	0	; select bank0
 19051  1455  0640               	xorwf	initMemRead@var,w
 19052  1456  1903               	btfsc	3,2
 19053  1457  2E31               	goto	l9679
 19054                           
 19055                           ;configuration.c: 138: {
 19056                           ;configuration.c: 139: eeprom_write((0x05), (uint8_t)0x11);
 19057  1458  3011               	movlw	17
 19058  1459  00BA               	movwf	??_initMemRead
 19059  145A  083A               	movf	??_initMemRead,w
 19060  145B  00A0               	movwf	eeprom_write@value
 19061  145C  3005               	movlw	5
 19062  145D  31A2  22BC  3194   	fcall	_eeprom_write
 19063                           
 19064                           ;configuration.c: 140: _delay((unsigned long)(((3))*(8000000/4000.0)));
 19065  1460  3008               	movlw	8
 19066  1461  0140               	movlb	0	; select bank0
 19067  1462  00BA               	movwf	??_initMemRead
 19068  1463  30C9               	movlw	201
 19069  1464                     u7877:	
 19070  1464  0B89               	decfsz	9,f
 19071  1465  2C64               	goto	u7877
 19072  1466  0BBA               	decfsz	??_initMemRead,f
 19073  1467  2C64               	goto	u7877
 19074  1468  3200               	nop2
 19075                           
 19076                           ;configuration.c: 142: speedRpm = (48);
 19077  1469  3030               	movlw	48
 19078  146A  0141               	movlb	1	; select bank1
 19079  146B  00BF               	movwf	_speedRpm^(0+128)
 19080  146C  3000               	movlw	0
 19081  146D  00C0               	movwf	(_speedRpm^(0+128)+1)
 19082                           
 19083                           ;configuration.c: 143: temp[0] = (uint8_t) (speedRpm);
 19084  146E  083F               	movf	_speedRpm^(0+128),w
 19085  146F  0140               	movlb	0	; select bank0
 19086  1470  00BA               	movwf	??_initMemRead
 19087  1471  083A               	movf	??_initMemRead,w
 19088  1472  00C2               	movwf	initMemRead@temp
 19089                           
 19090                           ;configuration.c: 144: temp[1] = (uint8_t) (speedRpm >> 8);
 19091  1473  0141               	movlb	1	; select bank1
 19092  1474  0840               	movf	(_speedRpm+1)^(0+128),w
 19093  1475  0140               	movlb	0	; select bank0
 19094  1476  00BA               	movwf	??_initMemRead
 19095  1477  083A               	movf	??_initMemRead,w
 19096  1478  00C3               	movwf	initMemRead@temp+1
 19097                           
 19098                           ;configuration.c: 146: speedRpm = 0;
 19099  1479  0141               	movlb	1	; select bank1
 19100  147A  01BF               	clrf	_speedRpm^(0+128)
 19101  147B  01C0               	clrf	(_speedRpm+1)^(0+128)
 19102                           
 19103                           ;configuration.c: 148: incR++;
 19104  147C  3001               	movlw	1
 19105  147D  0140               	movlb	0	; select bank0
 19106  147E  00BA               	movwf	??_initMemRead
 19107  147F  083A               	movf	??_initMemRead,w
 19108  1480  07C4               	addwf	initMemRead@incR,f
 19109                           
 19110                           ;configuration.c: 149: eeprom_write(incR , temp[0]);
 19111  1481  0842               	movf	initMemRead@temp,w
 19112  1482  00BA               	movwf	??_initMemRead
 19113  1483  083A               	movf	??_initMemRead,w
 19114  1484  00A0               	movwf	eeprom_write@value
 19115  1485  0844               	movf	initMemRead@incR,w
 19116  1486  31A2  22BC  3194   	fcall	_eeprom_write
 19117                           
 19118                           ;configuration.c: 150: _delay((unsigned long)(((3))*(8000000/4000.0)));
 19119  1489  3008               	movlw	8
 19120  148A  0140               	movlb	0	; select bank0
 19121  148B  00BA               	movwf	??_initMemRead
 19122  148C  30C9               	movlw	201
 19123  148D                     u7887:	
 19124  148D  0B89               	decfsz	9,f
 19125  148E  2C8D               	goto	u7887
 19126  148F  0BBA               	decfsz	??_initMemRead,f
 19127  1490  2C8D               	goto	u7887
 19128  1491  3200               	nop2
 19129                           
 19130                           ;configuration.c: 151: incR++;
 19131  1492  3001               	movlw	1
 19132  1493  0140               	movlb	0	; select bank0
 19133  1494  00BA               	movwf	??_initMemRead
 19134  1495  083A               	movf	??_initMemRead,w
 19135  1496  07C4               	addwf	initMemRead@incR,f
 19136                           
 19137                           ;configuration.c: 152: eeprom_write(incR, temp[1]);
 19138  1497  0843               	movf	initMemRead@temp+1,w
 19139  1498  00BA               	movwf	??_initMemRead
 19140  1499  083A               	movf	??_initMemRead,w
 19141  149A  00A0               	movwf	eeprom_write@value
 19142  149B  0844               	movf	initMemRead@incR,w
 19143  149C  31A2  22BC  3194   	fcall	_eeprom_write
 19144                           
 19145                           ;configuration.c: 153: _delay((unsigned long)(((3))*(8000000/4000.0)));
 19146  149F  3008               	movlw	8
 19147  14A0  0140               	movlb	0	; select bank0
 19148  14A1  00BA               	movwf	??_initMemRead
 19149  14A2  30C9               	movlw	201
 19150  14A3                     u7897:	
 19151  14A3  0B89               	decfsz	9,f
 19152  14A4  2CA3               	goto	u7897
 19153  14A5  0BBA               	decfsz	??_initMemRead,f
 19154  14A6  2CA3               	goto	u7897
 19155  14A7  3200               	nop2
 19156                           
 19157                           ;configuration.c: 155: clockWiseTime = (1270);
 19158  14A8  3000               	movlw	0
 19159  14A9  0141               	movlb	1	; select bank1
 19160  14AA  00CF               	movwf	(_clockWiseTime+3)^(0+128)
 19161  14AB  3000               	movlw	0
 19162  14AC  00CE               	movwf	(_clockWiseTime+2)^(0+128)
 19163  14AD  3004               	movlw	4
 19164  14AE  00CD               	movwf	(_clockWiseTime+1)^(0+128)
 19165  14AF  30F6               	movlw	246
 19166  14B0  00CC               	movwf	_clockWiseTime^(0+128)
 19167                           
 19168                           ;configuration.c: 156: temp[0] = (uint8_t) (clockWiseTime);
 19169  14B1  084C               	movf	_clockWiseTime^(0+128),w
 19170  14B2  0140               	movlb	0	; select bank0
 19171  14B3  00BA               	movwf	??_initMemRead
 19172  14B4  083A               	movf	??_initMemRead,w
 19173  14B5  00C2               	movwf	initMemRead@temp
 19174                           
 19175                           ;configuration.c: 157: temp[1] = (uint8_t) (clockWiseTime >> 8);
 19176  14B6  0141               	movlb	1	; select bank1
 19177  14B7  084C               	movf	_clockWiseTime^(0+128),w
 19178  14B8  0140               	movlb	0	; select bank0
 19179  14B9  00BA               	movwf	??_initMemRead
 19180  14BA  0141               	movlb	1	; select bank1
 19181  14BB  084D               	movf	(_clockWiseTime+1)^(0+128),w
 19182  14BC  0140               	movlb	0	; select bank0
 19183  14BD  00BB               	movwf	??_initMemRead+1
 19184  14BE  0141               	movlb	1	; select bank1
 19185  14BF  084E               	movf	(_clockWiseTime+2)^(0+128),w
 19186  14C0  0140               	movlb	0	; select bank0
 19187  14C1  00BC               	movwf	??_initMemRead+2
 19188  14C2  0141               	movlb	1	; select bank1
 19189  14C3  084F               	movf	(_clockWiseTime+3)^(0+128),w
 19190  14C4  0140               	movlb	0	; select bank0
 19191  14C5  00BD               	movwf	??_initMemRead+3
 19192  14C6  3008               	movlw	8
 19193  14C7  00BE               	movwf	??_initMemRead+4
 19194  14C8                     u6345:	
 19195  14C8  37BD               	asrf	??_initMemRead+3,f
 19196  14C9  0CBC               	rrf	??_initMemRead+2,f
 19197  14CA  0CBB               	rrf	??_initMemRead+1,f
 19198  14CB  0CBA               	rrf	??_initMemRead,f
 19199  14CC  0BBE               	decfsz	??_initMemRead+4,f
 19200  14CD  2CC8               	goto	u6345
 19201  14CE  083A               	movf	??_initMemRead,w
 19202  14CF  00BF               	movwf	??_initMemRead+5
 19203  14D0  083F               	movf	??_initMemRead+5,w
 19204  14D1  00C3               	movwf	initMemRead@temp+1
 19205                           
 19206                           ;configuration.c: 159: clockWiseTime = 0;
 19207  14D2  3000               	movlw	0
 19208  14D3  0141               	movlb	1	; select bank1
 19209  14D4  00CF               	movwf	(_clockWiseTime+3)^(0+128)
 19210  14D5  3000               	movlw	0
 19211  14D6  00CE               	movwf	(_clockWiseTime+2)^(0+128)
 19212  14D7  3000               	movlw	0
 19213  14D8  00CD               	movwf	(_clockWiseTime+1)^(0+128)
 19214  14D9  3000               	movlw	0
 19215  14DA  00CC               	movwf	_clockWiseTime^(0+128)
 19216                           
 19217                           ;configuration.c: 161: incR++;
 19218  14DB  3001               	movlw	1
 19219  14DC  0140               	movlb	0	; select bank0
 19220  14DD  00BA               	movwf	??_initMemRead
 19221  14DE  083A               	movf	??_initMemRead,w
 19222  14DF  07C4               	addwf	initMemRead@incR,f
 19223                           
 19224                           ;configuration.c: 162: eeprom_write(incR , temp[0]);
 19225  14E0  0842               	movf	initMemRead@temp,w
 19226  14E1  00BA               	movwf	??_initMemRead
 19227  14E2  083A               	movf	??_initMemRead,w
 19228  14E3  00A0               	movwf	eeprom_write@value
 19229  14E4  0844               	movf	initMemRead@incR,w
 19230  14E5  31A2  22BC  3194   	fcall	_eeprom_write
 19231                           
 19232                           ;configuration.c: 163: _delay((unsigned long)(((3))*(8000000/4000.0)));
 19233  14E8  3008               	movlw	8
 19234  14E9  0140               	movlb	0	; select bank0
 19235  14EA  00BA               	movwf	??_initMemRead
 19236  14EB  30C9               	movlw	201
 19237  14EC                     u7907:	
 19238  14EC  0B89               	decfsz	9,f
 19239  14ED  2CEC               	goto	u7907
 19240  14EE  0BBA               	decfsz	??_initMemRead,f
 19241  14EF  2CEC               	goto	u7907
 19242  14F0  3200               	nop2
 19243                           
 19244                           ;configuration.c: 164: incR++;
 19245  14F1  3001               	movlw	1
 19246  14F2  0140               	movlb	0	; select bank0
 19247  14F3  00BA               	movwf	??_initMemRead
 19248  14F4  083A               	movf	??_initMemRead,w
 19249  14F5  07C4               	addwf	initMemRead@incR,f
 19250                           
 19251                           ;configuration.c: 165: eeprom_write(incR, temp[1]);
 19252  14F6  0843               	movf	initMemRead@temp+1,w
 19253  14F7  00BA               	movwf	??_initMemRead
 19254  14F8  083A               	movf	??_initMemRead,w
 19255  14F9  00A0               	movwf	eeprom_write@value
 19256  14FA  0844               	movf	initMemRead@incR,w
 19257  14FB  31A2  22BC  3194   	fcall	_eeprom_write
 19258                           
 19259                           ;configuration.c: 166: _delay((unsigned long)(((3))*(8000000/4000.0)));
 19260  14FE  3008               	movlw	8
 19261  14FF  0140               	movlb	0	; select bank0
 19262  1500  00BA               	movwf	??_initMemRead
 19263  1501  30C9               	movlw	201
 19264  1502                     u7917:	
 19265  1502  0B89               	decfsz	9,f
 19266  1503  2D02               	goto	u7917
 19267  1504  0BBA               	decfsz	??_initMemRead,f
 19268  1505  2D02               	goto	u7917
 19269  1506  3200               	nop2
 19270                           
 19271                           ;configuration.c: 169: antiClockWiseTime = (1290);
 19272  1507  3000               	movlw	0
 19273  1508  0141               	movlb	1	; select bank1
 19274  1509  00CB               	movwf	(_antiClockWiseTime+3)^(0+128)
 19275  150A  3000               	movlw	0
 19276  150B  00CA               	movwf	(_antiClockWiseTime+2)^(0+128)
 19277  150C  3005               	movlw	5
 19278  150D  00C9               	movwf	(_antiClockWiseTime+1)^(0+128)
 19279  150E  300A               	movlw	10
 19280  150F  00C8               	movwf	_antiClockWiseTime^(0+128)
 19281                           
 19282                           ;configuration.c: 170: temp[0] = (uint8_t) (antiClockWiseTime);
 19283  1510  0848               	movf	_antiClockWiseTime^(0+128),w
 19284  1511  0140               	movlb	0	; select bank0
 19285  1512  00BA               	movwf	??_initMemRead
 19286  1513  083A               	movf	??_initMemRead,w
 19287  1514  00C2               	movwf	initMemRead@temp
 19288                           
 19289                           ;configuration.c: 171: temp[1] = (uint8_t) (antiClockWiseTime >> 8);
 19290  1515  0141               	movlb	1	; select bank1
 19291  1516  0848               	movf	_antiClockWiseTime^(0+128),w
 19292  1517  0140               	movlb	0	; select bank0
 19293  1518  00BA               	movwf	??_initMemRead
 19294  1519  0141               	movlb	1	; select bank1
 19295  151A  0849               	movf	(_antiClockWiseTime+1)^(0+128),w
 19296  151B  0140               	movlb	0	; select bank0
 19297  151C  00BB               	movwf	??_initMemRead+1
 19298  151D  0141               	movlb	1	; select bank1
 19299  151E  084A               	movf	(_antiClockWiseTime+2)^(0+128),w
 19300  151F  0140               	movlb	0	; select bank0
 19301  1520  00BC               	movwf	??_initMemRead+2
 19302  1521  0141               	movlb	1	; select bank1
 19303  1522  084B               	movf	(_antiClockWiseTime+3)^(0+128),w
 19304  1523  0140               	movlb	0	; select bank0
 19305  1524  00BD               	movwf	??_initMemRead+3
 19306  1525  3008               	movlw	8
 19307  1526  00BE               	movwf	??_initMemRead+4
 19308  1527                     u6355:	
 19309  1527  37BD               	asrf	??_initMemRead+3,f
 19310  1528  0CBC               	rrf	??_initMemRead+2,f
 19311  1529  0CBB               	rrf	??_initMemRead+1,f
 19312  152A  0CBA               	rrf	??_initMemRead,f
 19313  152B  0BBE               	decfsz	??_initMemRead+4,f
 19314  152C  2D27               	goto	u6355
 19315  152D  083A               	movf	??_initMemRead,w
 19316  152E  00BF               	movwf	??_initMemRead+5
 19317  152F  083F               	movf	??_initMemRead+5,w
 19318  1530  00C3               	movwf	initMemRead@temp+1
 19319                           
 19320                           ;configuration.c: 173: antiClockWiseTime = 0;
 19321  1531  3000               	movlw	0
 19322  1532  0141               	movlb	1	; select bank1
 19323  1533  00CB               	movwf	(_antiClockWiseTime+3)^(0+128)
 19324  1534  3000               	movlw	0
 19325  1535  00CA               	movwf	(_antiClockWiseTime+2)^(0+128)
 19326  1536  3000               	movlw	0
 19327  1537  00C9               	movwf	(_antiClockWiseTime+1)^(0+128)
 19328  1538  3000               	movlw	0
 19329  1539  00C8               	movwf	_antiClockWiseTime^(0+128)
 19330                           
 19331                           ;configuration.c: 175: incR++;
 19332  153A  3001               	movlw	1
 19333  153B  0140               	movlb	0	; select bank0
 19334  153C  00BA               	movwf	??_initMemRead
 19335  153D  083A               	movf	??_initMemRead,w
 19336  153E  07C4               	addwf	initMemRead@incR,f
 19337                           
 19338                           ;configuration.c: 176: eeprom_write(incR , temp[0]);
 19339  153F  0842               	movf	initMemRead@temp,w
 19340  1540  00BA               	movwf	??_initMemRead
 19341  1541  083A               	movf	??_initMemRead,w
 19342  1542  00A0               	movwf	eeprom_write@value
 19343  1543  0844               	movf	initMemRead@incR,w
 19344  1544  31A2  22BC  3194   	fcall	_eeprom_write
 19345                           
 19346                           ;configuration.c: 177: _delay((unsigned long)(((3))*(8000000/4000.0)));
 19347  1547  3008               	movlw	8
 19348  1548  0140               	movlb	0	; select bank0
 19349  1549  00BA               	movwf	??_initMemRead
 19350  154A  30C9               	movlw	201
 19351  154B                     u7927:	
 19352  154B  0B89               	decfsz	9,f
 19353  154C  2D4B               	goto	u7927
 19354  154D  0BBA               	decfsz	??_initMemRead,f
 19355  154E  2D4B               	goto	u7927
 19356  154F  3200               	nop2
 19357                           
 19358                           ;configuration.c: 178: incR++;
 19359  1550  3001               	movlw	1
 19360  1551  0140               	movlb	0	; select bank0
 19361  1552  00BA               	movwf	??_initMemRead
 19362  1553  083A               	movf	??_initMemRead,w
 19363  1554  07C4               	addwf	initMemRead@incR,f
 19364                           
 19365                           ;configuration.c: 179: eeprom_write(incR, temp[1]);
 19366  1555  0843               	movf	initMemRead@temp+1,w
 19367  1556  00BA               	movwf	??_initMemRead
 19368  1557  083A               	movf	??_initMemRead,w
 19369  1558  00A0               	movwf	eeprom_write@value
 19370  1559  0844               	movf	initMemRead@incR,w
 19371  155A  31A2  22BC  3194   	fcall	_eeprom_write
 19372                           
 19373                           ;configuration.c: 180: _delay((unsigned long)(((3))*(8000000/4000.0)));
 19374  155D  3008               	movlw	8
 19375  155E  0140               	movlb	0	; select bank0
 19376  155F  00BA               	movwf	??_initMemRead
 19377  1560  30C9               	movlw	201
 19378  1561                     u7937:	
 19379  1561  0B89               	decfsz	9,f
 19380  1562  2D61               	goto	u7937
 19381  1563  0BBA               	decfsz	??_initMemRead,f
 19382  1564  2D61               	goto	u7937
 19383  1565  3200               	nop2
 19384                           
 19385                           ;configuration.c: 183: holdTime = (10);
 19386  1566  300A               	movlw	10
 19387  1567  0140               	movlb	0	; select bank0
 19388  1568  00BA               	movwf	??_initMemRead
 19389  1569  083A               	movf	??_initMemRead,w
 19390  156A  0141               	movlb	1	; select bank1
 19391  156B  00C2               	movwf	_holdTime^(0+128)
 19392                           
 19393                           ;configuration.c: 184: cnfHoldTime = holdTime * ((60)*(1000));
 19394  156C  0842               	movf	_holdTime^(0+128),w
 19395  156D  0140               	movlb	0	; select bank0
 19396  156E  00BA               	movwf	??_initMemRead
 19397  156F  01BB               	clrf	??_initMemRead+1
 19398  1570  083A               	movf	??_initMemRead,w
 19399  1571  00A0               	movwf	___wmul@multiplier
 19400  1572  083B               	movf	??_initMemRead+1,w
 19401  1573  00A1               	movwf	___wmul@multiplier+1
 19402  1574  3060               	movlw	96
 19403  1575  00A2               	movwf	___wmul@multiplicand
 19404  1576  30EA               	movlw	234
 19405  1577  00A3               	movwf	___wmul@multiplicand+1
 19406  1578  31A1  21DD  3194   	fcall	___wmul
 19407  157B  0140               	movlb	0	; select bank0
 19408  157C  0821               	movf	?___wmul+1,w
 19409  157D  0142               	movlb	2	; select bank2
 19410  157E  00D7               	movwf	(_cnfHoldTime+1)^(0+256)
 19411  157F  0140               	movlb	0	; select bank0
 19412  1580  0820               	movf	?___wmul,w
 19413  1581  0142               	movlb	2	; select bank2
 19414  1582  00D6               	movwf	_cnfHoldTime^(0+256)
 19415                           
 19416                           ;configuration.c: 185: temp[0] = (uint8_t) (holdTime);
 19417  1583  0141               	movlb	1	; select bank1
 19418  1584  0842               	movf	_holdTime^(0+128),w
 19419  1585  0140               	movlb	0	; select bank0
 19420  1586  00BA               	movwf	??_initMemRead
 19421  1587  083A               	movf	??_initMemRead,w
 19422  1588  00C2               	movwf	initMemRead@temp
 19423                           
 19424                           ;configuration.c: 186: incR++;
 19425  1589  3001               	movlw	1
 19426  158A  00BA               	movwf	??_initMemRead
 19427  158B  083A               	movf	??_initMemRead,w
 19428  158C  07C4               	addwf	initMemRead@incR,f
 19429                           
 19430                           ;configuration.c: 187: eeprom_write(incR , temp[0]);
 19431  158D  0842               	movf	initMemRead@temp,w
 19432  158E  00BA               	movwf	??_initMemRead
 19433  158F  083A               	movf	??_initMemRead,w
 19434  1590  00A0               	movwf	eeprom_write@value
 19435  1591  0844               	movf	initMemRead@incR,w
 19436  1592  31A2  22BC  3194   	fcall	_eeprom_write
 19437                           
 19438                           ;configuration.c: 188: _delay((unsigned long)(((3))*(8000000/4000.0)));
 19439  1595  3008               	movlw	8
 19440  1596  0140               	movlb	0	; select bank0
 19441  1597  00BA               	movwf	??_initMemRead
 19442  1598  30C9               	movlw	201
 19443  1599                     u7947:	
 19444  1599  0B89               	decfsz	9,f
 19445  159A  2D99               	goto	u7947
 19446  159B  0BBA               	decfsz	??_initMemRead,f
 19447  159C  2D99               	goto	u7947
 19448  159D  3200               	nop2
 19449                           
 19450                           ;configuration.c: 191: direction = STOP;
 19451  159E  3002               	movlw	2
 19452  159F  0140               	movlb	0	; select bank0
 19453  15A0  00BA               	movwf	??_initMemRead
 19454  15A1  083A               	movf	??_initMemRead,w
 19455  15A2  0141               	movlb	1	; select bank1
 19456  15A3  00C1               	movwf	_direction^(0+128)
 19457                           
 19458                           ;configuration.c: 192: temp[0] = (uint8_t) (direction);
 19459  15A4  0841               	movf	_direction^(0+128),w
 19460  15A5  0140               	movlb	0	; select bank0
 19461  15A6  00BA               	movwf	??_initMemRead
 19462  15A7  083A               	movf	??_initMemRead,w
 19463  15A8  00C2               	movwf	initMemRead@temp
 19464                           
 19465                           ;configuration.c: 193: incR++;
 19466  15A9  3001               	movlw	1
 19467  15AA  00BA               	movwf	??_initMemRead
 19468  15AB  083A               	movf	??_initMemRead,w
 19469  15AC  07C4               	addwf	initMemRead@incR,f
 19470                           
 19471                           ;configuration.c: 194: eeprom_write(incR , temp[0]);
 19472  15AD  0842               	movf	initMemRead@temp,w
 19473  15AE  00BA               	movwf	??_initMemRead
 19474  15AF  083A               	movf	??_initMemRead,w
 19475  15B0  00A0               	movwf	eeprom_write@value
 19476  15B1  0844               	movf	initMemRead@incR,w
 19477  15B2  31A2  22BC  3194   	fcall	_eeprom_write
 19478                           
 19479                           ;configuration.c: 195: _delay((unsigned long)(((3))*(8000000/4000.0)));
 19480  15B5  3008               	movlw	8
 19481  15B6  0140               	movlb	0	; select bank0
 19482  15B7  00BA               	movwf	??_initMemRead
 19483  15B8  30C9               	movlw	201
 19484  15B9                     u7957:	
 19485  15B9  0B89               	decfsz	9,f
 19486  15BA  2DB9               	goto	u7957
 19487  15BB  0BBA               	decfsz	??_initMemRead,f
 19488  15BC  2DB9               	goto	u7957
 19489  15BD  3200               	nop2
 19490                           
 19491                           ;configuration.c: 197: doorStatus = 0;
 19492  15BE  0142               	movlb	2	; select bank2
 19493  15BF  01E5               	clrf	_doorStatus^(0+256)
 19494                           
 19495                           ;configuration.c: 199: eeprom_write(0x29 , doorStatus);
 19496  15C0  0865               	movf	_doorStatus^(0+256),w
 19497  15C1  0140               	movlb	0	; select bank0
 19498  15C2  00BA               	movwf	??_initMemRead
 19499  15C3  083A               	movf	??_initMemRead,w
 19500  15C4  00A0               	movwf	eeprom_write@value
 19501  15C5  3029               	movlw	41
 19502  15C6  31A2  22BC  3194   	fcall	_eeprom_write
 19503                           
 19504                           ;configuration.c: 200: _delay((unsigned long)(((3))*(8000000/4000.0)));
 19505  15C9  3008               	movlw	8
 19506  15CA  0140               	movlb	0	; select bank0
 19507  15CB  00BA               	movwf	??_initMemRead
 19508  15CC  30C9               	movlw	201
 19509  15CD                     u7967:	
 19510  15CD  0B89               	decfsz	9,f
 19511  15CE  2DCD               	goto	u7967
 19512  15CF  0BBA               	decfsz	??_initMemRead,f
 19513  15D0  2DCD               	goto	u7967
 19514  15D1  3200               	nop2
 19515                           
 19516                           ;configuration.c: 203: antiClockWiseTime = (1290);
 19517  15D2  3000               	movlw	0
 19518  15D3  0141               	movlb	1	; select bank1
 19519  15D4  00CB               	movwf	(_antiClockWiseTime+3)^(0+128)
 19520  15D5  3000               	movlw	0
 19521  15D6  00CA               	movwf	(_antiClockWiseTime+2)^(0+128)
 19522  15D7  3005               	movlw	5
 19523  15D8  00C9               	movwf	(_antiClockWiseTime+1)^(0+128)
 19524  15D9  300A               	movlw	10
 19525  15DA  00C8               	movwf	_antiClockWiseTime^(0+128)
 19526                           
 19527                           ;configuration.c: 204: temp[0] = (uint8_t) (antiClockWiseTime);
 19528  15DB  0848               	movf	_antiClockWiseTime^(0+128),w
 19529  15DC  0140               	movlb	0	; select bank0
 19530  15DD  00BA               	movwf	??_initMemRead
 19531  15DE  083A               	movf	??_initMemRead,w
 19532  15DF  00C2               	movwf	initMemRead@temp
 19533                           
 19534                           ;configuration.c: 205: temp[1] = (uint8_t) (antiClockWiseTime >> 8);
 19535  15E0  0141               	movlb	1	; select bank1
 19536  15E1  0848               	movf	_antiClockWiseTime^(0+128),w
 19537  15E2  0140               	movlb	0	; select bank0
 19538  15E3  00BA               	movwf	??_initMemRead
 19539  15E4  0141               	movlb	1	; select bank1
 19540  15E5  0849               	movf	(_antiClockWiseTime+1)^(0+128),w
 19541  15E6  0140               	movlb	0	; select bank0
 19542  15E7  00BB               	movwf	??_initMemRead+1
 19543  15E8  0141               	movlb	1	; select bank1
 19544  15E9  084A               	movf	(_antiClockWiseTime+2)^(0+128),w
 19545  15EA  0140               	movlb	0	; select bank0
 19546  15EB  00BC               	movwf	??_initMemRead+2
 19547  15EC  0141               	movlb	1	; select bank1
 19548  15ED  084B               	movf	(_antiClockWiseTime+3)^(0+128),w
 19549  15EE  0140               	movlb	0	; select bank0
 19550  15EF  00BD               	movwf	??_initMemRead+3
 19551  15F0  3008               	movlw	8
 19552  15F1  00BE               	movwf	??_initMemRead+4
 19553  15F2                     u6365:	
 19554  15F2  37BD               	asrf	??_initMemRead+3,f
 19555  15F3  0CBC               	rrf	??_initMemRead+2,f
 19556  15F4  0CBB               	rrf	??_initMemRead+1,f
 19557  15F5  0CBA               	rrf	??_initMemRead,f
 19558  15F6  0BBE               	decfsz	??_initMemRead+4,f
 19559  15F7  2DF2               	goto	u6365
 19560  15F8  083A               	movf	??_initMemRead,w
 19561  15F9  00BF               	movwf	??_initMemRead+5
 19562  15FA  083F               	movf	??_initMemRead+5,w
 19563  15FB  00C3               	movwf	initMemRead@temp+1
 19564                           
 19565                           ;configuration.c: 207: antiClockWiseTime = 0;
 19566  15FC  3000               	movlw	0
 19567  15FD  0141               	movlb	1	; select bank1
 19568  15FE  00CB               	movwf	(_antiClockWiseTime+3)^(0+128)
 19569  15FF  3000               	movlw	0
 19570  1600  00CA               	movwf	(_antiClockWiseTime+2)^(0+128)
 19571  1601  3000               	movlw	0
 19572  1602  00C9               	movwf	(_antiClockWiseTime+1)^(0+128)
 19573  1603  3000               	movlw	0
 19574  1604  00C8               	movwf	_antiClockWiseTime^(0+128)
 19575                           
 19576                           ;configuration.c: 209: incR = 0x34;
 19577  1605  3034               	movlw	52
 19578  1606  0140               	movlb	0	; select bank0
 19579  1607  00BA               	movwf	??_initMemRead
 19580  1608  083A               	movf	??_initMemRead,w
 19581  1609  00C4               	movwf	initMemRead@incR
 19582                           
 19583                           ;configuration.c: 211: eeprom_write(incR , temp[0]);
 19584  160A  0842               	movf	initMemRead@temp,w
 19585  160B  00BA               	movwf	??_initMemRead
 19586  160C  083A               	movf	??_initMemRead,w
 19587  160D  00A0               	movwf	eeprom_write@value
 19588  160E  0844               	movf	initMemRead@incR,w
 19589  160F  31A2  22BC  3194   	fcall	_eeprom_write
 19590                           
 19591                           ;configuration.c: 212: _delay((unsigned long)(((3))*(8000000/4000.0)));
 19592  1612  3008               	movlw	8
 19593  1613  0140               	movlb	0	; select bank0
 19594  1614  00BA               	movwf	??_initMemRead
 19595  1615  30C9               	movlw	201
 19596  1616                     u7977:	
 19597  1616  0B89               	decfsz	9,f
 19598  1617  2E16               	goto	u7977
 19599  1618  0BBA               	decfsz	??_initMemRead,f
 19600  1619  2E16               	goto	u7977
 19601  161A  3200               	nop2
 19602                           
 19603                           ;configuration.c: 213: incR++;
 19604  161B  3001               	movlw	1
 19605  161C  0140               	movlb	0	; select bank0
 19606  161D  00BA               	movwf	??_initMemRead
 19607  161E  083A               	movf	??_initMemRead,w
 19608  161F  07C4               	addwf	initMemRead@incR,f
 19609                           
 19610                           ;configuration.c: 214: eeprom_write(incR, temp[1]);
 19611  1620  0843               	movf	initMemRead@temp+1,w
 19612  1621  00BA               	movwf	??_initMemRead
 19613  1622  083A               	movf	??_initMemRead,w
 19614  1623  00A0               	movwf	eeprom_write@value
 19615  1624  0844               	movf	initMemRead@incR,w
 19616  1625  31A2  22BC  3194   	fcall	_eeprom_write
 19617                           
 19618                           ;configuration.c: 215: _delay((unsigned long)(((3))*(8000000/4000.0)));
 19619  1628  3008               	movlw	8
 19620  1629  0140               	movlb	0	; select bank0
 19621  162A  00BA               	movwf	??_initMemRead
 19622  162B  30C9               	movlw	201
 19623  162C                     u7987:	
 19624  162C  0B89               	decfsz	9,f
 19625  162D  2E2C               	goto	u7987
 19626  162E  0BBA               	decfsz	??_initMemRead,f
 19627  162F  2E2C               	goto	u7987
 19628  1630  3200               	nop2
 19629  1631                     l9679:	
 19630                           
 19631                           ;configuration.c: 217: }
 19632                           ;configuration.c: 222: incR = (0x05);
 19633  1631  3005               	movlw	5
 19634  1632  0140               	movlb	0	; select bank0
 19635  1633  00BA               	movwf	??_initMemRead
 19636  1634  083A               	movf	??_initMemRead,w
 19637  1635  00C4               	movwf	initMemRead@incR
 19638                           
 19639                           ;configuration.c: 223: var[0] = eeprom_read(incR);
 19640  1636  0844               	movf	initMemRead@incR,w
 19641  1637  31A1  2129  3194   	fcall	_eeprom_read
 19642  163A  0140               	movlb	0	; select bank0
 19643  163B  00BA               	movwf	??_initMemRead
 19644  163C  083A               	movf	??_initMemRead,w
 19645  163D  00C0               	movwf	initMemRead@var
 19646                           
 19647                           ;configuration.c: 224: _delay((unsigned long)(((3))*(8000000/4000.0)));
 19648  163E  3008               	movlw	8
 19649  163F  0140               	movlb	0	; select bank0
 19650  1640  00BA               	movwf	??_initMemRead
 19651  1641  30C9               	movlw	201
 19652  1642                     u7997:	
 19653  1642  0B89               	decfsz	9,f
 19654  1643  2E42               	goto	u7997
 19655  1644  0BBA               	decfsz	??_initMemRead,f
 19656  1645  2E42               	goto	u7997
 19657  1646  3200               	nop2
 19658                           
 19659                           ;configuration.c: 226: incR++;
 19660  1647  3001               	movlw	1
 19661  1648  0140               	movlb	0	; select bank0
 19662  1649  00BA               	movwf	??_initMemRead
 19663  164A  083A               	movf	??_initMemRead,w
 19664  164B  07C4               	addwf	initMemRead@incR,f
 19665                           
 19666                           ;configuration.c: 228: var[0] = eeprom_read(incR);
 19667  164C  0844               	movf	initMemRead@incR,w
 19668  164D  31A1  2129  3194   	fcall	_eeprom_read
 19669  1650  0140               	movlb	0	; select bank0
 19670  1651  00BA               	movwf	??_initMemRead
 19671  1652  083A               	movf	??_initMemRead,w
 19672  1653  00C0               	movwf	initMemRead@var
 19673                           
 19674                           ;configuration.c: 229: _delay((unsigned long)(((3))*(8000000/4000.0)));
 19675  1654  3008               	movlw	8
 19676  1655  0140               	movlb	0	; select bank0
 19677  1656  00BA               	movwf	??_initMemRead
 19678  1657  30C9               	movlw	201
 19679  1658                     u8007:	
 19680  1658  0B89               	decfsz	9,f
 19681  1659  2E58               	goto	u8007
 19682  165A  0BBA               	decfsz	??_initMemRead,f
 19683  165B  2E58               	goto	u8007
 19684  165C  3200               	nop2
 19685                           
 19686                           ;configuration.c: 231: incR++;
 19687  165D  3001               	movlw	1
 19688  165E  0140               	movlb	0	; select bank0
 19689  165F  00BA               	movwf	??_initMemRead
 19690  1660  083A               	movf	??_initMemRead,w
 19691  1661  07C4               	addwf	initMemRead@incR,f
 19692                           
 19693                           ;configuration.c: 233: var[1] = eeprom_read(incR);
 19694  1662  0844               	movf	initMemRead@incR,w
 19695  1663  31A1  2129  3194   	fcall	_eeprom_read
 19696  1666  0140               	movlb	0	; select bank0
 19697  1667  00BA               	movwf	??_initMemRead
 19698  1668  083A               	movf	??_initMemRead,w
 19699  1669  00C1               	movwf	initMemRead@var+1
 19700                           
 19701                           ;configuration.c: 234: _delay((unsigned long)(((3))*(8000000/4000.0)));
 19702  166A  3008               	movlw	8
 19703  166B  0140               	movlb	0	; select bank0
 19704  166C  00BA               	movwf	??_initMemRead
 19705  166D  30C9               	movlw	201
 19706  166E                     u8017:	
 19707  166E  0B89               	decfsz	9,f
 19708  166F  2E6E               	goto	u8017
 19709  1670  0BBA               	decfsz	??_initMemRead,f
 19710  1671  2E6E               	goto	u8017
 19711  1672  3200               	nop2
 19712                           
 19713                           ;configuration.c: 236: speedRpm = (uint16_t)((var[1] << 8) | var[0]);
 19714  1673  0140               	movlb	0	; select bank0
 19715  1674  0840               	movf	initMemRead@var,w
 19716  1675  00BA               	movwf	??_initMemRead
 19717  1676  01BB               	clrf	??_initMemRead+1
 19718  1677  0841               	movf	initMemRead@var+1,w
 19719  1678  00BC               	movwf	??_initMemRead+2
 19720  1679  01BD               	clrf	??_initMemRead+3
 19721  167A  083C               	movf	??_initMemRead+2,w
 19722  167B  00BD               	movwf	??_initMemRead+3
 19723  167C  01BC               	clrf	??_initMemRead+2
 19724  167D  083A               	movf	??_initMemRead,w
 19725  167E  043C               	iorwf	??_initMemRead+2,w
 19726  167F  0141               	movlb	1	; select bank1
 19727  1680  00BF               	movwf	_speedRpm^(0+128)
 19728  1681  0140               	movlb	0	; select bank0
 19729  1682  083B               	movf	??_initMemRead+1,w
 19730  1683  043D               	iorwf	??_initMemRead+3,w
 19731  1684  0141               	movlb	1	; select bank1
 19732  1685  00C0               	movwf	(_speedRpm+1)^(0+128)
 19733                           
 19734                           ;configuration.c: 238: lcd(((0xC0) + (0)),(0));
 19735  1686  0140               	movlb	0	; select bank0
 19736  1687  01A9               	clrf	lcd@b
 19737  1688  30C0               	movlw	192
 19738  1689  31A4  245E  3194   	fcall	_lcd
 19739                           
 19740                           ;configuration.c: 239: number_3(speedRpm);
 19741  168C  0141               	movlb	1	; select bank1
 19742  168D  0840               	movf	(_speedRpm+1)^(0+128),w
 19743  168E  0140               	movlb	0	; select bank0
 19744  168F  00AD               	movwf	number_3@num+1
 19745  1690  0141               	movlb	1	; select bank1
 19746  1691  083F               	movf	_speedRpm^(0+128),w
 19747  1692  0140               	movlb	0	; select bank0
 19748  1693  00AC               	movwf	number_3@num
 19749  1694  31A6  26BB  3194   	fcall	_number_3
 19750                           
 19751                           ;configuration.c: 242: incR++;
 19752  1697  3001               	movlw	1
 19753  1698  0140               	movlb	0	; select bank0
 19754  1699  00BA               	movwf	??_initMemRead
 19755  169A  083A               	movf	??_initMemRead,w
 19756  169B  07C4               	addwf	initMemRead@incR,f
 19757                           
 19758                           ;configuration.c: 244: var[0] = eeprom_read(incR);
 19759  169C  0844               	movf	initMemRead@incR,w
 19760  169D  31A1  2129  3194   	fcall	_eeprom_read
 19761  16A0  0140               	movlb	0	; select bank0
 19762  16A1  00BA               	movwf	??_initMemRead
 19763  16A2  083A               	movf	??_initMemRead,w
 19764  16A3  00C0               	movwf	initMemRead@var
 19765                           
 19766                           ;configuration.c: 245: _delay((unsigned long)(((3))*(8000000/4000.0)));
 19767  16A4  3008               	movlw	8
 19768  16A5  0140               	movlb	0	; select bank0
 19769  16A6  00BA               	movwf	??_initMemRead
 19770  16A7  30C9               	movlw	201
 19771  16A8                     u8027:	
 19772  16A8  0B89               	decfsz	9,f
 19773  16A9  2EA8               	goto	u8027
 19774  16AA  0BBA               	decfsz	??_initMemRead,f
 19775  16AB  2EA8               	goto	u8027
 19776  16AC  3200               	nop2
 19777                           
 19778                           ;configuration.c: 247: incR++;
 19779  16AD  3001               	movlw	1
 19780  16AE  0140               	movlb	0	; select bank0
 19781  16AF  00BA               	movwf	??_initMemRead
 19782  16B0  083A               	movf	??_initMemRead,w
 19783  16B1  07C4               	addwf	initMemRead@incR,f
 19784                           
 19785                           ;configuration.c: 249: var[1] = eeprom_read(incR);
 19786  16B2  0844               	movf	initMemRead@incR,w
 19787  16B3  31A1  2129  3194   	fcall	_eeprom_read
 19788  16B6  0140               	movlb	0	; select bank0
 19789  16B7  00BA               	movwf	??_initMemRead
 19790  16B8  083A               	movf	??_initMemRead,w
 19791  16B9  00C1               	movwf	initMemRead@var+1
 19792                           
 19793                           ;configuration.c: 250: _delay((unsigned long)(((3))*(8000000/4000.0)));
 19794  16BA  3008               	movlw	8
 19795  16BB  0140               	movlb	0	; select bank0
 19796  16BC  00BA               	movwf	??_initMemRead
 19797  16BD  30C9               	movlw	201
 19798  16BE                     u8037:	
 19799  16BE  0B89               	decfsz	9,f
 19800  16BF  2EBE               	goto	u8037
 19801  16C0  0BBA               	decfsz	??_initMemRead,f
 19802  16C1  2EBE               	goto	u8037
 19803  16C2  3200               	nop2
 19804                           
 19805                           ;configuration.c: 252: clockWiseTime = (uint16_t)((var[1] << 8) | var[0]);
 19806  16C3  0140               	movlb	0	; select bank0
 19807  16C4  0840               	movf	initMemRead@var,w
 19808  16C5  00BA               	movwf	??_initMemRead
 19809  16C6  01BB               	clrf	??_initMemRead+1
 19810  16C7  0841               	movf	initMemRead@var+1,w
 19811  16C8  00BC               	movwf	??_initMemRead+2
 19812  16C9  01BD               	clrf	??_initMemRead+3
 19813  16CA  083C               	movf	??_initMemRead+2,w
 19814  16CB  00BD               	movwf	??_initMemRead+3
 19815  16CC  01BC               	clrf	??_initMemRead+2
 19816  16CD  083A               	movf	??_initMemRead,w
 19817  16CE  043C               	iorwf	??_initMemRead+2,w
 19818  16CF  0141               	movlb	1	; select bank1
 19819  16D0  00CC               	movwf	_clockWiseTime^(0+128)
 19820  16D1  0140               	movlb	0	; select bank0
 19821  16D2  083B               	movf	??_initMemRead+1,w
 19822  16D3  043D               	iorwf	??_initMemRead+3,w
 19823  16D4  0141               	movlb	1	; select bank1
 19824  16D5  00CD               	movwf	(_clockWiseTime+1)^(0+128)
 19825  16D6  01CE               	clrf	(_clockWiseTime+2)^(0+128)
 19826  16D7  01CF               	clrf	(_clockWiseTime+3)^(0+128)
 19827                           
 19828                           ;configuration.c: 254: lcd(((0xC0) + (4)),(0));
 19829  16D8  0140               	movlb	0	; select bank0
 19830  16D9  01A9               	clrf	lcd@b
 19831  16DA  30C4               	movlw	196
 19832  16DB  31A4  245E  3194   	fcall	_lcd
 19833                           
 19834                           ;configuration.c: 255: number_3(clockWiseTime);
 19835  16DE  0141               	movlb	1	; select bank1
 19836  16DF  084D               	movf	(_clockWiseTime+1)^(0+128),w
 19837  16E0  0140               	movlb	0	; select bank0
 19838  16E1  00AD               	movwf	number_3@num+1
 19839  16E2  0141               	movlb	1	; select bank1
 19840  16E3  084C               	movf	_clockWiseTime^(0+128),w
 19841  16E4  0140               	movlb	0	; select bank0
 19842  16E5  00AC               	movwf	number_3@num
 19843  16E6  31A6  26BB  3194   	fcall	_number_3
 19844                           
 19845                           ;configuration.c: 258: incR++;
 19846  16E9  3001               	movlw	1
 19847  16EA  0140               	movlb	0	; select bank0
 19848  16EB  00BA               	movwf	??_initMemRead
 19849  16EC  083A               	movf	??_initMemRead,w
 19850  16ED  07C4               	addwf	initMemRead@incR,f
 19851                           
 19852                           ;configuration.c: 260: var[0] = eeprom_read(incR);
 19853  16EE  0844               	movf	initMemRead@incR,w
 19854  16EF  31A1  2129  3194   	fcall	_eeprom_read
 19855  16F2  0140               	movlb	0	; select bank0
 19856  16F3  00BA               	movwf	??_initMemRead
 19857  16F4  083A               	movf	??_initMemRead,w
 19858  16F5  00C0               	movwf	initMemRead@var
 19859                           
 19860                           ;configuration.c: 261: _delay((unsigned long)(((3))*(8000000/4000.0)));
 19861  16F6  3008               	movlw	8
 19862  16F7  0140               	movlb	0	; select bank0
 19863  16F8  00BA               	movwf	??_initMemRead
 19864  16F9  30C9               	movlw	201
 19865  16FA                     u8047:	
 19866  16FA  0B89               	decfsz	9,f
 19867  16FB  2EFA               	goto	u8047
 19868  16FC  0BBA               	decfsz	??_initMemRead,f
 19869  16FD  2EFA               	goto	u8047
 19870  16FE  3200               	nop2
 19871                           
 19872                           ;configuration.c: 263: incR++;
 19873  16FF  3001               	movlw	1
 19874  1700  0140               	movlb	0	; select bank0
 19875  1701  00BA               	movwf	??_initMemRead
 19876  1702  083A               	movf	??_initMemRead,w
 19877  1703  07C4               	addwf	initMemRead@incR,f
 19878                           
 19879                           ;configuration.c: 265: var[1] = eeprom_read(incR);
 19880  1704  0844               	movf	initMemRead@incR,w
 19881  1705  31A1  2129  3194   	fcall	_eeprom_read
 19882  1708  0140               	movlb	0	; select bank0
 19883  1709  00BA               	movwf	??_initMemRead
 19884  170A  083A               	movf	??_initMemRead,w
 19885  170B  00C1               	movwf	initMemRead@var+1
 19886                           
 19887                           ;configuration.c: 266: _delay((unsigned long)(((3))*(8000000/4000.0)));
 19888  170C  3008               	movlw	8
 19889  170D  0140               	movlb	0	; select bank0
 19890  170E  00BA               	movwf	??_initMemRead
 19891  170F  30C9               	movlw	201
 19892  1710                     u8057:	
 19893  1710  0B89               	decfsz	9,f
 19894  1711  2F10               	goto	u8057
 19895  1712  0BBA               	decfsz	??_initMemRead,f
 19896  1713  2F10               	goto	u8057
 19897  1714  3200               	nop2
 19898                           
 19899                           ;configuration.c: 268: antiClockWiseTime = (uint16_t)((var[1] << 8) | var[0]);
 19900  1715  0140               	movlb	0	; select bank0
 19901  1716  0840               	movf	initMemRead@var,w
 19902  1717  00BA               	movwf	??_initMemRead
 19903  1718  01BB               	clrf	??_initMemRead+1
 19904  1719  0841               	movf	initMemRead@var+1,w
 19905  171A  00BC               	movwf	??_initMemRead+2
 19906  171B  01BD               	clrf	??_initMemRead+3
 19907  171C  083C               	movf	??_initMemRead+2,w
 19908  171D  00BD               	movwf	??_initMemRead+3
 19909  171E  01BC               	clrf	??_initMemRead+2
 19910  171F  083A               	movf	??_initMemRead,w
 19911  1720  043C               	iorwf	??_initMemRead+2,w
 19912  1721  0141               	movlb	1	; select bank1
 19913  1722  00C8               	movwf	_antiClockWiseTime^(0+128)
 19914  1723  0140               	movlb	0	; select bank0
 19915  1724  083B               	movf	??_initMemRead+1,w
 19916  1725  043D               	iorwf	??_initMemRead+3,w
 19917  1726  0141               	movlb	1	; select bank1
 19918  1727  00C9               	movwf	(_antiClockWiseTime+1)^(0+128)
 19919  1728  01CA               	clrf	(_antiClockWiseTime+2)^(0+128)
 19920  1729  01CB               	clrf	(_antiClockWiseTime+3)^(0+128)
 19921                           
 19922                           ;configuration.c: 270: lcd(((0xC0) + (8)),(0));
 19923  172A  0140               	movlb	0	; select bank0
 19924  172B  01A9               	clrf	lcd@b
 19925  172C  30C8               	movlw	200
 19926  172D  31A4  245E  3194   	fcall	_lcd
 19927                           
 19928                           ;configuration.c: 271: number_3(antiClockWiseTime);
 19929  1730  0141               	movlb	1	; select bank1
 19930  1731  0849               	movf	(_antiClockWiseTime+1)^(0+128),w
 19931  1732  0140               	movlb	0	; select bank0
 19932  1733  00AD               	movwf	number_3@num+1
 19933  1734  0141               	movlb	1	; select bank1
 19934  1735  0848               	movf	_antiClockWiseTime^(0+128),w
 19935  1736  0140               	movlb	0	; select bank0
 19936  1737  00AC               	movwf	number_3@num
 19937  1738  31A6  26BB  3194   	fcall	_number_3
 19938                           
 19939                           ;configuration.c: 274: incR++;
 19940  173B  3001               	movlw	1
 19941  173C  0140               	movlb	0	; select bank0
 19942  173D  00BA               	movwf	??_initMemRead
 19943  173E  083A               	movf	??_initMemRead,w
 19944  173F  07C4               	addwf	initMemRead@incR,f
 19945                           
 19946                           ;configuration.c: 276: holdTime = eeprom_read(incR);
 19947  1740  0844               	movf	initMemRead@incR,w
 19948  1741  31A1  2129  3194   	fcall	_eeprom_read
 19949  1744  0140               	movlb	0	; select bank0
 19950  1745  00BA               	movwf	??_initMemRead
 19951  1746  083A               	movf	??_initMemRead,w
 19952  1747  0141               	movlb	1	; select bank1
 19953  1748  00C2               	movwf	_holdTime^(0+128)
 19954                           
 19955                           ;configuration.c: 277: _delay((unsigned long)(((3))*(8000000/4000.0)));
 19956  1749  3008               	movlw	8
 19957  174A  0140               	movlb	0	; select bank0
 19958  174B  00BA               	movwf	??_initMemRead
 19959  174C  30C9               	movlw	201
 19960  174D                     u8067:	
 19961  174D  0B89               	decfsz	9,f
 19962  174E  2F4D               	goto	u8067
 19963  174F  0BBA               	decfsz	??_initMemRead,f
 19964  1750  2F4D               	goto	u8067
 19965  1751  3200               	nop2
 19966                           
 19967                           ;configuration.c: 279: lcd(((0xC0) + (12)),(0));
 19968  1752  0140               	movlb	0	; select bank0
 19969  1753  01A9               	clrf	lcd@b
 19970  1754  30CC               	movlw	204
 19971  1755  31A4  245E  3194   	fcall	_lcd
 19972                           
 19973                           ;configuration.c: 280: number_2(holdTime);
 19974  1758  0141               	movlb	1	; select bank1
 19975  1759  0842               	movf	_holdTime^(0+128),w
 19976  175A  31A3  239E  3194   	fcall	_number_2
 19977                           
 19978                           ;configuration.c: 283: incR++;
 19979  175D  3001               	movlw	1
 19980  175E  0140               	movlb	0	; select bank0
 19981  175F  00BA               	movwf	??_initMemRead
 19982  1760  083A               	movf	??_initMemRead,w
 19983  1761  07C4               	addwf	initMemRead@incR,f
 19984                           
 19985                           ;configuration.c: 285: direction = eeprom_read(incR);
 19986  1762  0844               	movf	initMemRead@incR,w
 19987  1763  31A1  2129  3194   	fcall	_eeprom_read
 19988  1766  0140               	movlb	0	; select bank0
 19989  1767  00BA               	movwf	??_initMemRead
 19990  1768  083A               	movf	??_initMemRead,w
 19991  1769  0141               	movlb	1	; select bank1
 19992  176A  00C1               	movwf	_direction^(0+128)
 19993                           
 19994                           ;configuration.c: 286: _delay((unsigned long)(((3))*(8000000/4000.0)));
 19995  176B  3008               	movlw	8
 19996  176C  0140               	movlb	0	; select bank0
 19997  176D  00BA               	movwf	??_initMemRead
 19998  176E  30C9               	movlw	201
 19999  176F                     u8077:	
 20000  176F  0B89               	decfsz	9,f
 20001  1770  2F6F               	goto	u8077
 20002  1771  0BBA               	decfsz	??_initMemRead,f
 20003  1772  2F6F               	goto	u8077
 20004  1773  3200               	nop2
 20005                           
 20006                           ;configuration.c: 290: switch(direction)
 20007  1774  2F9C               	goto	l9763
 20008  1775                     l9755:	
 20009                           ;configuration.c: 291: {
 20010                           ;configuration.c: 292: case CLOCKWISE:
 20011                           
 20012                           
 20013                           ;configuration.c: 293: display((char *)"C",(0xC0) + (15));
 20014  1775  30BC               	movlw	low (STR_16| (0+32768))
 20015  1776  0140               	movlb	0	; select bank0
 20016  1777  00AC               	movwf	display@a
 20017  1778  30A8               	movlw	high (STR_16| (0+32768))
 20018  1779  00AD               	movwf	display@a+1
 20019  177A  30CF               	movlw	207
 20020  177B  00BA               	movwf	??_initMemRead
 20021  177C  083A               	movf	??_initMemRead,w
 20022  177D  00AE               	movwf	display@add
 20023  177E  31A2  2297  3194   	fcall	_display
 20024                           
 20025                           ;configuration.c: 294: break;
 20026  1781  2FA8               	goto	l9765
 20027  1782                     l9757:	
 20028                           ;configuration.c: 295: case ANTICLOCKWISE:
 20029                           
 20030                           
 20031                           ;configuration.c: 296: display((char *)"A",(0xC0) + (15));
 20032  1782  30BA               	movlw	low (STR_17| (0+32768))
 20033  1783  0140               	movlb	0	; select bank0
 20034  1784  00AC               	movwf	display@a
 20035  1785  30A8               	movlw	high (STR_17| (0+32768))
 20036  1786  00AD               	movwf	display@a+1
 20037  1787  30CF               	movlw	207
 20038  1788  00BA               	movwf	??_initMemRead
 20039  1789  083A               	movf	??_initMemRead,w
 20040  178A  00AE               	movwf	display@add
 20041  178B  31A2  2297  3194   	fcall	_display
 20042                           
 20043                           ;configuration.c: 297: break;
 20044  178E  2FA8               	goto	l9765
 20045  178F                     l9759:	
 20046                           ;configuration.c: 299: default:
 20047                           
 20048                           ;configuration.c: 298: case STOP:
 20049                           
 20050                           
 20051                           ;configuration.c: 300: display((char *)"S",(0xC0) + (15));
 20052  178F  30BE               	movlw	low (STR_15| (0+32768))
 20053  1790  0140               	movlb	0	; select bank0
 20054  1791  00AC               	movwf	display@a
 20055  1792  30A8               	movlw	high (STR_15| (0+32768))
 20056  1793  00AD               	movwf	display@a+1
 20057  1794  30CF               	movlw	207
 20058  1795  00BA               	movwf	??_initMemRead
 20059  1796  083A               	movf	??_initMemRead,w
 20060  1797  00AE               	movwf	display@add
 20061  1798  31A2  2297  3194   	fcall	_display
 20062                           
 20063                           ;configuration.c: 302: }
 20064                           
 20065                           ;configuration.c: 301: break;
 20066  179B  2FA8               	goto	l9765
 20067  179C                     l9763:	
 20068  179C  0141               	movlb	1	; select bank1
 20069  179D  0841               	movf	_direction^(0+128),w
 20070                           
 20071                           ; Switch size 1, requested type "space"
 20072                           ; Number of cases is 3, Range of values is 0 to 2
 20073                           ; switch strategies available:
 20074                           ; Name         Instructions Cycles
 20075                           ; simple_byte           10     6 (average)
 20076                           ; direct_byte           12     6 (fixed)
 20077                           ; jumptable            260     6 (fixed)
 20078                           ;	Chosen strategy is simple_byte
 20079  179E  3A00               	xorlw	0	; case 0
 20080  179F  1903               	skipnz
 20081  17A0  2F75               	goto	l9755
 20082  17A1  3A01               	xorlw	1	; case 1
 20083  17A2  1903               	skipnz
 20084  17A3  2F82               	goto	l9757
 20085  17A4  3A03               	xorlw	3	; case 2
 20086  17A5  1903               	skipnz
 20087  17A6  2F8F               	goto	l9759
 20088  17A7  2F8F               	goto	l9759
 20089  17A8                     l9765:	
 20090                           
 20091                           ;configuration.c: 304: doorStatus = eeprom_read(0x29);
 20092  17A8  3029               	movlw	41
 20093  17A9  31A1  2129  3194   	fcall	_eeprom_read
 20094  17AC  0140               	movlb	0	; select bank0
 20095  17AD  00BA               	movwf	??_initMemRead
 20096  17AE  083A               	movf	??_initMemRead,w
 20097  17AF  0142               	movlb	2	; select bank2
 20098  17B0  00E5               	movwf	_doorStatus^(0+256)
 20099                           
 20100                           ;configuration.c: 305: _delay((unsigned long)(((3))*(8000000/4000.0)));
 20101  17B1  3008               	movlw	8
 20102  17B2  0140               	movlb	0	; select bank0
 20103  17B3  00BA               	movwf	??_initMemRead
 20104  17B4  30C9               	movlw	201
 20105  17B5                     u8087:	
 20106  17B5  0B89               	decfsz	9,f
 20107  17B6  2FB5               	goto	u8087
 20108  17B7  0BBA               	decfsz	??_initMemRead,f
 20109  17B8  2FB5               	goto	u8087
 20110  17B9  3200               	nop2
 20111                           
 20112                           ;configuration.c: 307: if(doorStatus)
 20113  17BA  0142               	movlb	2	; select bank2
 20114  17BB  0865               	movf	_doorStatus^(0+256),w
 20115  17BC  1903               	btfsc	3,2
 20116  17BD  0008               	return
 20117                           
 20118                           ;configuration.c: 308: {
 20119                           ;configuration.c: 309: incR = 0x34;
 20120  17BE  3034               	movlw	52
 20121  17BF  0140               	movlb	0	; select bank0
 20122  17C0  00BA               	movwf	??_initMemRead
 20123  17C1  083A               	movf	??_initMemRead,w
 20124  17C2  00C4               	movwf	initMemRead@incR
 20125                           
 20126                           ;configuration.c: 310: var[0] = eeprom_read(incR);
 20127  17C3  0844               	movf	initMemRead@incR,w
 20128  17C4  31A1  2129  3194   	fcall	_eeprom_read
 20129  17C7  0140               	movlb	0	; select bank0
 20130  17C8  00BA               	movwf	??_initMemRead
 20131  17C9  083A               	movf	??_initMemRead,w
 20132  17CA  00C0               	movwf	initMemRead@var
 20133                           
 20134                           ;configuration.c: 311: _delay((unsigned long)(((3))*(8000000/4000.0)));
 20135  17CB  3008               	movlw	8
 20136  17CC  0140               	movlb	0	; select bank0
 20137  17CD  00BA               	movwf	??_initMemRead
 20138  17CE  30C9               	movlw	201
 20139  17CF                     u8097:	
 20140  17CF  0B89               	decfsz	9,f
 20141  17D0  2FCF               	goto	u8097
 20142  17D1  0BBA               	decfsz	??_initMemRead,f
 20143  17D2  2FCF               	goto	u8097
 20144  17D3  3200               	nop2
 20145                           
 20146                           ;configuration.c: 313: incR++;
 20147  17D4  3001               	movlw	1
 20148  17D5  0140               	movlb	0	; select bank0
 20149  17D6  00BA               	movwf	??_initMemRead
 20150  17D7  083A               	movf	??_initMemRead,w
 20151  17D8  07C4               	addwf	initMemRead@incR,f
 20152                           
 20153                           ;configuration.c: 315: var[1] = eeprom_read(incR);
 20154  17D9  0844               	movf	initMemRead@incR,w
 20155  17DA  31A1  2129  3194   	fcall	_eeprom_read
 20156  17DD  0140               	movlb	0	; select bank0
 20157  17DE  00BA               	movwf	??_initMemRead
 20158  17DF  083A               	movf	??_initMemRead,w
 20159  17E0  00C1               	movwf	initMemRead@var+1
 20160                           
 20161                           ;configuration.c: 316: _delay((unsigned long)(((3))*(8000000/4000.0)));
 20162  17E1  3008               	movlw	8
 20163  17E2  0140               	movlb	0	; select bank0
 20164  17E3  00BA               	movwf	??_initMemRead
 20165  17E4  30C9               	movlw	201
 20166  17E5                     u8107:	
 20167  17E5  0B89               	decfsz	9,f
 20168  17E6  2FE5               	goto	u8107
 20169  17E7  0BBA               	decfsz	??_initMemRead,f
 20170  17E8  2FE5               	goto	u8107
 20171  17E9  3200               	nop2
 20172                           
 20173                           ;configuration.c: 318: antiClockWiseTime = (uint16_t)((var[1] << 8) | var[0]);
 20174  17EA  0140               	movlb	0	; select bank0
 20175  17EB  0840               	movf	initMemRead@var,w
 20176  17EC  00BA               	movwf	??_initMemRead
 20177  17ED  01BB               	clrf	??_initMemRead+1
 20178  17EE  0841               	movf	initMemRead@var+1,w
 20179  17EF  00BC               	movwf	??_initMemRead+2
 20180  17F0  01BD               	clrf	??_initMemRead+3
 20181  17F1  083C               	movf	??_initMemRead+2,w
 20182  17F2  00BD               	movwf	??_initMemRead+3
 20183  17F3  01BC               	clrf	??_initMemRead+2
 20184  17F4  083A               	movf	??_initMemRead,w
 20185  17F5  043C               	iorwf	??_initMemRead+2,w
 20186  17F6  0141               	movlb	1	; select bank1
 20187  17F7  00C8               	movwf	_antiClockWiseTime^(0+128)
 20188  17F8  0140               	movlb	0	; select bank0
 20189  17F9  083B               	movf	??_initMemRead+1,w
 20190  17FA  043D               	iorwf	??_initMemRead+3,w
 20191  17FB  0141               	movlb	1	; select bank1
 20192  17FC  00C9               	movwf	(_antiClockWiseTime+1)^(0+128)
 20193  17FD  01CA               	clrf	(_antiClockWiseTime+2)^(0+128)
 20194  17FE  01CB               	clrf	(_antiClockWiseTime+3)^(0+128)
 20195  17FF  0008               	return
 20196  1800                     __end_of_initMemRead:	
 20197                           
 20198                           	psect	text26
 20199  26BB                     __ptext26:	
 20200 ;; *************** function _number_3 *****************
 20201 ;; Defined at:
 20202 ;;		line 72 in file "lcd.c"
 20203 ;; Parameters:    Size  Location     Type
 20204 ;;  num             2   12[BANK0 ] unsigned int 
 20205 ;; Auto vars:     Size  Location     Type
 20206 ;;  a               2   24[BANK0 ] unsigned int 
 20207 ;;  b               2   22[BANK0 ] unsigned int 
 20208 ;;  temp            2   20[BANK0 ] unsigned int 
 20209 ;;  num3            2   18[BANK0 ] unsigned int 
 20210 ;;  num2            2   16[BANK0 ] unsigned int 
 20211 ;;  num1            2   14[BANK0 ] unsigned int 
 20212 ;; Return value:  Size  Location     Type
 20213 ;;                  1    wreg      void 
 20214 ;; Registers used:
 20215 ;;		wreg, status,2, status,0, pclath, cstack
 20216 ;; Tracked objects:
 20217 ;;		On entry : 0/0
 20218 ;;		On exit  : 0/0
 20219 ;;		Unchanged: 0/0
 20220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 20221 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20222 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20224 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20225 ;;Total ram usage:       14 bytes
 20226 ;; Hardware stack levels used:    1
 20227 ;; Hardware stack levels required when called:    5
 20228 ;; This function calls:
 20229 ;;		___lwdiv
 20230 ;;		___lwmod
 20231 ;;		_lcd
 20232 ;; This function is called by:
 20233 ;;		_outputOn
 20234 ;;		_default_menu
 20235 ;;		_main
 20236 ;;		_serialCommand
 20237 ;;		_initMemRead
 20238 ;; This function uses a non-reentrant model
 20239 ;;
 20240                           
 20241                           
 20242                           ;psect for function _number_3
 20243  26BB                     _number_3:	
 20244                           
 20245                           ;lcd.c: 74: U16 temp;
 20246                           ;lcd.c: 75: U16 a,b;
 20247                           ;lcd.c: 76: U16 num1 = 0x030;
 20248                           
 20249                           ;incstack = 0
 20250                           ; Regs used in _number_3: [wreg+status,2+status,0+pclath+cstack]
 20251  26BB  3030               	movlw	48
 20252  26BC  0140               	movlb	0	; select bank0
 20253  26BD  00AE               	movwf	number_3@num1
 20254  26BE  3000               	movlw	0
 20255  26BF  00AF               	movwf	number_3@num1+1
 20256                           
 20257                           ;lcd.c: 77: U16 num2 = 0x030;
 20258  26C0  3030               	movlw	48
 20259  26C1  00B0               	movwf	number_3@num2
 20260  26C2  3000               	movlw	0
 20261  26C3  00B1               	movwf	number_3@num2+1
 20262                           
 20263                           ;lcd.c: 78: U16 num3 = 0x030;
 20264  26C4  3030               	movlw	48
 20265  26C5  00B2               	movwf	number_3@num3
 20266  26C6  3000               	movlw	0
 20267  26C7  00B3               	movwf	number_3@num3+1
 20268                           
 20269                           ;lcd.c: 80: temp = num;
 20270  26C8  082D               	movf	number_3@num+1,w
 20271  26C9  00B5               	movwf	number_3@temp+1
 20272  26CA  082C               	movf	number_3@num,w
 20273  26CB  00B4               	movwf	number_3@temp
 20274                           
 20275                           ;lcd.c: 82: a=num%(10);
 20276  26CC  300A               	movlw	10
 20277  26CD  00A0               	movwf	___lwmod@divisor
 20278  26CE  3000               	movlw	0
 20279  26CF  00A1               	movwf	___lwmod@divisor+1
 20280  26D0  082D               	movf	number_3@num+1,w
 20281  26D1  00A3               	movwf	___lwmod@dividend+1
 20282  26D2  082C               	movf	number_3@num,w
 20283  26D3  00A2               	movwf	___lwmod@dividend
 20284  26D4  31A3  230C  31A6   	fcall	___lwmod
 20285  26D7  0140               	movlb	0	; select bank0
 20286  26D8  0821               	movf	?___lwmod+1,w
 20287  26D9  00B9               	movwf	number_3@a+1
 20288  26DA  0820               	movf	?___lwmod,w
 20289  26DB  00B8               	movwf	number_3@a
 20290                           
 20291                           ;lcd.c: 83: num/=(10);
 20292  26DC  300A               	movlw	10
 20293  26DD  00A0               	movwf	___lwdiv@divisor
 20294  26DE  3000               	movlw	0
 20295  26DF  00A1               	movwf	___lwdiv@divisor+1
 20296  26E0  082D               	movf	number_3@num+1,w
 20297  26E1  00A3               	movwf	___lwdiv@dividend+1
 20298  26E2  082C               	movf	number_3@num,w
 20299  26E3  00A2               	movwf	___lwdiv@dividend
 20300  26E4  31A3  2369  31A6   	fcall	___lwdiv
 20301  26E7  0140               	movlb	0	; select bank0
 20302  26E8  0821               	movf	?___lwdiv+1,w
 20303  26E9  00AD               	movwf	number_3@num+1
 20304  26EA  0820               	movf	?___lwdiv,w
 20305  26EB  00AC               	movwf	number_3@num
 20306                           
 20307                           ;lcd.c: 84: b=num%(10);
 20308  26EC  300A               	movlw	10
 20309  26ED  00A0               	movwf	___lwmod@divisor
 20310  26EE  3000               	movlw	0
 20311  26EF  00A1               	movwf	___lwmod@divisor+1
 20312  26F0  082D               	movf	number_3@num+1,w
 20313  26F1  00A3               	movwf	___lwmod@dividend+1
 20314  26F2  082C               	movf	number_3@num,w
 20315  26F3  00A2               	movwf	___lwmod@dividend
 20316  26F4  31A3  230C  31A6   	fcall	___lwmod
 20317  26F7  0140               	movlb	0	; select bank0
 20318  26F8  0821               	movf	?___lwmod+1,w
 20319  26F9  00B7               	movwf	number_3@b+1
 20320  26FA  0820               	movf	?___lwmod,w
 20321  26FB  00B6               	movwf	number_3@b
 20322                           
 20323                           ;lcd.c: 85: num/=(10);
 20324  26FC  300A               	movlw	10
 20325  26FD  00A0               	movwf	___lwdiv@divisor
 20326  26FE  3000               	movlw	0
 20327  26FF  00A1               	movwf	___lwdiv@divisor+1
 20328  2700  082D               	movf	number_3@num+1,w
 20329  2701  00A3               	movwf	___lwdiv@dividend+1
 20330  2702  082C               	movf	number_3@num,w
 20331  2703  00A2               	movwf	___lwdiv@dividend
 20332  2704  31A3  2369  31A6   	fcall	___lwdiv
 20333  2707  0140               	movlb	0	; select bank0
 20334  2708  0821               	movf	?___lwdiv+1,w
 20335  2709  00AD               	movwf	number_3@num+1
 20336  270A  0820               	movf	?___lwdiv,w
 20337  270B  00AC               	movwf	number_3@num
 20338                           
 20339                           ;lcd.c: 87: if(temp > 99)
 20340  270C  3000               	movlw	0
 20341  270D  0235               	subwf	number_3@temp+1,w
 20342  270E  3064               	movlw	100
 20343  270F  1903               	skipnz
 20344  2710  0234               	subwf	number_3@temp,w
 20345  2711  1C03               	skipc
 20346  2712  2F1A               	goto	l8433
 20347                           
 20348                           ;lcd.c: 88: {
 20349                           ;lcd.c: 89: num1 = (48)+num;
 20350  2713  082C               	movf	number_3@num,w
 20351  2714  3E30               	addlw	48
 20352  2715  00AE               	movwf	number_3@num1
 20353  2716  3000               	movlw	0
 20354  2717  3D2D               	addwfc	number_3@num+1,w
 20355  2718  00AF               	movwf	number_3@num1+1
 20356  2719  2F21               	goto	l8435
 20357  271A                     l8433:	
 20358                           ;lcd.c: 93: }
 20359                           
 20360                           ;lcd.c: 91: num3 = (48)+a;
 20361                           
 20362                           ;lcd.c: 90: num2 = (48)+b;
 20363                           
 20364                           
 20365                           ;lcd.c: 94: else if(temp > 9)
 20366  271A  3000               	movlw	0
 20367  271B  0235               	subwf	number_3@temp+1,w
 20368  271C  300A               	movlw	10
 20369  271D  1903               	skipnz
 20370  271E  0234               	subwf	number_3@temp,w
 20371  271F  1C03               	skipc
 20372  2720  2F27               	goto	l8437
 20373  2721                     l8435:	
 20374                           
 20375                           ;lcd.c: 95: {
 20376                           ;lcd.c: 98: num2 = (48)+b;
 20377  2721  0836               	movf	number_3@b,w
 20378  2722  3E30               	addlw	48
 20379  2723  00B0               	movwf	number_3@num2
 20380  2724  3000               	movlw	0
 20381  2725  3D37               	addwfc	number_3@b+1,w
 20382  2726  00B1               	movwf	number_3@num2+1
 20383  2727                     l8437:	
 20384                           ;lcd.c: 100: }
 20385                           
 20386                           ;lcd.c: 99: num3 = (48)+a;
 20387                           
 20388                           
 20389                           ;lcd.c: 101: else
 20390                           ;lcd.c: 102: {
 20391                           ;lcd.c: 106: num3 = (48)+a;
 20392  2727  0838               	movf	number_3@a,w
 20393  2728  3E30               	addlw	48
 20394  2729  00B2               	movwf	number_3@num3
 20395  272A  3000               	movlw	0
 20396  272B  3D39               	addwfc	number_3@a+1,w
 20397  272C  00B3               	movwf	number_3@num3+1
 20398                           
 20399                           ;lcd.c: 107: }
 20400                           ;lcd.c: 108: lcd(num1,(1));
 20401  272D  01A9               	clrf	lcd@b
 20402  272E  0AA9               	incf	lcd@b,f
 20403  272F  082E               	movf	number_3@num1,w
 20404  2730  31A4  245E  31A6   	fcall	_lcd
 20405                           
 20406                           ;lcd.c: 109: lcd(num2,(1));
 20407  2733  0140               	movlb	0	; select bank0
 20408  2734  01A9               	clrf	lcd@b
 20409  2735  0AA9               	incf	lcd@b,f
 20410  2736  0830               	movf	number_3@num2,w
 20411  2737  31A4  245E  31A6   	fcall	_lcd
 20412                           
 20413                           ;lcd.c: 110: lcd(num3,(1));
 20414  273A  0140               	movlb	0	; select bank0
 20415  273B  01A9               	clrf	lcd@b
 20416  273C  0AA9               	incf	lcd@b,f
 20417  273D  0832               	movf	number_3@num3,w
 20418  273E  31A4  245E         	fcall	_lcd
 20419  2740  0008               	return
 20420  2741                     __end_of_number_3:	
 20421                           
 20422                           	psect	text27
 20423  230C                     __ptext27:	
 20424 ;; *************** function ___lwmod *****************
 20425 ;; Defined at:
 20426 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwmod.c"
 20427 ;; Parameters:    Size  Location     Type
 20428 ;;  divisor         2    0[BANK0 ] unsigned int 
 20429 ;;  dividend        2    2[BANK0 ] unsigned int 
 20430 ;; Auto vars:     Size  Location     Type
 20431 ;;  counter         1    5[BANK0 ] unsigned char 
 20432 ;; Return value:  Size  Location     Type
 20433 ;;                  2    0[BANK0 ] unsigned int 
 20434 ;; Registers used:
 20435 ;;		wreg, status,2, status,0
 20436 ;; Tracked objects:
 20437 ;;		On entry : 0/0
 20438 ;;		On exit  : 0/0
 20439 ;;		Unchanged: 0/0
 20440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 20441 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20442 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20443 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20444 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20445 ;;Total ram usage:        6 bytes
 20446 ;; Hardware stack levels used:    1
 20447 ;; Hardware stack levels required when called:    4
 20448 ;; This function calls:
 20449 ;;		Nothing
 20450 ;; This function is called by:
 20451 ;;		_number_3
 20452 ;; This function uses a non-reentrant model
 20453 ;;
 20454                           
 20455                           
 20456                           ;psect for function ___lwmod
 20457  230C                     ___lwmod:	
 20458                           
 20459                           ;incstack = 0
 20460                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 20461  230C  0140               	movlb	0	; select bank0
 20462  230D  0820               	movf	___lwmod@divisor,w
 20463  230E  0421               	iorwf	___lwmod@divisor+1,w
 20464  230F  1903               	btfsc	3,2
 20465  2310  2B34               	goto	l8315
 20466  2311  01A5               	clrf	___lwmod@counter
 20467  2312  0AA5               	incf	___lwmod@counter,f
 20468  2313                     l8305:	
 20469  2313  1BA1               	btfsc	___lwmod@divisor+1,7
 20470  2314  2B1F               	goto	l8307
 20471  2315  3001               	movlw	1
 20472  2316                     u5315:	
 20473  2316  35A0               	lslf	___lwmod@divisor,f
 20474  2317  0DA1               	rlf	___lwmod@divisor+1,f
 20475  2318  0B89               	decfsz	9,f
 20476  2319  2B16               	goto	u5315
 20477  231A  3001               	movlw	1
 20478  231B  00A4               	movwf	??___lwmod
 20479  231C  0824               	movf	??___lwmod,w
 20480  231D  07A5               	addwf	___lwmod@counter,f
 20481  231E  2B13               	goto	l8305
 20482  231F                     l8307:	
 20483  231F  0821               	movf	___lwmod@divisor+1,w
 20484  2320  0223               	subwf	___lwmod@dividend+1,w
 20485  2321  1D03               	skipz
 20486  2322  2B25               	goto	u5335
 20487  2323  0820               	movf	___lwmod@divisor,w
 20488  2324  0222               	subwf	___lwmod@dividend,w
 20489  2325                     u5335:	
 20490  2325  1C03               	skipc
 20491  2326  2B2B               	goto	l8311
 20492  2327  0820               	movf	___lwmod@divisor,w
 20493  2328  02A2               	subwf	___lwmod@dividend,f
 20494  2329  0821               	movf	___lwmod@divisor+1,w
 20495  232A  3BA3               	subwfb	___lwmod@dividend+1,f
 20496  232B                     l8311:	
 20497  232B  3001               	movlw	1
 20498  232C                     u5345:	
 20499  232C  36A1               	lsrf	___lwmod@divisor+1,f
 20500  232D  0CA0               	rrf	___lwmod@divisor,f
 20501  232E  0B89               	decfsz	9,f
 20502  232F  2B2C               	goto	u5345
 20503  2330  3001               	movlw	1
 20504  2331  02A5               	subwf	___lwmod@counter,f
 20505  2332  1D03               	btfss	3,2
 20506  2333  2B1F               	goto	l8307
 20507  2334                     l8315:	
 20508  2334  0823               	movf	___lwmod@dividend+1,w
 20509  2335  00A1               	movwf	?___lwmod+1
 20510  2336  0822               	movf	___lwmod@dividend,w
 20511  2337  00A0               	movwf	?___lwmod
 20512  2338  0008               	return
 20513  2339                     __end_of___lwmod:	
 20514                           
 20515                           	psect	text28
 20516  2369                     __ptext28:	
 20517 ;; *************** function ___lwdiv *****************
 20518 ;; Defined at:
 20519 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lwdiv.c"
 20520 ;; Parameters:    Size  Location     Type
 20521 ;;  divisor         2    0[BANK0 ] unsigned int 
 20522 ;;  dividend        2    2[BANK0 ] unsigned int 
 20523 ;; Auto vars:     Size  Location     Type
 20524 ;;  quotient        2    6[BANK0 ] unsigned int 
 20525 ;;  counter         1    5[BANK0 ] unsigned char 
 20526 ;; Return value:  Size  Location     Type
 20527 ;;                  2    0[BANK0 ] unsigned int 
 20528 ;; Registers used:
 20529 ;;		wreg, status,2, status,0
 20530 ;; Tracked objects:
 20531 ;;		On entry : 0/0
 20532 ;;		On exit  : 0/0
 20533 ;;		Unchanged: 0/0
 20534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 20535 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20536 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20537 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20538 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20539 ;;Total ram usage:        8 bytes
 20540 ;; Hardware stack levels used:    1
 20541 ;; Hardware stack levels required when called:    4
 20542 ;; This function calls:
 20543 ;;		Nothing
 20544 ;; This function is called by:
 20545 ;;		_number_3
 20546 ;; This function uses a non-reentrant model
 20547 ;;
 20548                           
 20549                           
 20550                           ;psect for function ___lwdiv
 20551  2369                     ___lwdiv:	
 20552                           
 20553                           ;incstack = 0
 20554                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 20555  2369  0140               	movlb	0	; select bank0
 20556  236A  01A6               	clrf	___lwdiv@quotient
 20557  236B  01A7               	clrf	___lwdiv@quotient+1
 20558  236C  0820               	movf	___lwdiv@divisor,w
 20559  236D  0421               	iorwf	___lwdiv@divisor+1,w
 20560  236E  1903               	btfsc	3,2
 20561  236F  2B99               	goto	l8293
 20562  2370  01A5               	clrf	___lwdiv@counter
 20563  2371  0AA5               	incf	___lwdiv@counter,f
 20564  2372                     l8281:	
 20565  2372  1BA1               	btfsc	___lwdiv@divisor+1,7
 20566  2373  2B7E               	goto	l8283
 20567  2374  3001               	movlw	1
 20568  2375                     u5245:	
 20569  2375  35A0               	lslf	___lwdiv@divisor,f
 20570  2376  0DA1               	rlf	___lwdiv@divisor+1,f
 20571  2377  0B89               	decfsz	9,f
 20572  2378  2B75               	goto	u5245
 20573  2379  3001               	movlw	1
 20574  237A  00A4               	movwf	??___lwdiv
 20575  237B  0824               	movf	??___lwdiv,w
 20576  237C  07A5               	addwf	___lwdiv@counter,f
 20577  237D  2B72               	goto	l8281
 20578  237E                     l8283:	
 20579  237E  3001               	movlw	1
 20580  237F                     u5265:	
 20581  237F  35A6               	lslf	___lwdiv@quotient,f
 20582  2380  0DA7               	rlf	___lwdiv@quotient+1,f
 20583  2381  0B89               	decfsz	9,f
 20584  2382  2B7F               	goto	u5265
 20585  2383  0821               	movf	___lwdiv@divisor+1,w
 20586  2384  0223               	subwf	___lwdiv@dividend+1,w
 20587  2385  1D03               	skipz
 20588  2386  2B89               	goto	u5275
 20589  2387  0820               	movf	___lwdiv@divisor,w
 20590  2388  0222               	subwf	___lwdiv@dividend,w
 20591  2389                     u5275:	
 20592  2389  1C03               	skipc
 20593  238A  2B90               	goto	l8289
 20594  238B  0820               	movf	___lwdiv@divisor,w
 20595  238C  02A2               	subwf	___lwdiv@dividend,f
 20596  238D  0821               	movf	___lwdiv@divisor+1,w
 20597  238E  3BA3               	subwfb	___lwdiv@dividend+1,f
 20598  238F  1426               	bsf	___lwdiv@quotient,0
 20599  2390                     l8289:	
 20600  2390  3001               	movlw	1
 20601  2391                     u5285:	
 20602  2391  36A1               	lsrf	___lwdiv@divisor+1,f
 20603  2392  0CA0               	rrf	___lwdiv@divisor,f
 20604  2393  0B89               	decfsz	9,f
 20605  2394  2B91               	goto	u5285
 20606  2395  3001               	movlw	1
 20607  2396  02A5               	subwf	___lwdiv@counter,f
 20608  2397  1D03               	btfss	3,2
 20609  2398  2B7E               	goto	l8283
 20610  2399                     l8293:	
 20611  2399  0827               	movf	___lwdiv@quotient+1,w
 20612  239A  00A1               	movwf	?___lwdiv+1
 20613  239B  0826               	movf	___lwdiv@quotient,w
 20614  239C  00A0               	movwf	?___lwdiv
 20615  239D  0008               	return
 20616  239E                     __end_of___lwdiv:	
 20617                           
 20618                           	psect	text29
 20619  239E                     __ptext29:	
 20620 ;; *************** function _number_2 *****************
 20621 ;; Defined at:
 20622 ;;		line 61 in file "lcd.c"
 20623 ;; Parameters:    Size  Location     Type
 20624 ;;  num             1    wreg     unsigned char 
 20625 ;; Auto vars:     Size  Location     Type
 20626 ;;  num             1   14[BANK0 ] unsigned char 
 20627 ;; Return value:  Size  Location     Type
 20628 ;;                  1    wreg      void 
 20629 ;; Registers used:
 20630 ;;		wreg, status,2, status,0, pclath, cstack
 20631 ;; Tracked objects:
 20632 ;;		On entry : 0/0
 20633 ;;		On exit  : 0/0
 20634 ;;		Unchanged: 0/0
 20635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 20636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20637 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20638 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20639 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20640 ;;Total ram usage:        3 bytes
 20641 ;; Hardware stack levels used:    1
 20642 ;; Hardware stack levels required when called:    5
 20643 ;; This function calls:
 20644 ;;		___awdiv
 20645 ;;		___awmod
 20646 ;;		_lcd
 20647 ;; This function is called by:
 20648 ;;		_outputOn
 20649 ;;		_default_menu
 20650 ;;		_main
 20651 ;;		_serialCommand
 20652 ;;		_initMemRead
 20653 ;; This function uses a non-reentrant model
 20654 ;;
 20655                           
 20656                           
 20657                           ;psect for function _number_2
 20658  239E                     _number_2:	
 20659                           
 20660                           ;incstack = 0
 20661                           ; Regs used in _number_2: [wreg+status,2+status,0+pclath+cstack]
 20662                           ;number_2@num stored from wreg
 20663  239E  0140               	movlb	0	; select bank0
 20664  239F  00AE               	movwf	number_2@num
 20665                           
 20666                           ;lcd.c: 63: if(num > 0x39 && num < 0x030)
 20667  23A0  303A               	movlw	58
 20668  23A1  022E               	subwf	number_2@num,w
 20669  23A2  1C03               	skipc
 20670  23A3  2BA8               	goto	l8451
 20671  23A4  3030               	movlw	48
 20672  23A5  022E               	subwf	number_2@num,w
 20673  23A6  1C03               	btfss	3,0
 20674  23A7  0008               	return
 20675  23A8                     l8451:	
 20676                           ;lcd.c: 64: return;
 20677                           
 20678                           
 20679                           ;lcd.c: 66: lcd((48)+num/(10),(1));
 20680  23A8  01A9               	clrf	lcd@b
 20681  23A9  0AA9               	incf	lcd@b,f
 20682  23AA  300A               	movlw	10
 20683  23AB  00A0               	movwf	___awdiv@divisor
 20684  23AC  3000               	movlw	0
 20685  23AD  00A1               	movwf	___awdiv@divisor+1
 20686  23AE  082E               	movf	number_2@num,w
 20687  23AF  00AC               	movwf	??_number_2
 20688  23B0  01AD               	clrf	??_number_2+1
 20689  23B1  082C               	movf	??_number_2,w
 20690  23B2  00A2               	movwf	___awdiv@dividend
 20691  23B3  082D               	movf	??_number_2+1,w
 20692  23B4  00A3               	movwf	___awdiv@dividend+1
 20693  23B5  31A4  24A8  31A3   	fcall	___awdiv
 20694  23B8  0140               	movlb	0	; select bank0
 20695  23B9  0820               	movf	?___awdiv,w
 20696  23BA  3E30               	addlw	48
 20697  23BB  31A4  245E  31A3   	fcall	_lcd
 20698                           
 20699                           ;lcd.c: 67: lcd((48)+num%(10),(1));
 20700  23BE  0140               	movlb	0	; select bank0
 20701  23BF  01A9               	clrf	lcd@b
 20702  23C0  0AA9               	incf	lcd@b,f
 20703  23C1  300A               	movlw	10
 20704  23C2  00A0               	movwf	___awmod@divisor
 20705  23C3  3000               	movlw	0
 20706  23C4  00A1               	movwf	___awmod@divisor+1
 20707  23C5  082E               	movf	number_2@num,w
 20708  23C6  00AC               	movwf	??_number_2
 20709  23C7  01AD               	clrf	??_number_2+1
 20710  23C8  082C               	movf	??_number_2,w
 20711  23C9  00A2               	movwf	___awmod@dividend
 20712  23CA  082D               	movf	??_number_2+1,w
 20713  23CB  00A3               	movwf	___awmod@dividend+1
 20714  23CC  31A4  2418  31A3   	fcall	___awmod
 20715  23CF  0140               	movlb	0	; select bank0
 20716  23D0  0820               	movf	?___awmod,w
 20717  23D1  3E30               	addlw	48
 20718  23D2  31A4  245E         	fcall	_lcd
 20719  23D4  0008               	return
 20720  23D5                     __end_of_number_2:	
 20721                           
 20722                           	psect	text30
 20723  2418                     __ptext30:	
 20724 ;; *************** function ___awmod *****************
 20725 ;; Defined at:
 20726 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\awmod.c"
 20727 ;; Parameters:    Size  Location     Type
 20728 ;;  divisor         2    0[BANK0 ] int 
 20729 ;;  dividend        2    2[BANK0 ] int 
 20730 ;; Auto vars:     Size  Location     Type
 20731 ;;  sign            1    6[BANK0 ] unsigned char 
 20732 ;;  counter         1    5[BANK0 ] unsigned char 
 20733 ;; Return value:  Size  Location     Type
 20734 ;;                  2    0[BANK0 ] int 
 20735 ;; Registers used:
 20736 ;;		wreg, status,2, status,0
 20737 ;; Tracked objects:
 20738 ;;		On entry : 0/0
 20739 ;;		On exit  : 0/0
 20740 ;;		Unchanged: 0/0
 20741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 20742 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20743 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20744 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20745 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20746 ;;Total ram usage:        7 bytes
 20747 ;; Hardware stack levels used:    1
 20748 ;; Hardware stack levels required when called:    4
 20749 ;; This function calls:
 20750 ;;		Nothing
 20751 ;; This function is called by:
 20752 ;;		_number_2
 20753 ;; This function uses a non-reentrant model
 20754 ;;
 20755                           
 20756                           
 20757                           ;psect for function ___awmod
 20758  2418                     ___awmod:	
 20759                           
 20760                           ;incstack = 0
 20761                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 20762  2418  0140               	movlb	0	; select bank0
 20763  2419  01A6               	clrf	___awmod@sign
 20764  241A  1FA3               	btfss	___awmod@dividend+1,7
 20765  241B  2C23               	goto	l8197
 20766  241C  09A2               	comf	___awmod@dividend,f
 20767  241D  09A3               	comf	___awmod@dividend+1,f
 20768  241E  0AA2               	incf	___awmod@dividend,f
 20769  241F  1903               	skipnz
 20770  2420  0AA3               	incf	___awmod@dividend+1,f
 20771  2421  01A6               	clrf	___awmod@sign
 20772  2422  0AA6               	incf	___awmod@sign,f
 20773  2423                     l8197:	
 20774  2423  1FA1               	btfss	___awmod@divisor+1,7
 20775  2424  2C2A               	goto	l8201
 20776  2425  09A0               	comf	___awmod@divisor,f
 20777  2426  09A1               	comf	___awmod@divisor+1,f
 20778  2427  0AA0               	incf	___awmod@divisor,f
 20779  2428  1903               	skipnz
 20780  2429  0AA1               	incf	___awmod@divisor+1,f
 20781  242A                     l8201:	
 20782  242A  0820               	movf	___awmod@divisor,w
 20783  242B  0421               	iorwf	___awmod@divisor+1,w
 20784  242C  1903               	btfsc	3,2
 20785  242D  2C51               	goto	l8219
 20786  242E  01A5               	clrf	___awmod@counter
 20787  242F  0AA5               	incf	___awmod@counter,f
 20788  2430                     l8209:	
 20789  2430  1BA1               	btfsc	___awmod@divisor+1,7
 20790  2431  2C3C               	goto	l8211
 20791  2432  3001               	movlw	1
 20792  2433                     u5045:	
 20793  2433  35A0               	lslf	___awmod@divisor,f
 20794  2434  0DA1               	rlf	___awmod@divisor+1,f
 20795  2435  0B89               	decfsz	9,f
 20796  2436  2C33               	goto	u5045
 20797  2437  3001               	movlw	1
 20798  2438  00A4               	movwf	??___awmod
 20799  2439  0824               	movf	??___awmod,w
 20800  243A  07A5               	addwf	___awmod@counter,f
 20801  243B  2C30               	goto	l8209
 20802  243C                     l8211:	
 20803  243C  0821               	movf	___awmod@divisor+1,w
 20804  243D  0223               	subwf	___awmod@dividend+1,w
 20805  243E  1D03               	skipz
 20806  243F  2C42               	goto	u5065
 20807  2440  0820               	movf	___awmod@divisor,w
 20808  2441  0222               	subwf	___awmod@dividend,w
 20809  2442                     u5065:	
 20810  2442  1C03               	skipc
 20811  2443  2C48               	goto	l8215
 20812  2444  0820               	movf	___awmod@divisor,w
 20813  2445  02A2               	subwf	___awmod@dividend,f
 20814  2446  0821               	movf	___awmod@divisor+1,w
 20815  2447  3BA3               	subwfb	___awmod@dividend+1,f
 20816  2448                     l8215:	
 20817  2448  3001               	movlw	1
 20818  2449                     u5075:	
 20819  2449  36A1               	lsrf	___awmod@divisor+1,f
 20820  244A  0CA0               	rrf	___awmod@divisor,f
 20821  244B  0B89               	decfsz	9,f
 20822  244C  2C49               	goto	u5075
 20823  244D  3001               	movlw	1
 20824  244E  02A5               	subwf	___awmod@counter,f
 20825  244F  1D03               	btfss	3,2
 20826  2450  2C3C               	goto	l8211
 20827  2451                     l8219:	
 20828  2451  0826               	movf	___awmod@sign,w
 20829  2452  1903               	btfsc	3,2
 20830  2453  2C59               	goto	l8223
 20831  2454  09A2               	comf	___awmod@dividend,f
 20832  2455  09A3               	comf	___awmod@dividend+1,f
 20833  2456  0AA2               	incf	___awmod@dividend,f
 20834  2457  1903               	skipnz
 20835  2458  0AA3               	incf	___awmod@dividend+1,f
 20836  2459                     l8223:	
 20837  2459  0823               	movf	___awmod@dividend+1,w
 20838  245A  00A1               	movwf	?___awmod+1
 20839  245B  0822               	movf	___awmod@dividend,w
 20840  245C  00A0               	movwf	?___awmod
 20841  245D  0008               	return
 20842  245E                     __end_of___awmod:	
 20843                           
 20844                           	psect	text31
 20845  24A8                     __ptext31:	
 20846 ;; *************** function ___awdiv *****************
 20847 ;; Defined at:
 20848 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\awdiv.c"
 20849 ;; Parameters:    Size  Location     Type
 20850 ;;  divisor         2    0[BANK0 ] int 
 20851 ;;  dividend        2    2[BANK0 ] int 
 20852 ;; Auto vars:     Size  Location     Type
 20853 ;;  quotient        2    7[BANK0 ] int 
 20854 ;;  sign            1    6[BANK0 ] unsigned char 
 20855 ;;  counter         1    5[BANK0 ] unsigned char 
 20856 ;; Return value:  Size  Location     Type
 20857 ;;                  2    0[BANK0 ] int 
 20858 ;; Registers used:
 20859 ;;		wreg, status,2, status,0
 20860 ;; Tracked objects:
 20861 ;;		On entry : 0/0
 20862 ;;		On exit  : 0/0
 20863 ;;		Unchanged: 0/0
 20864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 20865 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20866 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20867 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20868 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20869 ;;Total ram usage:        9 bytes
 20870 ;; Hardware stack levels used:    1
 20871 ;; Hardware stack levels required when called:    4
 20872 ;; This function calls:
 20873 ;;		Nothing
 20874 ;; This function is called by:
 20875 ;;		_number_2
 20876 ;; This function uses a non-reentrant model
 20877 ;;
 20878                           
 20879                           
 20880                           ;psect for function ___awdiv
 20881  24A8                     ___awdiv:	
 20882                           
 20883                           ;incstack = 0
 20884                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 20885  24A8  0140               	movlb	0	; select bank0
 20886  24A9  01A6               	clrf	___awdiv@sign
 20887  24AA  1FA1               	btfss	___awdiv@divisor+1,7
 20888  24AB  2CB3               	goto	l8153
 20889  24AC  09A0               	comf	___awdiv@divisor,f
 20890  24AD  09A1               	comf	___awdiv@divisor+1,f
 20891  24AE  0AA0               	incf	___awdiv@divisor,f
 20892  24AF  1903               	skipnz
 20893  24B0  0AA1               	incf	___awdiv@divisor+1,f
 20894  24B1  01A6               	clrf	___awdiv@sign
 20895  24B2  0AA6               	incf	___awdiv@sign,f
 20896  24B3                     l8153:	
 20897  24B3  1FA3               	btfss	___awdiv@dividend+1,7
 20898  24B4  2CBE               	goto	l8159
 20899  24B5  09A2               	comf	___awdiv@dividend,f
 20900  24B6  09A3               	comf	___awdiv@dividend+1,f
 20901  24B7  0AA2               	incf	___awdiv@dividend,f
 20902  24B8  1903               	skipnz
 20903  24B9  0AA3               	incf	___awdiv@dividend+1,f
 20904  24BA  3001               	movlw	1
 20905  24BB  00A4               	movwf	??___awdiv
 20906  24BC  0824               	movf	??___awdiv,w
 20907  24BD  06A6               	xorwf	___awdiv@sign,f
 20908  24BE                     l8159:	
 20909  24BE  01A7               	clrf	___awdiv@quotient
 20910  24BF  01A8               	clrf	___awdiv@quotient+1
 20911  24C0  0820               	movf	___awdiv@divisor,w
 20912  24C1  0421               	iorwf	___awdiv@divisor+1,w
 20913  24C2  1903               	btfsc	3,2
 20914  24C3  2CED               	goto	l8181
 20915  24C4  01A5               	clrf	___awdiv@counter
 20916  24C5  0AA5               	incf	___awdiv@counter,f
 20917  24C6                     l8169:	
 20918  24C6  1BA1               	btfsc	___awdiv@divisor+1,7
 20919  24C7  2CD2               	goto	l8171
 20920  24C8  3001               	movlw	1
 20921  24C9                     u4945:	
 20922  24C9  35A0               	lslf	___awdiv@divisor,f
 20923  24CA  0DA1               	rlf	___awdiv@divisor+1,f
 20924  24CB  0B89               	decfsz	9,f
 20925  24CC  2CC9               	goto	u4945
 20926  24CD  3001               	movlw	1
 20927  24CE  00A4               	movwf	??___awdiv
 20928  24CF  0824               	movf	??___awdiv,w
 20929  24D0  07A5               	addwf	___awdiv@counter,f
 20930  24D1  2CC6               	goto	l8169
 20931  24D2                     l8171:	
 20932  24D2  3001               	movlw	1
 20933  24D3                     u4965:	
 20934  24D3  35A7               	lslf	___awdiv@quotient,f
 20935  24D4  0DA8               	rlf	___awdiv@quotient+1,f
 20936  24D5  0B89               	decfsz	9,f
 20937  24D6  2CD3               	goto	u4965
 20938  24D7  0821               	movf	___awdiv@divisor+1,w
 20939  24D8  0223               	subwf	___awdiv@dividend+1,w
 20940  24D9  1D03               	skipz
 20941  24DA  2CDD               	goto	u4975
 20942  24DB  0820               	movf	___awdiv@divisor,w
 20943  24DC  0222               	subwf	___awdiv@dividend,w
 20944  24DD                     u4975:	
 20945  24DD  1C03               	skipc
 20946  24DE  2CE4               	goto	l8177
 20947  24DF  0820               	movf	___awdiv@divisor,w
 20948  24E0  02A2               	subwf	___awdiv@dividend,f
 20949  24E1  0821               	movf	___awdiv@divisor+1,w
 20950  24E2  3BA3               	subwfb	___awdiv@dividend+1,f
 20951  24E3  1427               	bsf	___awdiv@quotient,0
 20952  24E4                     l8177:	
 20953  24E4  3001               	movlw	1
 20954  24E5                     u4985:	
 20955  24E5  36A1               	lsrf	___awdiv@divisor+1,f
 20956  24E6  0CA0               	rrf	___awdiv@divisor,f
 20957  24E7  0B89               	decfsz	9,f
 20958  24E8  2CE5               	goto	u4985
 20959  24E9  3001               	movlw	1
 20960  24EA  02A5               	subwf	___awdiv@counter,f
 20961  24EB  1D03               	btfss	3,2
 20962  24EC  2CD2               	goto	l8171
 20963  24ED                     l8181:	
 20964  24ED  0826               	movf	___awdiv@sign,w
 20965  24EE  1903               	btfsc	3,2
 20966  24EF  2CF5               	goto	l8185
 20967  24F0  09A7               	comf	___awdiv@quotient,f
 20968  24F1  09A8               	comf	___awdiv@quotient+1,f
 20969  24F2  0AA7               	incf	___awdiv@quotient,f
 20970  24F3  1903               	skipnz
 20971  24F4  0AA8               	incf	___awdiv@quotient+1,f
 20972  24F5                     l8185:	
 20973  24F5  0828               	movf	___awdiv@quotient+1,w
 20974  24F6  00A1               	movwf	?___awdiv+1
 20975  24F7  0827               	movf	___awdiv@quotient,w
 20976  24F8  00A0               	movwf	?___awdiv
 20977  24F9  0008               	return
 20978  24FA                     __end_of___awdiv:	
 20979                           
 20980                           	psect	text32
 20981  22BC                     __ptext32:	
 20982 ;; *************** function _eeprom_write *****************
 20983 ;; Defined at:
 20984 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\pic\eewrite.c"
 20985 ;; Parameters:    Size  Location     Type
 20986 ;;  addr            1    wreg     unsigned char 
 20987 ;;  value           1    0[BANK0 ] unsigned char 
 20988 ;; Auto vars:     Size  Location     Type
 20989 ;;  addr            1    1[BANK0 ] unsigned char 
 20990 ;; Return value:  Size  Location     Type
 20991 ;;                  1    wreg      void 
 20992 ;; Registers used:
 20993 ;;		wreg, status,2
 20994 ;; Tracked objects:
 20995 ;;		On entry : 0/0
 20996 ;;		On exit  : 0/0
 20997 ;;		Unchanged: 0/0
 20998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 20999 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21000 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21002 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21003 ;;Total ram usage:        2 bytes
 21004 ;; Hardware stack levels used:    1
 21005 ;; Hardware stack levels required when called:    4
 21006 ;; This function calls:
 21007 ;;		Nothing
 21008 ;; This function is called by:
 21009 ;;		_ouputOnClockwise
 21010 ;;		_ouputOnAntiClock
 21011 ;;		_main
 21012 ;;		_saveConfiguration
 21013 ;;		_initMemRead
 21014 ;; This function uses a non-reentrant model
 21015 ;;
 21016                           
 21017                           
 21018                           ;psect for function _eeprom_write
 21019  22BC                     _eeprom_write:	
 21020                           
 21021                           ;incstack = 0
 21022                           ; Regs used in _eeprom_write: [wreg+status,2]
 21023                           ;eeprom_write@addr stored from wreg
 21024  22BC  0140               	movlb	0	; select bank0
 21025  22BD  00A1               	movwf	eeprom_write@addr
 21026  22BE                     l1804:	
 21027  22BE  0150               	movlb	16	; select bank16
 21028  22BF  189E               	btfsc	30,1	;volsfr
 21029  22C0  2ABE               	goto	l1804
 21030  22C1  171E               	bsf	30,6	;volsfr
 21031  22C2  0140               	movlb	0	; select bank0
 21032  22C3  0821               	movf	eeprom_write@addr,w
 21033  22C4  0150               	movlb	16	; select bank16
 21034  22C5  009A               	movwf	26	;volatile
 21035  22C6  3070               	movlw	112
 21036  22C7  009B               	movwf	27	;volatile
 21037  22C8  019D               	clrf	29	;volatile
 21038  22C9  0140               	movlb	0	; select bank0
 21039  22CA  0820               	movf	eeprom_write@value,w
 21040  22CB  0150               	movlb	16	; select bank16
 21041  22CC  009C               	movwf	28	;volatile
 21042  22CD  0140               	movlb	0	; select bank0
 21043  22CE  1003               	bcf	3,0	;volatile
 21044  22CF  1B8B               	btfsc	11,7	;volatile
 21045  22D0  1403               	bsf	3,0	;volatile
 21046  22D1  138B               	bcf	11,7	;volatile
 21047  22D2  0150               	movlb	16	; select bank16
 21048  22D3  151E               	bsf	30,2	;volsfr
 21049  22D4  3055               	movlw	85
 21050  22D5  009F               	movwf	31	;volsfr
 21051  22D6  30AA               	movlw	170
 21052  22D7  009F               	movwf	31	;volsfr
 21053  22D8  149E               	bsf	30,1	;volsfr
 21054  22D9                     l1808:	
 21055  22D9  189E               	btfsc	30,1	;volsfr
 21056  22DA  2AD9               	goto	l1808
 21057  22DB  111E               	bcf	30,2	;volsfr
 21058  22DC  0140               	movlb	0	; select bank0
 21059  22DD  1C03               	btfss	3,0	;volatile
 21060  22DE  0008               	return
 21061  22DF  178B               	bsf	11,7	;volatile
 21062  22E0  0008               	return
 21063  22E1                     __end_of_eeprom_write:	
 21064                           
 21065                           	psect	text33
 21066  2129                     __ptext33:	
 21067 ;; *************** function _eeprom_read *****************
 21068 ;; Defined at:
 21069 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\pic\eeread.c"
 21070 ;; Parameters:    Size  Location     Type
 21071 ;;  addr            1    wreg     unsigned char 
 21072 ;; Auto vars:     Size  Location     Type
 21073 ;;  addr            1    0[BANK0 ] unsigned char 
 21074 ;; Return value:  Size  Location     Type
 21075 ;;                  1    wreg      unsigned char 
 21076 ;; Registers used:
 21077 ;;		wreg
 21078 ;; Tracked objects:
 21079 ;;		On entry : 0/0
 21080 ;;		On exit  : 0/0
 21081 ;;		Unchanged: 0/0
 21082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 21083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21084 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21086 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21087 ;;Total ram usage:        1 bytes
 21088 ;; Hardware stack levels used:    1
 21089 ;; Hardware stack levels required when called:    4
 21090 ;; This function calls:
 21091 ;;		Nothing
 21092 ;; This function is called by:
 21093 ;;		_initMemRead
 21094 ;; This function uses a non-reentrant model
 21095 ;;
 21096                           
 21097                           
 21098                           ;psect for function _eeprom_read
 21099  2129                     _eeprom_read:	
 21100                           
 21101                           ;incstack = 0
 21102                           ; Regs used in _eeprom_read: [wreg]
 21103                           ;eeprom_read@addr stored from wreg
 21104  2129  0140               	movlb	0	; select bank0
 21105  212A  00A0               	movwf	eeprom_read@addr
 21106  212B  292D               	goto	l1782
 21107  212C                     u6121:	
 21108  212C  0140               	movlb	0	; select bank0
 21109  212D                     l1782:	
 21110  212D  0064               	clrwdt	;# 
 21111  212E  0150               	movlb	16	; select bank16
 21112  212F  189E               	btfsc	30,1	;volsfr
 21113  2130  292C               	goto	u6121
 21114  2131  171E               	bsf	30,6	;volsfr
 21115  2132  0140               	movlb	0	; select bank0
 21116  2133  0820               	movf	eeprom_read@addr,w
 21117  2134  0150               	movlb	16	; select bank16
 21118  2135  009A               	movwf	26	;volatile
 21119  2136  3070               	movlw	112
 21120  2137  009B               	movwf	27	;volatile
 21121  2138  141E               	bsf	30,0	;volsfr
 21122  2139  081C               	movf	28,w	;volatile
 21123  213A  0008               	return
 21124  213B                     __end_of_eeprom_read:	
 21125                           
 21126                           	psect	text34
 21127  21DD                     __ptext34:	
 21128 ;; *************** function ___wmul *****************
 21129 ;; Defined at:
 21130 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\Umul16.c"
 21131 ;; Parameters:    Size  Location     Type
 21132 ;;  multiplier      2    0[BANK0 ] unsigned int 
 21133 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 21134 ;; Auto vars:     Size  Location     Type
 21135 ;;  product         2    4[BANK0 ] unsigned int 
 21136 ;; Return value:  Size  Location     Type
 21137 ;;                  2    0[BANK0 ] unsigned int 
 21138 ;; Registers used:
 21139 ;;		wreg, status,2, status,0
 21140 ;; Tracked objects:
 21141 ;;		On entry : 0/0
 21142 ;;		On exit  : 0/0
 21143 ;;		Unchanged: 0/0
 21144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 21145 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21146 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21148 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21149 ;;Total ram usage:        6 bytes
 21150 ;; Hardware stack levels used:    1
 21151 ;; Hardware stack levels required when called:    4
 21152 ;; This function calls:
 21153 ;;		Nothing
 21154 ;; This function is called by:
 21155 ;;		_serialCommand
 21156 ;;		_initMemRead
 21157 ;; This function uses a non-reentrant model
 21158 ;;
 21159                           
 21160                           
 21161                           ;psect for function ___wmul
 21162  21DD                     ___wmul:	
 21163                           
 21164                           ;incstack = 0
 21165                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 21166  21DD  0140               	movlb	0	; select bank0
 21167  21DE  01A4               	clrf	___wmul@product
 21168  21DF  01A5               	clrf	___wmul@product+1
 21169  21E0                     l9367:	
 21170  21E0  1C20               	btfss	___wmul@multiplier,0
 21171  21E1  29E6               	goto	l1895
 21172  21E2  0822               	movf	___wmul@multiplicand,w
 21173  21E3  07A4               	addwf	___wmul@product,f
 21174  21E4  0823               	movf	___wmul@multiplicand+1,w
 21175  21E5  3DA5               	addwfc	___wmul@product+1,f
 21176  21E6                     l1895:	
 21177  21E6  3001               	movlw	1
 21178  21E7                     u6145:	
 21179  21E7  35A2               	lslf	___wmul@multiplicand,f
 21180  21E8  0DA3               	rlf	___wmul@multiplicand+1,f
 21181  21E9  0B89               	decfsz	9,f
 21182  21EA  29E7               	goto	u6145
 21183  21EB  3001               	movlw	1
 21184  21EC                     u6155:	
 21185  21EC  36A1               	lsrf	___wmul@multiplier+1,f
 21186  21ED  0CA0               	rrf	___wmul@multiplier,f
 21187  21EE  0B89               	decfsz	9,f
 21188  21EF  29EC               	goto	u6155
 21189  21F0  0820               	movf	___wmul@multiplier,w
 21190  21F1  0421               	iorwf	___wmul@multiplier+1,w
 21191  21F2  1D03               	btfss	3,2
 21192  21F3  29E0               	goto	l9367
 21193  21F4  0825               	movf	___wmul@product+1,w
 21194  21F5  00A1               	movwf	?___wmul+1
 21195  21F6  0824               	movf	___wmul@product,w
 21196  21F7  00A0               	movwf	?___wmul
 21197  21F8  0008               	return
 21198  21F9                     __end_of___wmul:	
 21199                           
 21200                           	psect	text35
 21201  2163                     __ptext35:	
 21202 ;; *************** function _default_init *****************
 21203 ;; Defined at:
 21204 ;;		line 326 in file "configuration.c"
 21205 ;; Parameters:    Size  Location     Type
 21206 ;;		None
 21207 ;; Auto vars:     Size  Location     Type
 21208 ;;		None
 21209 ;; Return value:  Size  Location     Type
 21210 ;;                  1    wreg      void 
 21211 ;; Registers used:
 21212 ;;		wreg, status,2
 21213 ;; Tracked objects:
 21214 ;;		On entry : 0/0
 21215 ;;		On exit  : 0/0
 21216 ;;		Unchanged: 0/0
 21217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 21218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21222 ;;Total ram usage:        0 bytes
 21223 ;; Hardware stack levels used:    1
 21224 ;; Hardware stack levels required when called:    4
 21225 ;; This function calls:
 21226 ;;		Nothing
 21227 ;; This function is called by:
 21228 ;;		_main
 21229 ;; This function uses a non-reentrant model
 21230 ;;
 21231                           
 21232                           
 21233                           ;psect for function _default_init
 21234  2163                     _default_init:	
 21235                           
 21236                           ;configuration.c: 328: direction = CLOCKWISE;
 21237                           
 21238                           ;incstack = 0
 21239                           ; Regs used in _default_init: [wreg+status,2]
 21240  2163  0141               	movlb	1	; select bank1
 21241  2164  01C1               	clrf	_direction^(0+128)
 21242                           
 21243                           ;configuration.c: 329: clockWiseTime = 0;
 21244  2165  3000               	movlw	0
 21245  2166  00CF               	movwf	(_clockWiseTime+3)^(0+128)
 21246  2167  3000               	movlw	0
 21247  2168  00CE               	movwf	(_clockWiseTime+2)^(0+128)
 21248  2169  3000               	movlw	0
 21249  216A  00CD               	movwf	(_clockWiseTime+1)^(0+128)
 21250  216B  3000               	movlw	0
 21251  216C  00CC               	movwf	_clockWiseTime^(0+128)
 21252                           
 21253                           ;configuration.c: 330: antiClockWiseTime = 0;
 21254  216D  3000               	movlw	0
 21255  216E  00CB               	movwf	(_antiClockWiseTime+3)^(0+128)
 21256  216F  3000               	movlw	0
 21257  2170  00CA               	movwf	(_antiClockWiseTime+2)^(0+128)
 21258  2171  3000               	movlw	0
 21259  2172  00C9               	movwf	(_antiClockWiseTime+1)^(0+128)
 21260  2173  3000               	movlw	0
 21261  2174  00C8               	movwf	_antiClockWiseTime^(0+128)
 21262                           
 21263                           ;configuration.c: 331: holdTime = 0;
 21264  2175  01C2               	clrf	_holdTime^(0+128)
 21265                           
 21266                           ;configuration.c: 332: speedRpm = 0;
 21267  2176  01BF               	clrf	_speedRpm^(0+128)
 21268  2177  01C0               	clrf	(_speedRpm+1)^(0+128)
 21269  2178  0008               	return
 21270  2179                     __end_of_default_init:	
 21271                           
 21272                           	psect	text36
 21273  18A6                     __ptext36:	
 21274 ;; *************** function _checkMainSupplyFailure *****************
 21275 ;; Defined at:
 21276 ;;		line 189 in file "main.c"
 21277 ;; Parameters:    Size  Location     Type
 21278 ;;		None
 21279 ;; Auto vars:     Size  Location     Type
 21280 ;;		None
 21281 ;; Return value:  Size  Location     Type
 21282 ;;                  1    wreg      void 
 21283 ;; Registers used:
 21284 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21285 ;; Tracked objects:
 21286 ;;		On entry : 0/0
 21287 ;;		On exit  : 0/0
 21288 ;;		Unchanged: 0/0
 21289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 21290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21292 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21293 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21294 ;;Total ram usage:        4 bytes
 21295 ;; Hardware stack levels used:    1
 21296 ;; Hardware stack levels required when called:    6
 21297 ;; This function calls:
 21298 ;;		_ADCC_GetSingleConversion
 21299 ;;		___aldiv
 21300 ;;		_display
 21301 ;;		_lcd
 21302 ;;		_number_5
 21303 ;; This function is called by:
 21304 ;;		_main
 21305 ;; This function uses a non-reentrant model
 21306 ;;
 21307                           
 21308                           
 21309                           ;psect for function _checkMainSupplyFailure
 21310  18A6                     _checkMainSupplyFailure:	
 21311                           
 21312                           ;main.c: 192: {
 21313                           ;main.c: 195: {
 21314                           ;main.c: 196: tempMainsVoltSamples = ADCC_GetSingleConversion(channel_ANA4);
 21315                           
 21316                           ;incstack = 0
 21317                           ; Regs used in _checkMainSupplyFailure: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21318  18A6  3004               	movlw	4
 21319  18A7  31A1  2117  3198   	fcall	_ADCC_GetSingleConversion
 21320  18AA  0140               	movlb	0	; select bank0
 21321  18AB  0820               	movf	?_ADCC_GetSingleConversion,w
 21322  18AC  0142               	movlb	2	; select bank2
 21323  18AD  00A4               	movwf	_tempMainsVoltSamples^(0+256)
 21324  18AE  0140               	movlb	0	; select bank0
 21325  18AF  0821               	movf	?_ADCC_GetSingleConversion+1,w
 21326  18B0  0142               	movlb	2	; select bank2
 21327  18B1  00A5               	movwf	(_tempMainsVoltSamples^(0+256)+1)
 21328  18B2  01A6               	clrf	(_tempMainsVoltSamples^(0+256)+2)
 21329  18B3  01A7               	clrf	(_tempMainsVoltSamples^(0+256)+3)
 21330                           
 21331                           ;main.c: 198: if(sampleCountMainsVolt < ((5)))
 21332  18B4  3005               	movlw	5
 21333  18B5  0262               	subwf	_sampleCountMainsVolt^(0+256),w
 21334  18B6  1803               	skipnc
 21335  18B7  28E1               	goto	l9441
 21336                           
 21337                           ;main.c: 199: {
 21338                           ;main.c: 200: sampleCountMainsVolt++;
 21339  18B8  3001               	movlw	1
 21340  18B9  0141               	movlb	1	; select bank1
 21341  18BA  00A0               	movwf	??_checkMainSupplyFailure^(0+128)
 21342  18BB  0820               	movf	??_checkMainSupplyFailure^(0+128),w
 21343  18BC  0142               	movlb	2	; select bank2
 21344  18BD  07E2               	addwf	_sampleCountMainsVolt^(0+256),f
 21345                           
 21346                           ;main.c: 201: mainsVoltSamples = tempMainsVoltSamples + mainsVoltSamples;
 21347  18BE  0824               	movf	_tempMainsVoltSamples^(0+256),w
 21348  18BF  0720               	addwf	_mainsVoltSamples^(0+256),w
 21349  18C0  0141               	movlb	1	; select bank1
 21350  18C1  00A0               	movwf	??_checkMainSupplyFailure^(0+128)
 21351  18C2  0142               	movlb	2	; select bank2
 21352  18C3  0825               	movf	(_tempMainsVoltSamples+1)^(0+256),w
 21353  18C4  3D21               	addwfc	(_mainsVoltSamples+1)^(0+256),w
 21354  18C5  0141               	movlb	1	; select bank1
 21355  18C6  00A1               	movwf	(??_checkMainSupplyFailure^(0+128)+1)
 21356  18C7  0142               	movlb	2	; select bank2
 21357  18C8  0826               	movf	(_tempMainsVoltSamples+2)^(0+256),w
 21358  18C9  3D22               	addwfc	(_mainsVoltSamples+2)^(0+256),w
 21359  18CA  0141               	movlb	1	; select bank1
 21360  18CB  00A2               	movwf	(??_checkMainSupplyFailure^(0+128)+2)
 21361  18CC  0142               	movlb	2	; select bank2
 21362  18CD  0827               	movf	(_tempMainsVoltSamples+3)^(0+256),w
 21363  18CE  3D23               	addwfc	(_mainsVoltSamples+3)^(0+256),w
 21364  18CF  0141               	movlb	1	; select bank1
 21365  18D0  00A3               	movwf	(??_checkMainSupplyFailure^(0+128)+3)
 21366  18D1  0823               	movf	(??_checkMainSupplyFailure+3)^(0+128),w
 21367  18D2  0142               	movlb	2	; select bank2
 21368  18D3  00A3               	movwf	(_mainsVoltSamples+3)^(0+256)
 21369  18D4  0141               	movlb	1	; select bank1
 21370  18D5  0822               	movf	(??_checkMainSupplyFailure+2)^(0+128),w
 21371  18D6  0142               	movlb	2	; select bank2
 21372  18D7  00A2               	movwf	(_mainsVoltSamples+2)^(0+256)
 21373  18D8  0141               	movlb	1	; select bank1
 21374  18D9  0821               	movf	(??_checkMainSupplyFailure+1)^(0+128),w
 21375  18DA  0142               	movlb	2	; select bank2
 21376  18DB  00A1               	movwf	(_mainsVoltSamples+1)^(0+256)
 21377  18DC  0141               	movlb	1	; select bank1
 21378  18DD  0820               	movf	??_checkMainSupplyFailure^(0+128),w
 21379  18DE  0142               	movlb	2	; select bank2
 21380  18DF  00A0               	movwf	_mainsVoltSamples^(0+256)
 21381                           
 21382                           ;main.c: 203: }
 21383  18E0  2966               	goto	l9455
 21384  18E1                     l9441:	
 21385                           
 21386                           ;main.c: 204: else
 21387                           ;main.c: 205: {
 21388                           ;main.c: 206: sampleCountMainsVolt = 0;
 21389  18E1  01E2               	clrf	_sampleCountMainsVolt^(0+256)
 21390                           
 21391                           ;main.c: 207: mainsVoltSamples = tempMainsVoltSamples + mainsVoltSamples;
 21392  18E2  0824               	movf	_tempMainsVoltSamples^(0+256),w
 21393  18E3  0720               	addwf	_mainsVoltSamples^(0+256),w
 21394  18E4  0141               	movlb	1	; select bank1
 21395  18E5  00A0               	movwf	??_checkMainSupplyFailure^(0+128)
 21396  18E6  0142               	movlb	2	; select bank2
 21397  18E7  0825               	movf	(_tempMainsVoltSamples+1)^(0+256),w
 21398  18E8  3D21               	addwfc	(_mainsVoltSamples+1)^(0+256),w
 21399  18E9  0141               	movlb	1	; select bank1
 21400  18EA  00A1               	movwf	(??_checkMainSupplyFailure^(0+128)+1)
 21401  18EB  0142               	movlb	2	; select bank2
 21402  18EC  0826               	movf	(_tempMainsVoltSamples+2)^(0+256),w
 21403  18ED  3D22               	addwfc	(_mainsVoltSamples+2)^(0+256),w
 21404  18EE  0141               	movlb	1	; select bank1
 21405  18EF  00A2               	movwf	(??_checkMainSupplyFailure^(0+128)+2)
 21406  18F0  0142               	movlb	2	; select bank2
 21407  18F1  0827               	movf	(_tempMainsVoltSamples+3)^(0+256),w
 21408  18F2  3D23               	addwfc	(_mainsVoltSamples+3)^(0+256),w
 21409  18F3  0141               	movlb	1	; select bank1
 21410  18F4  00A3               	movwf	(??_checkMainSupplyFailure^(0+128)+3)
 21411  18F5  0823               	movf	(??_checkMainSupplyFailure+3)^(0+128),w
 21412  18F6  0142               	movlb	2	; select bank2
 21413  18F7  00A3               	movwf	(_mainsVoltSamples+3)^(0+256)
 21414  18F8  0141               	movlb	1	; select bank1
 21415  18F9  0822               	movf	(??_checkMainSupplyFailure+2)^(0+128),w
 21416  18FA  0142               	movlb	2	; select bank2
 21417  18FB  00A2               	movwf	(_mainsVoltSamples+2)^(0+256)
 21418  18FC  0141               	movlb	1	; select bank1
 21419  18FD  0821               	movf	(??_checkMainSupplyFailure+1)^(0+128),w
 21420  18FE  0142               	movlb	2	; select bank2
 21421  18FF  00A1               	movwf	(_mainsVoltSamples+1)^(0+256)
 21422  1900  0141               	movlb	1	; select bank1
 21423  1901  0820               	movf	??_checkMainSupplyFailure^(0+128),w
 21424  1902  0142               	movlb	2	; select bank2
 21425  1903  00A0               	movwf	_mainsVoltSamples^(0+256)
 21426                           
 21427                           ;main.c: 208: mainsVoltSamples = mainsVoltSamples/((5));
 21428  1904  3000               	movlw	0
 21429  1905  0140               	movlb	0	; select bank0
 21430  1906  00AF               	movwf	___aldiv@divisor+3
 21431  1907  3000               	movlw	0
 21432  1908  00AE               	movwf	___aldiv@divisor+2
 21433  1909  3000               	movlw	0
 21434  190A  00AD               	movwf	___aldiv@divisor+1
 21435  190B  3005               	movlw	5
 21436  190C  00AC               	movwf	___aldiv@divisor
 21437  190D  0142               	movlb	2	; select bank2
 21438  190E  0823               	movf	(_mainsVoltSamples+3)^(0+256),w
 21439  190F  0140               	movlb	0	; select bank0
 21440  1910  00B3               	movwf	___aldiv@dividend+3
 21441  1911  0142               	movlb	2	; select bank2
 21442  1912  0822               	movf	(_mainsVoltSamples+2)^(0+256),w
 21443  1913  0140               	movlb	0	; select bank0
 21444  1914  00B2               	movwf	___aldiv@dividend+2
 21445  1915  0142               	movlb	2	; select bank2
 21446  1916  0821               	movf	(_mainsVoltSamples+1)^(0+256),w
 21447  1917  0140               	movlb	0	; select bank0
 21448  1918  00B1               	movwf	___aldiv@dividend+1
 21449  1919  0142               	movlb	2	; select bank2
 21450  191A  0820               	movf	_mainsVoltSamples^(0+256),w
 21451  191B  0140               	movlb	0	; select bank0
 21452  191C  00B0               	movwf	___aldiv@dividend
 21453  191D  31A6  2639  3198   	fcall	___aldiv
 21454  1920  0140               	movlb	0	; select bank0
 21455  1921  082F               	movf	?___aldiv+3,w
 21456  1922  0142               	movlb	2	; select bank2
 21457  1923  00A3               	movwf	(_mainsVoltSamples+3)^(0+256)
 21458  1924  0140               	movlb	0	; select bank0
 21459  1925  082E               	movf	?___aldiv+2,w
 21460  1926  0142               	movlb	2	; select bank2
 21461  1927  00A2               	movwf	(_mainsVoltSamples+2)^(0+256)
 21462  1928  0140               	movlb	0	; select bank0
 21463  1929  082D               	movf	?___aldiv+1,w
 21464  192A  0142               	movlb	2	; select bank2
 21465  192B  00A1               	movwf	(_mainsVoltSamples+1)^(0+256)
 21466  192C  0140               	movlb	0	; select bank0
 21467  192D  082C               	movf	?___aldiv,w
 21468  192E  0142               	movlb	2	; select bank2
 21469  192F  00A0               	movwf	_mainsVoltSamples^(0+256)
 21470                           
 21471                           ;main.c: 211: {
 21472                           ;main.c: 213: display((char *)"M: ",(0x80)+8);
 21473  1930  30B6               	movlw	low (STR_5| (0+32768))
 21474  1931  0140               	movlb	0	; select bank0
 21475  1932  00AC               	movwf	display@a
 21476  1933  30A8               	movlw	high (STR_5| (0+32768))
 21477  1934  00AD               	movwf	display@a+1
 21478  1935  3088               	movlw	136
 21479  1936  0141               	movlb	1	; select bank1
 21480  1937  00A0               	movwf	??_checkMainSupplyFailure^(0+128)
 21481  1938  0820               	movf	??_checkMainSupplyFailure^(0+128),w
 21482  1939  0140               	movlb	0	; select bank0
 21483  193A  00AE               	movwf	display@add
 21484  193B  31A2  2297  3198   	fcall	_display
 21485                           
 21486                           ;main.c: 214: lcd(((0x80)+10),(0));
 21487  193E  0140               	movlb	0	; select bank0
 21488  193F  01A9               	clrf	lcd@b
 21489  1940  308A               	movlw	138
 21490  1941  31A4  245E  3198   	fcall	_lcd
 21491                           
 21492                           ;main.c: 215: number_5(mainsVoltSamples);
 21493  1944  0142               	movlb	2	; select bank2
 21494  1945  0823               	movf	(_mainsVoltSamples+3)^(0+256),w
 21495  1946  0140               	movlb	0	; select bank0
 21496  1947  00BB               	movwf	number_5@num+3
 21497  1948  0142               	movlb	2	; select bank2
 21498  1949  0822               	movf	(_mainsVoltSamples+2)^(0+256),w
 21499  194A  0140               	movlb	0	; select bank0
 21500  194B  00BA               	movwf	number_5@num+2
 21501  194C  0142               	movlb	2	; select bank2
 21502  194D  0821               	movf	(_mainsVoltSamples+1)^(0+256),w
 21503  194E  0140               	movlb	0	; select bank0
 21504  194F  00B9               	movwf	number_5@num+1
 21505  1950  0142               	movlb	2	; select bank2
 21506  1951  0820               	movf	_mainsVoltSamples^(0+256),w
 21507  1952  0140               	movlb	0	; select bank0
 21508  1953  00B8               	movwf	number_5@num
 21509  1954  3190  2058         	fcall	_number_5
 21510                           
 21511                           ;main.c: 216: mainVoltRef = mainsVoltSamples;
 21512  1956  0142               	movlb	2	; select bank2
 21513  1957  0823               	movf	(_mainsVoltSamples+3)^(0+256),w
 21514  1958  0143               	movlb	3	; select bank3
 21515  1959  00D6               	movwf	(_mainVoltRef+3)^(0+384)
 21516  195A  0142               	movlb	2	; select bank2
 21517  195B  0822               	movf	(_mainsVoltSamples+2)^(0+256),w
 21518  195C  0143               	movlb	3	; select bank3
 21519  195D  00D5               	movwf	(_mainVoltRef+2)^(0+384)
 21520  195E  0142               	movlb	2	; select bank2
 21521  195F  0821               	movf	(_mainsVoltSamples+1)^(0+256),w
 21522  1960  0143               	movlb	3	; select bank3
 21523  1961  00D4               	movwf	(_mainVoltRef+1)^(0+384)
 21524  1962  0142               	movlb	2	; select bank2
 21525  1963  0820               	movf	_mainsVoltSamples^(0+256),w
 21526  1964  0143               	movlb	3	; select bank3
 21527  1965  00D3               	movwf	_mainVoltRef^(0+384)
 21528  1966                     l9455:	
 21529                           
 21530                           ;main.c: 217: }
 21531                           ;main.c: 219: }
 21532                           ;main.c: 220: adcSamplingMainSupply = 0;
 21533  1966  13F1               	bcf	_adcSamplingMainSupply/(0+8),_adcSamplingMainSupply& (0+7)
 21534  1967  0008               	return
 21535  1968                     __end_of_checkMainSupplyFailure:	
 21536                           
 21537                           	psect	text37
 21538  1D78                     __ptext37:	
 21539 ;; *************** function _checkBatteryVoltage *****************
 21540 ;; Defined at:
 21541 ;;		line 140 in file "main.c"
 21542 ;; Parameters:    Size  Location     Type
 21543 ;;		None
 21544 ;; Auto vars:     Size  Location     Type
 21545 ;;		None
 21546 ;; Return value:  Size  Location     Type
 21547 ;;                  1    wreg      void 
 21548 ;; Registers used:
 21549 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21550 ;; Tracked objects:
 21551 ;;		On entry : 0/0
 21552 ;;		On exit  : 0/0
 21553 ;;		Unchanged: 0/0
 21554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 21555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21557 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21558 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21559 ;;Total ram usage:        4 bytes
 21560 ;; Hardware stack levels used:    1
 21561 ;; Hardware stack levels required when called:    6
 21562 ;; This function calls:
 21563 ;;		_ADCC_GetSingleConversion
 21564 ;;		___aldiv
 21565 ;;		_display
 21566 ;;		_lcd
 21567 ;;		_number_5
 21568 ;; This function is called by:
 21569 ;;		_main
 21570 ;; This function uses a non-reentrant model
 21571 ;;
 21572                           
 21573                           
 21574                           ;psect for function _checkBatteryVoltage
 21575  1D78                     _checkBatteryVoltage:	
 21576                           
 21577                           ;main.c: 143: tempBattVoltSamples = ADCC_GetSingleConversion(channel_ANA1);
 21578                           
 21579                           ;incstack = 0
 21580                           ; Regs used in _checkBatteryVoltage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21581  1D78  3001               	movlw	1
 21582  1D79  31A1  2117  319D   	fcall	_ADCC_GetSingleConversion
 21583  1D7C  0140               	movlb	0	; select bank0
 21584  1D7D  0820               	movf	?_ADCC_GetSingleConversion,w
 21585  1D7E  0142               	movlb	2	; select bank2
 21586  1D7F  00A8               	movwf	_tempBattVoltSamples^(0+256)
 21587  1D80  0140               	movlb	0	; select bank0
 21588  1D81  0821               	movf	?_ADCC_GetSingleConversion+1,w
 21589  1D82  0142               	movlb	2	; select bank2
 21590  1D83  00A9               	movwf	(_tempBattVoltSamples^(0+256)+1)
 21591  1D84  01AA               	clrf	(_tempBattVoltSamples^(0+256)+2)
 21592  1D85  01AB               	clrf	(_tempBattVoltSamples^(0+256)+3)
 21593                           
 21594                           ;main.c: 145: if(sampleCountBattVolt < ((5)))
 21595  1D86  3005               	movlw	5
 21596  1D87  0263               	subwf	_sampleCountBattVolt^(0+256),w
 21597  1D88  1803               	skipnc
 21598  1D89  2DAB               	goto	l9391
 21599                           
 21600                           ;main.c: 146: {
 21601                           ;main.c: 147: sampleCountBattVolt++;
 21602  1D8A  3001               	movlw	1
 21603  1D8B  0141               	movlb	1	; select bank1
 21604  1D8C  00A0               	movwf	??_checkBatteryVoltage^(0+128)
 21605  1D8D  0820               	movf	??_checkBatteryVoltage^(0+128),w
 21606  1D8E  0142               	movlb	2	; select bank2
 21607  1D8F  07E3               	addwf	_sampleCountBattVolt^(0+256),f
 21608                           
 21609                           ;main.c: 148: battVoltSamples = tempBattVoltSamples + battVoltSamples;
 21610  1D90  0828               	movf	_tempBattVoltSamples^(0+256),w
 21611  1D91  0141               	movlb	1	; select bank1
 21612  1D92  0739               	addwf	_battVoltSamples^(0+128),w
 21613  1D93  00A0               	movwf	??_checkBatteryVoltage^(0+128)
 21614  1D94  0142               	movlb	2	; select bank2
 21615  1D95  0829               	movf	(_tempBattVoltSamples+1)^(0+256),w
 21616  1D96  0141               	movlb	1	; select bank1
 21617  1D97  3D3A               	addwfc	(_battVoltSamples+1)^(0+128),w
 21618  1D98  00A1               	movwf	(??_checkBatteryVoltage^(0+128)+1)
 21619  1D99  0142               	movlb	2	; select bank2
 21620  1D9A  082A               	movf	(_tempBattVoltSamples+2)^(0+256),w
 21621  1D9B  0141               	movlb	1	; select bank1
 21622  1D9C  3D3B               	addwfc	(_battVoltSamples+2)^(0+128),w
 21623  1D9D  00A2               	movwf	(??_checkBatteryVoltage^(0+128)+2)
 21624  1D9E  0142               	movlb	2	; select bank2
 21625  1D9F  082B               	movf	(_tempBattVoltSamples+3)^(0+256),w
 21626  1DA0  0141               	movlb	1	; select bank1
 21627  1DA1  3D3C               	addwfc	(_battVoltSamples+3)^(0+128),w
 21628  1DA2  00A3               	movwf	(??_checkBatteryVoltage^(0+128)+3)
 21629  1DA3  0823               	movf	(??_checkBatteryVoltage+3)^(0+128),w
 21630  1DA4  00BC               	movwf	(_battVoltSamples+3)^(0+128)
 21631  1DA5  0822               	movf	(??_checkBatteryVoltage+2)^(0+128),w
 21632  1DA6  00BB               	movwf	(_battVoltSamples+2)^(0+128)
 21633  1DA7  0821               	movf	(??_checkBatteryVoltage+1)^(0+128),w
 21634  1DA8  00BA               	movwf	(_battVoltSamples+1)^(0+128)
 21635  1DA9  0820               	movf	??_checkBatteryVoltage^(0+128),w
 21636  1DAA  2EB5               	goto	L8
 21637  1DAB                     l9391:	
 21638                           ;main.c: 150: }
 21639                           
 21640                           
 21641                           ;main.c: 151: else
 21642                           ;main.c: 152: {
 21643                           ;main.c: 153: sampleCountBattVolt = 0;
 21644  1DAB  0142               	movlb	2	; select bank2
 21645  1DAC  01E3               	clrf	_sampleCountBattVolt^(0+256)
 21646                           
 21647                           ;main.c: 154: battVoltSamples = tempBattVoltSamples + battVoltSamples;
 21648  1DAD  0828               	movf	_tempBattVoltSamples^(0+256),w
 21649  1DAE  0141               	movlb	1	; select bank1
 21650  1DAF  0739               	addwf	_battVoltSamples^(0+128),w
 21651  1DB0  00A0               	movwf	??_checkBatteryVoltage^(0+128)
 21652  1DB1  0142               	movlb	2	; select bank2
 21653  1DB2  0829               	movf	(_tempBattVoltSamples+1)^(0+256),w
 21654  1DB3  0141               	movlb	1	; select bank1
 21655  1DB4  3D3A               	addwfc	(_battVoltSamples+1)^(0+128),w
 21656  1DB5  00A1               	movwf	(??_checkBatteryVoltage^(0+128)+1)
 21657  1DB6  0142               	movlb	2	; select bank2
 21658  1DB7  082A               	movf	(_tempBattVoltSamples+2)^(0+256),w
 21659  1DB8  0141               	movlb	1	; select bank1
 21660  1DB9  3D3B               	addwfc	(_battVoltSamples+2)^(0+128),w
 21661  1DBA  00A2               	movwf	(??_checkBatteryVoltage^(0+128)+2)
 21662  1DBB  0142               	movlb	2	; select bank2
 21663  1DBC  082B               	movf	(_tempBattVoltSamples+3)^(0+256),w
 21664  1DBD  0141               	movlb	1	; select bank1
 21665  1DBE  3D3C               	addwfc	(_battVoltSamples+3)^(0+128),w
 21666  1DBF  00A3               	movwf	(??_checkBatteryVoltage^(0+128)+3)
 21667  1DC0  0823               	movf	(??_checkBatteryVoltage+3)^(0+128),w
 21668  1DC1  00BC               	movwf	(_battVoltSamples+3)^(0+128)
 21669  1DC2  0822               	movf	(??_checkBatteryVoltage+2)^(0+128),w
 21670  1DC3  00BB               	movwf	(_battVoltSamples+2)^(0+128)
 21671  1DC4  0821               	movf	(??_checkBatteryVoltage+1)^(0+128),w
 21672  1DC5  00BA               	movwf	(_battVoltSamples+1)^(0+128)
 21673  1DC6  0820               	movf	??_checkBatteryVoltage^(0+128),w
 21674  1DC7  00B9               	movwf	_battVoltSamples^(0+128)
 21675                           
 21676                           ;main.c: 155: battVoltSamples = battVoltSamples/((5));
 21677  1DC8  3000               	movlw	0
 21678  1DC9  0140               	movlb	0	; select bank0
 21679  1DCA  00AF               	movwf	___aldiv@divisor+3
 21680  1DCB  3000               	movlw	0
 21681  1DCC  00AE               	movwf	___aldiv@divisor+2
 21682  1DCD  3000               	movlw	0
 21683  1DCE  00AD               	movwf	___aldiv@divisor+1
 21684  1DCF  3005               	movlw	5
 21685  1DD0  00AC               	movwf	___aldiv@divisor
 21686  1DD1  0141               	movlb	1	; select bank1
 21687  1DD2  083C               	movf	(_battVoltSamples+3)^(0+128),w
 21688  1DD3  0140               	movlb	0	; select bank0
 21689  1DD4  00B3               	movwf	___aldiv@dividend+3
 21690  1DD5  0141               	movlb	1	; select bank1
 21691  1DD6  083B               	movf	(_battVoltSamples+2)^(0+128),w
 21692  1DD7  0140               	movlb	0	; select bank0
 21693  1DD8  00B2               	movwf	___aldiv@dividend+2
 21694  1DD9  0141               	movlb	1	; select bank1
 21695  1DDA  083A               	movf	(_battVoltSamples+1)^(0+128),w
 21696  1DDB  0140               	movlb	0	; select bank0
 21697  1DDC  00B1               	movwf	___aldiv@dividend+1
 21698  1DDD  0141               	movlb	1	; select bank1
 21699  1DDE  0839               	movf	_battVoltSamples^(0+128),w
 21700  1DDF  0140               	movlb	0	; select bank0
 21701  1DE0  00B0               	movwf	___aldiv@dividend
 21702  1DE1  31A6  2639  319D   	fcall	___aldiv
 21703  1DE4  0140               	movlb	0	; select bank0
 21704  1DE5  082F               	movf	?___aldiv+3,w
 21705  1DE6  0141               	movlb	1	; select bank1
 21706  1DE7  00BC               	movwf	(_battVoltSamples+3)^(0+128)
 21707  1DE8  0140               	movlb	0	; select bank0
 21708  1DE9  082E               	movf	?___aldiv+2,w
 21709  1DEA  0141               	movlb	1	; select bank1
 21710  1DEB  00BB               	movwf	(_battVoltSamples+2)^(0+128)
 21711  1DEC  0140               	movlb	0	; select bank0
 21712  1DED  082D               	movf	?___aldiv+1,w
 21713  1DEE  0141               	movlb	1	; select bank1
 21714  1DEF  00BA               	movwf	(_battVoltSamples+1)^(0+128)
 21715  1DF0  0140               	movlb	0	; select bank0
 21716  1DF1  082C               	movf	?___aldiv,w
 21717  1DF2  0141               	movlb	1	; select bank1
 21718  1DF3  00B9               	movwf	_battVoltSamples^(0+128)
 21719                           
 21720                           ;main.c: 157: if(battVoltSamples < (200) && mainVoltRef > (1000))
 21721  1DF4  1BBC               	btfsc	(_battVoltSamples+3)^(0+128),7
 21722  1DF5  2E03               	goto	l9399
 21723  1DF6  083C               	movf	(_battVoltSamples+3)^(0+128),w
 21724  1DF7  1D03               	btfss	3,2
 21725  1DF8  2E3D               	goto	l9411
 21726  1DF9  083B               	movf	(_battVoltSamples+2)^(0+128),w
 21727  1DFA  1D03               	btfss	3,2
 21728  1DFB  2E3D               	goto	l9411
 21729  1DFC  083A               	movf	(_battVoltSamples+1)^(0+128),w
 21730  1DFD  1D03               	btfss	3,2
 21731  1DFE  2E3D               	goto	l9411
 21732  1DFF  30C8               	movlw	200
 21733  1E00  0239               	subwf	_battVoltSamples^(0+128),w
 21734  1E01  1803               	btfsc	3,0
 21735  1E02  2E3D               	goto	l9411
 21736  1E03                     l9399:	
 21737  1E03  0143               	movlb	3	; select bank3
 21738  1E04  1BD6               	btfsc	(_mainVoltRef+3)^(0+384),7
 21739  1E05  2E3D               	goto	l9411
 21740  1E06  0856               	movf	(_mainVoltRef+3)^(0+384),w
 21741  1E07  1D03               	btfss	3,2
 21742  1E08  2E12               	goto	l9401
 21743  1E09  0855               	movf	(_mainVoltRef+2)^(0+384),w
 21744  1E0A  1D03               	btfss	3,2
 21745  1E0B  2E12               	goto	l9401
 21746  1E0C  30E9               	movlw	233
 21747  1E0D  0253               	subwf	_mainVoltRef^(0+384),w
 21748  1E0E  3003               	movlw	3
 21749  1E0F  3B54               	subwfb	(_mainVoltRef+1)^(0+384),w
 21750  1E10  1C03               	btfss	3,0
 21751  1E11  2E3D               	goto	l9411
 21752  1E12                     l9401:	
 21753                           
 21754                           ;main.c: 159: {
 21755                           ;main.c: 162: display((char *)"B: ",(0x80));
 21756  1E12  30B2               	movlw	low (STR_2| (0+32768))
 21757  1E13  0140               	movlb	0	; select bank0
 21758  1E14  00AC               	movwf	display@a
 21759  1E15  30A8               	movlw	high (STR_2| (0+32768))
 21760  1E16  00AD               	movwf	display@a+1
 21761  1E17  3080               	movlw	128
 21762  1E18  0141               	movlb	1	; select bank1
 21763  1E19  00A0               	movwf	??_checkBatteryVoltage^(0+128)
 21764  1E1A  0820               	movf	??_checkBatteryVoltage^(0+128),w
 21765  1E1B  0140               	movlb	0	; select bank0
 21766  1E1C  00AE               	movwf	display@add
 21767  1E1D  31A2  2297  319D   	fcall	_display
 21768                           
 21769                           ;main.c: 163: lcd(((0x80)+2),(0));
 21770  1E20  0140               	movlb	0	; select bank0
 21771  1E21  01A9               	clrf	lcd@b
 21772  1E22  3082               	movlw	130
 21773  1E23  31A4  245E  319D   	fcall	_lcd
 21774                           
 21775                           ;main.c: 164: number_5(battVoltSamples);
 21776  1E26  0141               	movlb	1	; select bank1
 21777  1E27  083C               	movf	(_battVoltSamples+3)^(0+128),w
 21778  1E28  0140               	movlb	0	; select bank0
 21779  1E29  00BB               	movwf	number_5@num+3
 21780  1E2A  0141               	movlb	1	; select bank1
 21781  1E2B  083B               	movf	(_battVoltSamples+2)^(0+128),w
 21782  1E2C  0140               	movlb	0	; select bank0
 21783  1E2D  00BA               	movwf	number_5@num+2
 21784  1E2E  0141               	movlb	1	; select bank1
 21785  1E2F  083A               	movf	(_battVoltSamples+1)^(0+128),w
 21786  1E30  0140               	movlb	0	; select bank0
 21787  1E31  00B9               	movwf	number_5@num+1
 21788  1E32  0141               	movlb	1	; select bank1
 21789  1E33  0839               	movf	_battVoltSamples^(0+128),w
 21790  1E34  0140               	movlb	0	; select bank0
 21791  1E35  00B8               	movwf	number_5@num
 21792  1E36  3190  2058  319D   	fcall	_number_5
 21793                           
 21794                           ;main.c: 165: (RE2) = 0;
 21795  1E39  0140               	movlb	0	; select bank0
 21796  1E3A  1110               	bcf	16,2	;volatile
 21797                           
 21798                           ;main.c: 166: (RD5) = 1;
 21799  1E3B  168F               	bsf	15,5	;volatile
 21800                           
 21801                           ;main.c: 167: }
 21802  1E3C  2E9E               	goto	l9429
 21803  1E3D                     l9411:	
 21804                           
 21805                           ;main.c: 168: else if(battVoltSamples > (250))
 21806  1E3D  0141               	movlb	1	; select bank1
 21807  1E3E  1BBC               	btfsc	(_battVoltSamples+3)^(0+128),7
 21808  1E3F  2E78               	goto	l9423
 21809  1E40  083C               	movf	(_battVoltSamples+3)^(0+128),w
 21810  1E41  1D03               	btfss	3,2
 21811  1E42  2E4D               	goto	l9413
 21812  1E43  083B               	movf	(_battVoltSamples+2)^(0+128),w
 21813  1E44  1D03               	btfss	3,2
 21814  1E45  2E4D               	goto	l9413
 21815  1E46  083A               	movf	(_battVoltSamples+1)^(0+128),w
 21816  1E47  1D03               	btfss	3,2
 21817  1E48  2E4D               	goto	l9413
 21818  1E49  30FB               	movlw	251
 21819  1E4A  0239               	subwf	_battVoltSamples^(0+128),w
 21820  1E4B  1C03               	btfss	3,0
 21821  1E4C  2E78               	goto	l9423
 21822  1E4D                     l9413:	
 21823                           
 21824                           ;main.c: 169: {
 21825                           ;main.c: 171: display((char *)"B: ",(0x80));
 21826  1E4D  30B2               	movlw	low (STR_2| (0+32768))
 21827  1E4E  0140               	movlb	0	; select bank0
 21828  1E4F  00AC               	movwf	display@a
 21829  1E50  30A8               	movlw	high (STR_2| (0+32768))
 21830  1E51  00AD               	movwf	display@a+1
 21831  1E52  3080               	movlw	128
 21832  1E53  0141               	movlb	1	; select bank1
 21833  1E54  00A0               	movwf	??_checkBatteryVoltage^(0+128)
 21834  1E55  0820               	movf	??_checkBatteryVoltage^(0+128),w
 21835  1E56  0140               	movlb	0	; select bank0
 21836  1E57  00AE               	movwf	display@add
 21837  1E58  31A2  2297  319D   	fcall	_display
 21838                           
 21839                           ;main.c: 172: lcd(((0x80)+2),(0));
 21840  1E5B  0140               	movlb	0	; select bank0
 21841  1E5C  01A9               	clrf	lcd@b
 21842  1E5D  3082               	movlw	130
 21843  1E5E  31A4  245E  319D   	fcall	_lcd
 21844                           
 21845                           ;main.c: 173: number_5(battVoltSamples);
 21846  1E61  0141               	movlb	1	; select bank1
 21847  1E62  083C               	movf	(_battVoltSamples+3)^(0+128),w
 21848  1E63  0140               	movlb	0	; select bank0
 21849  1E64  00BB               	movwf	number_5@num+3
 21850  1E65  0141               	movlb	1	; select bank1
 21851  1E66  083B               	movf	(_battVoltSamples+2)^(0+128),w
 21852  1E67  0140               	movlb	0	; select bank0
 21853  1E68  00BA               	movwf	number_5@num+2
 21854  1E69  0141               	movlb	1	; select bank1
 21855  1E6A  083A               	movf	(_battVoltSamples+1)^(0+128),w
 21856  1E6B  0140               	movlb	0	; select bank0
 21857  1E6C  00B9               	movwf	number_5@num+1
 21858  1E6D  0141               	movlb	1	; select bank1
 21859  1E6E  0839               	movf	_battVoltSamples^(0+128),w
 21860  1E6F  0140               	movlb	0	; select bank0
 21861  1E70  00B8               	movwf	number_5@num
 21862  1E71  3190  2058  319D   	fcall	_number_5
 21863                           
 21864                           ;main.c: 174: (RE2) = 1;
 21865  1E74  0140               	movlb	0	; select bank0
 21866  1E75  1510               	bsf	16,2	;volatile
 21867                           
 21868                           ;main.c: 175: (RD5) = 0;
 21869  1E76  128F               	bcf	15,5	;volatile
 21870                           
 21871                           ;main.c: 176: }
 21872  1E77  2E9E               	goto	l9429
 21873  1E78                     l9423:	
 21874                           
 21875                           ;main.c: 177: else
 21876                           ;main.c: 178: {
 21877                           ;main.c: 180: display((char *)"B: ",(0x80));
 21878  1E78  30B2               	movlw	low (STR_2| (0+32768))
 21879  1E79  0140               	movlb	0	; select bank0
 21880  1E7A  00AC               	movwf	display@a
 21881  1E7B  30A8               	movlw	high (STR_2| (0+32768))
 21882  1E7C  00AD               	movwf	display@a+1
 21883  1E7D  3080               	movlw	128
 21884  1E7E  0141               	movlb	1	; select bank1
 21885  1E7F  00A0               	movwf	??_checkBatteryVoltage^(0+128)
 21886  1E80  0820               	movf	??_checkBatteryVoltage^(0+128),w
 21887  1E81  0140               	movlb	0	; select bank0
 21888  1E82  00AE               	movwf	display@add
 21889  1E83  31A2  2297  319D   	fcall	_display
 21890                           
 21891                           ;main.c: 181: lcd(((0x80)+2),(0));
 21892  1E86  0140               	movlb	0	; select bank0
 21893  1E87  01A9               	clrf	lcd@b
 21894  1E88  3082               	movlw	130
 21895  1E89  31A4  245E  319D   	fcall	_lcd
 21896                           
 21897                           ;main.c: 182: number_5(battVoltSamples);
 21898  1E8C  0141               	movlb	1	; select bank1
 21899  1E8D  083C               	movf	(_battVoltSamples+3)^(0+128),w
 21900  1E8E  0140               	movlb	0	; select bank0
 21901  1E8F  00BB               	movwf	number_5@num+3
 21902  1E90  0141               	movlb	1	; select bank1
 21903  1E91  083B               	movf	(_battVoltSamples+2)^(0+128),w
 21904  1E92  0140               	movlb	0	; select bank0
 21905  1E93  00BA               	movwf	number_5@num+2
 21906  1E94  0141               	movlb	1	; select bank1
 21907  1E95  083A               	movf	(_battVoltSamples+1)^(0+128),w
 21908  1E96  0140               	movlb	0	; select bank0
 21909  1E97  00B9               	movwf	number_5@num+1
 21910  1E98  0141               	movlb	1	; select bank1
 21911  1E99  0839               	movf	_battVoltSamples^(0+128),w
 21912  1E9A  0140               	movlb	0	; select bank0
 21913  1E9B  00B8               	movwf	number_5@num
 21914  1E9C  3190  2058         	fcall	_number_5
 21915  1E9E                     l9429:	
 21916                           
 21917                           ;main.c: 183: }
 21918                           ;main.c: 184: battVoltSamples = tempBattVoltSamples = 0;
 21919  1E9E  3000               	movlw	0
 21920  1E9F  0142               	movlb	2	; select bank2
 21921  1EA0  00AB               	movwf	(_tempBattVoltSamples+3)^(0+256)
 21922  1EA1  3000               	movlw	0
 21923  1EA2  00AA               	movwf	(_tempBattVoltSamples+2)^(0+256)
 21924  1EA3  3000               	movlw	0
 21925  1EA4  00A9               	movwf	(_tempBattVoltSamples+1)^(0+256)
 21926  1EA5  3000               	movlw	0
 21927  1EA6  00A8               	movwf	_tempBattVoltSamples^(0+256)
 21928  1EA7  082B               	movf	(_tempBattVoltSamples+3)^(0+256),w
 21929  1EA8  0141               	movlb	1	; select bank1
 21930  1EA9  00BC               	movwf	(_battVoltSamples+3)^(0+128)
 21931  1EAA  0142               	movlb	2	; select bank2
 21932  1EAB  082A               	movf	(_tempBattVoltSamples+2)^(0+256),w
 21933  1EAC  0141               	movlb	1	; select bank1
 21934  1EAD  00BB               	movwf	(_battVoltSamples+2)^(0+128)
 21935  1EAE  0142               	movlb	2	; select bank2
 21936  1EAF  0829               	movf	(_tempBattVoltSamples+1)^(0+256),w
 21937  1EB0  0141               	movlb	1	; select bank1
 21938  1EB1  00BA               	movwf	(_battVoltSamples+1)^(0+128)
 21939  1EB2  0142               	movlb	2	; select bank2
 21940  1EB3  0828               	movf	_tempBattVoltSamples^(0+256),w
 21941  1EB4  0141               	movlb	1	; select bank1
 21942  1EB5                     L8:	
 21943  1EB5  00B9               	movwf	_battVoltSamples^(0+128)
 21944                           
 21945                           ;main.c: 185: }
 21946                           ;main.c: 186: adcSamplingBattVoltTimeExpired = 0;
 21947  1EB6  1072               	bcf	_adcSamplingBattVoltTimeExpired/(0+8),_adcSamplingBattVoltTimeExpired& (0+7)
 21948  1EB7  0008               	return
 21949  1EB8                     __end_of_checkBatteryVoltage:	
 21950                           
 21951                           	psect	text38
 21952  1058                     __ptext38:	
 21953 ;; *************** function _number_5 *****************
 21954 ;; Defined at:
 21955 ;;		line 156 in file "lcd.c"
 21956 ;; Parameters:    Size  Location     Type
 21957 ;;  num             4   24[BANK0 ] unsigned long 
 21958 ;; Auto vars:     Size  Location     Type
 21959 ;;  arr            10   32[BANK0 ] unsigned char [10]
 21960 ;;  num5            4   76[BANK0 ] unsigned long 
 21961 ;;  num4            4   72[BANK0 ] unsigned long 
 21962 ;;  num3            4   68[BANK0 ] unsigned long 
 21963 ;;  num2            4   64[BANK0 ] unsigned long 
 21964 ;;  num1            4   60[BANK0 ] unsigned long 
 21965 ;;  tenThou         4   54[BANK0 ] unsigned long 
 21966 ;;  thou            4   50[BANK0 ] unsigned long 
 21967 ;;  hun             4   46[BANK0 ] unsigned long 
 21968 ;;  ten             4   42[BANK0 ] unsigned long 
 21969 ;;  unit            2   58[BANK0 ] unsigned int 
 21970 ;;  c               2    0        unsigned int 
 21971 ;;  b               2    0        unsigned int 
 21972 ;;  a               2    0        unsigned int 
 21973 ;;  temp            2    0        unsigned int 
 21974 ;; Return value:  Size  Location     Type
 21975 ;;                  1    wreg      void 
 21976 ;; Registers used:
 21977 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21978 ;; Tracked objects:
 21979 ;;		On entry : 0/0
 21980 ;;		On exit  : 0/0
 21981 ;;		Unchanged: 0/0
 21982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 21983 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21984 ;;      Locals:         0      48       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21985 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21986 ;;      Totals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21987 ;;Total ram usage:       56 bytes
 21988 ;; Hardware stack levels used:    1
 21989 ;; Hardware stack levels required when called:    5
 21990 ;; This function calls:
 21991 ;;		___lldiv
 21992 ;;		___llmod
 21993 ;;		_lcd
 21994 ;; This function is called by:
 21995 ;;		_checkCurrentSensor
 21996 ;;		_checkBatteryVoltage
 21997 ;;		_checkMainSupplyFailure
 21998 ;;		_ouputOnClockwise
 21999 ;;		_ouputOnAntiClock
 22000 ;;		_default_menu
 22001 ;; This function uses a non-reentrant model
 22002 ;;
 22003                           
 22004                           
 22005                           ;psect for function _number_5
 22006  1058                     _number_5:	
 22007                           
 22008                           ;lcd.c: 158: char arr[10] = {"0123456789"};
 22009                           
 22010                           ;incstack = 0
 22011                           ; Regs used in _number_5: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 22012  1058  30B1               	movlw	low number_5@F15364
 22013  1059  0086               	movwf	6
 22014  105A  3001               	movlw	high number_5@F15364
 22015  105B  0087               	movwf	7
 22016  105C  3040               	movlw	low number_5@arr
 22017  105D  0084               	movwf	4
 22018  105E  3000               	movlw	high number_5@arr
 22019  105F  0085               	movwf	5
 22020  1060  300A               	movlw	10
 22021  1061  0140               	movlb	0	; select bank0
 22022  1062  00BC               	movwf	??_number_5
 22023  1063                     u5420:	
 22024  1063  0016               	moviw fsr1++
 22025  1064  001A               	movwi fsr0++
 22026  1065  0BBC               	decfsz	??_number_5,f
 22027  1066  2863               	goto	u5420
 22028                           
 22029                           ;lcd.c: 159: U16 temp, unit;
 22030                           ;lcd.c: 160: U16 a,b,c;
 22031                           ;lcd.c: 161: U32 ten, hun, thou, tenThou;
 22032                           ;lcd.c: 163: U32 num1 = 0x030;
 22033  1067  3000               	movlw	0
 22034  1068  00DF               	movwf	number_5@num1+3
 22035  1069  3000               	movlw	0
 22036  106A  00DE               	movwf	number_5@num1+2
 22037  106B  3000               	movlw	0
 22038  106C  00DD               	movwf	number_5@num1+1
 22039  106D  3030               	movlw	48
 22040  106E  00DC               	movwf	number_5@num1
 22041                           
 22042                           ;lcd.c: 164: U32 num2 = 0x030;
 22043  106F  3000               	movlw	0
 22044  1070  00E3               	movwf	number_5@num2+3
 22045  1071  3000               	movlw	0
 22046  1072  00E2               	movwf	number_5@num2+2
 22047  1073  3000               	movlw	0
 22048  1074  00E1               	movwf	number_5@num2+1
 22049  1075  3030               	movlw	48
 22050  1076  00E0               	movwf	number_5@num2
 22051                           
 22052                           ;lcd.c: 165: U32 num3 = 0x030;
 22053  1077  3000               	movlw	0
 22054  1078  00E7               	movwf	number_5@num3+3
 22055  1079  3000               	movlw	0
 22056  107A  00E6               	movwf	number_5@num3+2
 22057  107B  3000               	movlw	0
 22058  107C  00E5               	movwf	number_5@num3+1
 22059  107D  3030               	movlw	48
 22060  107E  00E4               	movwf	number_5@num3
 22061                           
 22062                           ;lcd.c: 166: U32 num4 = 0x030;
 22063  107F  3000               	movlw	0
 22064  1080  00EB               	movwf	number_5@num4+3
 22065  1081  3000               	movlw	0
 22066  1082  00EA               	movwf	number_5@num4+2
 22067  1083  3000               	movlw	0
 22068  1084  00E9               	movwf	number_5@num4+1
 22069  1085  3030               	movlw	48
 22070  1086  00E8               	movwf	number_5@num4
 22071                           
 22072                           ;lcd.c: 167: U32 num5 = 0x030;
 22073  1087  3000               	movlw	0
 22074  1088  00EF               	movwf	number_5@num5+3
 22075  1089  3000               	movlw	0
 22076  108A  00EE               	movwf	number_5@num5+2
 22077  108B  3000               	movlw	0
 22078  108C  00ED               	movwf	number_5@num5+1
 22079  108D  3030               	movlw	48
 22080  108E  00EC               	movwf	number_5@num5
 22081                           
 22082                           ;lcd.c: 169: unit = num%10;
 22083  108F  3000               	movlw	0
 22084  1090  00B1               	movwf	___llmod@divisor+3
 22085  1091  3000               	movlw	0
 22086  1092  00B0               	movwf	___llmod@divisor+2
 22087  1093  3000               	movlw	0
 22088  1094  00AF               	movwf	___llmod@divisor+1
 22089  1095  300A               	movlw	10
 22090  1096  00AE               	movwf	___llmod@divisor
 22091  1097  083B               	movf	number_5@num+3,w
 22092  1098  00B5               	movwf	___llmod@dividend+3
 22093  1099  083A               	movf	number_5@num+2,w
 22094  109A  00B4               	movwf	___llmod@dividend+2
 22095  109B  0839               	movf	number_5@num+1,w
 22096  109C  00B3               	movwf	___llmod@dividend+1
 22097  109D  0838               	movf	number_5@num,w
 22098  109E  00B2               	movwf	___llmod@dividend
 22099  109F  31A3  23D5  3190   	fcall	___llmod
 22100  10A2  0140               	movlb	0	; select bank0
 22101  10A3  082F               	movf	?___llmod+1,w
 22102  10A4  00DB               	movwf	number_5@unit+1
 22103  10A5  082E               	movf	?___llmod,w
 22104  10A6  00DA               	movwf	number_5@unit
 22105                           
 22106                           ;lcd.c: 170: ten = (num/10)%10;
 22107  10A7  3000               	movlw	0
 22108  10A8  00B1               	movwf	___llmod@divisor+3
 22109  10A9  3000               	movlw	0
 22110  10AA  00B0               	movwf	___llmod@divisor+2
 22111  10AB  3000               	movlw	0
 22112  10AC  00AF               	movwf	___llmod@divisor+1
 22113  10AD  300A               	movlw	10
 22114  10AE  00AE               	movwf	___llmod@divisor
 22115  10AF  3000               	movlw	0
 22116  10B0  00A3               	movwf	___lldiv@divisor+3
 22117  10B1  3000               	movlw	0
 22118  10B2  00A2               	movwf	___lldiv@divisor+2
 22119  10B3  3000               	movlw	0
 22120  10B4  00A1               	movwf	___lldiv@divisor+1
 22121  10B5  300A               	movlw	10
 22122  10B6  00A0               	movwf	___lldiv@divisor
 22123  10B7  083B               	movf	number_5@num+3,w
 22124  10B8  00A7               	movwf	___lldiv@dividend+3
 22125  10B9  083A               	movf	number_5@num+2,w
 22126  10BA  00A6               	movwf	___lldiv@dividend+2
 22127  10BB  0839               	movf	number_5@num+1,w
 22128  10BC  00A5               	movwf	___lldiv@dividend+1
 22129  10BD  0838               	movf	number_5@num,w
 22130  10BE  00A4               	movwf	___lldiv@dividend
 22131  10BF  31A4  24FA  3190   	fcall	___lldiv
 22132  10C2  0140               	movlb	0	; select bank0
 22133  10C3  0823               	movf	?___lldiv+3,w
 22134  10C4  00B5               	movwf	___llmod@dividend+3
 22135  10C5  0822               	movf	?___lldiv+2,w
 22136  10C6  00B4               	movwf	___llmod@dividend+2
 22137  10C7  0821               	movf	?___lldiv+1,w
 22138  10C8  00B3               	movwf	___llmod@dividend+1
 22139  10C9  0820               	movf	?___lldiv,w
 22140  10CA  00B2               	movwf	___llmod@dividend
 22141  10CB  31A3  23D5  3190   	fcall	___llmod
 22142  10CE  0140               	movlb	0	; select bank0
 22143  10CF  0831               	movf	?___llmod+3,w
 22144  10D0  00CD               	movwf	number_5@ten+3
 22145  10D1  0830               	movf	?___llmod+2,w
 22146  10D2  00CC               	movwf	number_5@ten+2
 22147  10D3  082F               	movf	?___llmod+1,w
 22148  10D4  00CB               	movwf	number_5@ten+1
 22149  10D5  082E               	movf	?___llmod,w
 22150  10D6  00CA               	movwf	number_5@ten
 22151                           
 22152                           ;lcd.c: 171: hun = (num/100)%10;
 22153  10D7  3000               	movlw	0
 22154  10D8  00B1               	movwf	___llmod@divisor+3
 22155  10D9  3000               	movlw	0
 22156  10DA  00B0               	movwf	___llmod@divisor+2
 22157  10DB  3000               	movlw	0
 22158  10DC  00AF               	movwf	___llmod@divisor+1
 22159  10DD  300A               	movlw	10
 22160  10DE  00AE               	movwf	___llmod@divisor
 22161  10DF  3000               	movlw	0
 22162  10E0  00A3               	movwf	___lldiv@divisor+3
 22163  10E1  3000               	movlw	0
 22164  10E2  00A2               	movwf	___lldiv@divisor+2
 22165  10E3  3000               	movlw	0
 22166  10E4  00A1               	movwf	___lldiv@divisor+1
 22167  10E5  3064               	movlw	100
 22168  10E6  00A0               	movwf	___lldiv@divisor
 22169  10E7  083B               	movf	number_5@num+3,w
 22170  10E8  00A7               	movwf	___lldiv@dividend+3
 22171  10E9  083A               	movf	number_5@num+2,w
 22172  10EA  00A6               	movwf	___lldiv@dividend+2
 22173  10EB  0839               	movf	number_5@num+1,w
 22174  10EC  00A5               	movwf	___lldiv@dividend+1
 22175  10ED  0838               	movf	number_5@num,w
 22176  10EE  00A4               	movwf	___lldiv@dividend
 22177  10EF  31A4  24FA  3190   	fcall	___lldiv
 22178  10F2  0140               	movlb	0	; select bank0
 22179  10F3  0823               	movf	?___lldiv+3,w
 22180  10F4  00B5               	movwf	___llmod@dividend+3
 22181  10F5  0822               	movf	?___lldiv+2,w
 22182  10F6  00B4               	movwf	___llmod@dividend+2
 22183  10F7  0821               	movf	?___lldiv+1,w
 22184  10F8  00B3               	movwf	___llmod@dividend+1
 22185  10F9  0820               	movf	?___lldiv,w
 22186  10FA  00B2               	movwf	___llmod@dividend
 22187  10FB  31A3  23D5  3190   	fcall	___llmod
 22188  10FE  0140               	movlb	0	; select bank0
 22189  10FF  0831               	movf	?___llmod+3,w
 22190  1100  00D1               	movwf	number_5@hun+3
 22191  1101  0830               	movf	?___llmod+2,w
 22192  1102  00D0               	movwf	number_5@hun+2
 22193  1103  082F               	movf	?___llmod+1,w
 22194  1104  00CF               	movwf	number_5@hun+1
 22195  1105  082E               	movf	?___llmod,w
 22196  1106  00CE               	movwf	number_5@hun
 22197                           
 22198                           ;lcd.c: 172: thou = (num/1000) %10;
 22199  1107  3000               	movlw	0
 22200  1108  00B1               	movwf	___llmod@divisor+3
 22201  1109  3000               	movlw	0
 22202  110A  00B0               	movwf	___llmod@divisor+2
 22203  110B  3000               	movlw	0
 22204  110C  00AF               	movwf	___llmod@divisor+1
 22205  110D  300A               	movlw	10
 22206  110E  00AE               	movwf	___llmod@divisor
 22207  110F  3000               	movlw	0
 22208  1110  00A3               	movwf	___lldiv@divisor+3
 22209  1111  3000               	movlw	0
 22210  1112  00A2               	movwf	___lldiv@divisor+2
 22211  1113  3003               	movlw	3
 22212  1114  00A1               	movwf	___lldiv@divisor+1
 22213  1115  30E8               	movlw	232
 22214  1116  00A0               	movwf	___lldiv@divisor
 22215  1117  083B               	movf	number_5@num+3,w
 22216  1118  00A7               	movwf	___lldiv@dividend+3
 22217  1119  083A               	movf	number_5@num+2,w
 22218  111A  00A6               	movwf	___lldiv@dividend+2
 22219  111B  0839               	movf	number_5@num+1,w
 22220  111C  00A5               	movwf	___lldiv@dividend+1
 22221  111D  0838               	movf	number_5@num,w
 22222  111E  00A4               	movwf	___lldiv@dividend
 22223  111F  31A4  24FA  3190   	fcall	___lldiv
 22224  1122  0140               	movlb	0	; select bank0
 22225  1123  0823               	movf	?___lldiv+3,w
 22226  1124  00B5               	movwf	___llmod@dividend+3
 22227  1125  0822               	movf	?___lldiv+2,w
 22228  1126  00B4               	movwf	___llmod@dividend+2
 22229  1127  0821               	movf	?___lldiv+1,w
 22230  1128  00B3               	movwf	___llmod@dividend+1
 22231  1129  0820               	movf	?___lldiv,w
 22232  112A  00B2               	movwf	___llmod@dividend
 22233  112B  31A3  23D5  3190   	fcall	___llmod
 22234  112E  0140               	movlb	0	; select bank0
 22235  112F  0831               	movf	?___llmod+3,w
 22236  1130  00D5               	movwf	number_5@thou+3
 22237  1131  0830               	movf	?___llmod+2,w
 22238  1132  00D4               	movwf	number_5@thou+2
 22239  1133  082F               	movf	?___llmod+1,w
 22240  1134  00D3               	movwf	number_5@thou+1
 22241  1135  082E               	movf	?___llmod,w
 22242  1136  00D2               	movwf	number_5@thou
 22243                           
 22244                           ;lcd.c: 174: tenThou = (num/10000)%10;
 22245  1137  3000               	movlw	0
 22246  1138  00B1               	movwf	___llmod@divisor+3
 22247  1139  3000               	movlw	0
 22248  113A  00B0               	movwf	___llmod@divisor+2
 22249  113B  3000               	movlw	0
 22250  113C  00AF               	movwf	___llmod@divisor+1
 22251  113D  300A               	movlw	10
 22252  113E  00AE               	movwf	___llmod@divisor
 22253  113F  3000               	movlw	0
 22254  1140  00A3               	movwf	___lldiv@divisor+3
 22255  1141  3000               	movlw	0
 22256  1142  00A2               	movwf	___lldiv@divisor+2
 22257  1143  3027               	movlw	39
 22258  1144  00A1               	movwf	___lldiv@divisor+1
 22259  1145  3010               	movlw	16
 22260  1146  00A0               	movwf	___lldiv@divisor
 22261  1147  083B               	movf	number_5@num+3,w
 22262  1148  00A7               	movwf	___lldiv@dividend+3
 22263  1149  083A               	movf	number_5@num+2,w
 22264  114A  00A6               	movwf	___lldiv@dividend+2
 22265  114B  0839               	movf	number_5@num+1,w
 22266  114C  00A5               	movwf	___lldiv@dividend+1
 22267  114D  0838               	movf	number_5@num,w
 22268  114E  00A4               	movwf	___lldiv@dividend
 22269  114F  31A4  24FA  3190   	fcall	___lldiv
 22270  1152  0140               	movlb	0	; select bank0
 22271  1153  0823               	movf	?___lldiv+3,w
 22272  1154  00B5               	movwf	___llmod@dividend+3
 22273  1155  0822               	movf	?___lldiv+2,w
 22274  1156  00B4               	movwf	___llmod@dividend+2
 22275  1157  0821               	movf	?___lldiv+1,w
 22276  1158  00B3               	movwf	___llmod@dividend+1
 22277  1159  0820               	movf	?___lldiv,w
 22278  115A  00B2               	movwf	___llmod@dividend
 22279  115B  31A3  23D5  3190   	fcall	___llmod
 22280  115E  0140               	movlb	0	; select bank0
 22281  115F  0831               	movf	?___llmod+3,w
 22282  1160  00D9               	movwf	number_5@tenThou+3
 22283  1161  0830               	movf	?___llmod+2,w
 22284  1162  00D8               	movwf	number_5@tenThou+2
 22285  1163  082F               	movf	?___llmod+1,w
 22286  1164  00D7               	movwf	number_5@tenThou+1
 22287  1165  082E               	movf	?___llmod,w
 22288  1166  00D6               	movwf	number_5@tenThou
 22289                           
 22290                           ;lcd.c: 176: if(num > 9999)
 22291  1167  083B               	movf	number_5@num+3,w
 22292  1168  1D03               	btfss	3,2
 22293  1169  2973               	goto	l8397
 22294  116A  083A               	movf	number_5@num+2,w
 22295  116B  1D03               	btfss	3,2
 22296  116C  2973               	goto	l8397
 22297  116D  3010               	movlw	16
 22298  116E  0238               	subwf	number_5@num,w
 22299  116F  3027               	movlw	39
 22300  1170  3B39               	subwfb	number_5@num+1,w
 22301  1171  1C03               	btfss	3,0
 22302  1172  2984               	goto	l8399
 22303  1173                     l8397:	
 22304                           
 22305                           ;lcd.c: 177: num1 = arr[tenThou];
 22306  1173  0856               	movf	number_5@tenThou,w
 22307  1174  3E40               	addlw	(low (number_5@arr| 0))& (0+255)
 22308  1175  0086               	movwf	6
 22309  1176  0187               	clrf	7
 22310  1177  0801               	movf	1,w
 22311  1178  00BC               	movwf	??_number_5
 22312  1179  01BD               	clrf	??_number_5+1
 22313  117A  01BE               	clrf	??_number_5+2
 22314  117B  01BF               	clrf	??_number_5+3
 22315  117C  083F               	movf	??_number_5+3,w
 22316  117D  00DF               	movwf	number_5@num1+3
 22317  117E  083E               	movf	??_number_5+2,w
 22318  117F  00DE               	movwf	number_5@num1+2
 22319  1180  083D               	movf	??_number_5+1,w
 22320  1181  00DD               	movwf	number_5@num1+1
 22321  1182  083C               	movf	??_number_5,w
 22322  1183  00DC               	movwf	number_5@num1
 22323  1184                     l8399:	
 22324                           
 22325                           ;lcd.c: 178: if(num > 999)
 22326  1184  083B               	movf	number_5@num+3,w
 22327  1185  1D03               	btfss	3,2
 22328  1186  2990               	goto	l8401
 22329  1187  083A               	movf	number_5@num+2,w
 22330  1188  1D03               	btfss	3,2
 22331  1189  2990               	goto	l8401
 22332  118A  30E8               	movlw	232
 22333  118B  0238               	subwf	number_5@num,w
 22334  118C  3003               	movlw	3
 22335  118D  3B39               	subwfb	number_5@num+1,w
 22336  118E  1C03               	btfss	3,0
 22337  118F  29A1               	goto	l8403
 22338  1190                     l8401:	
 22339                           
 22340                           ;lcd.c: 179: num2 = arr[thou];
 22341  1190  0852               	movf	number_5@thou,w
 22342  1191  3E40               	addlw	(low (number_5@arr| 0))& (0+255)
 22343  1192  0086               	movwf	6
 22344  1193  0187               	clrf	7
 22345  1194  0801               	movf	1,w
 22346  1195  00BC               	movwf	??_number_5
 22347  1196  01BD               	clrf	??_number_5+1
 22348  1197  01BE               	clrf	??_number_5+2
 22349  1198  01BF               	clrf	??_number_5+3
 22350  1199  083F               	movf	??_number_5+3,w
 22351  119A  00E3               	movwf	number_5@num2+3
 22352  119B  083E               	movf	??_number_5+2,w
 22353  119C  00E2               	movwf	number_5@num2+2
 22354  119D  083D               	movf	??_number_5+1,w
 22355  119E  00E1               	movwf	number_5@num2+1
 22356  119F  083C               	movf	??_number_5,w
 22357  11A0  00E0               	movwf	number_5@num2
 22358  11A1                     l8403:	
 22359                           
 22360                           ;lcd.c: 180: if(num > 99)
 22361  11A1  083B               	movf	number_5@num+3,w
 22362  11A2  1D03               	btfss	3,2
 22363  11A3  29AE               	goto	l8405
 22364  11A4  083A               	movf	number_5@num+2,w
 22365  11A5  1D03               	btfss	3,2
 22366  11A6  29AE               	goto	l8405
 22367  11A7  0839               	movf	number_5@num+1,w
 22368  11A8  1D03               	btfss	3,2
 22369  11A9  29AE               	goto	l8405
 22370  11AA  3064               	movlw	100
 22371  11AB  0238               	subwf	number_5@num,w
 22372  11AC  1C03               	btfss	3,0
 22373  11AD  29BF               	goto	l8407
 22374  11AE                     l8405:	
 22375                           
 22376                           ;lcd.c: 181: num3 = arr[hun];
 22377  11AE  084E               	movf	number_5@hun,w
 22378  11AF  3E40               	addlw	(low (number_5@arr| 0))& (0+255)
 22379  11B0  0086               	movwf	6
 22380  11B1  0187               	clrf	7
 22381  11B2  0801               	movf	1,w
 22382  11B3  00BC               	movwf	??_number_5
 22383  11B4  01BD               	clrf	??_number_5+1
 22384  11B5  01BE               	clrf	??_number_5+2
 22385  11B6  01BF               	clrf	??_number_5+3
 22386  11B7  083F               	movf	??_number_5+3,w
 22387  11B8  00E7               	movwf	number_5@num3+3
 22388  11B9  083E               	movf	??_number_5+2,w
 22389  11BA  00E6               	movwf	number_5@num3+2
 22390  11BB  083D               	movf	??_number_5+1,w
 22391  11BC  00E5               	movwf	number_5@num3+1
 22392  11BD  083C               	movf	??_number_5,w
 22393  11BE  00E4               	movwf	number_5@num3
 22394  11BF                     l8407:	
 22395                           
 22396                           ;lcd.c: 182: if(num > 9)
 22397  11BF  083B               	movf	number_5@num+3,w
 22398  11C0  1D03               	btfss	3,2
 22399  11C1  29CC               	goto	l8409
 22400  11C2  083A               	movf	number_5@num+2,w
 22401  11C3  1D03               	btfss	3,2
 22402  11C4  29CC               	goto	l8409
 22403  11C5  0839               	movf	number_5@num+1,w
 22404  11C6  1D03               	btfss	3,2
 22405  11C7  29CC               	goto	l8409
 22406  11C8  300A               	movlw	10
 22407  11C9  0238               	subwf	number_5@num,w
 22408  11CA  1C03               	btfss	3,0
 22409  11CB  29DD               	goto	l1461
 22410  11CC                     l8409:	
 22411                           
 22412                           ;lcd.c: 183: num4 = arr[ten];
 22413  11CC  084A               	movf	number_5@ten,w
 22414  11CD  3E40               	addlw	(low (number_5@arr| 0))& (0+255)
 22415  11CE  0086               	movwf	6
 22416  11CF  0187               	clrf	7
 22417  11D0  0801               	movf	1,w
 22418  11D1  00BC               	movwf	??_number_5
 22419  11D2  01BD               	clrf	??_number_5+1
 22420  11D3  01BE               	clrf	??_number_5+2
 22421  11D4  01BF               	clrf	??_number_5+3
 22422  11D5  083F               	movf	??_number_5+3,w
 22423  11D6  00EB               	movwf	number_5@num4+3
 22424  11D7  083E               	movf	??_number_5+2,w
 22425  11D8  00EA               	movwf	number_5@num4+2
 22426  11D9  083D               	movf	??_number_5+1,w
 22427  11DA  00E9               	movwf	number_5@num4+1
 22428  11DB  083C               	movf	??_number_5,w
 22429  11DC  00E8               	movwf	number_5@num4
 22430  11DD                     l1461:	
 22431                           
 22432                           ;lcd.c: 185: num5 = arr[unit];
 22433  11DD  085A               	movf	number_5@unit,w
 22434  11DE  3E40               	addlw	(low (number_5@arr| 0))& (0+255)
 22435  11DF  0086               	movwf	6
 22436  11E0  0187               	clrf	7
 22437  11E1  0801               	movf	1,w
 22438  11E2  00BC               	movwf	??_number_5
 22439  11E3  01BD               	clrf	??_number_5+1
 22440  11E4  01BE               	clrf	??_number_5+2
 22441  11E5  01BF               	clrf	??_number_5+3
 22442  11E6  083F               	movf	??_number_5+3,w
 22443  11E7  00EF               	movwf	number_5@num5+3
 22444  11E8  083E               	movf	??_number_5+2,w
 22445  11E9  00EE               	movwf	number_5@num5+2
 22446  11EA  083D               	movf	??_number_5+1,w
 22447  11EB  00ED               	movwf	number_5@num5+1
 22448  11EC  083C               	movf	??_number_5,w
 22449  11ED  00EC               	movwf	number_5@num5
 22450                           
 22451                           ;lcd.c: 188: lcd(num1,(1));
 22452  11EE  01A9               	clrf	lcd@b
 22453  11EF  0AA9               	incf	lcd@b,f
 22454  11F0  085C               	movf	number_5@num1,w
 22455  11F1  31A4  245E  3190   	fcall	_lcd
 22456                           
 22457                           ;lcd.c: 190: lcd(num2,(1));
 22458  11F4  0140               	movlb	0	; select bank0
 22459  11F5  01A9               	clrf	lcd@b
 22460  11F6  0AA9               	incf	lcd@b,f
 22461  11F7  0860               	movf	number_5@num2,w
 22462  11F8  31A4  245E  3190   	fcall	_lcd
 22463                           
 22464                           ;lcd.c: 192: lcd(num3,(1));
 22465  11FB  0140               	movlb	0	; select bank0
 22466  11FC  01A9               	clrf	lcd@b
 22467  11FD  0AA9               	incf	lcd@b,f
 22468  11FE  0864               	movf	number_5@num3,w
 22469  11FF  31A4  245E  3190   	fcall	_lcd
 22470                           
 22471                           ;lcd.c: 195: lcd(num4,(1));
 22472  1202  0140               	movlb	0	; select bank0
 22473  1203  01A9               	clrf	lcd@b
 22474  1204  0AA9               	incf	lcd@b,f
 22475  1205  0868               	movf	number_5@num4,w
 22476  1206  31A4  245E  3190   	fcall	_lcd
 22477                           
 22478                           ;lcd.c: 197: lcd(num5,(1));
 22479  1209  0140               	movlb	0	; select bank0
 22480  120A  01A9               	clrf	lcd@b
 22481  120B  0AA9               	incf	lcd@b,f
 22482  120C  086C               	movf	number_5@num5,w
 22483  120D  31A4  245E         	fcall	_lcd
 22484  120F  0008               	return
 22485  1210                     __end_of_number_5:	
 22486                           
 22487                           	psect	text39
 22488  23D5                     __ptext39:	
 22489 ;; *************** function ___llmod *****************
 22490 ;; Defined at:
 22491 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\llmod.c"
 22492 ;; Parameters:    Size  Location     Type
 22493 ;;  divisor         4   14[BANK0 ] unsigned long 
 22494 ;;  dividend        4   18[BANK0 ] unsigned long 
 22495 ;; Auto vars:     Size  Location     Type
 22496 ;;  counter         1   23[BANK0 ] unsigned char 
 22497 ;; Return value:  Size  Location     Type
 22498 ;;                  4   14[BANK0 ] unsigned long 
 22499 ;; Registers used:
 22500 ;;		wreg, status,2, status,0
 22501 ;; Tracked objects:
 22502 ;;		On entry : 0/0
 22503 ;;		On exit  : 0/0
 22504 ;;		Unchanged: 0/0
 22505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 22506 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22507 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22508 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22509 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22510 ;;Total ram usage:       10 bytes
 22511 ;; Hardware stack levels used:    1
 22512 ;; Hardware stack levels required when called:    4
 22513 ;; This function calls:
 22514 ;;		Nothing
 22515 ;; This function is called by:
 22516 ;;		_number_4
 22517 ;;		_number_5
 22518 ;; This function uses a non-reentrant model
 22519 ;;
 22520                           
 22521                           
 22522                           ;psect for function ___llmod
 22523  23D5                     ___llmod:	
 22524                           
 22525                           ;incstack = 0
 22526                           ; Regs used in ___llmod: [wreg+status,2+status,0]
 22527  23D5  0140               	movlb	0	; select bank0
 22528  23D6  0831               	movf	___llmod@divisor+3,w
 22529  23D7  0430               	iorwf	___llmod@divisor+2,w
 22530  23D8  042F               	iorwf	___llmod@divisor+1,w
 22531  23D9  042E               	iorwf	___llmod@divisor,w
 22532  23DA  1903               	skipnz
 22533  23DB  2C0F               	goto	l8267
 22534  23DC  01B7               	clrf	___llmod@counter
 22535  23DD  0AB7               	incf	___llmod@counter,f
 22536  23DE                     l8257:	
 22537  23DE  1BB1               	btfsc	___llmod@divisor+3,7
 22538  23DF  2BEC               	goto	l8259
 22539  23E0  3001               	movlw	1
 22540  23E1                     u5185:	
 22541  23E1  35AE               	lslf	___llmod@divisor,f
 22542  23E2  0DAF               	rlf	___llmod@divisor+1,f
 22543  23E3  0DB0               	rlf	___llmod@divisor+2,f
 22544  23E4  0DB1               	rlf	___llmod@divisor+3,f
 22545  23E5  0B89               	decfsz	9,f
 22546  23E6  2BE1               	goto	u5185
 22547  23E7  3001               	movlw	1
 22548  23E8  00B6               	movwf	??___llmod
 22549  23E9  0836               	movf	??___llmod,w
 22550  23EA  07B7               	addwf	___llmod@counter,f
 22551  23EB  2BDE               	goto	l8257
 22552  23EC                     l8259:	
 22553  23EC  0831               	movf	___llmod@divisor+3,w
 22554  23ED  0235               	subwf	___llmod@dividend+3,w
 22555  23EE  1D03               	skipz
 22556  23EF  2BFA               	goto	u5205
 22557  23F0  0830               	movf	___llmod@divisor+2,w
 22558  23F1  0234               	subwf	___llmod@dividend+2,w
 22559  23F2  1D03               	skipz
 22560  23F3  2BFA               	goto	u5205
 22561  23F4  082F               	movf	___llmod@divisor+1,w
 22562  23F5  0233               	subwf	___llmod@dividend+1,w
 22563  23F6  1D03               	skipz
 22564  23F7  2BFA               	goto	u5205
 22565  23F8  082E               	movf	___llmod@divisor,w
 22566  23F9  0232               	subwf	___llmod@dividend,w
 22567  23FA                     u5205:	
 22568  23FA  1C03               	skipc
 22569  23FB  2C04               	goto	l8263
 22570  23FC  082E               	movf	___llmod@divisor,w
 22571  23FD  02B2               	subwf	___llmod@dividend,f
 22572  23FE  082F               	movf	___llmod@divisor+1,w
 22573  23FF  3BB3               	subwfb	___llmod@dividend+1,f
 22574  2400  0830               	movf	___llmod@divisor+2,w
 22575  2401  3BB4               	subwfb	___llmod@dividend+2,f
 22576  2402  0831               	movf	___llmod@divisor+3,w
 22577  2403  3BB5               	subwfb	___llmod@dividend+3,f
 22578  2404                     l8263:	
 22579  2404  3001               	movlw	1
 22580  2405                     u5215:	
 22581  2405  36B1               	lsrf	___llmod@divisor+3,f
 22582  2406  0CB0               	rrf	___llmod@divisor+2,f
 22583  2407  0CAF               	rrf	___llmod@divisor+1,f
 22584  2408  0CAE               	rrf	___llmod@divisor,f
 22585  2409  0B89               	decfsz	9,f
 22586  240A  2C05               	goto	u5215
 22587  240B  3001               	movlw	1
 22588  240C  02B7               	subwf	___llmod@counter,f
 22589  240D  1D03               	btfss	3,2
 22590  240E  2BEC               	goto	l8259
 22591  240F                     l8267:	
 22592  240F  0835               	movf	___llmod@dividend+3,w
 22593  2410  00B1               	movwf	?___llmod+3
 22594  2411  0834               	movf	___llmod@dividend+2,w
 22595  2412  00B0               	movwf	?___llmod+2
 22596  2413  0833               	movf	___llmod@dividend+1,w
 22597  2414  00AF               	movwf	?___llmod+1
 22598  2415  0832               	movf	___llmod@dividend,w
 22599  2416  00AE               	movwf	?___llmod
 22600  2417  0008               	return
 22601  2418                     __end_of___llmod:	
 22602                           
 22603                           	psect	text40
 22604  24FA                     __ptext40:	
 22605 ;; *************** function ___lldiv *****************
 22606 ;; Defined at:
 22607 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\lldiv.c"
 22608 ;; Parameters:    Size  Location     Type
 22609 ;;  divisor         4    0[BANK0 ] unsigned long 
 22610 ;;  dividend        4    4[BANK0 ] unsigned long 
 22611 ;; Auto vars:     Size  Location     Type
 22612 ;;  quotient        4    9[BANK0 ] unsigned long 
 22613 ;;  counter         1   13[BANK0 ] unsigned char 
 22614 ;; Return value:  Size  Location     Type
 22615 ;;                  4    0[BANK0 ] unsigned long 
 22616 ;; Registers used:
 22617 ;;		wreg, status,2, status,0
 22618 ;; Tracked objects:
 22619 ;;		On entry : 0/0
 22620 ;;		On exit  : 0/0
 22621 ;;		Unchanged: 0/0
 22622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 22623 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22624 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22625 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22626 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22627 ;;Total ram usage:       14 bytes
 22628 ;; Hardware stack levels used:    1
 22629 ;; Hardware stack levels required when called:    4
 22630 ;; This function calls:
 22631 ;;		Nothing
 22632 ;; This function is called by:
 22633 ;;		_number_4
 22634 ;;		_number_5
 22635 ;; This function uses a non-reentrant model
 22636 ;;
 22637                           
 22638                           
 22639                           ;psect for function ___lldiv
 22640  24FA                     ___lldiv:	
 22641                           
 22642                           ;incstack = 0
 22643                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 22644  24FA  3000               	movlw	0
 22645  24FB  0140               	movlb	0	; select bank0
 22646  24FC  00AC               	movwf	___lldiv@quotient+3
 22647  24FD  3000               	movlw	0
 22648  24FE  00AB               	movwf	___lldiv@quotient+2
 22649  24FF  3000               	movlw	0
 22650  2500  00AA               	movwf	___lldiv@quotient+1
 22651  2501  3000               	movlw	0
 22652  2502  00A9               	movwf	___lldiv@quotient
 22653  2503  0823               	movf	___lldiv@divisor+3,w
 22654  2504  0422               	iorwf	___lldiv@divisor+2,w
 22655  2505  0421               	iorwf	___lldiv@divisor+1,w
 22656  2506  0420               	iorwf	___lldiv@divisor,w
 22657  2507  1903               	skipnz
 22658  2508  2D44               	goto	l8247
 22659  2509  01AD               	clrf	___lldiv@counter
 22660  250A  0AAD               	incf	___lldiv@counter,f
 22661  250B                     l8233:	
 22662  250B  1BA3               	btfsc	___lldiv@divisor+3,7
 22663  250C  2D19               	goto	l8235
 22664  250D  3001               	movlw	1
 22665  250E                     u5115:	
 22666  250E  35A0               	lslf	___lldiv@divisor,f
 22667  250F  0DA1               	rlf	___lldiv@divisor+1,f
 22668  2510  0DA2               	rlf	___lldiv@divisor+2,f
 22669  2511  0DA3               	rlf	___lldiv@divisor+3,f
 22670  2512  0B89               	decfsz	9,f
 22671  2513  2D0E               	goto	u5115
 22672  2514  3001               	movlw	1
 22673  2515  00A8               	movwf	??___lldiv
 22674  2516  0828               	movf	??___lldiv,w
 22675  2517  07AD               	addwf	___lldiv@counter,f
 22676  2518  2D0B               	goto	l8233
 22677  2519                     l8235:	
 22678  2519  3001               	movlw	1
 22679  251A                     u5135:	
 22680  251A  35A9               	lslf	___lldiv@quotient,f
 22681  251B  0DAA               	rlf	___lldiv@quotient+1,f
 22682  251C  0DAB               	rlf	___lldiv@quotient+2,f
 22683  251D  0DAC               	rlf	___lldiv@quotient+3,f
 22684  251E  0B89               	decfsz	9,f
 22685  251F  2D1A               	goto	u5135
 22686  2520  0823               	movf	___lldiv@divisor+3,w
 22687  2521  0227               	subwf	___lldiv@dividend+3,w
 22688  2522  1D03               	skipz
 22689  2523  2D2E               	goto	u5145
 22690  2524  0822               	movf	___lldiv@divisor+2,w
 22691  2525  0226               	subwf	___lldiv@dividend+2,w
 22692  2526  1D03               	skipz
 22693  2527  2D2E               	goto	u5145
 22694  2528  0821               	movf	___lldiv@divisor+1,w
 22695  2529  0225               	subwf	___lldiv@dividend+1,w
 22696  252A  1D03               	skipz
 22697  252B  2D2E               	goto	u5145
 22698  252C  0820               	movf	___lldiv@divisor,w
 22699  252D  0224               	subwf	___lldiv@dividend,w
 22700  252E                     u5145:	
 22701  252E  1C03               	skipc
 22702  252F  2D39               	goto	l8243
 22703  2530  0820               	movf	___lldiv@divisor,w
 22704  2531  02A4               	subwf	___lldiv@dividend,f
 22705  2532  0821               	movf	___lldiv@divisor+1,w
 22706  2533  3BA5               	subwfb	___lldiv@dividend+1,f
 22707  2534  0822               	movf	___lldiv@divisor+2,w
 22708  2535  3BA6               	subwfb	___lldiv@dividend+2,f
 22709  2536  0823               	movf	___lldiv@divisor+3,w
 22710  2537  3BA7               	subwfb	___lldiv@dividend+3,f
 22711  2538  1429               	bsf	___lldiv@quotient,0
 22712  2539                     l8243:	
 22713  2539  3001               	movlw	1
 22714  253A                     u5155:	
 22715  253A  36A3               	lsrf	___lldiv@divisor+3,f
 22716  253B  0CA2               	rrf	___lldiv@divisor+2,f
 22717  253C  0CA1               	rrf	___lldiv@divisor+1,f
 22718  253D  0CA0               	rrf	___lldiv@divisor,f
 22719  253E  0B89               	decfsz	9,f
 22720  253F  2D3A               	goto	u5155
 22721  2540  3001               	movlw	1
 22722  2541  02AD               	subwf	___lldiv@counter,f
 22723  2542  1D03               	btfss	3,2
 22724  2543  2D19               	goto	l8235
 22725  2544                     l8247:	
 22726  2544  082C               	movf	___lldiv@quotient+3,w
 22727  2545  00A3               	movwf	?___lldiv+3
 22728  2546  082B               	movf	___lldiv@quotient+2,w
 22729  2547  00A2               	movwf	?___lldiv+2
 22730  2548  082A               	movf	___lldiv@quotient+1,w
 22731  2549  00A1               	movwf	?___lldiv+1
 22732  254A  0829               	movf	___lldiv@quotient,w
 22733  254B  00A0               	movwf	?___lldiv
 22734  254C  0008               	return
 22735  254D                     __end_of___lldiv:	
 22736                           
 22737                           	psect	text41
 22738  2297                     __ptext41:	
 22739 ;; *************** function _display *****************
 22740 ;; Defined at:
 22741 ;;		line 48 in file "lcd.c"
 22742 ;; Parameters:    Size  Location     Type
 22743 ;;  a               2   12[BANK0 ] PTR unsigned char 
 22744 ;;		 -> STR_41(2), STR_40(2), STR_39(2), STR_38(2), 
 22745 ;;		 -> STR_37(2), STR_36(2), STR_35(13), STR_34(11), 
 22746 ;;		 -> STR_33(12), STR_32(13), STR_31(11), STR_30(12), 
 22747 ;;		 -> STR_29(2), STR_28(2), STR_27(2), STR_26(2), 
 22748 ;;		 -> STR_25(2), STR_24(2), STR_23(13), STR_22(13), 
 22749 ;;		 -> STR_21(17), STR_20(17), STR_19(4), STR_18(4), 
 22750 ;;		 -> STR_17(2), STR_16(2), STR_15(2), STR_14(17), 
 22751 ;;		 -> STR_13(17), STR_12(17), STR_11(17), STR_10(17), 
 22752 ;;		 -> STR_9(17), STR_8(17), STR_7(17), STR_6(17), 
 22753 ;;		 -> STR_5(4), STR_4(4), STR_3(4), STR_2(4), 
 22754 ;;		 -> STR_1(10), 
 22755 ;;  add             1   14[BANK0 ] unsigned char 
 22756 ;; Auto vars:     Size  Location     Type
 22757 ;;  i               2   16[BANK0 ] int 
 22758 ;; Return value:  Size  Location     Type
 22759 ;;                  1    wreg      void 
 22760 ;; Registers used:
 22761 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 22762 ;; Tracked objects:
 22763 ;;		On entry : 0/0
 22764 ;;		On exit  : 0/0
 22765 ;;		Unchanged: 0/0
 22766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 22767 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22768 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22769 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22770 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22771 ;;Total ram usage:        6 bytes
 22772 ;; Hardware stack levels used:    1
 22773 ;; Hardware stack levels required when called:    5
 22774 ;; This function calls:
 22775 ;;		_lcd
 22776 ;; This function is called by:
 22777 ;;		_checkCurrentSensor
 22778 ;;		_checkBatteryVoltage
 22779 ;;		_checkMainSupplyFailure
 22780 ;;		_ouputOnClockwise
 22781 ;;		_ouputOnAntiClock
 22782 ;;		_outputOn
 22783 ;;		_default_menu
 22784 ;;		_main
 22785 ;;		_serialCommand
 22786 ;;		_initMemRead
 22787 ;; This function uses a non-reentrant model
 22788 ;;
 22789                           
 22790                           
 22791                           ;psect for function _display
 22792  2297                     _display:	
 22793                           
 22794                           ;lcd.c: 50: int i = 0;
 22795                           
 22796                           ;incstack = 0
 22797                           ; Regs used in _display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 22798  2297  0140               	movlb	0	; select bank0
 22799  2298  01B0               	clrf	display@i
 22800  2299  01B1               	clrf	display@i+1
 22801                           
 22802                           ;lcd.c: 51: lcd(add,(0));
 22803  229A  01A9               	clrf	lcd@b
 22804  229B  082E               	movf	display@add,w
 22805  229C  31A4  245E  31A2   	fcall	_lcd
 22806  229F                     l8371:	
 22807                           ;lcd.c: 52: while (a[i] != ('\0')) {
 22808                           
 22809  229F  0140               	movlb	0	; select bank0
 22810  22A0  082C               	movf	display@a,w
 22811  22A1  0730               	addwf	display@i,w
 22812  22A2  0084               	movwf	4
 22813  22A3  082D               	movf	display@a+1,w
 22814  22A4  3D31               	addwfc	display@i+1,w
 22815  22A5  0085               	movwf	5
 22816  22A6  0012               	moviw fsr0++
 22817  22A7  1903               	btfsc	3,2
 22818  22A8  0008               	return
 22819                           
 22820                           ;lcd.c: 53: lcd(a[i],(1));
 22821  22A9  0140               	movlb	0	; select bank0
 22822  22AA  01A9               	clrf	lcd@b
 22823  22AB  0AA9               	incf	lcd@b,f
 22824  22AC  082C               	movf	display@a,w
 22825  22AD  0730               	addwf	display@i,w
 22826  22AE  0084               	movwf	4
 22827  22AF  082D               	movf	display@a+1,w
 22828  22B0  3D31               	addwfc	display@i+1,w
 22829  22B1  0085               	movwf	5
 22830  22B2  0800               	movf	0,w	;code access
 22831  22B3  31A4  245E  31A2   	fcall	_lcd
 22832                           
 22833                           ;lcd.c: 54: i++;
 22834  22B6  3001               	movlw	1
 22835  22B7  0140               	movlb	0	; select bank0
 22836  22B8  07B0               	addwf	display@i,f
 22837  22B9  3000               	movlw	0
 22838  22BA  3DB1               	addwfc	display@i+1,f
 22839  22BB  2A9F               	goto	l8371
 22840  22BC                     __end_of_display:	
 22841                           
 22842                           	psect	text42
 22843  245E                     __ptext42:	
 22844 ;; *************** function _lcd *****************
 22845 ;; Defined at:
 22846 ;;		line 20 in file "lcd.c"
 22847 ;; Parameters:    Size  Location     Type
 22848 ;;  a               1    wreg     unsigned char 
 22849 ;;  b               1    9[BANK0 ] unsigned char 
 22850 ;; Auto vars:     Size  Location     Type
 22851 ;;  a               1   11[BANK0 ] unsigned char 
 22852 ;; Return value:  Size  Location     Type
 22853 ;;                  1    wreg      void 
 22854 ;; Registers used:
 22855 ;;		wreg, status,2, status,0
 22856 ;; Tracked objects:
 22857 ;;		On entry : 0/0
 22858 ;;		On exit  : 0/0
 22859 ;;		Unchanged: 0/0
 22860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 22861 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22862 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22863 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22864 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22865 ;;Total ram usage:        3 bytes
 22866 ;; Hardware stack levels used:    1
 22867 ;; Hardware stack levels required when called:    4
 22868 ;; This function calls:
 22869 ;;		Nothing
 22870 ;; This function is called by:
 22871 ;;		_checkCurrentSensor
 22872 ;;		_checkBatteryVoltage
 22873 ;;		_checkMainSupplyFailure
 22874 ;;		_ouputOnClockwise
 22875 ;;		_ouputOnAntiClock
 22876 ;;		_outputOn
 22877 ;;		_default_menu
 22878 ;;		_main
 22879 ;;		_lcdInit
 22880 ;;		_display
 22881 ;;		_number_2
 22882 ;;		_number_3
 22883 ;;		_number_4
 22884 ;;		_number_5
 22885 ;;		_serialCommand
 22886 ;;		_initMemRead
 22887 ;; This function uses a non-reentrant model
 22888 ;;
 22889                           
 22890                           
 22891                           ;psect for function _lcd
 22892  245E                     _lcd:	
 22893                           
 22894                           ;incstack = 0
 22895                           ; Regs used in _lcd: [wreg+status,2+status,0]
 22896                           ;lcd@a stored from wreg
 22897  245E  0140               	movlb	0	; select bank0
 22898  245F  00AB               	movwf	lcd@a
 22899                           
 22900                           ;lcd.c: 22: (RB2) = b;
 22901  2460  1C29               	btfss	lcd@b,0
 22902  2461  2C65               	goto	u4880
 22903  2462  0140               	movlb	0	; select bank0
 22904  2463  150D               	bsf	13,2	;volatile
 22905  2464  2C67               	goto	l8123
 22906  2465                     u4880:	
 22907  2465  0140               	movlb	0	; select bank0
 22908  2466  110D               	bcf	13,2	;volatile
 22909  2467                     l8123:	
 22910                           
 22911                           ;lcd.c: 23: (PORTB) = (PORTB) & 0x0f;
 22912  2467  080D               	movf	13,w	;volatile
 22913  2468  390F               	andlw	15
 22914  2469  008D               	movwf	13	;volatile
 22915                           
 22916                           ;lcd.c: 24: (PORTB) = (PORTB) | (a & 0xf0);
 22917  246A  082B               	movf	lcd@a,w
 22918  246B  39F0               	andlw	240
 22919  246C  040D               	iorwf	13,w	;volatile
 22920  246D  008D               	movwf	13	;volatile
 22921                           
 22922                           ;lcd.c: 25: (RB3) = 1;
 22923  246E  158D               	bsf	13,3	;volatile
 22924                           
 22925                           ;lcd.c: 26: _delay((unsigned long)(((1000))*(8000000/4000000.0)));
 22926  246F  3003               	movlw	3
 22927  2470  0140               	movlb	0	; select bank0
 22928  2471  00AA               	movwf	??_lcd
 22929  2472  3097               	movlw	151
 22930  2473                     u8117:	
 22931  2473  0B89               	decfsz	9,f
 22932  2474  2C73               	goto	u8117
 22933  2475  0BAA               	decfsz	??_lcd,f
 22934  2476  2C73               	goto	u8117
 22935  2477  3200               	nop2
 22936                           
 22937                           ;lcd.c: 30: (RB3) = 0;
 22938  2478  0140               	movlb	0	; select bank0
 22939  2479  118D               	bcf	13,3	;volatile
 22940                           
 22941                           ;lcd.c: 32: _delay((unsigned long)(((1000))*(8000000/4000000.0)));
 22942  247A  3003               	movlw	3
 22943  247B  0140               	movlb	0	; select bank0
 22944  247C  00AA               	movwf	??_lcd
 22945  247D  3097               	movlw	151
 22946  247E                     u8127:	
 22947  247E  0B89               	decfsz	9,f
 22948  247F  2C7E               	goto	u8127
 22949  2480  0BAA               	decfsz	??_lcd,f
 22950  2481  2C7E               	goto	u8127
 22951  2482  3200               	nop2
 22952                           
 22953                           ;lcd.c: 33: (PORTB) = (PORTB) & 0x0f;
 22954  2483  0140               	movlb	0	; select bank0
 22955  2484  080D               	movf	13,w	;volatile
 22956  2485  390F               	andlw	15
 22957  2486  008D               	movwf	13	;volatile
 22958                           
 22959                           ;lcd.c: 34: (PORTB) = (PORTB) | ((a << 4)&0xf0);
 22960  2487  082B               	movf	lcd@a,w
 22961  2488  00AA               	movwf	??_lcd
 22962  2489  3003               	movlw	3
 22963  248A                     u4905:	
 22964  248A  35AA               	lslf	??_lcd,f
 22965  248B  3EFF               	addlw	-1
 22966  248C  1D03               	skipz
 22967  248D  2C8A               	goto	u4905
 22968  248E  352A               	lslf	??_lcd,w
 22969  248F  39F0               	andlw	240
 22970  2490  040D               	iorwf	13,w	;volatile
 22971  2491  008D               	movwf	13	;volatile
 22972                           
 22973                           ;lcd.c: 35: (RB3) = 1;
 22974  2492  158D               	bsf	13,3	;volatile
 22975                           
 22976                           ;lcd.c: 36: _delay((unsigned long)(((1000))*(8000000/4000000.0)));
 22977  2493  3003               	movlw	3
 22978  2494  0140               	movlb	0	; select bank0
 22979  2495  00AA               	movwf	??_lcd
 22980  2496  3097               	movlw	151
 22981  2497                     u8137:	
 22982  2497  0B89               	decfsz	9,f
 22983  2498  2C97               	goto	u8137
 22984  2499  0BAA               	decfsz	??_lcd,f
 22985  249A  2C97               	goto	u8137
 22986  249B  3200               	nop2
 22987                           
 22988                           ;lcd.c: 39: (RB3) = 0;
 22989  249C  0140               	movlb	0	; select bank0
 22990  249D  118D               	bcf	13,3	;volatile
 22991                           
 22992                           ;lcd.c: 41: _delay((unsigned long)(((1000))*(8000000/4000000.0)));
 22993  249E  3003               	movlw	3
 22994  249F  0140               	movlb	0	; select bank0
 22995  24A0  00AA               	movwf	??_lcd
 22996  24A1  3097               	movlw	151
 22997  24A2                     u8147:	
 22998  24A2  0B89               	decfsz	9,f
 22999  24A3  2CA2               	goto	u8147
 23000  24A4  0BAA               	decfsz	??_lcd,f
 23001  24A5  2CA2               	goto	u8147
 23002  24A6  3200               	nop2
 23003  24A7  0008               	return
 23004  24A8                     __end_of_lcd:	
 23005                           
 23006                           	psect	text43
 23007  2639                     __ptext43:	
 23008 ;; *************** function ___aldiv *****************
 23009 ;; Defined at:
 23010 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\aldiv.c"
 23011 ;; Parameters:    Size  Location     Type
 23012 ;;  divisor         4   12[BANK0 ] long 
 23013 ;;  dividend        4   16[BANK0 ] long 
 23014 ;; Auto vars:     Size  Location     Type
 23015 ;;  quotient        4   23[BANK0 ] long 
 23016 ;;  sign            1   22[BANK0 ] unsigned char 
 23017 ;;  counter         1   21[BANK0 ] unsigned char 
 23018 ;; Return value:  Size  Location     Type
 23019 ;;                  4   12[BANK0 ] long 
 23020 ;; Registers used:
 23021 ;;		wreg, status,2, status,0
 23022 ;; Tracked objects:
 23023 ;;		On entry : 0/0
 23024 ;;		On exit  : 0/0
 23025 ;;		Unchanged: 0/0
 23026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 23027 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23028 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23029 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23030 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23031 ;;Total ram usage:       15 bytes
 23032 ;; Hardware stack levels used:    1
 23033 ;; Hardware stack levels required when called:    4
 23034 ;; This function calls:
 23035 ;;		Nothing
 23036 ;; This function is called by:
 23037 ;;		_checkCurrentSensor
 23038 ;;		_checkBatteryVoltage
 23039 ;;		_checkMainSupplyFailure
 23040 ;;		_ouputOnClockwise
 23041 ;;		_ouputOnAntiClock
 23042 ;;		_main
 23043 ;;		_serialCommand
 23044 ;; This function uses a non-reentrant model
 23045 ;;
 23046                           
 23047                           
 23048                           ;psect for function ___aldiv
 23049  2639                     ___aldiv:	
 23050                           
 23051                           ;incstack = 0
 23052                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 23053  2639  0140               	movlb	0	; select bank0
 23054  263A  01B6               	clrf	___aldiv@sign
 23055  263B  1FAF               	btfss	___aldiv@divisor+3,7
 23056  263C  2E4A               	goto	l1950
 23057  263D  09AC               	comf	___aldiv@divisor,f
 23058  263E  09AD               	comf	___aldiv@divisor+1,f
 23059  263F  09AE               	comf	___aldiv@divisor+2,f
 23060  2640  09AF               	comf	___aldiv@divisor+3,f
 23061  2641  0AAC               	incf	___aldiv@divisor,f
 23062  2642  1903               	skipnz
 23063  2643  0AAD               	incf	___aldiv@divisor+1,f
 23064  2644  1903               	skipnz
 23065  2645  0AAE               	incf	___aldiv@divisor+2,f
 23066  2646  1903               	skipnz
 23067  2647  0AAF               	incf	___aldiv@divisor+3,f
 23068  2648  01B6               	clrf	___aldiv@sign
 23069  2649  0AB6               	incf	___aldiv@sign,f
 23070  264A                     l1950:	
 23071  264A  1FB3               	btfss	___aldiv@dividend+3,7
 23072  264B  2E5B               	goto	l8463
 23073  264C  09B0               	comf	___aldiv@dividend,f
 23074  264D  09B1               	comf	___aldiv@dividend+1,f
 23075  264E  09B2               	comf	___aldiv@dividend+2,f
 23076  264F  09B3               	comf	___aldiv@dividend+3,f
 23077  2650  0AB0               	incf	___aldiv@dividend,f
 23078  2651  1903               	skipnz
 23079  2652  0AB1               	incf	___aldiv@dividend+1,f
 23080  2653  1903               	skipnz
 23081  2654  0AB2               	incf	___aldiv@dividend+2,f
 23082  2655  1903               	skipnz
 23083  2656  0AB3               	incf	___aldiv@dividend+3,f
 23084  2657  3001               	movlw	1
 23085  2658  00B4               	movwf	??___aldiv
 23086  2659  0834               	movf	??___aldiv,w
 23087  265A  06B6               	xorwf	___aldiv@sign,f
 23088  265B                     l8463:	
 23089  265B  3000               	movlw	0
 23090  265C  00BA               	movwf	___aldiv@quotient+3
 23091  265D  3000               	movlw	0
 23092  265E  00B9               	movwf	___aldiv@quotient+2
 23093  265F  3000               	movlw	0
 23094  2660  00B8               	movwf	___aldiv@quotient+1
 23095  2661  3000               	movlw	0
 23096  2662  00B7               	movwf	___aldiv@quotient
 23097  2663  082F               	movf	___aldiv@divisor+3,w
 23098  2664  042E               	iorwf	___aldiv@divisor+2,w
 23099  2665  042D               	iorwf	___aldiv@divisor+1,w
 23100  2666  042C               	iorwf	___aldiv@divisor,w
 23101  2667  1903               	skipnz
 23102  2668  2EA4               	goto	l8485
 23103  2669  01B5               	clrf	___aldiv@counter
 23104  266A  0AB5               	incf	___aldiv@counter,f
 23105  266B                     l8471:	
 23106  266B  1BAF               	btfsc	___aldiv@divisor+3,7
 23107  266C  2E79               	goto	l8473
 23108  266D  3001               	movlw	1
 23109  266E                     u5545:	
 23110  266E  35AC               	lslf	___aldiv@divisor,f
 23111  266F  0DAD               	rlf	___aldiv@divisor+1,f
 23112  2670  0DAE               	rlf	___aldiv@divisor+2,f
 23113  2671  0DAF               	rlf	___aldiv@divisor+3,f
 23114  2672  0B89               	decfsz	9,f
 23115  2673  2E6E               	goto	u5545
 23116  2674  3001               	movlw	1
 23117  2675  00B4               	movwf	??___aldiv
 23118  2676  0834               	movf	??___aldiv,w
 23119  2677  07B5               	addwf	___aldiv@counter,f
 23120  2678  2E6B               	goto	l8471
 23121  2679                     l8473:	
 23122  2679  3001               	movlw	1
 23123  267A                     u5565:	
 23124  267A  35B7               	lslf	___aldiv@quotient,f
 23125  267B  0DB8               	rlf	___aldiv@quotient+1,f
 23126  267C  0DB9               	rlf	___aldiv@quotient+2,f
 23127  267D  0DBA               	rlf	___aldiv@quotient+3,f
 23128  267E  0B89               	decfsz	9,f
 23129  267F  2E7A               	goto	u5565
 23130  2680  082F               	movf	___aldiv@divisor+3,w
 23131  2681  0233               	subwf	___aldiv@dividend+3,w
 23132  2682  1D03               	skipz
 23133  2683  2E8E               	goto	u5575
 23134  2684  082E               	movf	___aldiv@divisor+2,w
 23135  2685  0232               	subwf	___aldiv@dividend+2,w
 23136  2686  1D03               	skipz
 23137  2687  2E8E               	goto	u5575
 23138  2688  082D               	movf	___aldiv@divisor+1,w
 23139  2689  0231               	subwf	___aldiv@dividend+1,w
 23140  268A  1D03               	skipz
 23141  268B  2E8E               	goto	u5575
 23142  268C  082C               	movf	___aldiv@divisor,w
 23143  268D  0230               	subwf	___aldiv@dividend,w
 23144  268E                     u5575:	
 23145  268E  1C03               	skipc
 23146  268F  2E99               	goto	l8481
 23147  2690  082C               	movf	___aldiv@divisor,w
 23148  2691  02B0               	subwf	___aldiv@dividend,f
 23149  2692  082D               	movf	___aldiv@divisor+1,w
 23150  2693  3BB1               	subwfb	___aldiv@dividend+1,f
 23151  2694  082E               	movf	___aldiv@divisor+2,w
 23152  2695  3BB2               	subwfb	___aldiv@dividend+2,f
 23153  2696  082F               	movf	___aldiv@divisor+3,w
 23154  2697  3BB3               	subwfb	___aldiv@dividend+3,f
 23155  2698  1437               	bsf	___aldiv@quotient,0
 23156  2699                     l8481:	
 23157  2699  3001               	movlw	1
 23158  269A                     u5585:	
 23159  269A  36AF               	lsrf	___aldiv@divisor+3,f
 23160  269B  0CAE               	rrf	___aldiv@divisor+2,f
 23161  269C  0CAD               	rrf	___aldiv@divisor+1,f
 23162  269D  0CAC               	rrf	___aldiv@divisor,f
 23163  269E  0B89               	decfsz	9,f
 23164  269F  2E9A               	goto	u5585
 23165  26A0  3001               	movlw	1
 23166  26A1  02B5               	subwf	___aldiv@counter,f
 23167  26A2  1D03               	btfss	3,2
 23168  26A3  2E79               	goto	l8473
 23169  26A4                     l8485:	
 23170  26A4  0836               	movf	___aldiv@sign,w
 23171  26A5  1903               	btfsc	3,2
 23172  26A6  2EB2               	goto	l8489
 23173  26A7  09B7               	comf	___aldiv@quotient,f
 23174  26A8  09B8               	comf	___aldiv@quotient+1,f
 23175  26A9  09B9               	comf	___aldiv@quotient+2,f
 23176  26AA  09BA               	comf	___aldiv@quotient+3,f
 23177  26AB  0AB7               	incf	___aldiv@quotient,f
 23178  26AC  1903               	skipnz
 23179  26AD  0AB8               	incf	___aldiv@quotient+1,f
 23180  26AE  1903               	skipnz
 23181  26AF  0AB9               	incf	___aldiv@quotient+2,f
 23182  26B0  1903               	skipnz
 23183  26B1  0ABA               	incf	___aldiv@quotient+3,f
 23184  26B2                     l8489:	
 23185  26B2  083A               	movf	___aldiv@quotient+3,w
 23186  26B3  00AF               	movwf	?___aldiv+3
 23187  26B4  0839               	movf	___aldiv@quotient+2,w
 23188  26B5  00AE               	movwf	?___aldiv+2
 23189  26B6  0838               	movf	___aldiv@quotient+1,w
 23190  26B7  00AD               	movwf	?___aldiv+1
 23191  26B8  0837               	movf	___aldiv@quotient,w
 23192  26B9  00AC               	movwf	?___aldiv
 23193  26BA  0008               	return
 23194  26BB                     __end_of___aldiv:	
 23195                           
 23196                           	psect	text44
 23197  2117                     __ptext44:	
 23198 ;; *************** function _ADCC_GetSingleConversion *****************
 23199 ;; Defined at:
 23200 ;;		line 132 in file "mcc_generated_files/adcc.c"
 23201 ;; Parameters:    Size  Location     Type
 23202 ;;  channel         1    wreg     enum E14881
 23203 ;; Auto vars:     Size  Location     Type
 23204 ;;  channel         1    3[BANK0 ] enum E14881
 23205 ;; Return value:  Size  Location     Type
 23206 ;;                  2    0[BANK0 ] unsigned int 
 23207 ;; Registers used:
 23208 ;;		wreg
 23209 ;; Tracked objects:
 23210 ;;		On entry : 0/0
 23211 ;;		On exit  : 0/0
 23212 ;;		Unchanged: 0/0
 23213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 23214 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23215 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23217 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23218 ;;Total ram usage:        4 bytes
 23219 ;; Hardware stack levels used:    1
 23220 ;; Hardware stack levels required when called:    4
 23221 ;; This function calls:
 23222 ;;		Nothing
 23223 ;; This function is called by:
 23224 ;;		_checkCurrentSensor
 23225 ;;		_checkBatteryVoltage
 23226 ;;		_checkMainSupplyFailure
 23227 ;; This function uses a non-reentrant model
 23228 ;;
 23229                           
 23230                           
 23231                           ;psect for function _ADCC_GetSingleConversion
 23232  2117                     _ADCC_GetSingleConversion:	
 23233                           
 23234                           ;incstack = 0
 23235                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
 23236                           ;ADCC_GetSingleConversion@channel stored from wreg
 23237  2117  0140               	movlb	0	; select bank0
 23238  2118  00A3               	movwf	ADCC_GetSingleConversion@channel
 23239                           
 23240                           ;adcc.c: 135: ADPCH = channel;
 23241  2119  0823               	movf	ADCC_GetSingleConversion@channel,w
 23242  211A  0141               	movlb	1	; select bank1
 23243  211B  009E               	movwf	30	;volatile
 23244                           
 23245                           ;adcc.c: 138: ADCON0bits.ADON = 1;
 23246  211C  1793               	bsf	19,7	;volatile
 23247                           
 23248                           ;adcc.c: 141: ADCON0bits.ADCONT = 0;
 23249  211D  1313               	bcf	19,6	;volatile
 23250                           
 23251                           ;adcc.c: 144: ADCON0bits.ADGO = 1;
 23252  211E  1413               	bsf	19,0	;volatile
 23253  211F                     l620:	
 23254                           ;adcc.c: 148: {
 23255                           
 23256                           ;adcc.c: 147: while (ADCON0bits.ADGO)
 23257                           
 23258  211F  1813               	btfsc	19,0	;volatile
 23259  2120  291F               	goto	l620
 23260                           
 23261                           ;adcc.c: 149: }
 23262                           ;adcc.c: 152: return ((ADRESH << 8) + ADRESL);
 23263  2121  080D               	movf	13,w	;volatile
 23264  2122  0140               	movlb	0	; select bank0
 23265  2123  00A1               	movwf	?_ADCC_GetSingleConversion+1
 23266  2124  0141               	movlb	1	; select bank1
 23267  2125  080C               	movf	12,w	;volatile
 23268  2126  0140               	movlb	0	; select bank0
 23269  2127  00A0               	movwf	?_ADCC_GetSingleConversion
 23270  2128  0008               	return
 23271  2129                     __end_of_ADCC_GetSingleConversion:	
 23272                           
 23273                           	psect	text45
 23274  2273                     __ptext45:	
 23275 ;; *************** function _SYSTEM_Initialize *****************
 23276 ;; Defined at:
 23277 ;;		line 83 in file "mcc_generated_files/mcc.c"
 23278 ;; Parameters:    Size  Location     Type
 23279 ;;		None
 23280 ;; Auto vars:     Size  Location     Type
 23281 ;;		None
 23282 ;; Return value:  Size  Location     Type
 23283 ;;                  1    wreg      void 
 23284 ;; Registers used:
 23285 ;;		wreg, status,2, status,0, pclath, cstack
 23286 ;; Tracked objects:
 23287 ;;		On entry : 0/0
 23288 ;;		On exit  : 0/0
 23289 ;;		Unchanged: 0/0
 23290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 23291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23295 ;;Total ram usage:        0 bytes
 23296 ;; Hardware stack levels used:    1
 23297 ;; Hardware stack levels required when called:    6
 23298 ;; This function calls:
 23299 ;;		_ADCC_Initialize
 23300 ;;		_CWG1_Initialize
 23301 ;;		_CWG2_Initialize
 23302 ;;		_EUSART_Initialize
 23303 ;;		_OSCILLATOR_Initialize
 23304 ;;		_PIN_MANAGER_Initialize
 23305 ;;		_PWM3_Initialize
 23306 ;;		_PWM4_Initialize
 23307 ;;		_TMR0_Initialize
 23308 ;;		_TMR2_Initialize
 23309 ;;		_TMR3_Initialize
 23310 ;;		_TMR5_Initialize
 23311 ;; This function is called by:
 23312 ;;		_main
 23313 ;; This function uses a non-reentrant model
 23314 ;;
 23315                           
 23316                           
 23317                           ;psect for function _SYSTEM_Initialize
 23318  2273                     _SYSTEM_Initialize:	
 23319                           
 23320                           ;mcc.c: 86: PIN_MANAGER_Initialize();
 23321                           
 23322                           ;incstack = 0
 23323                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 23324  2273  3190  2003  31A2   	fcall	_PIN_MANAGER_Initialize
 23325                           
 23326                           ;mcc.c: 87: OSCILLATOR_Initialize();
 23327  2276  31A0  20A8  31A2   	fcall	_OSCILLATOR_Initialize
 23328                           
 23329                           ;mcc.c: 88: ADCC_Initialize();
 23330  2279  3188  2000  31A2   	fcall	_ADCC_Initialize
 23331                           
 23332                           ;mcc.c: 89: PWM4_Initialize();
 23333  227C  31A0  20D9  31A2   	fcall	_PWM4_Initialize
 23334                           
 23335                           ;mcc.c: 90: TMR2_Initialize();
 23336  227F  31A0  20E4  31A2   	fcall	_TMR2_Initialize
 23337                           
 23338                           ;mcc.c: 92: TMR0_Initialize();
 23339  2282  31A1  21C2  31A2   	fcall	_TMR0_Initialize
 23340                           
 23341                           ;mcc.c: 93: TMR3_Initialize();
 23342  2285  31A1  213B  31A2   	fcall	_TMR3_Initialize
 23343                           
 23344                           ;mcc.c: 94: PWM3_Initialize();
 23345  2288  31A0  20CE  31A2   	fcall	_PWM3_Initialize
 23346                           
 23347                           ;mcc.c: 95: TMR5_Initialize();
 23348  228B  3198  2000  31A2   	fcall	_TMR5_Initialize
 23349                           
 23350                           ;mcc.c: 96: CWG2_Initialize();
 23351  228E  31A1  2105  31A2   	fcall	_CWG2_Initialize
 23352                           
 23353                           ;mcc.c: 97: CWG1_Initialize();
 23354  2291  31A0  20F3  31A2   	fcall	_CWG1_Initialize
 23355                           
 23356                           ;mcc.c: 98: EUSART_Initialize();
 23357  2294  31A1  21F9         	fcall	_EUSART_Initialize
 23358  2296  0008               	return
 23359  2297                     __end_of_SYSTEM_Initialize:	
 23360                           
 23361                           	psect	text46
 23362  1800                     __ptext46:	
 23363 ;; *************** function _TMR5_Initialize *****************
 23364 ;; Defined at:
 23365 ;;		line 63 in file "mcc_generated_files/tmr5.c"
 23366 ;; Parameters:    Size  Location     Type
 23367 ;;		None
 23368 ;; Auto vars:     Size  Location     Type
 23369 ;;		None
 23370 ;; Return value:  Size  Location     Type
 23371 ;;                  1    wreg      void 
 23372 ;; Registers used:
 23373 ;;		wreg, status,2, status,0, pclath, cstack
 23374 ;; Tracked objects:
 23375 ;;		On entry : 0/0
 23376 ;;		On exit  : 0/0
 23377 ;;		Unchanged: 0/0
 23378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 23379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23383 ;;Total ram usage:        0 bytes
 23384 ;; Hardware stack levels used:    1
 23385 ;; Hardware stack levels required when called:    5
 23386 ;; This function calls:
 23387 ;;		_TMR5_StartTimer
 23388 ;; This function is called by:
 23389 ;;		_SYSTEM_Initialize
 23390 ;; This function uses a non-reentrant model
 23391 ;;
 23392                           
 23393                           
 23394                           ;psect for function _TMR5_Initialize
 23395  1800                     _TMR5_Initialize:	
 23396                           
 23397                           ;tmr5.c: 68: T5CON = 0x02;
 23398                           
 23399                           ;incstack = 0
 23400                           ; Regs used in _TMR5_Initialize: [wreg+status,2+status,0+pclath+cstack]
 23401  1800  3002               	movlw	2
 23402  1801  0144               	movlb	4	; select bank4
 23403  1802  009A               	movwf	26	;volatile
 23404                           
 23405                           ;tmr5.c: 71: T5GCON = 0x00;
 23406  1803  019B               	clrf	27	;volatile
 23407                           
 23408                           ;tmr5.c: 74: T5GATE = 0x00;
 23409  1804  019C               	clrf	28	;volatile
 23410                           
 23411                           ;tmr5.c: 77: T5CLK = 0x00;
 23412  1805  019D               	clrf	29	;volatile
 23413                           
 23414                           ;tmr5.c: 80: TMR5H = 0x00;
 23415  1806  0199               	clrf	25	;volatile
 23416                           
 23417                           ;tmr5.c: 83: TMR5L = 0x00;
 23418  1807  0198               	clrf	24	;volatile
 23419                           
 23420                           ;tmr5.c: 86: timer5ReloadVal=(TMR5H << 8) | TMR5L;
 23421  1808  0819               	movf	25,w	;volatile
 23422  1809  0142               	movlb	2	; select bank2
 23423  180A  00EA               	movwf	(_timer5ReloadVal+1)^(0+256)	;volatile
 23424  180B  0144               	movlb	4	; select bank4
 23425  180C  0818               	movf	24,w	;volatile
 23426  180D  0142               	movlb	2	; select bank2
 23427  180E  00E9               	movwf	_timer5ReloadVal^(0+256)	;volatile
 23428                           
 23429                           ;tmr5.c: 89: PIR4bits.TMR5IF = 0;
 23430  180F  014E               	movlb	14	; select bank14
 23431  1810  1210               	bcf	16,4	;volatile
 23432                           
 23433                           ;tmr5.c: 92: TMR5_StartTimer();
 23434  1811  31A0  2087         	fcall	_TMR5_StartTimer
 23435  1813  0008               	return
 23436  1814                     __end_of_TMR5_Initialize:	
 23437                           
 23438                           	psect	text47
 23439  2087                     __ptext47:	
 23440 ;; *************** function _TMR5_StartTimer *****************
 23441 ;; Defined at:
 23442 ;;		line 95 in file "mcc_generated_files/tmr5.c"
 23443 ;; Parameters:    Size  Location     Type
 23444 ;;		None
 23445 ;; Auto vars:     Size  Location     Type
 23446 ;;		None
 23447 ;; Return value:  Size  Location     Type
 23448 ;;                  1    wreg      void 
 23449 ;; Registers used:
 23450 ;;		None
 23451 ;; Tracked objects:
 23452 ;;		On entry : 0/0
 23453 ;;		On exit  : 0/0
 23454 ;;		Unchanged: 0/0
 23455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 23456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23460 ;;Total ram usage:        0 bytes
 23461 ;; Hardware stack levels used:    1
 23462 ;; Hardware stack levels required when called:    4
 23463 ;; This function calls:
 23464 ;;		Nothing
 23465 ;; This function is called by:
 23466 ;;		_TMR5_Initialize
 23467 ;; This function uses a non-reentrant model
 23468 ;;
 23469                           
 23470                           
 23471                           ;psect for function _TMR5_StartTimer
 23472  2087                     _TMR5_StartTimer:	
 23473                           
 23474                           ;tmr5.c: 98: T5CONbits.TMR5ON = 1;
 23475                           
 23476                           ;incstack = 0
 23477                           ; Regs used in _TMR5_StartTimer: []
 23478  2087  0144               	movlb	4	; select bank4
 23479  2088  141A               	bsf	26,0	;volatile
 23480  2089  0008               	return
 23481  208A                     __end_of_TMR5_StartTimer:	
 23482                           
 23483                           	psect	text48
 23484  213B                     __ptext48:	
 23485 ;; *************** function _TMR3_Initialize *****************
 23486 ;; Defined at:
 23487 ;;		line 63 in file "mcc_generated_files/tmr3.c"
 23488 ;; Parameters:    Size  Location     Type
 23489 ;;		None
 23490 ;; Auto vars:     Size  Location     Type
 23491 ;;		None
 23492 ;; Return value:  Size  Location     Type
 23493 ;;                  1    wreg      void 
 23494 ;; Registers used:
 23495 ;;		wreg, status,2, status,0, pclath, cstack
 23496 ;; Tracked objects:
 23497 ;;		On entry : 0/0
 23498 ;;		On exit  : 0/0
 23499 ;;		Unchanged: 0/0
 23500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 23501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23505 ;;Total ram usage:        0 bytes
 23506 ;; Hardware stack levels used:    1
 23507 ;; Hardware stack levels required when called:    5
 23508 ;; This function calls:
 23509 ;;		_TMR3_StartTimer
 23510 ;; This function is called by:
 23511 ;;		_SYSTEM_Initialize
 23512 ;; This function uses a non-reentrant model
 23513 ;;
 23514                           
 23515                           
 23516                           ;psect for function _TMR3_Initialize
 23517  213B                     _TMR3_Initialize:	
 23518                           
 23519                           ;tmr3.c: 68: T3CON = 0x00;
 23520                           
 23521                           ;incstack = 0
 23522                           ; Regs used in _TMR3_Initialize: [wreg+status,2+status,0+pclath+cstack]
 23523  213B  0144               	movlb	4	; select bank4
 23524  213C  0194               	clrf	20	;volatile
 23525                           
 23526                           ;tmr3.c: 71: T3GCON = 0x00;
 23527  213D  0195               	clrf	21	;volatile
 23528                           
 23529                           ;tmr3.c: 74: T3GATE = 0x00;
 23530  213E  0196               	clrf	22	;volatile
 23531                           
 23532                           ;tmr3.c: 77: T3CLK = 0x00;
 23533  213F  0197               	clrf	23	;volatile
 23534                           
 23535                           ;tmr3.c: 80: TMR3H = 0x00;
 23536  2140  0193               	clrf	19	;volatile
 23537                           
 23538                           ;tmr3.c: 83: TMR3L = 0x00;
 23539  2141  0192               	clrf	18	;volatile
 23540                           
 23541                           ;tmr3.c: 86: timer3ReloadVal=(TMR3H << 8) | TMR3L;
 23542  2142  0813               	movf	19,w	;volatile
 23543  2143  0142               	movlb	2	; select bank2
 23544  2144  00EC               	movwf	(_timer3ReloadVal+1)^(0+256)	;volatile
 23545  2145  0144               	movlb	4	; select bank4
 23546  2146  0812               	movf	18,w	;volatile
 23547  2147  0142               	movlb	2	; select bank2
 23548  2148  00EB               	movwf	_timer3ReloadVal^(0+256)	;volatile
 23549                           
 23550                           ;tmr3.c: 89: PIR4bits.TMR3IF = 0;
 23551  2149  014E               	movlb	14	; select bank14
 23552  214A  1110               	bcf	16,2	;volatile
 23553                           
 23554                           ;tmr3.c: 92: TMR3_StartTimer();
 23555  214B  31A0  2084         	fcall	_TMR3_StartTimer
 23556  214D  0008               	return
 23557  214E                     __end_of_TMR3_Initialize:	
 23558                           
 23559                           	psect	text49
 23560  2084                     __ptext49:	
 23561 ;; *************** function _TMR3_StartTimer *****************
 23562 ;; Defined at:
 23563 ;;		line 95 in file "mcc_generated_files/tmr3.c"
 23564 ;; Parameters:    Size  Location     Type
 23565 ;;		None
 23566 ;; Auto vars:     Size  Location     Type
 23567 ;;		None
 23568 ;; Return value:  Size  Location     Type
 23569 ;;                  1    wreg      void 
 23570 ;; Registers used:
 23571 ;;		None
 23572 ;; Tracked objects:
 23573 ;;		On entry : 0/0
 23574 ;;		On exit  : 0/0
 23575 ;;		Unchanged: 0/0
 23576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 23577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23581 ;;Total ram usage:        0 bytes
 23582 ;; Hardware stack levels used:    1
 23583 ;; Hardware stack levels required when called:    4
 23584 ;; This function calls:
 23585 ;;		Nothing
 23586 ;; This function is called by:
 23587 ;;		_TMR3_Initialize
 23588 ;; This function uses a non-reentrant model
 23589 ;;
 23590                           
 23591                           
 23592                           ;psect for function _TMR3_StartTimer
 23593  2084                     _TMR3_StartTimer:	
 23594                           
 23595                           ;tmr3.c: 98: T3CONbits.TMR3ON = 1;
 23596                           
 23597                           ;incstack = 0
 23598                           ; Regs used in _TMR3_StartTimer: []
 23599  2084  0144               	movlb	4	; select bank4
 23600  2085  1414               	bsf	20,0	;volatile
 23601  2086  0008               	return
 23602  2087                     __end_of_TMR3_StartTimer:	
 23603                           
 23604                           	psect	text50
 23605  20E4                     __ptext50:	
 23606 ;; *************** function _TMR2_Initialize *****************
 23607 ;; Defined at:
 23608 ;;		line 63 in file "mcc_generated_files/tmr2.c"
 23609 ;; Parameters:    Size  Location     Type
 23610 ;;		None
 23611 ;; Auto vars:     Size  Location     Type
 23612 ;;		None
 23613 ;; Return value:  Size  Location     Type
 23614 ;;                  1    wreg      void 
 23615 ;; Registers used:
 23616 ;;		wreg, status,2, status,0, pclath, cstack
 23617 ;; Tracked objects:
 23618 ;;		On entry : 0/0
 23619 ;;		On exit  : 0/0
 23620 ;;		Unchanged: 0/0
 23621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 23622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23626 ;;Total ram usage:        0 bytes
 23627 ;; Hardware stack levels used:    1
 23628 ;; Hardware stack levels required when called:    5
 23629 ;; This function calls:
 23630 ;;		_TMR2_Start
 23631 ;; This function is called by:
 23632 ;;		_SYSTEM_Initialize
 23633 ;; This function uses a non-reentrant model
 23634 ;;
 23635                           
 23636                           
 23637                           ;psect for function _TMR2_Initialize
 23638  20E4                     _TMR2_Initialize:	
 23639                           
 23640                           ;tmr2.c: 68: T2CON = 0x30;
 23641                           
 23642                           ;incstack = 0
 23643                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 23644  20E4  3030               	movlw	48
 23645  20E5  0145               	movlb	5	; select bank5
 23646  20E6  008E               	movwf	14	;volatile
 23647                           
 23648                           ;tmr2.c: 71: T2CLKCON = 0x01;
 23649  20E7  3001               	movlw	1
 23650  20E8  0090               	movwf	16	;volatile
 23651                           
 23652                           ;tmr2.c: 74: T2HLT = 0x00;
 23653  20E9  018F               	clrf	15	;volatile
 23654                           
 23655                           ;tmr2.c: 77: T2RST = 0x00;
 23656  20EA  0191               	clrf	17	;volatile
 23657                           
 23658                           ;tmr2.c: 80: T2PR = 0x13;
 23659  20EB  3013               	movlw	19
 23660  20EC  008D               	movwf	13	;volatile
 23661                           
 23662                           ;tmr2.c: 83: T2TMR = 0x00;
 23663  20ED  018C               	clrf	12	;volatile
 23664                           
 23665                           ;tmr2.c: 86: PIR4bits.TMR2IF = 0;
 23666  20EE  014E               	movlb	14	; select bank14
 23667  20EF  1090               	bcf	16,1	;volatile
 23668                           
 23669                           ;tmr2.c: 89: TMR2_Start();
 23670  20F0  31A0  2081         	fcall	_TMR2_Start
 23671  20F2  0008               	return
 23672  20F3                     __end_of_TMR2_Initialize:	
 23673                           
 23674                           	psect	text51
 23675  2081                     __ptext51:	
 23676 ;; *************** function _TMR2_Start *****************
 23677 ;; Defined at:
 23678 ;;		line 104 in file "mcc_generated_files/tmr2.c"
 23679 ;; Parameters:    Size  Location     Type
 23680 ;;		None
 23681 ;; Auto vars:     Size  Location     Type
 23682 ;;		None
 23683 ;; Return value:  Size  Location     Type
 23684 ;;                  1    wreg      void 
 23685 ;; Registers used:
 23686 ;;		None
 23687 ;; Tracked objects:
 23688 ;;		On entry : 0/0
 23689 ;;		On exit  : 0/0
 23690 ;;		Unchanged: 0/0
 23691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 23692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23696 ;;Total ram usage:        0 bytes
 23697 ;; Hardware stack levels used:    1
 23698 ;; Hardware stack levels required when called:    4
 23699 ;; This function calls:
 23700 ;;		Nothing
 23701 ;; This function is called by:
 23702 ;;		_TMR2_Initialize
 23703 ;;		_TMR2_StartTimer
 23704 ;; This function uses a non-reentrant model
 23705 ;;
 23706                           
 23707                           
 23708                           ;psect for function _TMR2_Start
 23709  2081                     _TMR2_Start:	
 23710                           
 23711                           ;tmr2.c: 107: T2CONbits.TMR2ON = 1;
 23712                           
 23713                           ;incstack = 0
 23714                           ; Regs used in _TMR2_Start: []
 23715  2081  0145               	movlb	5	; select bank5
 23716  2082  178E               	bsf	14,7	;volatile
 23717  2083  0008               	return
 23718  2084                     __end_of_TMR2_Start:	
 23719                           
 23720                           	psect	text52
 23721  21C2                     __ptext52:	
 23722 ;; *************** function _TMR0_Initialize *****************
 23723 ;; Defined at:
 23724 ;;		line 66 in file "mcc_generated_files/tmr0.c"
 23725 ;; Parameters:    Size  Location     Type
 23726 ;;		None
 23727 ;; Auto vars:     Size  Location     Type
 23728 ;;		None
 23729 ;; Return value:  Size  Location     Type
 23730 ;;                  1    wreg      void 
 23731 ;; Registers used:
 23732 ;;		wreg, status,2, status,0, pclath, cstack
 23733 ;; Tracked objects:
 23734 ;;		On entry : 0/0
 23735 ;;		On exit  : 0/0
 23736 ;;		Unchanged: 0/0
 23737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 23738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23742 ;;Total ram usage:        0 bytes
 23743 ;; Hardware stack levels used:    1
 23744 ;; Hardware stack levels required when called:    5
 23745 ;; This function calls:
 23746 ;;		_TMR0_SetInterruptHandler
 23747 ;; This function is called by:
 23748 ;;		_SYSTEM_Initialize
 23749 ;; This function uses a non-reentrant model
 23750 ;;
 23751                           
 23752                           
 23753                           ;psect for function _TMR0_Initialize
 23754  21C2                     _TMR0_Initialize:	
 23755                           
 23756                           ;tmr0.c: 71: T0CON0 = 0x10;
 23757                           
 23758                           ;incstack = 0
 23759                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 23760  21C2  3010               	movlw	16
 23761  21C3  0140               	movlb	0	; select bank0
 23762  21C4  009E               	movwf	30	;volatile
 23763                           
 23764                           ;tmr0.c: 74: T0CON1 = 0x40;
 23765  21C5  3040               	movlw	64
 23766  21C6  009F               	movwf	31	;volatile
 23767                           
 23768                           ;tmr0.c: 77: TMR0H = 0xF8;
 23769  21C7  30F8               	movlw	248
 23770  21C8  009D               	movwf	29	;volatile
 23771                           
 23772                           ;tmr0.c: 80: TMR0L = 0x30;
 23773  21C9  3030               	movlw	48
 23774  21CA  009C               	movwf	28	;volatile
 23775                           
 23776                           ;tmr0.c: 83: timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
 23777  21CB  081D               	movf	29,w	;volatile
 23778  21CC  0142               	movlb	2	; select bank2
 23779  21CD  00EE               	movwf	(_timer0ReloadVal16bit+1)^(0+256)	;volatile
 23780  21CE  0140               	movlb	0	; select bank0
 23781  21CF  081C               	movf	28,w	;volatile
 23782  21D0  0142               	movlb	2	; select bank2
 23783  21D1  00ED               	movwf	_timer0ReloadVal16bit^(0+256)	;volatile
 23784                           
 23785                           ;tmr0.c: 86: PIR0bits.TMR0IF = 0;
 23786  21D2  014E               	movlb	14	; select bank14
 23787  21D3  128C               	bcf	12,5	;volatile
 23788                           
 23789                           ;tmr0.c: 89: PIE0bits.TMR0IE = 1;
 23790  21D4  1696               	bsf	22,5	;volatile
 23791                           
 23792                           ;tmr0.c: 92: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
 23793  21D5  3049               	movlw	low _TMR0_DefaultInterruptHandler
 23794  21D6  0140               	movlb	0	; select bank0
 23795  21D7  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 23796  21D8  3007               	movlw	high _TMR0_DefaultInterruptHandler
 23797  21D9  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 23798  21DA  31A0  20B1         	fcall	_TMR0_SetInterruptHandler
 23799  21DC  0008               	return
 23800  21DD                     __end_of_TMR0_Initialize:	
 23801                           
 23802                           	psect	text53
 23803  20B1                     __ptext53:	
 23804 ;; *************** function _TMR0_SetInterruptHandler *****************
 23805 ;; Defined at:
 23806 ;;		line 151 in file "mcc_generated_files/tmr0.c"
 23807 ;; Parameters:    Size  Location     Type
 23808 ;;  InterruptHan    2    0[BANK0 ] PTR void 
 23809 ;;		 -> TMR0_DefaultInterruptHandler(1), 
 23810 ;; Auto vars:     Size  Location     Type
 23811 ;;		None
 23812 ;; Return value:  Size  Location     Type
 23813 ;;                  1    wreg      void 
 23814 ;; Registers used:
 23815 ;;		wreg
 23816 ;; Tracked objects:
 23817 ;;		On entry : 0/0
 23818 ;;		On exit  : 0/0
 23819 ;;		Unchanged: 0/0
 23820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 23821 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23824 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23825 ;;Total ram usage:        2 bytes
 23826 ;; Hardware stack levels used:    1
 23827 ;; Hardware stack levels required when called:    4
 23828 ;; This function calls:
 23829 ;;		Nothing
 23830 ;; This function is called by:
 23831 ;;		_TMR0_Initialize
 23832 ;; This function uses a non-reentrant model
 23833 ;;
 23834                           
 23835                           
 23836                           ;psect for function _TMR0_SetInterruptHandler
 23837  20B1                     _TMR0_SetInterruptHandler:	
 23838                           
 23839                           ;tmr0.c: 152: TMR0_InterruptHandler = InterruptHandler;
 23840                           
 23841                           ;incstack = 0
 23842                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 23843  20B1  0140               	movlb	0	; select bank0
 23844  20B2  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 23845  20B3  0143               	movlb	3	; select bank3
 23846  20B4  00EC               	movwf	(_TMR0_InterruptHandler+1)^(0+384)
 23847  20B5  0140               	movlb	0	; select bank0
 23848  20B6  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 23849  20B7  0143               	movlb	3	; select bank3
 23850  20B8  00EB               	movwf	_TMR0_InterruptHandler^(0+384)
 23851  20B9  0008               	return
 23852  20BA                     __end_of_TMR0_SetInterruptHandler:	
 23853                           
 23854                           	psect	text54
 23855  20D9                     __ptext54:	
 23856 ;; *************** function _PWM4_Initialize *****************
 23857 ;; Defined at:
 23858 ;;		line 63 in file "mcc_generated_files/pwm4.c"
 23859 ;; Parameters:    Size  Location     Type
 23860 ;;		None
 23861 ;; Auto vars:     Size  Location     Type
 23862 ;;		None
 23863 ;; Return value:  Size  Location     Type
 23864 ;;                  1    wreg      void 
 23865 ;; Registers used:
 23866 ;;		wreg, status,2, status,0
 23867 ;; Tracked objects:
 23868 ;;		On entry : 0/0
 23869 ;;		On exit  : 0/0
 23870 ;;		Unchanged: 0/0
 23871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 23872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23876 ;;Total ram usage:        0 bytes
 23877 ;; Hardware stack levels used:    1
 23878 ;; Hardware stack levels required when called:    4
 23879 ;; This function calls:
 23880 ;;		Nothing
 23881 ;; This function is called by:
 23882 ;;		_SYSTEM_Initialize
 23883 ;; This function uses a non-reentrant model
 23884 ;;
 23885                           
 23886                           
 23887                           ;psect for function _PWM4_Initialize
 23888  20D9                     _PWM4_Initialize:	
 23889                           
 23890                           ;pwm4.c: 68: CCP4CON = 0x9F;
 23891                           
 23892                           ;incstack = 0
 23893                           ; Regs used in _PWM4_Initialize: [wreg+status,2+status,0]
 23894  20D9  309F               	movlw	159
 23895  20DA  0146               	movlb	6	; select bank6
 23896  20DB  009A               	movwf	26	;volatile
 23897                           
 23898                           ;pwm4.c: 71: CCPR4H = 0x00;
 23899  20DC  0199               	clrf	25	;volatile
 23900                           
 23901                           ;pwm4.c: 74: CCPR4L = 0x00;
 23902  20DD  0198               	clrf	24	;volatile
 23903                           
 23904                           ;pwm4.c: 77: CCPTMRS0bits.C4TSEL = 0x1;
 23905  20DE  0144               	movlb	4	; select bank4
 23906  20DF  081E               	movf	30,w	;volatile
 23907  20E0  393F               	andlw	-193
 23908  20E1  3840               	iorlw	64
 23909  20E2  009E               	movwf	30	;volatile
 23910  20E3  0008               	return
 23911  20E4                     __end_of_PWM4_Initialize:	
 23912                           
 23913                           	psect	text55
 23914  20CE                     __ptext55:	
 23915 ;; *************** function _PWM3_Initialize *****************
 23916 ;; Defined at:
 23917 ;;		line 63 in file "mcc_generated_files/pwm3.c"
 23918 ;; Parameters:    Size  Location     Type
 23919 ;;		None
 23920 ;; Auto vars:     Size  Location     Type
 23921 ;;		None
 23922 ;; Return value:  Size  Location     Type
 23923 ;;                  1    wreg      void 
 23924 ;; Registers used:
 23925 ;;		wreg, status,2, status,0
 23926 ;; Tracked objects:
 23927 ;;		On entry : 0/0
 23928 ;;		On exit  : 0/0
 23929 ;;		Unchanged: 0/0
 23930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 23931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23935 ;;Total ram usage:        0 bytes
 23936 ;; Hardware stack levels used:    1
 23937 ;; Hardware stack levels required when called:    4
 23938 ;; This function calls:
 23939 ;;		Nothing
 23940 ;; This function is called by:
 23941 ;;		_SYSTEM_Initialize
 23942 ;; This function uses a non-reentrant model
 23943 ;;
 23944                           
 23945                           
 23946                           ;psect for function _PWM3_Initialize
 23947  20CE                     _PWM3_Initialize:	
 23948                           
 23949                           ;pwm3.c: 68: CCP3CON = 0x9F;
 23950                           
 23951                           ;incstack = 0
 23952                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
 23953  20CE  309F               	movlw	159
 23954  20CF  0146               	movlb	6	; select bank6
 23955  20D0  0096               	movwf	22	;volatile
 23956                           
 23957                           ;pwm3.c: 71: CCPR3H = 0x00;
 23958  20D1  0195               	clrf	21	;volatile
 23959                           
 23960                           ;pwm3.c: 74: CCPR3L = 0x00;
 23961  20D2  0194               	clrf	20	;volatile
 23962                           
 23963                           ;pwm3.c: 77: CCPTMRS0bits.C3TSEL = 0x1;
 23964  20D3  0144               	movlb	4	; select bank4
 23965  20D4  081E               	movf	30,w	;volatile
 23966  20D5  39CF               	andlw	-49
 23967  20D6  3810               	iorlw	16
 23968  20D7  009E               	movwf	30	;volatile
 23969  20D8  0008               	return
 23970  20D9                     __end_of_PWM3_Initialize:	
 23971                           
 23972                           	psect	text56
 23973  1003                     __ptext56:	
 23974 ;; *************** function _PIN_MANAGER_Initialize *****************
 23975 ;; Defined at:
 23976 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
 23977 ;; Parameters:    Size  Location     Type
 23978 ;;		None
 23979 ;; Auto vars:     Size  Location     Type
 23980 ;;  state           1    0[BANK0 ] unsigned char 
 23981 ;; Return value:  Size  Location     Type
 23982 ;;                  1    wreg      void 
 23983 ;; Registers used:
 23984 ;;		wreg, status,2, status,0
 23985 ;; Tracked objects:
 23986 ;;		On entry : 0/0
 23987 ;;		On exit  : 0/0
 23988 ;;		Unchanged: 0/0
 23989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 23990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23991 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23993 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23994 ;;Total ram usage:        1 bytes
 23995 ;; Hardware stack levels used:    1
 23996 ;; Hardware stack levels required when called:    4
 23997 ;; This function calls:
 23998 ;;		Nothing
 23999 ;; This function is called by:
 24000 ;;		_SYSTEM_Initialize
 24001 ;; This function uses a non-reentrant model
 24002 ;;
 24003                           
 24004                           
 24005                           ;psect for function _PIN_MANAGER_Initialize
 24006  1003                     _PIN_MANAGER_Initialize:	
 24007                           
 24008                           ;pin_manager.c: 56: LATE = 0x00;
 24009                           
 24010                           ;incstack = 0
 24011                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
 24012  1003  0140               	movlb	0	; select bank0
 24013  1004  019A               	clrf	26	;volatile
 24014                           
 24015                           ;pin_manager.c: 57: LATD = 0x00;
 24016  1005  0199               	clrf	25	;volatile
 24017                           
 24018                           ;pin_manager.c: 58: LATA = 0x00;
 24019  1006  0196               	clrf	22	;volatile
 24020                           
 24021                           ;pin_manager.c: 59: LATB = 0x00;
 24022  1007  0197               	clrf	23	;volatile
 24023                           
 24024                           ;pin_manager.c: 60: LATC = 0x00;
 24025  1008  0198               	clrf	24	;volatile
 24026                           
 24027                           ;pin_manager.c: 65: TRISE = 0x07;
 24028  1009  3007               	movlw	7
 24029  100A  0095               	movwf	21	;volatile
 24030                           
 24031                           ;pin_manager.c: 66: TRISA = 0x1F;
 24032  100B  301F               	movlw	31
 24033  100C  0091               	movwf	17	;volatile
 24034                           
 24035                           ;pin_manager.c: 67: TRISB = 0x03;
 24036  100D  3003               	movlw	3
 24037  100E  0092               	movwf	18	;volatile
 24038                           
 24039                           ;pin_manager.c: 68: TRISC = 0xBF;
 24040  100F  30BF               	movlw	191
 24041  1010  0093               	movwf	19	;volatile
 24042                           
 24043                           ;pin_manager.c: 69: TRISD = 0x00;
 24044  1011  0194               	clrf	20	;volatile
 24045                           
 24046                           ;pin_manager.c: 74: ANSELC = 0x48;
 24047  1012  3048               	movlw	72
 24048  1013  017E               	movlb	62	; select bank62
 24049  1014  00CE               	movwf	78	;volatile
 24050                           
 24051                           ;pin_manager.c: 75: ANSELB = 0xFC;
 24052  1015  30FC               	movlw	252
 24053  1016  00C3               	movwf	67	;volatile
 24054                           
 24055                           ;pin_manager.c: 76: ANSELD = 0xFF;
 24056  1017  30FF               	movlw	255
 24057  1018  00D9               	movwf	89	;volatile
 24058                           
 24059                           ;pin_manager.c: 77: ANSELE = 0x00;
 24060  1019  01E4               	clrf	100	;volatile
 24061                           
 24062                           ;pin_manager.c: 78: ANSELA = 0xFF;
 24063  101A  30FF               	movlw	255
 24064  101B  00B8               	movwf	56	;volatile
 24065                           
 24066                           ;pin_manager.c: 83: WPUD = 0x00;
 24067  101C  01DA               	clrf	90	;volatile
 24068                           
 24069                           ;pin_manager.c: 84: WPUE = 0x00;
 24070  101D  01E5               	clrf	101	;volatile
 24071                           
 24072                           ;pin_manager.c: 85: WPUB = 0x00;
 24073  101E  01C4               	clrf	68	;volatile
 24074                           
 24075                           ;pin_manager.c: 86: WPUA = 0x00;
 24076  101F  01B9               	clrf	57	;volatile
 24077                           
 24078                           ;pin_manager.c: 87: WPUC = 0x00;
 24079  1020  01CF               	clrf	79	;volatile
 24080                           
 24081                           ;pin_manager.c: 92: ODCONE = 0x00;
 24082  1021  01E6               	clrf	102	;volatile
 24083                           
 24084                           ;pin_manager.c: 93: ODCONA = 0x00;
 24085  1022  01BA               	clrf	58	;volatile
 24086                           
 24087                           ;pin_manager.c: 94: ODCONB = 0x00;
 24088  1023  01C5               	clrf	69	;volatile
 24089                           
 24090                           ;pin_manager.c: 95: ODCONC = 0x00;
 24091  1024  01D0               	clrf	80	;volatile
 24092                           
 24093                           ;pin_manager.c: 96: ODCOND = 0x00;
 24094  1025  01DB               	clrf	91	;volatile
 24095                           
 24096                           ;pin_manager.c: 103: bool state = GIE;
 24097  1026  3000               	movlw	0
 24098  1027  1B8B               	btfsc	11,7	;volatile
 24099  1028  3001               	movlw	1
 24100  1029  0140               	movlb	0	; select bank0
 24101  102A  00A0               	movwf	PIN_MANAGER_Initialize@state
 24102                           
 24103                           ;pin_manager.c: 104: GIE = 0;
 24104  102B  138B               	bcf	11,7	;volatile
 24105                           
 24106                           ;pin_manager.c: 105: PPSLOCK = 0x55;
 24107  102C  3055               	movlw	85
 24108  102D  017D               	movlb	61	; select bank61
 24109  102E  008F               	movwf	15	;volsfr
 24110                           
 24111                           ;pin_manager.c: 106: PPSLOCK = 0xAA;
 24112  102F  30AA               	movlw	170
 24113  1030  008F               	movwf	15	;volsfr
 24114                           
 24115                           ;pin_manager.c: 107: PPSLOCKbits.PPSLOCKED = 0x00;
 24116  1031  100F               	bcf	15,0	;volsfr
 24117                           
 24118                           ;pin_manager.c: 109: RD2PPS = 0x0C;
 24119  1032  300C               	movlw	12
 24120  1033  017E               	movlb	62	; select bank62
 24121  1034  00AA               	movwf	42	;volatile
 24122                           
 24123                           ;pin_manager.c: 110: T3CKIPPSbits.T3CKIPPS = 0x13;
 24124  1035  017D               	movlb	61	; select bank61
 24125  1036  0814               	movf	20,w	;volatile
 24126  1037  39E0               	andlw	-32
 24127  1038  3813               	iorlw	19
 24128  1039  0094               	movwf	20	;volatile
 24129                           
 24130                           ;pin_manager.c: 111: T5CKIPPSbits.T5CKIPPS = 0x15;
 24131  103A  0816               	movf	22,w	;volatile
 24132  103B  39E0               	andlw	-32
 24133  103C  3815               	iorlw	21
 24134  103D  0096               	movwf	22	;volatile
 24135                           
 24136                           ;pin_manager.c: 112: RD3PPS = 0x1D;
 24137  103E  301D               	movlw	29
 24138  103F  017E               	movlb	62	; select bank62
 24139  1040  00AB               	movwf	43	;volatile
 24140                           
 24141                           ;pin_manager.c: 113: RD0PPS = 0x0B;
 24142  1041  300B               	movlw	11
 24143  1042  00A8               	movwf	40	;volatile
 24144                           
 24145                           ;pin_manager.c: 114: RD1PPS = 0x06;
 24146  1043  3006               	movlw	6
 24147  1044  00A9               	movwf	41	;volatile
 24148                           
 24149                           ;pin_manager.c: 115: RC6PPS = 0x10;
 24150  1045  3010               	movlw	16
 24151  1046  00A6               	movwf	38	;volatile
 24152                           
 24153                           ;pin_manager.c: 116: INTPPSbits.INTPPS = 0x08;
 24154  1047  017D               	movlb	61	; select bank61
 24155  1048  0810               	movf	16,w	;volatile
 24156  1049  39F0               	andlw	-16
 24157  104A  3808               	iorlw	8
 24158  104B  0090               	movwf	16	;volatile
 24159                           
 24160                           ;pin_manager.c: 118: PPSLOCK = 0x55;
 24161  104C  3055               	movlw	85
 24162  104D  008F               	movwf	15	;volsfr
 24163                           
 24164                           ;pin_manager.c: 119: PPSLOCK = 0xAA;
 24165  104E  30AA               	movlw	170
 24166  104F  008F               	movwf	15	;volsfr
 24167                           
 24168                           ;pin_manager.c: 120: PPSLOCKbits.PPSLOCKED = 0x01;
 24169  1050  140F               	bsf	15,0	;volsfr
 24170                           
 24171                           ;pin_manager.c: 122: GIE = state;
 24172  1051  0140               	movlb	0	; select bank0
 24173  1052  1C20               	btfss	PIN_MANAGER_Initialize@state,0
 24174  1053  2856               	goto	u5890
 24175  1054  178B               	bsf	11,7	;volatile
 24176  1055  0008               	return
 24177  1056                     u5890:	
 24178  1056  138B               	bcf	11,7	;volatile
 24179  1057  0008               	return
 24180  1058                     __end_of_PIN_MANAGER_Initialize:	
 24181                           
 24182                           	psect	text57
 24183  20A8                     __ptext57:	
 24184 ;; *************** function _OSCILLATOR_Initialize *****************
 24185 ;; Defined at:
 24186 ;;		line 101 in file "mcc_generated_files/mcc.c"
 24187 ;; Parameters:    Size  Location     Type
 24188 ;;		None
 24189 ;; Auto vars:     Size  Location     Type
 24190 ;;		None
 24191 ;; Return value:  Size  Location     Type
 24192 ;;                  1    wreg      void 
 24193 ;; Registers used:
 24194 ;;		wreg, status,2
 24195 ;; Tracked objects:
 24196 ;;		On entry : 0/0
 24197 ;;		On exit  : 0/0
 24198 ;;		Unchanged: 0/0
 24199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 24200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24204 ;;Total ram usage:        0 bytes
 24205 ;; Hardware stack levels used:    1
 24206 ;; Hardware stack levels required when called:    4
 24207 ;; This function calls:
 24208 ;;		Nothing
 24209 ;; This function is called by:
 24210 ;;		_SYSTEM_Initialize
 24211 ;; This function uses a non-reentrant model
 24212 ;;
 24213                           
 24214                           
 24215                           ;psect for function _OSCILLATOR_Initialize
 24216  20A8                     _OSCILLATOR_Initialize:	
 24217                           
 24218                           ;mcc.c: 104: OSCCON1 = 0x62;
 24219                           
 24220                           ;incstack = 0
 24221                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 24222  20A8  3062               	movlw	98
 24223  20A9  0151               	movlb	17	; select bank17
 24224  20AA  008D               	movwf	13	;volatile
 24225                           
 24226                           ;mcc.c: 106: OSCCON3 = 0x00;
 24227  20AB  018F               	clrf	15	;volatile
 24228                           
 24229                           ;mcc.c: 108: OSCEN = 0x00;
 24230  20AC  0191               	clrf	17	;volatile
 24231                           
 24232                           ;mcc.c: 110: OSCFRQ = 0x06;
 24233  20AD  3006               	movlw	6
 24234  20AE  0093               	movwf	19	;volatile
 24235                           
 24236                           ;mcc.c: 112: OSCTUNE = 0x00;
 24237  20AF  0192               	clrf	18	;volatile
 24238  20B0  0008               	return
 24239  20B1                     __end_of_OSCILLATOR_Initialize:	
 24240                           
 24241                           	psect	text58
 24242  21F9                     __ptext58:	
 24243 ;; *************** function _EUSART_Initialize *****************
 24244 ;; Defined at:
 24245 ;;		line 75 in file "mcc_generated_files/eusart.c"
 24246 ;; Parameters:    Size  Location     Type
 24247 ;;		None
 24248 ;; Auto vars:     Size  Location     Type
 24249 ;;		None
 24250 ;; Return value:  Size  Location     Type
 24251 ;;                  1    wreg      void 
 24252 ;; Registers used:
 24253 ;;		wreg, status,2
 24254 ;; Tracked objects:
 24255 ;;		On entry : 0/0
 24256 ;;		On exit  : 0/0
 24257 ;;		Unchanged: 0/0
 24258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 24259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24261 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24262 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24263 ;;Total ram usage:        1 bytes
 24264 ;; Hardware stack levels used:    1
 24265 ;; Hardware stack levels required when called:    4
 24266 ;; This function calls:
 24267 ;;		Nothing
 24268 ;; This function is called by:
 24269 ;;		_SYSTEM_Initialize
 24270 ;; This function uses a non-reentrant model
 24271 ;;
 24272                           
 24273                           
 24274                           ;psect for function _EUSART_Initialize
 24275  21F9                     _EUSART_Initialize:	
 24276                           
 24277                           ;eusart.c: 78: PIE3bits.RCIE = 0;
 24278                           
 24279                           ;incstack = 0
 24280                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
 24281  21F9  014E               	movlb	14	; select bank14
 24282  21FA  1299               	bcf	25,5	;volatile
 24283                           
 24284                           ;eusart.c: 79: PIE3bits.TXIE = 0;
 24285  21FB  1219               	bcf	25,4	;volatile
 24286                           
 24287                           ;eusart.c: 84: BAUD1CON = 0x08;
 24288  21FC  3008               	movlw	8
 24289  21FD  0142               	movlb	2	; select bank2
 24290  21FE  009F               	movwf	31	;volatile
 24291                           
 24292                           ;eusart.c: 87: RC1STA = 0x80;
 24293  21FF  3080               	movlw	128
 24294  2200  009D               	movwf	29	;volatile
 24295                           
 24296                           ;eusart.c: 90: TX1STA = 0x24;
 24297  2201  3024               	movlw	36
 24298  2202  009E               	movwf	30	;volatile
 24299                           
 24300                           ;eusart.c: 93: SP1BRGL = 0xCF;
 24301  2203  30CF               	movlw	207
 24302  2204  009B               	movwf	27	;volatile
 24303                           
 24304                           ;eusart.c: 96: SP1BRGH = 0x00;
 24305  2205  019C               	clrf	28	;volatile
 24306                           
 24307                           ;eusart.c: 100: eusartTxHead = 0;
 24308  2206  0141               	movlb	1	; select bank1
 24309  2207  01C5               	clrf	_eusartTxHead^(0+128)	;volatile
 24310                           
 24311                           ;eusart.c: 101: eusartTxTail = 0;
 24312  2208  0142               	movlb	2	; select bank2
 24313  2209  01E8               	clrf	_eusartTxTail^(0+256)	;volatile
 24314                           
 24315                           ;eusart.c: 102: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 24316  220A  3008               	movlw	8
 24317  220B  0140               	movlb	0	; select bank0
 24318  220C  00A0               	movwf	??_EUSART_Initialize
 24319  220D  0820               	movf	??_EUSART_Initialize,w
 24320  220E  0142               	movlb	2	; select bank2
 24321  220F  00EF               	movwf	_eusartTxBufferRemaining^(0+256)	;volatile
 24322                           
 24323                           ;eusart.c: 104: eusartRxHead = 0;
 24324  2210  01FA               	clrf	_eusartRxHead	;volatile
 24325                           
 24326                           ;eusart.c: 105: eusartRxTail = 0;
 24327  2211  0141               	movlb	1	; select bank1
 24328  2212  01C4               	clrf	_eusartRxTail^(0+128)	;volatile
 24329                           
 24330                           ;eusart.c: 106: eusartRxCount = 0;
 24331  2213  01C3               	clrf	_eusartRxCount^(0+128)	;volatile
 24332                           
 24333                           ;eusart.c: 109: PIE3bits.RCIE = 1;
 24334  2214  014E               	movlb	14	; select bank14
 24335  2215  1699               	bsf	25,5	;volatile
 24336  2216  0008               	return
 24337  2217                     __end_of_EUSART_Initialize:	
 24338                           
 24339                           	psect	text59
 24340  2105                     __ptext59:	
 24341 ;; *************** function _CWG2_Initialize *****************
 24342 ;; Defined at:
 24343 ;;		line 57 in file "mcc_generated_files/cwg2.c"
 24344 ;; Parameters:    Size  Location     Type
 24345 ;;		None
 24346 ;; Auto vars:     Size  Location     Type
 24347 ;;		None
 24348 ;; Return value:  Size  Location     Type
 24349 ;;                  1    wreg      void 
 24350 ;; Registers used:
 24351 ;;		wreg, status,2
 24352 ;; Tracked objects:
 24353 ;;		On entry : 0/0
 24354 ;;		On exit  : 0/0
 24355 ;;		Unchanged: 0/0
 24356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 24357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24361 ;;Total ram usage:        0 bytes
 24362 ;; Hardware stack levels used:    1
 24363 ;; Hardware stack levels required when called:    4
 24364 ;; This function calls:
 24365 ;;		Nothing
 24366 ;; This function is called by:
 24367 ;;		_SYSTEM_Initialize
 24368 ;; This function uses a non-reentrant model
 24369 ;;
 24370                           
 24371                           
 24372                           ;psect for function _CWG2_Initialize
 24373  2105                     _CWG2_Initialize:	
 24374                           
 24375                           ;cwg2.c: 63: CWG2CON1 = 0x03;
 24376                           
 24377                           ;incstack = 0
 24378                           ; Regs used in _CWG2_Initialize: [wreg+status,2]
 24379  2105  3003               	movlw	3
 24380  2106  014C               	movlb	12	; select bank12
 24381  2107  009B               	movwf	27	;volatile
 24382                           
 24383                           ;cwg2.c: 65: CWG2DBR = 0x09;
 24384  2108  3009               	movlw	9
 24385  2109  0098               	movwf	24	;volatile
 24386                           
 24387                           ;cwg2.c: 67: CWG2DBF = 0x09;
 24388  210A  3009               	movlw	9
 24389  210B  0099               	movwf	25	;volatile
 24390                           
 24391                           ;cwg2.c: 69: CWG2AS0 = 0x00;
 24392  210C  019C               	clrf	28	;volatile
 24393                           
 24394                           ;cwg2.c: 71: CWG2AS1 = 0x00;
 24395  210D  019D               	clrf	29	;volatile
 24396                           
 24397                           ;cwg2.c: 73: CWG2STR = 0x04;
 24398  210E  3004               	movlw	4
 24399  210F  009E               	movwf	30	;volatile
 24400                           
 24401                           ;cwg2.c: 75: CWG2CLKCON = 0x01;
 24402  2110  3001               	movlw	1
 24403  2111  0096               	movwf	22	;volatile
 24404                           
 24405                           ;cwg2.c: 77: CWG2ISM = 0x04;
 24406  2112  3004               	movlw	4
 24407  2113  0097               	movwf	23	;volatile
 24408                           
 24409                           ;cwg2.c: 80: CWG2CON0 = 0x83;
 24410  2114  3083               	movlw	131
 24411  2115  009A               	movwf	26	;volatile
 24412  2116  0008               	return
 24413  2117                     __end_of_CWG2_Initialize:	
 24414                           
 24415                           	psect	text60
 24416  20F3                     __ptext60:	
 24417 ;; *************** function _CWG1_Initialize *****************
 24418 ;; Defined at:
 24419 ;;		line 57 in file "mcc_generated_files/cwg1.c"
 24420 ;; Parameters:    Size  Location     Type
 24421 ;;		None
 24422 ;; Auto vars:     Size  Location     Type
 24423 ;;		None
 24424 ;; Return value:  Size  Location     Type
 24425 ;;                  1    wreg      void 
 24426 ;; Registers used:
 24427 ;;		wreg, status,2
 24428 ;; Tracked objects:
 24429 ;;		On entry : 0/0
 24430 ;;		On exit  : 0/0
 24431 ;;		Unchanged: 0/0
 24432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 24433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24437 ;;Total ram usage:        0 bytes
 24438 ;; Hardware stack levels used:    1
 24439 ;; Hardware stack levels required when called:    4
 24440 ;; This function calls:
 24441 ;;		Nothing
 24442 ;; This function is called by:
 24443 ;;		_SYSTEM_Initialize
 24444 ;; This function uses a non-reentrant model
 24445 ;;
 24446                           
 24447                           
 24448                           ;psect for function _CWG1_Initialize
 24449  20F3                     _CWG1_Initialize:	
 24450                           
 24451                           ;cwg1.c: 63: CWG1CON1 = 0x07;
 24452                           
 24453                           ;incstack = 0
 24454                           ; Regs used in _CWG1_Initialize: [wreg+status,2]
 24455  20F3  3007               	movlw	7
 24456  20F4  014C               	movlb	12	; select bank12
 24457  20F5  0091               	movwf	17	;volatile
 24458                           
 24459                           ;cwg1.c: 65: CWG1DBR = 0x09;
 24460  20F6  3009               	movlw	9
 24461  20F7  008E               	movwf	14	;volatile
 24462                           
 24463                           ;cwg1.c: 67: CWG1DBF = 0x09;
 24464  20F8  3009               	movlw	9
 24465  20F9  008F               	movwf	15	;volatile
 24466                           
 24467                           ;cwg1.c: 69: CWG1AS0 = 0x00;
 24468  20FA  0192               	clrf	18	;volatile
 24469                           
 24470                           ;cwg1.c: 71: CWG1AS1 = 0x00;
 24471  20FB  0193               	clrf	19	;volatile
 24472                           
 24473                           ;cwg1.c: 73: CWG1STR = 0x04;
 24474  20FC  3004               	movlw	4
 24475  20FD  0094               	movwf	20	;volatile
 24476                           
 24477                           ;cwg1.c: 75: CWG1CLKCON = 0x01;
 24478  20FE  3001               	movlw	1
 24479  20FF  008C               	movwf	12	;volatile
 24480                           
 24481                           ;cwg1.c: 77: CWG1ISM = 0x03;
 24482  2100  3003               	movlw	3
 24483  2101  008D               	movwf	13	;volatile
 24484                           
 24485                           ;cwg1.c: 80: CWG1CON0 = 0x83;
 24486  2102  3083               	movlw	131
 24487  2103  0090               	movwf	16	;volatile
 24488  2104  0008               	return
 24489  2105                     __end_of_CWG1_Initialize:	
 24490                           
 24491                           	psect	text61
 24492  0800                     __ptext61:	
 24493 ;; *************** function _ADCC_Initialize *****************
 24494 ;; Defined at:
 24495 ;;		line 62 in file "mcc_generated_files/adcc.c"
 24496 ;; Parameters:    Size  Location     Type
 24497 ;;		None
 24498 ;; Auto vars:     Size  Location     Type
 24499 ;;		None
 24500 ;; Return value:  Size  Location     Type
 24501 ;;                  1    wreg      void 
 24502 ;; Registers used:
 24503 ;;		wreg, status,2
 24504 ;; Tracked objects:
 24505 ;;		On entry : 0/0
 24506 ;;		On exit  : 0/0
 24507 ;;		Unchanged: 0/0
 24508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 24509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24513 ;;Total ram usage:        0 bytes
 24514 ;; Hardware stack levels used:    1
 24515 ;; Hardware stack levels required when called:    4
 24516 ;; This function calls:
 24517 ;;		Nothing
 24518 ;; This function is called by:
 24519 ;;		_SYSTEM_Initialize
 24520 ;; This function uses a non-reentrant model
 24521 ;;
 24522                           
 24523                           
 24524                           ;psect for function _ADCC_Initialize
 24525  0800                     _ADCC_Initialize:	
 24526                           
 24527                           ;adcc.c: 66: ADCON1 = 0x00;
 24528                           
 24529                           ;incstack = 0
 24530                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 24531  0800  0141               	movlb	1	; select bank1
 24532  0801  0194               	clrf	20	;volatile
 24533                           
 24534                           ;adcc.c: 68: ADCON2 = 0x02;
 24535  0802  3002               	movlw	2
 24536  0803  0095               	movwf	21	;volatile
 24537                           
 24538                           ;adcc.c: 70: ADCON3 = 0x00;
 24539  0804  0196               	clrf	22	;volatile
 24540                           
 24541                           ;adcc.c: 72: ADACT = 0x00;
 24542  0805  0199               	clrf	25	;volatile
 24543                           
 24544                           ;adcc.c: 74: ADSTAT = 0x00;
 24545  0806  0197               	clrf	23	;volatile
 24546                           
 24547                           ;adcc.c: 76: ADCLK = 0x03;
 24548  0807  3003               	movlw	3
 24549  0808  0098               	movwf	24	;volatile
 24550                           
 24551                           ;adcc.c: 78: ADREF = 0x00;
 24552  0809  019A               	clrf	26	;volatile
 24553                           
 24554                           ;adcc.c: 80: ADCAP = 0x00;
 24555  080A  019B               	clrf	27	;volatile
 24556                           
 24557                           ;adcc.c: 82: ADPRE = 0x00;
 24558  080B  019C               	clrf	28	;volatile
 24559                           
 24560                           ;adcc.c: 84: ADACQ = 0x00;
 24561  080C  019D               	clrf	29	;volatile
 24562                           
 24563                           ;adcc.c: 86: ADPCH = 0x00;
 24564  080D  019E               	clrf	30	;volatile
 24565                           
 24566                           ;adcc.c: 88: ADRPT = 0x00;
 24567  080E  0142               	movlb	2	; select bank2
 24568  080F  018D               	clrf	13	;volatile
 24569                           
 24570                           ;adcc.c: 90: ADLTHL = 0x00;
 24571  0810  018E               	clrf	14	;volatile
 24572                           
 24573                           ;adcc.c: 92: ADLTHH = 0x00;
 24574  0811  018F               	clrf	15	;volatile
 24575                           
 24576                           ;adcc.c: 94: ADUTHL = 0x00;
 24577  0812  0190               	clrf	16	;volatile
 24578                           
 24579                           ;adcc.c: 96: ADUTHH = 0x00;
 24580  0813  0191               	clrf	17	;volatile
 24581                           
 24582                           ;adcc.c: 98: ADSTPTL = 0x00;
 24583  0814  0192               	clrf	18	;volatile
 24584                           
 24585                           ;adcc.c: 100: ADSTPTH = 0x00;
 24586  0815  0193               	clrf	19	;volatile
 24587                           
 24588                           ;adcc.c: 103: ADCON0 = 0x84;
 24589  0816  3084               	movlw	132
 24590  0817  0141               	movlb	1	; select bank1
 24591  0818  0093               	movwf	19	;volatile
 24592  0819  0008               	return
 24593  081A                     __end_of_ADCC_Initialize:	
 24594                           
 24595                           	psect	intentry
 24596  0004                     __pintentry:	
 24597 ;; *************** function _INTERRUPT_InterruptManager *****************
 24598 ;; Defined at:
 24599 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
 24600 ;; Parameters:    Size  Location     Type
 24601 ;;		None
 24602 ;; Auto vars:     Size  Location     Type
 24603 ;;		None
 24604 ;; Return value:  Size  Location     Type
 24605 ;;                  1    wreg      void 
 24606 ;; Registers used:
 24607 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24608 ;; Tracked objects:
 24609 ;;		On entry : 0/0
 24610 ;;		On exit  : 0/0
 24611 ;;		Unchanged: 0/0
 24612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 24613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24615 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24616 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24617 ;;Total ram usage:        1 bytes
 24618 ;; Hardware stack levels used:    1
 24619 ;; Hardware stack levels required when called:    3
 24620 ;; This function calls:
 24621 ;;		_EUSART_Receive_ISR
 24622 ;;		_TMR0_ISR
 24623 ;; This function is called by:
 24624 ;;		Interrupt level 1
 24625 ;; This function uses a non-reentrant model
 24626 ;;
 24627                           
 24628  0004                     _INTERRUPT_InterruptManager:	
 24629                           
 24630                           ;incstack = 0
 24631  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 24632                           
 24633                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 24634  0005  3180               	pagesel	$
 24635  0006  0140               	movlb	0	; select bank0
 24636  0007  087F               	movf	127,w
 24637  0008  00F8               	movwf	??_INTERRUPT_InterruptManager
 24638                           
 24639                           ;interrupt_manager.c: 54: if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
 24640  0009  014E               	movlb	14	; select bank14
 24641  000A  1A96               	btfsc	22,5	;volatile
 24642  000B  1E8C               	btfss	12,5	;volatile
 24643  000C  2811               	goto	i1l462
 24644                           
 24645                           ;interrupt_manager.c: 55: {
 24646                           ;interrupt_manager.c: 56: TMR0_ISR();
 24647  000D  31A1  214E  3180   	fcall	_TMR0_ISR
 24648                           
 24649                           ;interrupt_manager.c: 57: }
 24650  0010  2818               	goto	i1l466
 24651  0011                     i1l462:	
 24652                           
 24653                           ;interrupt_manager.c: 58: else if(INTCONbits.PEIE == 1 && PIE3bits.RCIE == 1 && PIR3bits
      +                          .RCIF == 1)
 24654  0011  1B0B               	btfsc	11,6	;volatile
 24655  0012  1E99               	btfss	25,5	;volatile
 24656  0013  2818               	goto	i1l466
 24657  0014  1E8F               	btfss	15,5	;volatile
 24658  0015  2818               	goto	i1l466
 24659                           
 24660                           ;interrupt_manager.c: 59: {
 24661                           ;interrupt_manager.c: 60: EUSART_Receive_ISR();
 24662  0016  31A1  21A7         	fcall	_EUSART_Receive_ISR
 24663  0018                     i1l466:	
 24664                           ;interrupt_manager.c: 68: else
 24665                           ;interrupt_manager.c: 69: {
 24666                           
 24667                           ;interrupt_manager.c: 61: }
 24668                           
 24669  0018  0878               	movf	??_INTERRUPT_InterruptManager,w
 24670  0019  0140               	movlb	0	; select bank0
 24671  001A  00FF               	movwf	127
 24672  001B  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 24673  001C  0009               	retfie
 24674  001D                     __end_of_INTERRUPT_InterruptManager:	
 24675                           
 24676                           	psect	text63
 24677  214E                     __ptext63:	
 24678 ;; *************** function _TMR0_ISR *****************
 24679 ;; Defined at:
 24680 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 24681 ;; Parameters:    Size  Location     Type
 24682 ;;		None
 24683 ;; Auto vars:     Size  Location     Type
 24684 ;;		None
 24685 ;; Return value:  Size  Location     Type
 24686 ;;                  1    wreg      void 
 24687 ;; Registers used:
 24688 ;;		wreg, status,2, status,0, pclath, cstack
 24689 ;; Tracked objects:
 24690 ;;		On entry : 0/0
 24691 ;;		On exit  : 0/0
 24692 ;;		Unchanged: 0/0
 24693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 24694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24698 ;;Total ram usage:        0 bytes
 24699 ;; Hardware stack levels used:    1
 24700 ;; Hardware stack levels required when called:    2
 24701 ;; This function calls:
 24702 ;;		Absolute function
 24703 ;;		_TMR0_DefaultInterruptHandler
 24704 ;; This function is called by:
 24705 ;;		_INTERRUPT_InterruptManager
 24706 ;; This function uses a non-reentrant model
 24707 ;;
 24708                           
 24709                           
 24710                           ;psect for function _TMR0_ISR
 24711  214E                     _TMR0_ISR:	
 24712                           
 24713                           ;tmr0.c: 137: PIR0bits.TMR0IF = 0;
 24714                           
 24715                           ;incstack = 0
 24716                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 24717  214E  014E               	movlb	14	; select bank14
 24718  214F  128C               	bcf	12,5	;volatile
 24719                           
 24720                           ;tmr0.c: 139: TMR0H = timer0ReloadVal16bit >> 8;
 24721  2150  0142               	movlb	2	; select bank2
 24722  2151  086E               	movf	(_timer0ReloadVal16bit+1)^(0+256),w	;volatile
 24723  2152  0140               	movlb	0	; select bank0
 24724  2153  009D               	movwf	29	;volatile
 24725                           
 24726                           ;tmr0.c: 140: TMR0L = (uint8_t) timer0ReloadVal16bit;
 24727  2154  0142               	movlb	2	; select bank2
 24728  2155  086D               	movf	_timer0ReloadVal16bit^(0+256),w	;volatile
 24729  2156  0140               	movlb	0	; select bank0
 24730  2157  009C               	movwf	28	;volatile
 24731                           
 24732                           ;tmr0.c: 142: if(TMR0_InterruptHandler)
 24733  2158  0143               	movlb	3	; select bank3
 24734  2159  086B               	movf	_TMR0_InterruptHandler^(0+384),w
 24735  215A  046C               	iorwf	(_TMR0_InterruptHandler+1)^(0+384),w
 24736  215B  1903               	btfsc	3,2
 24737  215C  0008               	return
 24738                           
 24739                           ;tmr0.c: 143: {
 24740                           ;tmr0.c: 144: TMR0_InterruptHandler();
 24741  215D  086C               	movf	(_TMR0_InterruptHandler+1)^(0+384),w
 24742  215E  008A               	movwf	10
 24743  215F  086B               	movf	_TMR0_InterruptHandler^(0+384),w
 24744  2160  000A               	callw
 24745  2161  31A1               	pagesel	$
 24746  2162  0008               	return
 24747  2163                     __end_of_TMR0_ISR:	
 24748                           
 24749                           	psect	text64
 24750  0749                     __ptext64:	
 24751 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 24752 ;; Defined at:
 24753 ;;		line 155 in file "mcc_generated_files/tmr0.c"
 24754 ;; Parameters:    Size  Location     Type
 24755 ;;		None
 24756 ;; Auto vars:     Size  Location     Type
 24757 ;;		None
 24758 ;; Return value:  Size  Location     Type
 24759 ;;                  1    wreg      void 
 24760 ;; Registers used:
 24761 ;;		wreg, status,2, status,0, pclath, cstack
 24762 ;; Tracked objects:
 24763 ;;		On entry : 0/0
 24764 ;;		On exit  : 0/0
 24765 ;;		Unchanged: 0/0
 24766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 24767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24769 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24770 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24771 ;;Total ram usage:        1 bytes
 24772 ;; Hardware stack levels used:    1
 24773 ;; Hardware stack levels required when called:    1
 24774 ;; This function calls:
 24775 ;;		_TMR3_ReadTimer
 24776 ;;		_TMR5_ReadTimer
 24777 ;; This function is called by:
 24778 ;;		_TMR0_Initialize
 24779 ;;		_TMR0_ISR
 24780 ;; This function uses a non-reentrant model
 24781 ;;
 24782                           
 24783                           
 24784                           ;psect for function _TMR0_DefaultInterruptHandler
 24785  0749                     _TMR0_DefaultInterruptHandler:	
 24786                           
 24787                           ;tmr0.c: 158: timeInMs++;
 24788                           
 24789                           ;incstack = 0
 24790                           ; Regs used in _TMR0_DefaultInterruptHandler: [wreg+status,2+status,0+pclath+cstack]
 24791  0749  3001               	movlw	1
 24792  074A  0142               	movlb	2	; select bank2
 24793  074B  07DE               	addwf	_timeInMs^(0+256),f
 24794  074C  3000               	movlw	0
 24795  074D  3DDF               	addwfc	(_timeInMs+1)^(0+256),f
 24796                           
 24797                           ;tmr0.c: 165: battVoltPeriodicity++;
 24798  074E  3001               	movlw	1
 24799  074F  07C8               	addwf	_battVoltPeriodicity^(0+256),f
 24800  0750  3000               	movlw	0
 24801  0751  3DC9               	addwfc	(_battVoltPeriodicity+1)^(0+256),f
 24802  0752  3000               	movlw	0
 24803  0753  3DCA               	addwfc	(_battVoltPeriodicity+2)^(0+256),f
 24804  0754  3000               	movlw	0
 24805  0755  3DCB               	addwfc	(_battVoltPeriodicity+3)^(0+256),f
 24806                           
 24807                           ;tmr0.c: 167: mainsVoltPeriodicity++;
 24808  0756  3001               	movlw	1
 24809  0757  07C4               	addwf	_mainsVoltPeriodicity^(0+256),f
 24810  0758  3000               	movlw	0
 24811  0759  3DC5               	addwfc	(_mainsVoltPeriodicity+1)^(0+256),f
 24812  075A  3000               	movlw	0
 24813  075B  3DC6               	addwfc	(_mainsVoltPeriodicity+2)^(0+256),f
 24814  075C  3000               	movlw	0
 24815  075D  3DC7               	addwfc	(_mainsVoltPeriodicity+3)^(0+256),f
 24816                           
 24817                           ;tmr0.c: 169: if(battVoltPeriodicity > (500))
 24818  075E  1BCB               	btfsc	(_battVoltPeriodicity+3)^(0+256),7
 24819  075F  2F75               	goto	i1l6089
 24820  0760  084B               	movf	(_battVoltPeriodicity+3)^(0+256),w
 24821  0761  1D03               	btfss	3,2
 24822  0762  2F6C               	goto	i1l6085
 24823  0763  084A               	movf	(_battVoltPeriodicity+2)^(0+256),w
 24824  0764  1D03               	btfss	3,2
 24825  0765  2F6C               	goto	i1l6085
 24826  0766  30F5               	movlw	245
 24827  0767  0248               	subwf	_battVoltPeriodicity^(0+256),w
 24828  0768  3001               	movlw	1
 24829  0769  3B49               	subwfb	(_battVoltPeriodicity+1)^(0+256),w
 24830  076A  1C03               	btfss	3,0
 24831  076B  2F75               	goto	i1l6089
 24832  076C                     i1l6085:	
 24833                           
 24834                           ;tmr0.c: 170: {
 24835                           ;tmr0.c: 171: battVoltPeriodicity = 0;
 24836  076C  3000               	movlw	0
 24837  076D  00CB               	movwf	(_battVoltPeriodicity+3)^(0+256)
 24838  076E  3000               	movlw	0
 24839  076F  00CA               	movwf	(_battVoltPeriodicity+2)^(0+256)
 24840  0770  3000               	movlw	0
 24841  0771  00C9               	movwf	(_battVoltPeriodicity+1)^(0+256)
 24842  0772  3000               	movlw	0
 24843  0773  00C8               	movwf	_battVoltPeriodicity^(0+256)
 24844                           
 24845                           ;tmr0.c: 172: adcSamplingBattVoltTimeExpired = 1;
 24846  0774  1472               	bsf	_adcSamplingBattVoltTimeExpired/(0+8),_adcSamplingBattVoltTimeExpired& (0+7)
 24847  0775                     i1l6089:	
 24848                           
 24849                           ;tmr0.c: 173: }
 24850                           ;tmr0.c: 175: if(mainsVoltPeriodicity > (500))
 24851  0775  1BC7               	btfsc	(_mainsVoltPeriodicity+3)^(0+256),7
 24852  0776  2F8C               	goto	i1l436
 24853  0777  0847               	movf	(_mainsVoltPeriodicity+3)^(0+256),w
 24854  0778  1D03               	btfss	3,2
 24855  0779  2F83               	goto	i1l6091
 24856  077A  0846               	movf	(_mainsVoltPeriodicity+2)^(0+256),w
 24857  077B  1D03               	btfss	3,2
 24858  077C  2F83               	goto	i1l6091
 24859  077D  30F5               	movlw	245
 24860  077E  0244               	subwf	_mainsVoltPeriodicity^(0+256),w
 24861  077F  3001               	movlw	1
 24862  0780  3B45               	subwfb	(_mainsVoltPeriodicity+1)^(0+256),w
 24863  0781  1C03               	btfss	3,0
 24864  0782  2F8C               	goto	i1l436
 24865  0783                     i1l6091:	
 24866                           
 24867                           ;tmr0.c: 176: {
 24868                           ;tmr0.c: 177: mainsVoltPeriodicity = 0;
 24869  0783  3000               	movlw	0
 24870  0784  00C7               	movwf	(_mainsVoltPeriodicity+3)^(0+256)
 24871  0785  3000               	movlw	0
 24872  0786  00C6               	movwf	(_mainsVoltPeriodicity+2)^(0+256)
 24873  0787  3000               	movlw	0
 24874  0788  00C5               	movwf	(_mainsVoltPeriodicity+1)^(0+256)
 24875  0789  3000               	movlw	0
 24876  078A  00C4               	movwf	_mainsVoltPeriodicity^(0+256)
 24877                           
 24878                           ;tmr0.c: 178: adcSamplingMainSupply = 1;
 24879  078B  17F1               	bsf	_adcSamplingMainSupply/(0+8),_adcSamplingMainSupply& (0+7)
 24880  078C                     i1l436:	
 24881                           
 24882                           ;tmr0.c: 179: }
 24883                           ;tmr0.c: 181: if(timeInMs > (1000))
 24884  078C  3003               	movlw	3
 24885  078D  025F               	subwf	(_timeInMs+1)^(0+256),w
 24886  078E  30E9               	movlw	233
 24887  078F  1903               	skipnz
 24888  0790  025E               	subwf	_timeInMs^(0+256),w
 24889  0791  1C03               	skipc
 24890  0792  2FA9               	goto	i1l6113
 24891                           
 24892                           ;tmr0.c: 182: {
 24893                           ;tmr0.c: 183: timeInMs = 0;
 24894  0793  01DE               	clrf	_timeInMs^(0+256)
 24895  0794  01DF               	clrf	(_timeInMs+1)^(0+256)
 24896                           
 24897                           ;tmr0.c: 185: sec++;
 24898  0795  3001               	movlw	1
 24899  0796  00F7               	movwf	??_TMR0_DefaultInterruptHandler
 24900  0797  0877               	movf	??_TMR0_DefaultInterruptHandler,w
 24901  0798  0141               	movlb	1	; select bank1
 24902  0799  07C7               	addwf	_sec^(0+128),f
 24903                           
 24904                           ;tmr0.c: 186: updateTime = 1;
 24905  079A  15F0               	bsf	_updateTime/(0+8),_updateTime& (0+7)
 24906                           
 24907                           ;tmr0.c: 187: if(sec > 59)
 24908  079B  303C               	movlw	60
 24909  079C  0247               	subwf	_sec^(0+128),w
 24910  079D  1C03               	skipc
 24911  079E  2FA9               	goto	i1l6113
 24912                           
 24913                           ;tmr0.c: 188: {
 24914                           ;tmr0.c: 189: sec= 0;
 24915  079F  01C7               	clrf	_sec^(0+128)
 24916                           
 24917                           ;tmr0.c: 190: min++;
 24918  07A0  3001               	movlw	1
 24919  07A1  00F7               	movwf	??_TMR0_DefaultInterruptHandler
 24920  07A2  0877               	movf	??_TMR0_DefaultInterruptHandler,w
 24921  07A3  07C6               	addwf	_min^(0+128),f
 24922                           
 24923                           ;tmr0.c: 191: if(min > 59)
 24924  07A4  303C               	movlw	60
 24925  07A5  0246               	subwf	_min^(0+128),w
 24926  07A6  1803               	btfsc	3,0
 24927                           
 24928                           ;tmr0.c: 193: min = 0;
 24929  07A7  01C6               	clrf	_min^(0+128)
 24930                           
 24931                           ;tmr0.c: 194: updateTime = 1;
 24932  07A8  15F0               	bsf	_updateTime/(0+8),_updateTime& (0+7)
 24933  07A9                     i1l6113:	
 24934                           
 24935                           ;tmr0.c: 195: }
 24936                           ;tmr0.c: 196: }
 24937                           ;tmr0.c: 198: if(STARTED)
 24938  07A9  1FF2               	btfss	_STARTED/(0+8),_STARTED& (0+7)
 24939  07AA  2FE1               	goto	i1l6125
 24940                           
 24941                           ;tmr0.c: 199: {
 24942                           ;tmr0.c: 201: encoderTmr3 = TMR3_ReadTimer();
 24943  07AB  31A0  20BA  3187   	fcall	_TMR3_ReadTimer
 24944  07AE  0873               	movf	?_TMR3_ReadTimer,w
 24945  07AF  0143               	movlb	3	; select bank3
 24946  07B0  00E7               	movwf	_encoderTmr3^(0+384)
 24947  07B1  0874               	movf	?_TMR3_ReadTimer+1,w
 24948  07B2  00E8               	movwf	(_encoderTmr3^(0+384)+1)
 24949  07B3  01E9               	clrf	(_encoderTmr3^(0+384)+2)
 24950  07B4  01EA               	clrf	(_encoderTmr3^(0+384)+3)
 24951                           
 24952                           ;tmr0.c: 202: encoderTmr5 = TMR5_ReadTimer();
 24953  07B5  31A0  20C4  3187   	fcall	_TMR5_ReadTimer
 24954  07B8  0873               	movf	?_TMR5_ReadTimer,w
 24955  07B9  0142               	movlb	2	; select bank2
 24956  07BA  00C0               	movwf	_encoderTmr5^(0+256)
 24957  07BB  0874               	movf	?_TMR5_ReadTimer+1,w
 24958  07BC  00C1               	movwf	(_encoderTmr5^(0+256)+1)
 24959  07BD  01C2               	clrf	(_encoderTmr5^(0+256)+2)
 24960  07BE  01C3               	clrf	(_encoderTmr5^(0+256)+3)
 24961                           
 24962                           ;tmr0.c: 204: sensorPeriodicity++;
 24963  07BF  3001               	movlw	1
 24964  07C0  0143               	movlb	3	; select bank3
 24965  07C1  07E3               	addwf	_sensorPeriodicity^(0+384),f
 24966  07C2  3000               	movlw	0
 24967  07C3  3DE4               	addwfc	(_sensorPeriodicity+1)^(0+384),f
 24968  07C4  3000               	movlw	0
 24969  07C5  3DE5               	addwfc	(_sensorPeriodicity+2)^(0+384),f
 24970  07C6  3000               	movlw	0
 24971  07C7  3DE6               	addwfc	(_sensorPeriodicity+3)^(0+384),f
 24972                           
 24973                           ;tmr0.c: 206: if(sensorPeriodicity > ((50)))
 24974  07C8  1BE6               	btfsc	(_sensorPeriodicity+3)^(0+384),7
 24975  07C9  0008               	return
 24976  07CA  0866               	movf	(_sensorPeriodicity+3)^(0+384),w
 24977  07CB  1D03               	btfss	3,2
 24978  07CC  2FD7               	goto	i1l6121
 24979  07CD  0865               	movf	(_sensorPeriodicity+2)^(0+384),w
 24980  07CE  1D03               	btfss	3,2
 24981  07CF  2FD7               	goto	i1l6121
 24982  07D0  0864               	movf	(_sensorPeriodicity+1)^(0+384),w
 24983  07D1  1D03               	btfss	3,2
 24984  07D2  2FD7               	goto	i1l6121
 24985  07D3  3033               	movlw	51
 24986  07D4  0263               	subwf	_sensorPeriodicity^(0+384),w
 24987  07D5  1C03               	btfss	3,0
 24988  07D6  0008               	return
 24989  07D7                     i1l6121:	
 24990                           
 24991                           ;tmr0.c: 207: {
 24992                           ;tmr0.c: 208: sensorPeriodicity = 0;
 24993  07D7  3000               	movlw	0
 24994  07D8  00E6               	movwf	(_sensorPeriodicity+3)^(0+384)
 24995  07D9  3000               	movlw	0
 24996  07DA  00E5               	movwf	(_sensorPeriodicity+2)^(0+384)
 24997  07DB  3000               	movlw	0
 24998  07DC  00E4               	movwf	(_sensorPeriodicity+1)^(0+384)
 24999  07DD  3000               	movlw	0
 25000  07DE  00E3               	movwf	_sensorPeriodicity^(0+384)
 25001                           
 25002                           ;tmr0.c: 209: adcSamplingTimeExpired = 1;
 25003  07DF  14F2               	bsf	_adcSamplingTimeExpired/(0+8),_adcSamplingTimeExpired& (0+7)
 25004                           
 25005                           ;tmr0.c: 210: }
 25006                           ;tmr0.c: 219: }
 25007  07E0  0008               	return
 25008  07E1                     i1l6125:	
 25009                           
 25010                           ;tmr0.c: 220: else
 25011                           ;tmr0.c: 221: keyCounter++;
 25012  07E1  3001               	movlw	1
 25013  07E2  0142               	movlb	2	; select bank2
 25014  07E3  07DC               	addwf	_keyCounter^(0+256),f
 25015  07E4  3000               	movlw	0
 25016  07E5  3DDD               	addwfc	(_keyCounter+1)^(0+256),f
 25017  07E6  0008               	return
 25018  07E7                     __end_of_TMR0_DefaultInterruptHandler:	
 25019                           
 25020                           	psect	text65
 25021  20C4                     __ptext65:	
 25022 ;; *************** function _TMR5_ReadTimer *****************
 25023 ;; Defined at:
 25024 ;;		line 107 in file "mcc_generated_files/tmr5.c"
 25025 ;; Parameters:    Size  Location     Type
 25026 ;;		None
 25027 ;; Auto vars:     Size  Location     Type
 25028 ;;  readVal         2    2[COMMON] unsigned int 
 25029 ;; Return value:  Size  Location     Type
 25030 ;;                  2    0[COMMON] unsigned int 
 25031 ;; Registers used:
 25032 ;;		wreg
 25033 ;; Tracked objects:
 25034 ;;		On entry : 0/0
 25035 ;;		On exit  : 0/0
 25036 ;;		Unchanged: 0/0
 25037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 25038 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25039 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25041 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25042 ;;Total ram usage:        4 bytes
 25043 ;; Hardware stack levels used:    1
 25044 ;; This function calls:
 25045 ;;		Nothing
 25046 ;; This function is called by:
 25047 ;;		_TMR0_DefaultInterruptHandler
 25048 ;; This function uses a non-reentrant model
 25049 ;;
 25050                           
 25051                           
 25052                           ;psect for function _TMR5_ReadTimer
 25053  20C4                     _TMR5_ReadTimer:	
 25054                           
 25055                           ;tmr5.c: 109: uint16_t readVal;
 25056                           ;tmr5.c: 111: readVal = (TMR5H << 8) | TMR5L;
 25057                           
 25058                           ;incstack = 0
 25059                           ; Regs used in _TMR5_ReadTimer: [wreg]
 25060  20C4  0144               	movlb	4	; select bank4
 25061  20C5  0819               	movf	25,w	;volatile
 25062  20C6  00F6               	movwf	TMR5_ReadTimer@readVal+1
 25063  20C7  0818               	movf	24,w	;volatile
 25064  20C8  00F5               	movwf	TMR5_ReadTimer@readVal
 25065                           
 25066                           ;tmr5.c: 113: return readVal;
 25067  20C9  0876               	movf	TMR5_ReadTimer@readVal+1,w
 25068  20CA  00F4               	movwf	?_TMR5_ReadTimer+1
 25069  20CB  0875               	movf	TMR5_ReadTimer@readVal,w
 25070  20CC  00F3               	movwf	?_TMR5_ReadTimer
 25071  20CD  0008               	return
 25072  20CE                     __end_of_TMR5_ReadTimer:	
 25073                           
 25074                           	psect	text66
 25075  20BA                     __ptext66:	
 25076 ;; *************** function _TMR3_ReadTimer *****************
 25077 ;; Defined at:
 25078 ;;		line 107 in file "mcc_generated_files/tmr3.c"
 25079 ;; Parameters:    Size  Location     Type
 25080 ;;		None
 25081 ;; Auto vars:     Size  Location     Type
 25082 ;;  readVal         2    2[COMMON] unsigned int 
 25083 ;; Return value:  Size  Location     Type
 25084 ;;                  2    0[COMMON] unsigned int 
 25085 ;; Registers used:
 25086 ;;		wreg
 25087 ;; Tracked objects:
 25088 ;;		On entry : 0/0
 25089 ;;		On exit  : 0/0
 25090 ;;		Unchanged: 0/0
 25091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 25092 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25093 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25095 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25096 ;;Total ram usage:        4 bytes
 25097 ;; Hardware stack levels used:    1
 25098 ;; This function calls:
 25099 ;;		Nothing
 25100 ;; This function is called by:
 25101 ;;		_TMR0_DefaultInterruptHandler
 25102 ;; This function uses a non-reentrant model
 25103 ;;
 25104                           
 25105                           
 25106                           ;psect for function _TMR3_ReadTimer
 25107  20BA                     _TMR3_ReadTimer:	
 25108                           
 25109                           ;tmr3.c: 109: uint16_t readVal;
 25110                           ;tmr3.c: 111: readVal = (TMR3H << 8) | TMR3L;
 25111                           
 25112                           ;incstack = 0
 25113                           ; Regs used in _TMR3_ReadTimer: [wreg]
 25114  20BA  0144               	movlb	4	; select bank4
 25115  20BB  0813               	movf	19,w	;volatile
 25116  20BC  00F6               	movwf	TMR3_ReadTimer@readVal+1
 25117  20BD  0812               	movf	18,w	;volatile
 25118  20BE  00F5               	movwf	TMR3_ReadTimer@readVal
 25119                           
 25120                           ;tmr3.c: 113: return readVal;
 25121  20BF  0876               	movf	TMR3_ReadTimer@readVal+1,w
 25122  20C0  00F4               	movwf	?_TMR3_ReadTimer+1
 25123  20C1  0875               	movf	TMR3_ReadTimer@readVal,w
 25124  20C2  00F3               	movwf	?_TMR3_ReadTimer
 25125  20C3  0008               	return
 25126  20C4                     __end_of_TMR3_ReadTimer:	
 25127                           
 25128                           	psect	text67
 25129  21A7                     __ptext67:	
 25130 ;; *************** function _EUSART_Receive_ISR *****************
 25131 ;; Defined at:
 25132 ;;		line 200 in file "mcc_generated_files/eusart.c"
 25133 ;; Parameters:    Size  Location     Type
 25134 ;;		None
 25135 ;; Auto vars:     Size  Location     Type
 25136 ;;		None
 25137 ;; Return value:  Size  Location     Type
 25138 ;;                  1    wreg      void 
 25139 ;; Registers used:
 25140 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 25141 ;; Tracked objects:
 25142 ;;		On entry : 0/0
 25143 ;;		On exit  : 0/0
 25144 ;;		Unchanged: 0/0
 25145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 25146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25148 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25149 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25150 ;;Total ram usage:        1 bytes
 25151 ;; Hardware stack levels used:    1
 25152 ;; This function calls:
 25153 ;;		Nothing
 25154 ;; This function is called by:
 25155 ;;		_INTERRUPT_InterruptManager
 25156 ;; This function uses a non-reentrant model
 25157 ;;
 25158                           
 25159                           
 25160                           ;psect for function _EUSART_Receive_ISR
 25161  21A7                     _EUSART_Receive_ISR:	
 25162                           
 25163                           ;eusart.c: 219: PIE3bits.RCIE = 0;
 25164                           
 25165                           ;incstack = 0
 25166                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 25167  21A7  014E               	movlb	14	; select bank14
 25168  21A8  1299               	bcf	25,5	;volatile
 25169                           
 25170                           ;eusart.c: 222: eusartRxBuffer[eusartRxHead++] = RC1REG;
 25171  21A9  0142               	movlb	2	; select bank2
 25172  21AA  0819               	movf	25,w	;volatile
 25173  21AB  00F3               	movwf	??_EUSART_Receive_ISR
 25174  21AC  087A               	movf	_eusartRxHead,w
 25175  21AD  3E79               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
 25176  21AE  0086               	movwf	6
 25177  21AF  0187               	clrf	7
 25178  21B0  0873               	movf	??_EUSART_Receive_ISR,w
 25179  21B1  0081               	movwf	1
 25180  21B2  3001               	movlw	1
 25181  21B3  00F3               	movwf	??_EUSART_Receive_ISR
 25182  21B4  0873               	movf	??_EUSART_Receive_ISR,w
 25183  21B5  07FA               	addwf	_eusartRxHead,f	;volatile
 25184                           
 25185                           ;eusart.c: 224: eusartRxCount++;
 25186  21B6  3001               	movlw	1
 25187  21B7  00F3               	movwf	??_EUSART_Receive_ISR
 25188  21B8  0873               	movf	??_EUSART_Receive_ISR,w
 25189  21B9  0141               	movlb	1	; select bank1
 25190  21BA  07C3               	addwf	_eusartRxCount^(0+128),f	;volatile
 25191                           
 25192                           ;eusart.c: 226: if(eusartRxHead >= 1)
 25193  21BB  087A               	movf	_eusartRxHead,w	;volatile
 25194  21BC  1D03               	btfss	3,2
 25195                           
 25196                           ;eusart.c: 227: eusartRxHead = 0;
 25197  21BD  01FA               	clrf	_eusartRxHead	;volatile
 25198                           
 25199                           ;eusart.c: 229: PIR3bits.RCIF = 0;
 25200  21BE  014E               	movlb	14	; select bank14
 25201  21BF  128F               	bcf	15,5	;volatile
 25202                           
 25203                           ;eusart.c: 230: PIE3bits.RCIE = 1;
 25204  21C0  1699               	bsf	25,5	;volatile
 25205  21C1  0008               	return
 25206  21C2                     __end_of_EUSART_Receive_ISR:	
 25207  007E                     btemp	set	126	;btemp
 25208  007E                     int$flags	set	126
 25209  007E                     wtemp0	set	126
 25210                           
 25211                           	psect	maintext_split_1
 25212  1B31                     l10193:	
 25213                           
 25214                           ;main.c: 956: }
 25215                           ;main.c: 958: putch(' ');
 25216  1B31  3020               	movlw	32
 25217  1B32  31A0  2096  319B   	fcall	_putch
 25218                           
 25219                           ;main.c: 959: _delay((unsigned long)((1)*(8000000/4000.0)));
 25220  1B35  3003               	movlw	3
 25221  1B36  0141               	movlb	1	; select bank1
 25222  1B37  00B3               	movwf	??_main^(0+128)
 25223  1B38  3097               	movlw	151
 25224  1B39                     u7207:	
 25225  1B39  0B89               	decfsz	9,f
 25226  1B3A  2B39               	goto	u7207
 25227  1B3B  0BB3               	decfsz	??_main^(0+128),f
 25228  1B3C  2B39               	goto	u7207
 25229  1B3D  3200               	nop2
 25230                           
 25231                           ;main.c: 961: temp = sizeof(cmpName1);
 25232  1B3E  3011               	movlw	17
 25233  1B3F  0144               	movlb	4	; select bank4
 25234  1B40  00BF               	movwf	main@temp^(0+512)
 25235  1B41  3000               	movlw	0
 25236  1B42  00C0               	movwf	(main@temp^(0+512)+1)
 25237                           
 25238                           ;main.c: 963: for(char i = 0; i < (temp-1); i++)
 25239  1B43  01BE               	clrf	main@i_2127^(0+512)
 25240  1B44                     l10207:	
 25241  1B44  083F               	movf	main@temp^(0+512),w
 25242  1B45  3EFF               	addlw	255
 25243  1B46  0141               	movlb	1	; select bank1
 25244  1B47  00B3               	movwf	??_main^(0+128)
 25245  1B48  30FF               	movlw	255
 25246  1B49  0144               	movlb	4	; select bank4
 25247  1B4A  3D40               	addwfc	(main@temp+1)^(0+512),w
 25248  1B4B  0141               	movlb	1	; select bank1
 25249  1B4C  00B4               	movwf	(??_main+1)^(0+128)
 25250  1B4D  0834               	movf	(??_main+1)^(0+128),w
 25251  1B4E  3A80               	xorlw	128
 25252  1B4F  3C80               	sublw	128
 25253  1B50  1D03               	skipz
 25254  1B51  2B55               	goto	u6785
 25255  1B52  0833               	movf	??_main^(0+128),w
 25256  1B53  0144               	movlb	4	; select bank4
 25257  1B54  023E               	subwf	main@i_2127^(0+512),w
 25258  1B55                     u6785:	
 25259  1B55  1803               	btfsc	3,0
 25260  1B56  2B71               	goto	l10209
 25261                           
 25262                           ;main.c: 964: {
 25263                           ;main.c: 965: putch(cmpName1[i]);
 25264  1B57  0144               	movlb	4	; select bank4
 25265  1B58  083E               	movf	main@i_2127^(0+512),w
 25266  1B59  3E20               	addlw	(low (main@cmpName1| (0+512)))& (0+255)
 25267  1B5A  0086               	movwf	6
 25268  1B5B  3002               	movlw	2	; select bank4/5
 25269  1B5C  0087               	movwf	7
 25270  1B5D  0801               	movf	1,w
 25271  1B5E  31A0  2096  319B   	fcall	_putch
 25272                           
 25273                           ;main.c: 966: _delay((unsigned long)((1)*(8000000/4000.0)));
 25274  1B61  3003               	movlw	3
 25275  1B62  0141               	movlb	1	; select bank1
 25276  1B63  00B3               	movwf	??_main^(0+128)
 25277  1B64  3097               	movlw	151
 25278  1B65                     u7217:	
 25279  1B65  0B89               	decfsz	9,f
 25280  1B66  2B65               	goto	u7217
 25281  1B67  0BB3               	decfsz	??_main^(0+128),f
 25282  1B68  2B65               	goto	u7217
 25283  1B69  3200               	nop2
 25284  1B6A  3001               	movlw	1
 25285  1B6B  0141               	movlb	1	; select bank1
 25286  1B6C  00B3               	movwf	??_main^(0+128)
 25287  1B6D  0833               	movf	??_main^(0+128),w
 25288  1B6E  0144               	movlb	4	; select bank4
 25289  1B6F  07BE               	addwf	main@i_2127^(0+512),f
 25290  1B70  2B44               	goto	l10207
 25291  1B71                     l10209:	
 25292                           
 25293                           ;main.c: 967: }
 25294                           ;main.c: 968: putch(' ');
 25295  1B71  3020               	movlw	32
 25296  1B72  31A0  2096  319B   	fcall	_putch
 25297                           
 25298                           ;main.c: 969: _delay((unsigned long)((1)*(8000000/4000.0)));
 25299  1B75  3003               	movlw	3
 25300  1B76  0141               	movlb	1	; select bank1
 25301  1B77  00B3               	movwf	??_main^(0+128)
 25302  1B78  3097               	movlw	151
 25303  1B79                     u7227:	
 25304  1B79  0B89               	decfsz	9,f
 25305  1B7A  2B79               	goto	u7227
 25306  1B7B  0BB3               	decfsz	??_main^(0+128),f
 25307  1B7C  2B79               	goto	u7227
 25308  1B7D  3200               	nop2
 25309                           
 25310                           ;main.c: 974: RC1STAbits.CREN = 1;
 25311  1B7E  0142               	movlb	2	; select bank2
 25312  1B7F  161D               	bsf	29,4	;volatile
 25313                           
 25314                           ;main.c: 975: PIE3bits.RCIE = 1;
 25315  1B80  014E               	movlb	14	; select bank14
 25316  1B81  1699               	bsf	25,5	;volatile
 25317                           
 25318                           ;main.c: 977: (INTCONbits.GIE = 1);
 25319  1B82  178B               	bsf	11,7	;volatile
 25320                           
 25321                           ;main.c: 980: (INTCONbits.PEIE = 1);
 25322  1B83  170B               	bsf	11,6	;volatile
 25323                           
 25324                           ;main.c: 982: GIE = 0;
 25325  1B84  138B               	bcf	11,7	;volatile
 25326                           
 25327                           ;main.c: 983: PPSLOCK = 0x55;
 25328  1B85  3055               	movlw	85
 25329  1B86  017D               	movlb	61	; select bank61
 25330  1B87  008F               	movwf	15	;volsfr
 25331                           
 25332                           ;main.c: 984: PPSLOCK = 0xAA;
 25333  1B88  30AA               	movlw	170
 25334  1B89  008F               	movwf	15	;volsfr
 25335                           
 25336                           ;main.c: 985: PPSLOCKbits.PPSLOCKED = 0x00;
 25337  1B8A  100F               	bcf	15,0	;volsfr
 25338                           
 25339                           ;main.c: 987: RD2PPS = 0x00;
 25340  1B8B  017E               	movlb	62	; select bank62
 25341  1B8C  01AA               	clrf	42	;volatile
 25342                           
 25343                           ;main.c: 988: RD3PPS = 0x00;
 25344  1B8D  01AB               	clrf	43	;volatile
 25345                           
 25346                           ;main.c: 989: RD0PPS = 0x00;
 25347  1B8E  01A8               	clrf	40	;volatile
 25348                           
 25349                           ;main.c: 990: RD1PPS = 0x00;
 25350  1B8F  01A9               	clrf	41	;volatile
 25351                           
 25352                           ;main.c: 991: RC6PPS = 0x00;
 25353  1B90  01A6               	clrf	38	;volatile
 25354                           
 25355                           ;main.c: 992: INTPPSbits.INTPPS = 0x00;
 25356  1B91  30F0               	movlw	-16
 25357  1B92  017D               	movlb	61	; select bank61
 25358  1B93  0590               	andwf	16,f	;volatile
 25359                           
 25360                           ;main.c: 994: PPSLOCK = 0x55;
 25361  1B94  3055               	movlw	85
 25362  1B95  008F               	movwf	15	;volsfr
 25363                           
 25364                           ;main.c: 995: PPSLOCK = 0xAA;
 25365  1B96  30AA               	movlw	170
 25366  1B97  008F               	movwf	15	;volsfr
 25367                           
 25368                           ;main.c: 996: PPSLOCKbits.PPSLOCKED = 0x01;
 25369  1B98  140F               	bsf	15,0	;volsfr
 25370                           
 25371                           ;main.c: 998: GIE = 1;
 25372  1B99  178B               	bsf	11,7	;volatile
 25373                           
 25374                           ;main.c: 999: STARTED = 0;
 25375  1B9A  13F2               	bcf	_STARTED/(0+8),_STARTED& (0+7)
 25376                           
 25377                           ;main.c: 1001: command = 0;
 25378  1B9B  0144               	movlb	4	; select bank4
 25379  1B9C  01BC               	clrf	main@command^(0+512)
 25380                           
 25381                           ;main.c: 1003: cnfHoldTime = holdTime;
 25382  1B9D  0141               	movlb	1	; select bank1
 25383  1B9E  0842               	movf	_holdTime^(0+128),w
 25384  1B9F  00B3               	movwf	??_main^(0+128)
 25385  1BA0  01B4               	clrf	(??_main^(0+128)+1)
 25386  1BA1  0833               	movf	??_main^(0+128),w
 25387  1BA2  0142               	movlb	2	; select bank2
 25388  1BA3  00D6               	movwf	_cnfHoldTime^(0+256)
 25389  1BA4  0141               	movlb	1	; select bank1
 25390  1BA5  0834               	movf	(??_main+1)^(0+128),w
 25391  1BA6  0142               	movlb	2	; select bank2
 25392  1BA7  00D7               	movwf	(_cnfHoldTime+1)^(0+256)
 25393                           
 25394                           ;main.c: 1004: doorOpenedWhileClosing = 0;
 25395  1BA8  11F2               	bcf	_doorOpenedWhileClosing/(0+8),_doorOpenedWhileClosing& (0+7)
 25396                           
 25397                           ;main.c: 1005: irSensorDetected = 0;
 25398  1BA9  12F0               	bcf	_irSensorDetected/(0+8),_irSensorDetected& (0+7)
 25399                           
 25400                           ;main.c: 1006: doorOpened = 0;
 25401  1BAA  1372               	bcf	_doorOpened/(0+8),_doorOpened& (0+7)
 25402                           
 25403                           ;main.c: 1007: totalRunTime = 0;
 25404  1BAB  3000               	movlw	0
 25405  1BAC  0143               	movlb	3	; select bank3
 25406  1BAD  00DA               	movwf	(_totalRunTime+3)^(0+384)
 25407  1BAE  3000               	movlw	0
 25408  1BAF  00D9               	movwf	(_totalRunTime+2)^(0+384)
 25409  1BB0  3000               	movlw	0
 25410  1BB1  00D8               	movwf	(_totalRunTime+1)^(0+384)
 25411  1BB2  3000               	movlw	0
 25412  1BB3  00D7               	movwf	_totalRunTime^(0+384)
 25413                           
 25414                           ;main.c: 1009: preClockWiseTime = (clockWiseTime);
 25415  1BB4  0141               	movlb	1	; select bank1
 25416  1BB5  084F               	movf	(_clockWiseTime+3)^(0+128),w
 25417  1BB6  0142               	movlb	2	; select bank2
 25418  1BB7  00BF               	movwf	(_preClockWiseTime+3)^(0+256)
 25419  1BB8  0141               	movlb	1	; select bank1
 25420  1BB9  084E               	movf	(_clockWiseTime+2)^(0+128),w
 25421  1BBA  0142               	movlb	2	; select bank2
 25422  1BBB  00BE               	movwf	(_preClockWiseTime+2)^(0+256)
 25423  1BBC  0141               	movlb	1	; select bank1
 25424  1BBD  084D               	movf	(_clockWiseTime+1)^(0+128),w
 25425  1BBE  0142               	movlb	2	; select bank2
 25426  1BBF  00BD               	movwf	(_preClockWiseTime+1)^(0+256)
 25427  1BC0  0141               	movlb	1	; select bank1
 25428  1BC1  084C               	movf	_clockWiseTime^(0+128),w
 25429  1BC2  0142               	movlb	2	; select bank2
 25430  1BC3  00BC               	movwf	_preClockWiseTime^(0+256)
 25431                           
 25432                           ;main.c: 1010: preAntiClockWiseTime = (antiClockWiseTime);
 25433  1BC4  0141               	movlb	1	; select bank1
 25434  1BC5  084B               	movf	(_antiClockWiseTime+3)^(0+128),w
 25435  1BC6  0142               	movlb	2	; select bank2
 25436  1BC7  00BB               	movwf	(_preAntiClockWiseTime+3)^(0+256)
 25437  1BC8  0141               	movlb	1	; select bank1
 25438  1BC9  084A               	movf	(_antiClockWiseTime+2)^(0+128),w
 25439  1BCA  0142               	movlb	2	; select bank2
 25440  1BCB  00BA               	movwf	(_preAntiClockWiseTime+2)^(0+256)
 25441  1BCC  0141               	movlb	1	; select bank1
 25442  1BCD  0849               	movf	(_antiClockWiseTime+1)^(0+128),w
 25443  1BCE  0142               	movlb	2	; select bank2
 25444  1BCF  00B9               	movwf	(_preAntiClockWiseTime+1)^(0+256)
 25445  1BD0  0141               	movlb	1	; select bank1
 25446  1BD1  0848               	movf	_antiClockWiseTime^(0+128),w
 25447  1BD2  0142               	movlb	2	; select bank2
 25448  1BD3  00B8               	movwf	_preAntiClockWiseTime^(0+256)
 25449                           
 25450                           ;main.c: 1013: if(doorStatus)
 25451  1BD4  0865               	movf	_doorStatus^(0+256),w
 25452  1BD5  1903               	btfsc	3,2
 25453  1BD6  2C2E               	goto	l10289
 25454                           
 25455                           ;main.c: 1014: {
 25456                           ;main.c: 1015: uint8_t tmp[2];
 25457                           ;main.c: 1016: preDirection = direction;
 25458  1BD7  0141               	movlb	1	; select bank1
 25459  1BD8  0841               	movf	_direction^(0+128),w
 25460  1BD9  00B3               	movwf	??_main^(0+128)
 25461  1BDA  0833               	movf	??_main^(0+128),w
 25462  1BDB  0142               	movlb	2	; select bank2
 25463  1BDC  00E7               	movwf	_preDirection^(0+256)
 25464                           
 25465                           ;main.c: 1018: ouputOnAntiClock();
 25466  1BDD  3188  20FA  319B   	fcall	_ouputOnAntiClock
 25467                           
 25468                           ;main.c: 1021: antiClockWiseTime = (1290);
 25469  1BE0  3000               	movlw	0
 25470  1BE1  0141               	movlb	1	; select bank1
 25471  1BE2  00CB               	movwf	(_antiClockWiseTime+3)^(0+128)
 25472  1BE3  3000               	movlw	0
 25473  1BE4  00CA               	movwf	(_antiClockWiseTime+2)^(0+128)
 25474  1BE5  3005               	movlw	5
 25475  1BE6  00C9               	movwf	(_antiClockWiseTime+1)^(0+128)
 25476  1BE7  300A               	movlw	10
 25477  1BE8  00C8               	movwf	_antiClockWiseTime^(0+128)
 25478                           
 25479                           ;main.c: 1022: tmp[0] = (uint8_t) (antiClockWiseTime);
 25480  1BE9  0848               	movf	_antiClockWiseTime^(0+128),w
 25481  1BEA  00B3               	movwf	??_main^(0+128)
 25482  1BEB  0833               	movf	??_main^(0+128),w
 25483  1BEC  0144               	movlb	4	; select bank4
 25484  1BED  00B8               	movwf	main@tmp^(0+512)
 25485                           
 25486                           ;main.c: 1023: tmp[1] = (uint8_t) (antiClockWiseTime >> 8);
 25487  1BEE  0141               	movlb	1	; select bank1
 25488  1BEF  0848               	movf	_antiClockWiseTime^(0+128),w
 25489  1BF0  00B3               	movwf	??_main^(0+128)
 25490  1BF1  0849               	movf	(_antiClockWiseTime+1)^(0+128),w
 25491  1BF2  00B4               	movwf	(??_main^(0+128)+1)
 25492  1BF3  084A               	movf	(_antiClockWiseTime+2)^(0+128),w
 25493  1BF4  00B5               	movwf	(??_main^(0+128)+2)
 25494  1BF5  084B               	movf	(_antiClockWiseTime+3)^(0+128),w
 25495  1BF6  00B6               	movwf	(??_main^(0+128)+3)
 25496  1BF7  3008               	movlw	8
 25497  1BF8  00B7               	movwf	(??_main+4)^(0+128)
 25498  1BF9                     u6805:	
 25499  1BF9  37B6               	asrf	(??_main^(0+128)+3),f
 25500  1BFA  0CB5               	rrf	(??_main^(0+128)+2),f
 25501  1BFB  0CB4               	rrf	(??_main^(0+128)+1),f
 25502  1BFC  0CB3               	rrf	??_main^(0+128),f
 25503  1BFD  0BB7               	decfsz	(??_main+4)^(0+128),f
 25504  1BFE  2BF9               	goto	u6805
 25505  1BFF  0833               	movf	??_main^(0+128),w
 25506  1C00  00B8               	movwf	(??_main+5)^(0+128)
 25507  1C01  0838               	movf	(??_main+5)^(0+128),w
 25508  1C02  0144               	movlb	4	; select bank4
 25509  1C03  00B9               	movwf	(main@tmp^(0+512)+1)
 25510                           
 25511                           ;main.c: 1025: eeprom_write(0x34 , tmp[0]);
 25512  1C04  0838               	movf	main@tmp^(0+512),w
 25513  1C05  0141               	movlb	1	; select bank1
 25514  1C06  00B3               	movwf	??_main^(0+128)
 25515  1C07  0833               	movf	??_main^(0+128),w
 25516  1C08  0140               	movlb	0	; select bank0
 25517  1C09  00A0               	movwf	eeprom_write@value
 25518  1C0A  3034               	movlw	52
 25519  1C0B  31A2  22BC  319B   	fcall	_eeprom_write
 25520                           
 25521                           ;main.c: 1026: _delay((unsigned long)(((3))*(8000000/4000.0)));
 25522  1C0E  3008               	movlw	8
 25523  1C0F  0141               	movlb	1	; select bank1
 25524  1C10  00B3               	movwf	??_main^(0+128)
 25525  1C11  30C9               	movlw	201
 25526  1C12                     u7237:	
 25527  1C12  0B89               	decfsz	9,f
 25528  1C13  2C12               	goto	u7237
 25529  1C14  0BB3               	decfsz	??_main^(0+128),f
 25530  1C15  2C12               	goto	u7237
 25531  1C16  3200               	nop2
 25532                           
 25533                           ;main.c: 1028: eeprom_write(0x34+1, tmp[1]);
 25534  1C17  0144               	movlb	4	; select bank4
 25535  1C18  0839               	movf	(main@tmp^(0+512)+1),w
 25536  1C19  0141               	movlb	1	; select bank1
 25537  1C1A  00B3               	movwf	??_main^(0+128)
 25538  1C1B  0833               	movf	??_main^(0+128),w
 25539  1C1C  0140               	movlb	0	; select bank0
 25540  1C1D  00A0               	movwf	eeprom_write@value
 25541  1C1E  3035               	movlw	53
 25542  1C1F  31A2  22BC  319B   	fcall	_eeprom_write
 25543                           
 25544                           ;main.c: 1029: _delay((unsigned long)(((3))*(8000000/4000.0)));
 25545  1C22  3008               	movlw	8
 25546  1C23  0141               	movlb	1	; select bank1
 25547  1C24  00B3               	movwf	??_main^(0+128)
 25548  1C25  30C9               	movlw	201
 25549  1C26                     u7247:	
 25550  1C26  0B89               	decfsz	9,f
 25551  1C27  2C26               	goto	u7247
 25552  1C28  0BB3               	decfsz	??_main^(0+128),f
 25553  1C29  2C26               	goto	u7247
 25554  1C2A  3200               	nop2
 25555                           
 25556                           ;main.c: 1031: default_menu();
 25557  1C2B  3199  2168  319B   	fcall	_default_menu
 25558  1C2E                     l10289:	
 25559                           
 25560                           ;main.c: 1032: }
 25561                           ;main.c: 1035: TMR0_StartTimer();
 25562  1C2E  31A0  208A  319B   	fcall	_TMR0_StartTimer
 25563  1C31                     l10291:	
 25564                           ;main.c: 1037: while (1)
 25565                           
 25566                           
 25567                           ;main.c: 1038: {
 25568                           ;main.c: 1041: if(adcSamplingBattVoltTimeExpired)
 25569  1C31  1C72               	btfss	_adcSamplingBattVoltTimeExpired/(0+8),_adcSamplingBattVoltTimeExpired& (0+7)
 25570  1C32  2C36               	goto	l10295
 25571                           
 25572                           ;main.c: 1042: checkBatteryVoltage();
 25573  1C33  319D  2578  319B   	fcall	_checkBatteryVoltage
 25574  1C36                     l10295:	
 25575                           
 25576                           ;main.c: 1044: if(adcSamplingMainSupply)
 25577  1C36  1FF1               	btfss	_adcSamplingMainSupply/(0+8),_adcSamplingMainSupply& (0+7)
 25578  1C37  2C3B               	goto	l10299
 25579                           
 25580                           ;main.c: 1045: checkMainSupplyFailure();
 25581  1C38  3198  20A6  319B   	fcall	_checkMainSupplyFailure
 25582  1C3B                     l10299:	
 25583                           
 25584                           ;main.c: 1047: command = keypad();
 25585  1C3B  31A5  254D  319B   	fcall	_keypad
 25586  1C3E  0141               	movlb	1	; select bank1
 25587  1C3F  00B3               	movwf	??_main^(0+128)
 25588  1C40  0833               	movf	??_main^(0+128),w
 25589  1C41  0144               	movlb	4	; select bank4
 25590  1C42  00BC               	movwf	main@command^(0+512)
 25591                           
 25592                           ;main.c: 1048: serialCommand();
 25593  1C43  318B  23BE         	fcall	_serialCommand
 25594                           
 25595                           ;main.c: 1050: switch(command)
 25596  1C45  3187  2F30         	goto	l10681
 25597                           
 25598                           	psect	maintext_split_2
 25599  004B                     l1278:	
 25600                           ;main.c: 1051: {
 25601                           ;main.c: 1052: case FOOT_KEY:
 25602                           
 25603                           
 25604                           ;main.c: 1054: {
 25605                           ;main.c: 1055: if((RB0))
 25606  004B  0140               	movlb	0	; select bank0
 25607  004C  1C0D               	btfss	13,0	;volatile
 25608  004D  2878               	goto	l1279
 25609                           
 25610                           ;main.c: 1056: {
 25611                           ;main.c: 1057: (RD6) = 1;
 25612  004E  170F               	bsf	15,6	;volatile
 25613                           
 25614                           ;main.c: 1058: _delay((unsigned long)((50)*(8000000/4000.0)));
 25615  004F  3082               	movlw	130
 25616  0050  0141               	movlb	1	; select bank1
 25617  0051  00B3               	movwf	??_main^(0+128)
 25618  0052  30DD               	movlw	221
 25619  0053                     u7257:	
 25620  0053  0B89               	decfsz	9,f
 25621  0054  2853               	goto	u7257
 25622  0055  0BB3               	decfsz	??_main^(0+128),f
 25623  0056  2853               	goto	u7257
 25624  0057  3200               	nop2
 25625                           
 25626                           ;main.c: 1059: if((RB0))
 25627  0058  0140               	movlb	0	; select bank0
 25628  0059  1C0D               	btfss	13,0	;volatile
 25629  005A  2876               	goto	l10315
 25630                           
 25631                           ;main.c: 1060: {
 25632                           ;main.c: 1061: display((char *)"IR Obstacle ",(0x80));
 25633  005B  3084               	movlw	low (STR_22| (0+32768))
 25634  005C  00AC               	movwf	display@a
 25635  005D  30A8               	movlw	high (STR_22| (0+32768))
 25636  005E  00AD               	movwf	display@a+1
 25637  005F  3080               	movlw	128
 25638  0060  0141               	movlb	1	; select bank1
 25639  0061  00B3               	movwf	??_main^(0+128)
 25640  0062  0833               	movf	??_main^(0+128),w
 25641  0063  0140               	movlb	0	; select bank0
 25642  0064  00AE               	movwf	display@add
 25643  0065  31A2  2297  3180   	fcall	_display
 25644                           
 25645                           ;main.c: 1062: _delay((unsigned long)((500)*(8000000/4000.0)));
 25646  0068  3006               	movlw	6
 25647  0069  0141               	movlb	1	; select bank1
 25648  006A  00B4               	movwf	(??_main^(0+128)+1)
 25649  006B  3013               	movlw	19
 25650  006C  00B3               	movwf	??_main^(0+128)
 25651  006D  30AD               	movlw	173
 25652  006E                     u7267:	
 25653  006E  0B89               	decfsz	9,f
 25654  006F  286E               	goto	u7267
 25655  0070  0BB3               	decfsz	??_main^(0+128),f
 25656  0071  286E               	goto	u7267
 25657  0072  0BB4               	decfsz	(??_main^(0+128)+1),f
 25658  0073  286E               	goto	u7267
 25659  0074  3200               	nop2
 25660                           
 25661                           ;main.c: 1063: irSensorDetected = 1;
 25662  0075  16F0               	bsf	_irSensorDetected/(0+8),_irSensorDetected& (0+7)
 25663  0076                     l10315:	
 25664                           
 25665                           ;main.c: 1066: }
 25666                           ;main.c: 1067: (RD6) = 0;
 25667  0076  0140               	movlb	0	; select bank0
 25668  0077  2879               	goto	L1
 25669  0078                     l1279:	
 25670                           ;main.c: 1068: }
 25671                           
 25672                           
 25673                           ;main.c: 1069: else
 25674                           ;main.c: 1070: {
 25675                           ;main.c: 1071: irSensorDetected = 0;
 25676  0078  12F0               	bcf	_irSensorDetected/(0+8),_irSensorDetected& (0+7)
 25677  0079                     L1:	
 25678                           
 25679                           ;main.c: 1072: (RD6) = 0;
 25680  0079  130F               	bcf	15,6	;volatile
 25681                           
 25682                           ;main.c: 1073: }
 25683                           ;main.c: 1075: if((STARTED == 0) && (irSensorDetected == 0))
 25684  007A  1FF2               	btfss	_STARTED/(0+8),_STARTED& (0+7)
 25685  007B  1AF0               	btfsc	_irSensorDetected/(0+8),_irSensorDetected& (0+7)
 25686  007C  2A95               	goto	l1297
 25687                           
 25688                           ;main.c: 1076: {
 25689                           ;main.c: 1077: STARTED = 1;
 25690  007D  17F2               	bsf	_STARTED/(0+8),_STARTED& (0+7)
 25691                           
 25692                           ;main.c: 1078: (RD4) = 0;
 25693  007E  120F               	bcf	15,4	;volatile
 25694                           
 25695                           ;main.c: 1081: preDirection = direction;
 25696  007F  0141               	movlb	1	; select bank1
 25697  0080  0841               	movf	_direction^(0+128),w
 25698  0081  00B3               	movwf	??_main^(0+128)
 25699  0082  0833               	movf	??_main^(0+128),w
 25700  0083  0142               	movlb	2	; select bank2
 25701  0084  00E7               	movwf	_preDirection^(0+256)
 25702                           
 25703                           ;main.c: 1084: preClockWiseTime = clockWiseTime;
 25704  0085  0141               	movlb	1	; select bank1
 25705  0086  084F               	movf	(_clockWiseTime+3)^(0+128),w
 25706  0087  0142               	movlb	2	; select bank2
 25707  0088  00BF               	movwf	(_preClockWiseTime+3)^(0+256)
 25708  0089  0141               	movlb	1	; select bank1
 25709  008A  084E               	movf	(_clockWiseTime+2)^(0+128),w
 25710  008B  0142               	movlb	2	; select bank2
 25711  008C  00BE               	movwf	(_preClockWiseTime+2)^(0+256)
 25712  008D  0141               	movlb	1	; select bank1
 25713  008E  084D               	movf	(_clockWiseTime+1)^(0+128),w
 25714  008F  0142               	movlb	2	; select bank2
 25715  0090  00BD               	movwf	(_preClockWiseTime+1)^(0+256)
 25716  0091  0141               	movlb	1	; select bank1
 25717  0092  084C               	movf	_clockWiseTime^(0+128),w
 25718  0093  0142               	movlb	2	; select bank2
 25719  0094  00BC               	movwf	_preClockWiseTime^(0+256)
 25720                           
 25721                           ;main.c: 1085: preAntiClockWiseTime = antiClockWiseTime;
 25722  0095  0141               	movlb	1	; select bank1
 25723  0096  084B               	movf	(_antiClockWiseTime+3)^(0+128),w
 25724  0097  0142               	movlb	2	; select bank2
 25725  0098  00BB               	movwf	(_preAntiClockWiseTime+3)^(0+256)
 25726  0099  0141               	movlb	1	; select bank1
 25727  009A  084A               	movf	(_antiClockWiseTime+2)^(0+128),w
 25728  009B  0142               	movlb	2	; select bank2
 25729  009C  00BA               	movwf	(_preAntiClockWiseTime+2)^(0+256)
 25730  009D  0141               	movlb	1	; select bank1
 25731  009E  0849               	movf	(_antiClockWiseTime+1)^(0+128),w
 25732  009F  0142               	movlb	2	; select bank2
 25733  00A0  00B9               	movwf	(_preAntiClockWiseTime+1)^(0+256)
 25734  00A1  0141               	movlb	1	; select bank1
 25735  00A2  0848               	movf	_antiClockWiseTime^(0+128),w
 25736  00A3  0142               	movlb	2	; select bank2
 25737  00A4  00B8               	movwf	_preAntiClockWiseTime^(0+256)
 25738                           
 25739                           ;main.c: 1087: if(direction == STOP)
 25740  00A5  3002               	movlw	2
 25741  00A6  0141               	movlb	1	; select bank1
 25742  00A7  0641               	xorwf	_direction^(0+128),w
 25743  00A8  1D03               	btfss	3,2
 25744  00A9  2941               	goto	l1283
 25745                           
 25746                           ;main.c: 1088: {
 25747                           ;main.c: 1090: if((doorOpened == 0)&&(openedByFoot == 0))
 25748  00AA  1F72               	btfss	_doorOpened/(0+8),_doorOpened& (0+7)
 25749  00AB  1A72               	btfsc	_openedByFoot/(0+8),_openedByFoot& (0+7)
 25750  00AC  28B2               	goto	l1284
 25751                           
 25752                           ;main.c: 1091: {
 25753                           ;main.c: 1095: ouputOnClockwise();
 25754  00AD  3192  2210  3180   	fcall	_ouputOnClockwise
 25755                           
 25756                           ;main.c: 1096: openedByFoot = 1;
 25757  00B0  1672               	bsf	_openedByFoot/(0+8),_openedByFoot& (0+7)
 25758  00B1  2948               	goto	l10351
 25759  00B2                     l1284:	
 25760                           ;main.c: 1098: }
 25761                           
 25762                           ;main.c: 1097: doorOpenedWhileClosing = 0;
 25763                           
 25764                           
 25765                           ;main.c: 1100: else if( (doorOpened == 1) &&(openedByFoot == 0))
 25766  00B2  1B72               	btfsc	_doorOpened/(0+8),_doorOpened& (0+7)
 25767  00B3  1A72               	btfsc	_openedByFoot/(0+8),_openedByFoot& (0+7)
 25768  00B4  293A               	goto	l1286
 25769                           
 25770                           ;main.c: 1101: {
 25771                           ;main.c: 1102: openedByFoot = 1;
 25772  00B5  1672               	bsf	_openedByFoot/(0+8),_openedByFoot& (0+7)
 25773                           
 25774                           ;main.c: 1103: preClockWiseTime = ((clockWiseTime) * (100 - (83)))/100;
 25775  00B6  3000               	movlw	0
 25776  00B7  0140               	movlb	0	; select bank0
 25777  00B8  00AF               	movwf	___aldiv@divisor+3
 25778  00B9  3000               	movlw	0
 25779  00BA  00AE               	movwf	___aldiv@divisor+2
 25780  00BB  3000               	movlw	0
 25781  00BC  00AD               	movwf	___aldiv@divisor+1
 25782  00BD  3064               	movlw	100
 25783  00BE  00AC               	movwf	___aldiv@divisor
 25784  00BF  0141               	movlb	1	; select bank1
 25785  00C0  084F               	movf	(_clockWiseTime+3)^(0+128),w
 25786  00C1  0140               	movlb	0	; select bank0
 25787  00C2  00A3               	movwf	___lmul@multiplier+3
 25788  00C3  0141               	movlb	1	; select bank1
 25789  00C4  084E               	movf	(_clockWiseTime+2)^(0+128),w
 25790  00C5  0140               	movlb	0	; select bank0
 25791  00C6  00A2               	movwf	___lmul@multiplier+2
 25792  00C7  0141               	movlb	1	; select bank1
 25793  00C8  084D               	movf	(_clockWiseTime+1)^(0+128),w
 25794  00C9  0140               	movlb	0	; select bank0
 25795  00CA  00A1               	movwf	___lmul@multiplier+1
 25796  00CB  0141               	movlb	1	; select bank1
 25797  00CC  084C               	movf	_clockWiseTime^(0+128),w
 25798  00CD  0140               	movlb	0	; select bank0
 25799  00CE  00A0               	movwf	___lmul@multiplier
 25800  00CF  3000               	movlw	0
 25801  00D0  00A7               	movwf	___lmul@multiplicand+3
 25802  00D1  3000               	movlw	0
 25803  00D2  00A6               	movwf	___lmul@multiplicand+2
 25804  00D3  3000               	movlw	0
 25805  00D4  00A5               	movwf	___lmul@multiplicand+1
 25806  00D5  3011               	movlw	17
 25807  00D6  00A4               	movwf	___lmul@multiplicand
 25808  00D7  31A3  2339  3180   	fcall	___lmul
 25809  00DA  0140               	movlb	0	; select bank0
 25810  00DB  0823               	movf	?___lmul+3,w
 25811  00DC  00B3               	movwf	___aldiv@dividend+3
 25812  00DD  0822               	movf	?___lmul+2,w
 25813  00DE  00B2               	movwf	___aldiv@dividend+2
 25814  00DF  0821               	movf	?___lmul+1,w
 25815  00E0  00B1               	movwf	___aldiv@dividend+1
 25816  00E1  0820               	movf	?___lmul,w
 25817  00E2  00B0               	movwf	___aldiv@dividend
 25818  00E3  31A6  2639  3180   	fcall	___aldiv
 25819  00E6  0140               	movlb	0	; select bank0
 25820  00E7  082F               	movf	?___aldiv+3,w
 25821  00E8  0142               	movlb	2	; select bank2
 25822  00E9  00BF               	movwf	(_preClockWiseTime+3)^(0+256)
 25823  00EA  0140               	movlb	0	; select bank0
 25824  00EB  082E               	movf	?___aldiv+2,w
 25825  00EC  0142               	movlb	2	; select bank2
 25826  00ED  00BE               	movwf	(_preClockWiseTime+2)^(0+256)
 25827  00EE  0140               	movlb	0	; select bank0
 25828  00EF  082D               	movf	?___aldiv+1,w
 25829  00F0  0142               	movlb	2	; select bank2
 25830  00F1  00BD               	movwf	(_preClockWiseTime+1)^(0+256)
 25831  00F2  0140               	movlb	0	; select bank0
 25832  00F3  082C               	movf	?___aldiv,w
 25833  00F4  0142               	movlb	2	; select bank2
 25834  00F5  00BC               	movwf	_preClockWiseTime^(0+256)
 25835                           
 25836                           ;main.c: 1104: preAntiClockWiseTime = ((antiClockWiseTime) * (100 - (83)))/100;
 25837  00F6  3000               	movlw	0
 25838  00F7  0140               	movlb	0	; select bank0
 25839  00F8  00AF               	movwf	___aldiv@divisor+3
 25840  00F9  3000               	movlw	0
 25841  00FA  00AE               	movwf	___aldiv@divisor+2
 25842  00FB  3000               	movlw	0
 25843  00FC  00AD               	movwf	___aldiv@divisor+1
 25844  00FD  3064               	movlw	100
 25845  00FE  00AC               	movwf	___aldiv@divisor
 25846  00FF  0141               	movlb	1	; select bank1
 25847  0100  084B               	movf	(_antiClockWiseTime+3)^(0+128),w
 25848  0101  0140               	movlb	0	; select bank0
 25849  0102  00A3               	movwf	___lmul@multiplier+3
 25850  0103  0141               	movlb	1	; select bank1
 25851  0104  084A               	movf	(_antiClockWiseTime+2)^(0+128),w
 25852  0105  0140               	movlb	0	; select bank0
 25853  0106  00A2               	movwf	___lmul@multiplier+2
 25854  0107  0141               	movlb	1	; select bank1
 25855  0108  0849               	movf	(_antiClockWiseTime+1)^(0+128),w
 25856  0109  0140               	movlb	0	; select bank0
 25857  010A  00A1               	movwf	___lmul@multiplier+1
 25858  010B  0141               	movlb	1	; select bank1
 25859  010C  0848               	movf	_antiClockWiseTime^(0+128),w
 25860  010D  0140               	movlb	0	; select bank0
 25861  010E  00A0               	movwf	___lmul@multiplier
 25862  010F  3000               	movlw	0
 25863  0110  00A7               	movwf	___lmul@multiplicand+3
 25864  0111  3000               	movlw	0
 25865  0112  00A6               	movwf	___lmul@multiplicand+2
 25866  0113  3000               	movlw	0
 25867  0114  00A5               	movwf	___lmul@multiplicand+1
 25868  0115  3011               	movlw	17
 25869  0116  00A4               	movwf	___lmul@multiplicand
 25870  0117  31A3  2339  3180   	fcall	___lmul
 25871  011A  0140               	movlb	0	; select bank0
 25872  011B  0823               	movf	?___lmul+3,w
 25873  011C  00B3               	movwf	___aldiv@dividend+3
 25874  011D  0822               	movf	?___lmul+2,w
 25875  011E  00B2               	movwf	___aldiv@dividend+2
 25876  011F  0821               	movf	?___lmul+1,w
 25877  0120  00B1               	movwf	___aldiv@dividend+1
 25878  0121  0820               	movf	?___lmul,w
 25879  0122  00B0               	movwf	___aldiv@dividend
 25880  0123  31A6  2639  3180   	fcall	___aldiv
 25881  0126  0140               	movlb	0	; select bank0
 25882  0127  082F               	movf	?___aldiv+3,w
 25883  0128  0142               	movlb	2	; select bank2
 25884  0129  00BB               	movwf	(_preAntiClockWiseTime+3)^(0+256)
 25885  012A  0140               	movlb	0	; select bank0
 25886  012B  082E               	movf	?___aldiv+2,w
 25887  012C  0142               	movlb	2	; select bank2
 25888  012D  00BA               	movwf	(_preAntiClockWiseTime+2)^(0+256)
 25889  012E  0140               	movlb	0	; select bank0
 25890  012F  082D               	movf	?___aldiv+1,w
 25891  0130  0142               	movlb	2	; select bank2
 25892  0131  00B9               	movwf	(_preAntiClockWiseTime+1)^(0+256)
 25893  0132  0140               	movlb	0	; select bank0
 25894  0133  082C               	movf	?___aldiv,w
 25895  0134  0142               	movlb	2	; select bank2
 25896  0135  00B8               	movwf	_preAntiClockWiseTime^(0+256)
 25897                           
 25898                           ;main.c: 1106: ouputOnClockwise();
 25899  0136  3192  2210  3180   	fcall	_ouputOnClockwise
 25900                           
 25901                           ;main.c: 1109: }
 25902  0139  2949               	goto	l10353
 25903  013A                     l1286:	
 25904                           
 25905                           ;main.c: 1110: else if((doorOpened == 1) && (openedByFoot == 1))
 25906  013A  1B72               	btfsc	_doorOpened/(0+8),_doorOpened& (0+7)
 25907  013B  1E72               	btfss	_openedByFoot/(0+8),_openedByFoot& (0+7)
 25908  013C  2949               	goto	l10353
 25909                           
 25910                           ;main.c: 1111: {
 25911                           ;main.c: 1113: ouputOnAntiClock();
 25912  013D  3188  20FA  3180   	fcall	_ouputOnAntiClock
 25913                           
 25914                           ;main.c: 1114: }
 25915                           ;main.c: 1115: }
 25916  0140  2949               	goto	l10353
 25917  0141                     l1283:	
 25918                           
 25919                           ;main.c: 1116: else
 25920                           ;main.c: 1117: {
 25921                           ;main.c: 1118: DoorClosed = 1;
 25922  0141  16F2               	bsf	_DoorClosed/(0+8),_DoorClosed& (0+7)
 25923                           
 25924                           ;main.c: 1119: doorOpened = 0;
 25925  0142  1372               	bcf	_doorOpened/(0+8),_doorOpened& (0+7)
 25926                           
 25927                           ;main.c: 1120: STARTED = 1;
 25928  0143  17F2               	bsf	_STARTED/(0+8),_STARTED& (0+7)
 25929                           
 25930                           ;main.c: 1121: outputOn();
 25931  0144  319C  2447  3180   	fcall	_outputOn
 25932                           
 25933                           ;main.c: 1122: openedByFoot = 0;
 25934  0147  1272               	bcf	_openedByFoot/(0+8),_openedByFoot& (0+7)
 25935  0148                     l10351:	
 25936                           
 25937                           ;main.c: 1123: doorOpenedWhileClosing = 0;
 25938  0148  11F2               	bcf	_doorOpenedWhileClosing/(0+8),_doorOpenedWhileClosing& (0+7)
 25939  0149                     l10353:	
 25940                           
 25941                           ;main.c: 1124: }
 25942                           ;main.c: 1126: _delay((unsigned long)((500)*(8000000/4000.0)));
 25943  0149  3006               	movlw	6
 25944  014A  0141               	movlb	1	; select bank1
 25945  014B  00B4               	movwf	(??_main^(0+128)+1)
 25946  014C  3013               	movlw	19
 25947  014D  00B3               	movwf	??_main^(0+128)
 25948  014E  30AD               	movlw	173
 25949  014F                     u7277:	
 25950  014F  0B89               	decfsz	9,f
 25951  0150  294F               	goto	u7277
 25952  0151  0BB3               	decfsz	??_main^(0+128),f
 25953  0152  294F               	goto	u7277
 25954  0153  0BB4               	decfsz	(??_main^(0+128)+1),f
 25955  0154  294F               	goto	u7277
 25956  0155  3200               	nop2
 25957                           
 25958                           ;main.c: 1127: _delay((unsigned long)((500)*(8000000/4000.0)));
 25959  0156  3006               	movlw	6
 25960  0157  0141               	movlb	1	; select bank1
 25961  0158  00B4               	movwf	(??_main^(0+128)+1)
 25962  0159  3013               	movlw	19
 25963  015A  00B3               	movwf	??_main^(0+128)
 25964  015B  30AD               	movlw	173
 25965  015C                     u7287:	
 25966  015C  0B89               	decfsz	9,f
 25967  015D  295C               	goto	u7287
 25968  015E  0BB3               	decfsz	??_main^(0+128),f
 25969  015F  295C               	goto	u7287
 25970  0160  0BB4               	decfsz	(??_main^(0+128)+1),f
 25971  0161  295C               	goto	u7287
 25972  0162  3200               	nop2
 25973                           
 25974                           ;main.c: 1128: GIE = 1;
 25975  0163  178B               	bsf	11,7	;volatile
 25976                           
 25977                           ;main.c: 1129: STARTED = 0;
 25978  0164  13F2               	bcf	_STARTED/(0+8),_STARTED& (0+7)
 25979  0165  2A92               	goto	L3
 25980  0166                     l1293:	
 25981                           ;main.c: 1142: case START_KEY:
 25982                           
 25983                           ;main.c: 1139: }
 25984                           ;main.c: 1140: break;
 25985                           
 25986                           ;main.c: 1137: else
 25987                           ;main.c: 1138: irSensorDetected = 0;
 25988                           
 25989                           ;main.c: 1136: }
 25990                           
 25991                           ;main.c: 1135: (INTCONbits.PEIE = 1);
 25992                           
 25993                           ;main.c: 1132: (INTCONbits.GIE = 1);
 25994                           
 25995                           
 25996                           ;main.c: 1143: case MAGIC_KEY:
 25997                           ;main.c: 1146: {
 25998                           ;main.c: 1147: if((RB0))
 25999  0166  0140               	movlb	0	; select bank0
 26000  0167  1C0D               	btfss	13,0	;volatile
 26001  0168  2991               	goto	l1294
 26002                           
 26003                           ;main.c: 1148: {
 26004                           ;main.c: 1149: _delay((unsigned long)((50)*(8000000/4000.0)));
 26005  0169  3082               	movlw	130
 26006  016A  0141               	movlb	1	; select bank1
 26007  016B  00B3               	movwf	??_main^(0+128)
 26008  016C  30DD               	movlw	221
 26009  016D                     u7297:	
 26010  016D  0B89               	decfsz	9,f
 26011  016E  296D               	goto	u7297
 26012  016F  0BB3               	decfsz	??_main^(0+128),f
 26013  0170  296D               	goto	u7297
 26014  0171  3200               	nop2
 26015                           
 26016                           ;main.c: 1150: if((RB0))
 26017  0172  0140               	movlb	0	; select bank0
 26018  0173  1C0D               	btfss	13,0	;volatile
 26019  0174  2992               	goto	l1296
 26020                           
 26021                           ;main.c: 1151: {
 26022                           ;main.c: 1152: display((char *)"IR Obstacle ",(0x80));
 26023  0175  3084               	movlw	low (STR_22| (0+32768))
 26024  0176  00AC               	movwf	display@a
 26025  0177  30A8               	movlw	high (STR_22| (0+32768))
 26026  0178  00AD               	movwf	display@a+1
 26027  0179  3080               	movlw	128
 26028  017A  0141               	movlb	1	; select bank1
 26029  017B  00B3               	movwf	??_main^(0+128)
 26030  017C  0833               	movf	??_main^(0+128),w
 26031  017D  0140               	movlb	0	; select bank0
 26032  017E  00AE               	movwf	display@add
 26033  017F  31A2  2297  3180   	fcall	_display
 26034                           
 26035                           ;main.c: 1153: _delay((unsigned long)((500)*(8000000/4000.0)));
 26036  0182  3006               	movlw	6
 26037  0183  0141               	movlb	1	; select bank1
 26038  0184  00B4               	movwf	(??_main^(0+128)+1)
 26039  0185  3013               	movlw	19
 26040  0186  00B3               	movwf	??_main^(0+128)
 26041  0187  30AD               	movlw	173
 26042  0188                     u7307:	
 26043  0188  0B89               	decfsz	9,f
 26044  0189  2988               	goto	u7307
 26045  018A  0BB3               	decfsz	??_main^(0+128),f
 26046  018B  2988               	goto	u7307
 26047  018C  0BB4               	decfsz	(??_main^(0+128)+1),f
 26048  018D  2988               	goto	u7307
 26049  018E  3200               	nop2
 26050                           
 26051                           ;main.c: 1154: irSensorDetected = 1;
 26052  018F  16F0               	bsf	_irSensorDetected/(0+8),_irSensorDetected& (0+7)
 26053                           
 26054                           ;main.c: 1156: }
 26055                           ;main.c: 1157: }
 26056  0190  2992               	goto	l1296
 26057  0191                     l1294:	
 26058                           
 26059                           ;main.c: 1158: else{
 26060                           ;main.c: 1159: irSensorDetected = 0;
 26061  0191  12F0               	bcf	_irSensorDetected/(0+8),_irSensorDetected& (0+7)
 26062  0192                     l1296:	
 26063                           
 26064                           ;main.c: 1161: }
 26065                           ;main.c: 1163: if((STARTED == 0) && (irSensorDetected == 0))
 26066  0192  1FF2               	btfss	_STARTED/(0+8),_STARTED& (0+7)
 26067  0193  1AF0               	btfsc	_irSensorDetected/(0+8),_irSensorDetected& (0+7)
 26068  0194  2A95               	goto	l1297
 26069                           
 26070                           ;main.c: 1164: {
 26071                           ;main.c: 1166: STARTED = 1;
 26072  0195  17F2               	bsf	_STARTED/(0+8),_STARTED& (0+7)
 26073                           
 26074                           ;main.c: 1167: preDirection = direction;
 26075  0196  0141               	movlb	1	; select bank1
 26076  0197  0841               	movf	_direction^(0+128),w
 26077  0198  00B3               	movwf	??_main^(0+128)
 26078  0199  0833               	movf	??_main^(0+128),w
 26079  019A  0142               	movlb	2	; select bank2
 26080  019B  00E7               	movwf	_preDirection^(0+256)
 26081                           
 26082                           ;main.c: 1171: if(openedByFoot)
 26083  019C  1E72               	btfss	_openedByFoot/(0+8),_openedByFoot& (0+7)
 26084  019D  29BD               	goto	l10385
 26085                           
 26086                           ;main.c: 1172: {
 26087                           ;main.c: 1173: preClockWiseTime = (clockWiseTime);
 26088  019E  0141               	movlb	1	; select bank1
 26089  019F  084F               	movf	(_clockWiseTime+3)^(0+128),w
 26090  01A0  0142               	movlb	2	; select bank2
 26091  01A1  00BF               	movwf	(_preClockWiseTime+3)^(0+256)
 26092  01A2  0141               	movlb	1	; select bank1
 26093  01A3  084E               	movf	(_clockWiseTime+2)^(0+128),w
 26094  01A4  0142               	movlb	2	; select bank2
 26095  01A5  00BE               	movwf	(_preClockWiseTime+2)^(0+256)
 26096  01A6  0141               	movlb	1	; select bank1
 26097  01A7  084D               	movf	(_clockWiseTime+1)^(0+128),w
 26098  01A8  0142               	movlb	2	; select bank2
 26099  01A9  00BD               	movwf	(_preClockWiseTime+1)^(0+256)
 26100  01AA  0141               	movlb	1	; select bank1
 26101  01AB  084C               	movf	_clockWiseTime^(0+128),w
 26102  01AC  0142               	movlb	2	; select bank2
 26103  01AD  00BC               	movwf	_preClockWiseTime^(0+256)
 26104                           
 26105                           ;main.c: 1174: preAntiClockWiseTime = (antiClockWiseTime);
 26106  01AE  0141               	movlb	1	; select bank1
 26107  01AF  084B               	movf	(_antiClockWiseTime+3)^(0+128),w
 26108  01B0  0142               	movlb	2	; select bank2
 26109  01B1  00BB               	movwf	(_preAntiClockWiseTime+3)^(0+256)
 26110  01B2  0141               	movlb	1	; select bank1
 26111  01B3  084A               	movf	(_antiClockWiseTime+2)^(0+128),w
 26112  01B4  0142               	movlb	2	; select bank2
 26113  01B5  00BA               	movwf	(_preAntiClockWiseTime+2)^(0+256)
 26114  01B6  0141               	movlb	1	; select bank1
 26115  01B7  0849               	movf	(_antiClockWiseTime+1)^(0+128),w
 26116  01B8  0142               	movlb	2	; select bank2
 26117  01B9  00B9               	movwf	(_preAntiClockWiseTime+1)^(0+256)
 26118  01BA  0141               	movlb	1	; select bank1
 26119  01BB  0848               	movf	_antiClockWiseTime^(0+128),w
 26120  01BC  2A3B               	goto	L2
 26121  01BD                     l10385:	
 26122                           ;main.c: 1175: }
 26123                           
 26124                           
 26125                           ;main.c: 1176: else
 26126                           ;main.c: 1177: {
 26127                           ;main.c: 1180: preClockWiseTime = ((clockWiseTime * 72)/100 ) ;
 26128  01BD  3000               	movlw	0
 26129  01BE  0140               	movlb	0	; select bank0
 26130  01BF  00AF               	movwf	___aldiv@divisor+3
 26131  01C0  3000               	movlw	0
 26132  01C1  00AE               	movwf	___aldiv@divisor+2
 26133  01C2  3000               	movlw	0
 26134  01C3  00AD               	movwf	___aldiv@divisor+1
 26135  01C4  3064               	movlw	100
 26136  01C5  00AC               	movwf	___aldiv@divisor
 26137  01C6  0141               	movlb	1	; select bank1
 26138  01C7  084F               	movf	(_clockWiseTime+3)^(0+128),w
 26139  01C8  0140               	movlb	0	; select bank0
 26140  01C9  00A3               	movwf	___lmul@multiplier+3
 26141  01CA  0141               	movlb	1	; select bank1
 26142  01CB  084E               	movf	(_clockWiseTime+2)^(0+128),w
 26143  01CC  0140               	movlb	0	; select bank0
 26144  01CD  00A2               	movwf	___lmul@multiplier+2
 26145  01CE  0141               	movlb	1	; select bank1
 26146  01CF  084D               	movf	(_clockWiseTime+1)^(0+128),w
 26147  01D0  0140               	movlb	0	; select bank0
 26148  01D1  00A1               	movwf	___lmul@multiplier+1
 26149  01D2  0141               	movlb	1	; select bank1
 26150  01D3  084C               	movf	_clockWiseTime^(0+128),w
 26151  01D4  0140               	movlb	0	; select bank0
 26152  01D5  00A0               	movwf	___lmul@multiplier
 26153  01D6  3000               	movlw	0
 26154  01D7  00A7               	movwf	___lmul@multiplicand+3
 26155  01D8  3000               	movlw	0
 26156  01D9  00A6               	movwf	___lmul@multiplicand+2
 26157  01DA  3000               	movlw	0
 26158  01DB  00A5               	movwf	___lmul@multiplicand+1
 26159  01DC  3048               	movlw	72
 26160  01DD  00A4               	movwf	___lmul@multiplicand
 26161  01DE  31A3  2339  3180   	fcall	___lmul
 26162  01E1  0140               	movlb	0	; select bank0
 26163  01E2  0823               	movf	?___lmul+3,w
 26164  01E3  00B3               	movwf	___aldiv@dividend+3
 26165  01E4  0822               	movf	?___lmul+2,w
 26166  01E5  00B2               	movwf	___aldiv@dividend+2
 26167  01E6  0821               	movf	?___lmul+1,w
 26168  01E7  00B1               	movwf	___aldiv@dividend+1
 26169  01E8  0820               	movf	?___lmul,w
 26170  01E9  00B0               	movwf	___aldiv@dividend
 26171  01EA  31A6  2639  3180   	fcall	___aldiv
 26172  01ED  0140               	movlb	0	; select bank0
 26173  01EE  082F               	movf	?___aldiv+3,w
 26174  01EF  0142               	movlb	2	; select bank2
 26175  01F0  00BF               	movwf	(_preClockWiseTime+3)^(0+256)
 26176  01F1  0140               	movlb	0	; select bank0
 26177  01F2  082E               	movf	?___aldiv+2,w
 26178  01F3  0142               	movlb	2	; select bank2
 26179  01F4  00BE               	movwf	(_preClockWiseTime+2)^(0+256)
 26180  01F5  0140               	movlb	0	; select bank0
 26181  01F6  082D               	movf	?___aldiv+1,w
 26182  01F7  0142               	movlb	2	; select bank2
 26183  01F8  00BD               	movwf	(_preClockWiseTime+1)^(0+256)
 26184  01F9  0140               	movlb	0	; select bank0
 26185  01FA  082C               	movf	?___aldiv,w
 26186  01FB  0142               	movlb	2	; select bank2
 26187  01FC  00BC               	movwf	_preClockWiseTime^(0+256)
 26188                           
 26189                           ;main.c: 1181: preAntiClockWiseTime = ((antiClockWiseTime *72) /100);
 26190  01FD  3000               	movlw	0
 26191  01FE  0140               	movlb	0	; select bank0
 26192  01FF  00AF               	movwf	___aldiv@divisor+3
 26193  0200  3000               	movlw	0
 26194  0201  00AE               	movwf	___aldiv@divisor+2
 26195  0202  3000               	movlw	0
 26196  0203  00AD               	movwf	___aldiv@divisor+1
 26197  0204  3064               	movlw	100
 26198  0205  00AC               	movwf	___aldiv@divisor
 26199  0206  0141               	movlb	1	; select bank1
 26200  0207  084B               	movf	(_antiClockWiseTime+3)^(0+128),w
 26201  0208  0140               	movlb	0	; select bank0
 26202  0209  00A3               	movwf	___lmul@multiplier+3
 26203  020A  0141               	movlb	1	; select bank1
 26204  020B  084A               	movf	(_antiClockWiseTime+2)^(0+128),w
 26205  020C  0140               	movlb	0	; select bank0
 26206  020D  00A2               	movwf	___lmul@multiplier+2
 26207  020E  0141               	movlb	1	; select bank1
 26208  020F  0849               	movf	(_antiClockWiseTime+1)^(0+128),w
 26209  0210  0140               	movlb	0	; select bank0
 26210  0211  00A1               	movwf	___lmul@multiplier+1
 26211  0212  0141               	movlb	1	; select bank1
 26212  0213  0848               	movf	_antiClockWiseTime^(0+128),w
 26213  0214  0140               	movlb	0	; select bank0
 26214  0215  00A0               	movwf	___lmul@multiplier
 26215  0216  3000               	movlw	0
 26216  0217  00A7               	movwf	___lmul@multiplicand+3
 26217  0218  3000               	movlw	0
 26218  0219  00A6               	movwf	___lmul@multiplicand+2
 26219  021A  3000               	movlw	0
 26220  021B  00A5               	movwf	___lmul@multiplicand+1
 26221  021C  3048               	movlw	72
 26222  021D  00A4               	movwf	___lmul@multiplicand
 26223  021E  31A3  2339  3180   	fcall	___lmul
 26224  0221  0140               	movlb	0	; select bank0
 26225  0222  0823               	movf	?___lmul+3,w
 26226  0223  00B3               	movwf	___aldiv@dividend+3
 26227  0224  0822               	movf	?___lmul+2,w
 26228  0225  00B2               	movwf	___aldiv@dividend+2
 26229  0226  0821               	movf	?___lmul+1,w
 26230  0227  00B1               	movwf	___aldiv@dividend+1
 26231  0228  0820               	movf	?___lmul,w
 26232  0229  00B0               	movwf	___aldiv@dividend
 26233  022A  31A6  2639  3180   	fcall	___aldiv
 26234  022D  0140               	movlb	0	; select bank0
 26235  022E  082F               	movf	?___aldiv+3,w
 26236  022F  0142               	movlb	2	; select bank2
 26237  0230  00BB               	movwf	(_preAntiClockWiseTime+3)^(0+256)
 26238  0231  0140               	movlb	0	; select bank0
 26239  0232  082E               	movf	?___aldiv+2,w
 26240  0233  0142               	movlb	2	; select bank2
 26241  0234  00BA               	movwf	(_preAntiClockWiseTime+2)^(0+256)
 26242  0235  0140               	movlb	0	; select bank0
 26243  0236  082D               	movf	?___aldiv+1,w
 26244  0237  0142               	movlb	2	; select bank2
 26245  0238  00B9               	movwf	(_preAntiClockWiseTime+1)^(0+256)
 26246  0239  0140               	movlb	0	; select bank0
 26247  023A  082C               	movf	?___aldiv,w
 26248  023B                     L2:	
 26249  023B  0142               	movlb	2	; select bank2
 26250  023C  00B8               	movwf	_preAntiClockWiseTime^(0+256)
 26251                           
 26252                           ;main.c: 1182: }
 26253                           ;main.c: 1184: if(direction == STOP)
 26254  023D  3002               	movlw	2
 26255  023E  0141               	movlb	1	; select bank1
 26256  023F  0641               	xorwf	_direction^(0+128),w
 26257  0240  1D03               	btfss	3,2
 26258  0241  2A89               	goto	l1300
 26259                           
 26260                           ;main.c: 1185: {
 26261                           ;main.c: 1186: if((doorOpened == 0) && (doorOpenedWhileClosing == 0))
 26262  0242  1F72               	btfss	_doorOpened/(0+8),_doorOpened& (0+7)
 26263  0243  19F2               	btfsc	_doorOpenedWhileClosing/(0+8),_doorOpenedWhileClosing& (0+7)
 26264  0244  2A5A               	goto	l10397
 26265                           
 26266                           ;main.c: 1187: {
 26267                           ;main.c: 1188: lcd(((0xC0)),(0));
 26268  0245  0140               	movlb	0	; select bank0
 26269  0246  01A9               	clrf	lcd@b
 26270  0247  30C0               	movlw	192
 26271  0248  31A4  245E  3180   	fcall	_lcd
 26272                           
 26273                           ;main.c: 1189: number_3(speedRpm);
 26274  024B  0141               	movlb	1	; select bank1
 26275  024C  0840               	movf	(_speedRpm+1)^(0+128),w
 26276  024D  0140               	movlb	0	; select bank0
 26277  024E  00AD               	movwf	number_3@num+1
 26278  024F  0141               	movlb	1	; select bank1
 26279  0250  083F               	movf	_speedRpm^(0+128),w
 26280  0251  0140               	movlb	0	; select bank0
 26281  0252  00AC               	movwf	number_3@num
 26282  0253  31A6  26BB  3180   	fcall	_number_3
 26283                           
 26284                           ;main.c: 1190: ouputOnClockwise();
 26285  0256  3192  2210  3180   	fcall	_ouputOnClockwise
 26286                           
 26287                           ;main.c: 1192: }
 26288  0259  2A6E               	goto	l10401
 26289  025A                     l10397:	
 26290                           
 26291                           ;main.c: 1193: else
 26292                           ;main.c: 1194: {
 26293                           ;main.c: 1196: lcd(((0xC0)),(0));
 26294  025A  0140               	movlb	0	; select bank0
 26295  025B  01A9               	clrf	lcd@b
 26296  025C  30C0               	movlw	192
 26297  025D  31A4  245E  3180   	fcall	_lcd
 26298                           
 26299                           ;main.c: 1197: number_3(speedRpm);
 26300  0260  0141               	movlb	1	; select bank1
 26301  0261  0840               	movf	(_speedRpm+1)^(0+128),w
 26302  0262  0140               	movlb	0	; select bank0
 26303  0263  00AD               	movwf	number_3@num+1
 26304  0264  0141               	movlb	1	; select bank1
 26305  0265  083F               	movf	_speedRpm^(0+128),w
 26306  0266  0140               	movlb	0	; select bank0
 26307  0267  00AC               	movwf	number_3@num
 26308  0268  31A6  26BB  3180   	fcall	_number_3
 26309                           
 26310                           ;main.c: 1199: ouputOnAntiClock();
 26311  026B  3188  20FA  3180   	fcall	_ouputOnAntiClock
 26312  026E                     l10401:	
 26313                           
 26314                           ;main.c: 1202: }
 26315                           ;main.c: 1203: _delay((unsigned long)((500)*(8000000/4000.0)));
 26316  026E  3006               	movlw	6
 26317  026F  0141               	movlb	1	; select bank1
 26318  0270  00B4               	movwf	(??_main^(0+128)+1)
 26319  0271  3013               	movlw	19
 26320  0272  00B3               	movwf	??_main^(0+128)
 26321  0273  30AD               	movlw	173
 26322  0274                     u7317:	
 26323  0274  0B89               	decfsz	9,f
 26324  0275  2A74               	goto	u7317
 26325  0276  0BB3               	decfsz	??_main^(0+128),f
 26326  0277  2A74               	goto	u7317
 26327  0278  0BB4               	decfsz	(??_main^(0+128)+1),f
 26328  0279  2A74               	goto	u7317
 26329  027A  3200               	nop2
 26330                           
 26331                           ;main.c: 1204: _delay((unsigned long)((500)*(8000000/4000.0)));
 26332  027B  3006               	movlw	6
 26333  027C  0141               	movlb	1	; select bank1
 26334  027D  00B4               	movwf	(??_main^(0+128)+1)
 26335  027E  3013               	movlw	19
 26336  027F  00B3               	movwf	??_main^(0+128)
 26337  0280  30AD               	movlw	173
 26338  0281                     u7327:	
 26339  0281  0B89               	decfsz	9,f
 26340  0282  2A81               	goto	u7327
 26341  0283  0BB3               	decfsz	??_main^(0+128),f
 26342  0284  2A81               	goto	u7327
 26343  0285  0BB4               	decfsz	(??_main^(0+128)+1),f
 26344  0286  2A81               	goto	u7327
 26345  0287  3200               	nop2
 26346                           
 26347                           ;main.c: 1205: }
 26348  0288  2A91               	goto	l10411
 26349  0289                     l1300:	
 26350                           
 26351                           ;main.c: 1206: else
 26352                           ;main.c: 1207: {
 26353                           ;main.c: 1208: DoorClosed = 1;
 26354  0289  16F2               	bsf	_DoorClosed/(0+8),_DoorClosed& (0+7)
 26355                           
 26356                           ;main.c: 1209: doorOpened = 0;
 26357  028A  1372               	bcf	_doorOpened/(0+8),_doorOpened& (0+7)
 26358                           
 26359                           ;main.c: 1210: STARTED = 1;
 26360  028B  17F2               	bsf	_STARTED/(0+8),_STARTED& (0+7)
 26361                           
 26362                           ;main.c: 1211: outputOn();
 26363  028C  319C  2447  3180   	fcall	_outputOn
 26364                           
 26365                           ;main.c: 1212: openedByFoot = 0;
 26366  028F  1272               	bcf	_openedByFoot/(0+8),_openedByFoot& (0+7)
 26367                           
 26368                           ;main.c: 1213: doorOpenedWhileClosing = 0;
 26369  0290  11F2               	bcf	_doorOpenedWhileClosing/(0+8),_doorOpenedWhileClosing& (0+7)
 26370  0291                     l10411:	
 26371                           
 26372                           ;main.c: 1214: }
 26373                           ;main.c: 1215: GIE = 1;
 26374  0291  178B               	bsf	11,7	;volatile
 26375  0292                     L3:	
 26376                           
 26377                           ;main.c: 1217: (INTCONbits.GIE = 1);
 26378  0292  178B               	bsf	11,7	;volatile
 26379                           
 26380                           ;main.c: 1220: (INTCONbits.PEIE = 1);
 26381  0293  170B               	bsf	11,6	;volatile
 26382                           
 26383                           ;main.c: 1221: }
 26384  0294  2F45               	goto	l10683
 26385  0295                     l1297:	
 26386                           
 26387                           ;main.c: 1222: else
 26388                           ;main.c: 1223: {
 26389                           ;main.c: 1224: irSensorDetected = 0;
 26390  0295  12F0               	bcf	_irSensorDetected/(0+8),_irSensorDetected& (0+7)
 26391                           
 26392                           ;main.c: 1226: }
 26393                           ;main.c: 1227: }
 26394                           ;main.c: 1229: break;
 26395  0296  2F45               	goto	l10683
 26396  0297                     l1305:	
 26397                           ;main.c: 1231: case SET_KEY:
 26398                           
 26399                           
 26400                           ;main.c: 1233: upDwnKeyPressed = 0;
 26401  0297  1172               	bcf	_upDwnKeyPressed/(0+8),_upDwnKeyPressed& (0+7)
 26402                           
 26403                           ;main.c: 1234: keyCounter = 0;
 26404  0298  0142               	movlb	2	; select bank2
 26405  0299  01DC               	clrf	_keyCounter^(0+256)
 26406  029A  01DD               	clrf	(_keyCounter+1)^(0+256)
 26407                           
 26408                           ;main.c: 1236: TMR0_StopTimer();
 26409  029B  31A0  208D  3180   	fcall	_TMR0_StopTimer
 26410                           
 26411                           ;main.c: 1238: if(SetParamCount >= 4)
 26412  029E  3004               	movlw	4
 26413  029F  0142               	movlb	2	; select bank2
 26414  02A0  0266               	subwf	_SetParamCount^(0+256),w
 26415  02A1  1C03               	skipc
 26416  02A2  2AA5               	goto	l10425
 26417                           
 26418                           ;main.c: 1239: SetParamCount = 0;
 26419  02A3  01E6               	clrf	_SetParamCount^(0+256)
 26420  02A4  2B6B               	goto	l10469
 26421  02A5                     l10425:	
 26422                           
 26423                           ;main.c: 1240: else
 26424                           ;main.c: 1241: SetParamCount++;
 26425  02A5  3001               	movlw	1
 26426  02A6  0141               	movlb	1	; select bank1
 26427  02A7  00B3               	movwf	??_main^(0+128)
 26428  02A8  0833               	movf	??_main^(0+128),w
 26429  02A9  0142               	movlb	2	; select bank2
 26430  02AA  07E6               	addwf	_SetParamCount^(0+256),f
 26431                           
 26432                           ;main.c: 1243: switch(SetParamCount)
 26433  02AB  2B6B               	goto	l10469
 26434  02AC                     l10427:	
 26435                           ;main.c: 1244: {
 26436                           ;main.c: 1245: case SET_RPM:
 26437                           
 26438                           
 26439                           ;main.c: 1246: saveConfiguration(SET_DIRECTION, direction);
 26440  02AC  0141               	movlb	1	; select bank1
 26441  02AD  0841               	movf	_direction^(0+128),w
 26442  02AE  00B3               	movwf	??_main^(0+128)
 26443  02AF  01B4               	clrf	(??_main^(0+128)+1)
 26444  02B0  0833               	movf	??_main^(0+128),w
 26445  02B1  0140               	movlb	0	; select bank0
 26446  02B2  00A2               	movwf	saveConfiguration@value
 26447  02B3  0141               	movlb	1	; select bank1
 26448  02B4  0834               	movf	(??_main+1)^(0+128),w
 26449  02B5  0140               	movlb	0	; select bank0
 26450  02B6  00A3               	movwf	saveConfiguration@value+1
 26451  02B7  3004               	movlw	4
 26452  02B8  31A7  2741  3180   	fcall	_saveConfiguration
 26453                           
 26454                           ;main.c: 1248: lcd((0xC0),(0));
 26455  02BB  0140               	movlb	0	; select bank0
 26456  02BC  01A9               	clrf	lcd@b
 26457  02BD  30C0               	movlw	192
 26458  02BE  31A4  245E  3180   	fcall	_lcd
 26459                           
 26460                           ;main.c: 1249: lcd(0x00F, (0));
 26461  02C1  0140               	movlb	0	; select bank0
 26462  02C2  01A9               	clrf	lcd@b
 26463  02C3  300F               	movlw	15
 26464  02C4  31A4  245E  3180   	fcall	_lcd
 26465                           
 26466                           ;main.c: 1250: _delay((unsigned long)(((150))*(8000000/4000.0)));
 26467  02C7  3002               	movlw	2
 26468  02C8  0141               	movlb	1	; select bank1
 26469  02C9  00B4               	movwf	(??_main^(0+128)+1)
 26470  02CA  3086               	movlw	134
 26471  02CB  00B3               	movwf	??_main^(0+128)
 26472  02CC  3099               	movlw	153
 26473  02CD                     u7337:	
 26474  02CD  0B89               	decfsz	9,f
 26475  02CE  2ACD               	goto	u7337
 26476  02CF  0BB3               	decfsz	??_main^(0+128),f
 26477  02D0  2ACD               	goto	u7337
 26478  02D1  0BB4               	decfsz	(??_main^(0+128)+1),f
 26479  02D2  2ACD               	goto	u7337
 26480                           
 26481                           ;main.c: 1251: break;
 26482  02D3  2F45               	goto	l10683
 26483  02D4                     l10435:	
 26484                           ;main.c: 1253: case SET_CLOCKWISE_TIME:
 26485                           
 26486                           
 26487                           ;main.c: 1255: saveConfiguration(SET_RPM, speedRpm);
 26488  02D4  0141               	movlb	1	; select bank1
 26489  02D5  0840               	movf	(_speedRpm+1)^(0+128),w
 26490  02D6  0140               	movlb	0	; select bank0
 26491  02D7  00A3               	movwf	saveConfiguration@value+1
 26492  02D8  0141               	movlb	1	; select bank1
 26493  02D9  083F               	movf	_speedRpm^(0+128),w
 26494  02DA  0140               	movlb	0	; select bank0
 26495  02DB  00A2               	movwf	saveConfiguration@value
 26496  02DC  3000               	movlw	0
 26497  02DD  31A7  2741  3180   	fcall	_saveConfiguration
 26498                           
 26499                           ;main.c: 1257: lcd((0xC0) +4,(0));
 26500  02E0  0140               	movlb	0	; select bank0
 26501  02E1  01A9               	clrf	lcd@b
 26502  02E2  30C4               	movlw	196
 26503  02E3  31A4  245E  3180   	fcall	_lcd
 26504                           
 26505                           ;main.c: 1258: lcd(0x00F, (0));
 26506  02E6  0140               	movlb	0	; select bank0
 26507  02E7  01A9               	clrf	lcd@b
 26508  02E8  300F               	movlw	15
 26509  02E9  31A4  245E  3180   	fcall	_lcd
 26510                           
 26511                           ;main.c: 1259: _delay((unsigned long)(((150))*(8000000/4000.0)));
 26512  02EC  3002               	movlw	2
 26513  02ED  0141               	movlb	1	; select bank1
 26514  02EE  00B4               	movwf	(??_main^(0+128)+1)
 26515  02EF  3086               	movlw	134
 26516  02F0  00B3               	movwf	??_main^(0+128)
 26517  02F1  3099               	movlw	153
 26518  02F2                     u7347:	
 26519  02F2  0B89               	decfsz	9,f
 26520  02F3  2AF2               	goto	u7347
 26521  02F4  0BB3               	decfsz	??_main^(0+128),f
 26522  02F5  2AF2               	goto	u7347
 26523  02F6  0BB4               	decfsz	(??_main^(0+128)+1),f
 26524  02F7  2AF2               	goto	u7347
 26525                           
 26526                           ;main.c: 1260: break;
 26527  02F8  2F45               	goto	l10683
 26528  02F9                     l10443:	
 26529                           ;main.c: 1262: case SET_ANTI_CLOCKWISE_TIME:
 26530                           
 26531                           
 26532                           ;main.c: 1264: saveConfiguration(SET_CLOCKWISE_TIME, clockWiseTime);
 26533  02F9  0141               	movlb	1	; select bank1
 26534  02FA  084D               	movf	(_clockWiseTime+1)^(0+128),w
 26535  02FB  0140               	movlb	0	; select bank0
 26536  02FC  00A3               	movwf	saveConfiguration@value+1
 26537  02FD  0141               	movlb	1	; select bank1
 26538  02FE  084C               	movf	_clockWiseTime^(0+128),w
 26539  02FF  0140               	movlb	0	; select bank0
 26540  0300  00A2               	movwf	saveConfiguration@value
 26541  0301  3001               	movlw	1
 26542  0302  31A7  2741  3180   	fcall	_saveConfiguration
 26543                           
 26544                           ;main.c: 1266: lcd((0xC0) +8,(0));
 26545  0305  0140               	movlb	0	; select bank0
 26546  0306  01A9               	clrf	lcd@b
 26547  0307  30C8               	movlw	200
 26548  0308  31A4  245E  3180   	fcall	_lcd
 26549                           
 26550                           ;main.c: 1267: lcd(0x00F, (0));
 26551  030B  0140               	movlb	0	; select bank0
 26552  030C  01A9               	clrf	lcd@b
 26553  030D  300F               	movlw	15
 26554  030E  31A4  245E  3180   	fcall	_lcd
 26555                           
 26556                           ;main.c: 1268: _delay((unsigned long)(((150))*(8000000/4000.0)));
 26557  0311  3002               	movlw	2
 26558  0312  0141               	movlb	1	; select bank1
 26559  0313  00B4               	movwf	(??_main^(0+128)+1)
 26560  0314  3086               	movlw	134
 26561  0315  00B3               	movwf	??_main^(0+128)
 26562  0316  3099               	movlw	153
 26563  0317                     u7357:	
 26564  0317  0B89               	decfsz	9,f
 26565  0318  2B17               	goto	u7357
 26566  0319  0BB3               	decfsz	??_main^(0+128),f
 26567  031A  2B17               	goto	u7357
 26568  031B  0BB4               	decfsz	(??_main^(0+128)+1),f
 26569  031C  2B17               	goto	u7357
 26570                           
 26571                           ;main.c: 1269: break;
 26572  031D  2F45               	goto	l10683
 26573  031E                     l10451:	
 26574                           ;main.c: 1271: case SET_HOLD_TIME:
 26575                           
 26576                           
 26577                           ;main.c: 1273: saveConfiguration(SET_ANTI_CLOCKWISE_TIME, antiClockWiseTime);
 26578  031E  0141               	movlb	1	; select bank1
 26579  031F  0849               	movf	(_antiClockWiseTime+1)^(0+128),w
 26580  0320  0140               	movlb	0	; select bank0
 26581  0321  00A3               	movwf	saveConfiguration@value+1
 26582  0322  0141               	movlb	1	; select bank1
 26583  0323  0848               	movf	_antiClockWiseTime^(0+128),w
 26584  0324  0140               	movlb	0	; select bank0
 26585  0325  00A2               	movwf	saveConfiguration@value
 26586  0326  3002               	movlw	2
 26587  0327  31A7  2741  3180   	fcall	_saveConfiguration
 26588                           
 26589                           ;main.c: 1275: lcd((0xC0) +12,(0));
 26590  032A  0140               	movlb	0	; select bank0
 26591  032B  01A9               	clrf	lcd@b
 26592  032C  30CC               	movlw	204
 26593  032D  31A4  245E  3180   	fcall	_lcd
 26594                           
 26595                           ;main.c: 1276: lcd(0x00F, (0));
 26596  0330  0140               	movlb	0	; select bank0
 26597  0331  01A9               	clrf	lcd@b
 26598  0332  300F               	movlw	15
 26599  0333  31A4  245E  3180   	fcall	_lcd
 26600                           
 26601                           ;main.c: 1277: _delay((unsigned long)(((150))*(8000000/4000.0)));
 26602  0336  3002               	movlw	2
 26603  0337  0141               	movlb	1	; select bank1
 26604  0338  00B4               	movwf	(??_main^(0+128)+1)
 26605  0339  3086               	movlw	134
 26606  033A  00B3               	movwf	??_main^(0+128)
 26607  033B  3099               	movlw	153
 26608  033C                     u7367:	
 26609  033C  0B89               	decfsz	9,f
 26610  033D  2B3C               	goto	u7367
 26611  033E  0BB3               	decfsz	??_main^(0+128),f
 26612  033F  2B3C               	goto	u7367
 26613  0340  0BB4               	decfsz	(??_main^(0+128)+1),f
 26614  0341  2B3C               	goto	u7367
 26615                           
 26616                           ;main.c: 1278: break;
 26617  0342  2F45               	goto	l10683
 26618  0343                     l10459:	
 26619                           ;main.c: 1279: case SET_DIRECTION:
 26620                           
 26621                           
 26622                           ;main.c: 1281: saveConfiguration(SET_HOLD_TIME, holdTime);
 26623  0343  0141               	movlb	1	; select bank1
 26624  0344  0842               	movf	_holdTime^(0+128),w
 26625  0345  00B3               	movwf	??_main^(0+128)
 26626  0346  01B4               	clrf	(??_main^(0+128)+1)
 26627  0347  0833               	movf	??_main^(0+128),w
 26628  0348  0140               	movlb	0	; select bank0
 26629  0349  00A2               	movwf	saveConfiguration@value
 26630  034A  0141               	movlb	1	; select bank1
 26631  034B  0834               	movf	(??_main+1)^(0+128),w
 26632  034C  0140               	movlb	0	; select bank0
 26633  034D  00A3               	movwf	saveConfiguration@value+1
 26634  034E  3003               	movlw	3
 26635  034F  31A7  2741  3180   	fcall	_saveConfiguration
 26636                           
 26637                           ;main.c: 1283: lcd((0xC0) +15,(0));
 26638  0352  0140               	movlb	0	; select bank0
 26639  0353  01A9               	clrf	lcd@b
 26640  0354  30CF               	movlw	207
 26641  0355  31A4  245E  3180   	fcall	_lcd
 26642                           
 26643                           ;main.c: 1284: lcd(0x00F, (0));
 26644  0358  0140               	movlb	0	; select bank0
 26645  0359  01A9               	clrf	lcd@b
 26646  035A  300F               	movlw	15
 26647  035B  31A4  245E  3180   	fcall	_lcd
 26648                           
 26649                           ;main.c: 1285: _delay((unsigned long)(((150))*(8000000/4000.0)));
 26650  035E  3002               	movlw	2
 26651  035F  0141               	movlb	1	; select bank1
 26652  0360  00B4               	movwf	(??_main^(0+128)+1)
 26653  0361  3086               	movlw	134
 26654  0362  00B3               	movwf	??_main^(0+128)
 26655  0363  3099               	movlw	153
 26656  0364                     u7377:	
 26657  0364  0B89               	decfsz	9,f
 26658  0365  2B64               	goto	u7377
 26659  0366  0BB3               	decfsz	??_main^(0+128),f
 26660  0367  2B64               	goto	u7377
 26661  0368  0BB4               	decfsz	(??_main^(0+128)+1),f
 26662  0369  2B64               	goto	u7377
 26663                           
 26664                           ;main.c: 1290: }
 26665                           
 26666                           ;main.c: 1289: break;
 26667                           
 26668                           ;main.c: 1288: default:
 26669                           
 26670                           ;main.c: 1286: break;
 26671  036A  2F45               	goto	l10683
 26672  036B                     l10469:	
 26673  036B  0142               	movlb	2	; select bank2
 26674  036C  0866               	movf	_SetParamCount^(0+256),w
 26675                           
 26676                           ; Switch size 1, requested type "space"
 26677                           ; Number of cases is 5, Range of values is 0 to 4
 26678                           ; switch strategies available:
 26679                           ; Name         Instructions Cycles
 26680                           ; direct_byte           16     6 (fixed)
 26681                           ; simple_byte           16     9 (average)
 26682                           ; jumptable            260     6 (fixed)
 26683                           ;	Chosen strategy is direct_byte
 26684  036D  0084               	movwf	4
 26685  036E  3005               	movlw	5
 26686  036F  0204               	subwf	4,w
 26687  0370  1803               	skipnc
 26688  0371  2F45               	goto	l10683
 26689  0372  31A0               	movlp	high S10823
 26690  0373  3504               	lslf	4,w
 26691  0374  3E00               	addlw	low S10823
 26692  0375  0082               	movwf	2
 26693                           
 26694                           ;main.c: 1291: break;
 26695  0376  2F45               	goto	l10683
 26696  0377                     l10471:	
 26697                           ;main.c: 1295: {
 26698                           ;main.c: 1296: case SET_RPM:
 26699                           
 26700                           ;main.c: 1294: switch(SetParamCount)
 26701                           
 26702                           ;main.c: 1293: case INC_KEY:
 26703                           
 26704                           
 26705                           ;main.c: 1299: speedRpm = speedRpm++;
 26706  0377  3002               	movlw	2
 26707  0378  0141               	movlb	1	; select bank1
 26708  0379  0240               	subwf	(_speedRpm+1)^(0+128),w
 26709  037A  3095               	movlw	149
 26710  037B  1903               	skipnz
 26711  037C  023F               	subwf	_speedRpm^(0+128),w
 26712  037D  1803               	skipnc
 26713  037E  2B83               	goto	l10475
 26714  037F  3001               	movlw	1
 26715  0380  07BF               	addwf	_speedRpm^(0+128),f
 26716  0381  3000               	movlw	0
 26717  0382  3DC0               	addwfc	(_speedRpm+1)^(0+128),f
 26718  0383                     l10475:	
 26719                           
 26720                           ;main.c: 1301: lcd(((0xC0)),(0));
 26721  0383  0140               	movlb	0	; select bank0
 26722  0384  01A9               	clrf	lcd@b
 26723  0385  30C0               	movlw	192
 26724  0386  31A4  245E  3180   	fcall	_lcd
 26725                           
 26726                           ;main.c: 1302: number_3(speedRpm);
 26727  0389  0141               	movlb	1	; select bank1
 26728  038A  0840               	movf	(_speedRpm+1)^(0+128),w
 26729  038B  0140               	movlb	0	; select bank0
 26730  038C  00AD               	movwf	number_3@num+1
 26731  038D  0141               	movlb	1	; select bank1
 26732  038E  083F               	movf	_speedRpm^(0+128),w
 26733  038F  0140               	movlb	0	; select bank0
 26734  0390  00AC               	movwf	number_3@num
 26735  0391  31A6  26BB  3180   	fcall	_number_3
 26736                           
 26737                           ;main.c: 1303: lcd(((0xC0)),(0));
 26738  0394  0140               	movlb	0	; select bank0
 26739  0395  01A9               	clrf	lcd@b
 26740  0396  30C0               	movlw	192
 26741  0397  31A4  245E  3180   	fcall	_lcd
 26742                           
 26743                           ;main.c: 1304: lcd(0x00F, (0));
 26744  039A  0140               	movlb	0	; select bank0
 26745  039B  01A9               	clrf	lcd@b
 26746  039C  300F               	movlw	15
 26747  039D  31A4  245E  3180   	fcall	_lcd
 26748                           
 26749                           ;main.c: 1305: _delay((unsigned long)(((150))*(8000000/4000.0)));
 26750  03A0  3002               	movlw	2
 26751  03A1  0141               	movlb	1	; select bank1
 26752  03A2  00B4               	movwf	(??_main^(0+128)+1)
 26753  03A3  3086               	movlw	134
 26754  03A4  00B3               	movwf	??_main^(0+128)
 26755  03A5  3099               	movlw	153
 26756  03A6                     u7387:	
 26757  03A6  0B89               	decfsz	9,f
 26758  03A7  2BA6               	goto	u7387
 26759  03A8  0BB3               	decfsz	??_main^(0+128),f
 26760  03A9  2BA6               	goto	u7387
 26761  03AA  0BB4               	decfsz	(??_main^(0+128)+1),f
 26762  03AB  2BA6               	goto	u7387
 26763                           
 26764                           ;main.c: 1307: if(STARTED)
 26765  03AC  1FF2               	btfss	_STARTED/(0+8),_STARTED& (0+7)
 26766  03AD  2BD7               	goto	l10491
 26767                           
 26768                           ;main.c: 1308: {
 26769                           ;main.c: 1309: if(direction == CLOCKWISE)
 26770  03AE  0141               	movlb	1	; select bank1
 26771  03AF  0841               	movf	_direction^(0+128),w
 26772  03B0  1D03               	btfss	3,2
 26773  03B1  2BC5               	goto	l10489
 26774                           
 26775                           ;main.c: 1310: {
 26776                           ;main.c: 1311: PWM4_LoadDutyValue(0);
 26777  03B2  3000               	movlw	0
 26778  03B3  0140               	movlb	0	; select bank0
 26779  03B4  00A0               	movwf	PWM4_LoadDutyValue@dutyValue
 26780  03B5  00A1               	movwf	PWM4_LoadDutyValue@dutyValue+1
 26781  03B6  31A2  2254  3180   	fcall	_PWM4_LoadDutyValue
 26782                           
 26783                           ;main.c: 1312: PWM3_LoadDutyValue(speedRpm);
 26784  03B9  0141               	movlb	1	; select bank1
 26785  03BA  0840               	movf	(_speedRpm+1)^(0+128),w
 26786  03BB  0140               	movlb	0	; select bank0
 26787  03BC  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
 26788  03BD  0141               	movlb	1	; select bank1
 26789  03BE  083F               	movf	_speedRpm^(0+128),w
 26790  03BF  0140               	movlb	0	; select bank0
 26791  03C0  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
 26792  03C1  31A2  2235  3180   	fcall	_PWM3_LoadDutyValue
 26793                           
 26794                           ;main.c: 1313: }
 26795  03C4  2BD7               	goto	l10491
 26796  03C5                     l10489:	
 26797                           
 26798                           ;main.c: 1314: else
 26799                           ;main.c: 1315: {
 26800                           ;main.c: 1316: PWM3_LoadDutyValue(0);
 26801  03C5  3000               	movlw	0
 26802  03C6  0140               	movlb	0	; select bank0
 26803  03C7  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
 26804  03C8  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
 26805  03C9  31A2  2235  3180   	fcall	_PWM3_LoadDutyValue
 26806                           
 26807                           ;main.c: 1317: PWM4_LoadDutyValue(speedRpm);
 26808  03CC  0141               	movlb	1	; select bank1
 26809  03CD  0840               	movf	(_speedRpm+1)^(0+128),w
 26810  03CE  0140               	movlb	0	; select bank0
 26811  03CF  00A1               	movwf	PWM4_LoadDutyValue@dutyValue+1
 26812  03D0  0141               	movlb	1	; select bank1
 26813  03D1  083F               	movf	_speedRpm^(0+128),w
 26814  03D2  0140               	movlb	0	; select bank0
 26815  03D3  00A0               	movwf	PWM4_LoadDutyValue@dutyValue
 26816  03D4  31A2  2254  3180   	fcall	_PWM4_LoadDutyValue
 26817  03D7                     l10491:	
 26818                           
 26819                           ;main.c: 1318: }
 26820                           ;main.c: 1319: }
 26821                           ;main.c: 1320: saveConfiguration(SET_RPM, speedRpm);
 26822  03D7  0141               	movlb	1	; select bank1
 26823  03D8  0840               	movf	(_speedRpm+1)^(0+128),w
 26824  03D9  0140               	movlb	0	; select bank0
 26825  03DA  00A3               	movwf	saveConfiguration@value+1
 26826  03DB  0141               	movlb	1	; select bank1
 26827  03DC  083F               	movf	_speedRpm^(0+128),w
 26828  03DD  0140               	movlb	0	; select bank0
 26829  03DE  00A2               	movwf	saveConfiguration@value
 26830  03DF  3000               	movlw	0
 26831  03E0  31A7  2741  3180   	fcall	_saveConfiguration
 26832                           
 26833                           ;main.c: 1321: break;
 26834  03E3  2F45               	goto	l10683
 26835  03E4                     l10493:	
 26836                           ;main.c: 1322: case SET_CLOCKWISE_TIME:
 26837                           
 26838                           
 26839                           ;main.c: 1324: if(clockWiseTime < 1500)
 26840  03E4  0141               	movlb	1	; select bank1
 26841  03E5  1BCF               	btfsc	(_clockWiseTime+3)^(0+128),7
 26842  03E6  2BF3               	goto	l10495
 26843  03E7  084F               	movf	(_clockWiseTime+3)^(0+128),w
 26844  03E8  1D03               	btfss	3,2
 26845  03E9  2BFB               	goto	l10497
 26846  03EA  084E               	movf	(_clockWiseTime+2)^(0+128),w
 26847  03EB  1D03               	btfss	3,2
 26848  03EC  2BFB               	goto	l10497
 26849  03ED  30DC               	movlw	220
 26850  03EE  024C               	subwf	_clockWiseTime^(0+128),w
 26851  03EF  3005               	movlw	5
 26852  03F0  3B4D               	subwfb	(_clockWiseTime+1)^(0+128),w
 26853  03F1  1803               	btfsc	3,0
 26854  03F2  2BFB               	goto	l10497
 26855  03F3                     l10495:	
 26856                           
 26857                           ;main.c: 1325: clockWiseTime++;
 26858  03F3  3001               	movlw	1
 26859  03F4  07CC               	addwf	_clockWiseTime^(0+128),f
 26860  03F5  3000               	movlw	0
 26861  03F6  3DCD               	addwfc	(_clockWiseTime+1)^(0+128),f
 26862  03F7  3000               	movlw	0
 26863  03F8  3DCE               	addwfc	(_clockWiseTime+2)^(0+128),f
 26864  03F9  3000               	movlw	0
 26865  03FA  3DCF               	addwfc	(_clockWiseTime+3)^(0+128),f
 26866  03FB                     l10497:	
 26867                           
 26868                           ;main.c: 1327: lcd(((0xC0)+3),(0));
 26869  03FB  0140               	movlb	0	; select bank0
 26870  03FC  01A9               	clrf	lcd@b
 26871  03FD  30C3               	movlw	195
 26872  03FE  31A4  245E  3180   	fcall	_lcd
 26873                           
 26874                           ;main.c: 1328: number_4(clockWiseTime);
 26875  0401  0141               	movlb	1	; select bank1
 26876  0402  084F               	movf	(_clockWiseTime+3)^(0+128),w
 26877  0403  0140               	movlb	0	; select bank0
 26878  0404  00BB               	movwf	number_4@num+3
 26879  0405  0141               	movlb	1	; select bank1
 26880  0406  084E               	movf	(_clockWiseTime+2)^(0+128),w
 26881  0407  0140               	movlb	0	; select bank0
 26882  0408  00BA               	movwf	number_4@num+2
 26883  0409  0141               	movlb	1	; select bank1
 26884  040A  084D               	movf	(_clockWiseTime+1)^(0+128),w
 26885  040B  0140               	movlb	0	; select bank0
 26886  040C  00B9               	movwf	number_4@num+1
 26887  040D  0141               	movlb	1	; select bank1
 26888  040E  084C               	movf	_clockWiseTime^(0+128),w
 26889  040F  0140               	movlb	0	; select bank0
 26890  0410  00B8               	movwf	number_4@num
 26891  0411  319E  26B8  3180   	fcall	_number_4
 26892                           
 26893                           ;main.c: 1329: lcd(((0xC0)+3),(0));
 26894  0414  0140               	movlb	0	; select bank0
 26895  0415  01A9               	clrf	lcd@b
 26896  0416  30C3               	movlw	195
 26897  0417  31A4  245E  3180   	fcall	_lcd
 26898                           
 26899                           ;main.c: 1330: lcd(0x00F, (0));
 26900  041A  0140               	movlb	0	; select bank0
 26901  041B  01A9               	clrf	lcd@b
 26902  041C  300F               	movlw	15
 26903  041D  31A4  245E  3180   	fcall	_lcd
 26904                           
 26905                           ;main.c: 1331: _delay((unsigned long)(((150))*(8000000/4000.0)));
 26906  0420  3002               	movlw	2
 26907  0421  0141               	movlb	1	; select bank1
 26908  0422  00B4               	movwf	(??_main^(0+128)+1)
 26909  0423  3086               	movlw	134
 26910  0424  00B3               	movwf	??_main^(0+128)
 26911  0425  3099               	movlw	153
 26912  0426                     u7397:	
 26913  0426  0B89               	decfsz	9,f
 26914  0427  2C26               	goto	u7397
 26915  0428  0BB3               	decfsz	??_main^(0+128),f
 26916  0429  2C26               	goto	u7397
 26917  042A  0BB4               	decfsz	(??_main^(0+128)+1),f
 26918  042B  2C26               	goto	u7397
 26919                           
 26920                           ;main.c: 1333: saveConfiguration(SET_CLOCKWISE_TIME, clockWiseTime);
 26921  042C  0141               	movlb	1	; select bank1
 26922  042D  084D               	movf	(_clockWiseTime+1)^(0+128),w
 26923  042E  0140               	movlb	0	; select bank0
 26924  042F  00A3               	movwf	saveConfiguration@value+1
 26925  0430  0141               	movlb	1	; select bank1
 26926  0431  084C               	movf	_clockWiseTime^(0+128),w
 26927  0432  0140               	movlb	0	; select bank0
 26928  0433  00A2               	movwf	saveConfiguration@value
 26929  0434  3001               	movlw	1
 26930  0435  31A7  2741  3180   	fcall	_saveConfiguration
 26931                           
 26932                           ;main.c: 1335: break;
 26933  0438  2F45               	goto	l10683
 26934  0439                     l10509:	
 26935                           ;main.c: 1336: case SET_ANTI_CLOCKWISE_TIME:
 26936                           
 26937                           
 26938                           ;main.c: 1338: if(antiClockWiseTime < 1500)
 26939  0439  0141               	movlb	1	; select bank1
 26940  043A  1BCB               	btfsc	(_antiClockWiseTime+3)^(0+128),7
 26941  043B  2C48               	goto	l10511
 26942  043C  084B               	movf	(_antiClockWiseTime+3)^(0+128),w
 26943  043D  1D03               	btfss	3,2
 26944  043E  2C50               	goto	l10513
 26945  043F  084A               	movf	(_antiClockWiseTime+2)^(0+128),w
 26946  0440  1D03               	btfss	3,2
 26947  0441  2C50               	goto	l10513
 26948  0442  30DC               	movlw	220
 26949  0443  0248               	subwf	_antiClockWiseTime^(0+128),w
 26950  0444  3005               	movlw	5
 26951  0445  3B49               	subwfb	(_antiClockWiseTime+1)^(0+128),w
 26952  0446  1803               	btfsc	3,0
 26953  0447  2C50               	goto	l10513
 26954  0448                     l10511:	
 26955                           
 26956                           ;main.c: 1339: antiClockWiseTime++;
 26957  0448  3001               	movlw	1
 26958  0449  07C8               	addwf	_antiClockWiseTime^(0+128),f
 26959  044A  3000               	movlw	0
 26960  044B  3DC9               	addwfc	(_antiClockWiseTime+1)^(0+128),f
 26961  044C  3000               	movlw	0
 26962  044D  3DCA               	addwfc	(_antiClockWiseTime+2)^(0+128),f
 26963  044E  3000               	movlw	0
 26964  044F  3DCB               	addwfc	(_antiClockWiseTime+3)^(0+128),f
 26965  0450                     l10513:	
 26966                           
 26967                           ;main.c: 1341: lcd(((0xC0)+8),(0));
 26968  0450  0140               	movlb	0	; select bank0
 26969  0451  01A9               	clrf	lcd@b
 26970  0452  30C8               	movlw	200
 26971  0453  31A4  245E  3180   	fcall	_lcd
 26972                           
 26973                           ;main.c: 1342: number_4(antiClockWiseTime);
 26974  0456  0141               	movlb	1	; select bank1
 26975  0457  084B               	movf	(_antiClockWiseTime+3)^(0+128),w
 26976  0458  0140               	movlb	0	; select bank0
 26977  0459  00BB               	movwf	number_4@num+3
 26978  045A  0141               	movlb	1	; select bank1
 26979  045B  084A               	movf	(_antiClockWiseTime+2)^(0+128),w
 26980  045C  0140               	movlb	0	; select bank0
 26981  045D  00BA               	movwf	number_4@num+2
 26982  045E  0141               	movlb	1	; select bank1
 26983  045F  0849               	movf	(_antiClockWiseTime+1)^(0+128),w
 26984  0460  0140               	movlb	0	; select bank0
 26985  0461  00B9               	movwf	number_4@num+1
 26986  0462  0141               	movlb	1	; select bank1
 26987  0463  0848               	movf	_antiClockWiseTime^(0+128),w
 26988  0464  0140               	movlb	0	; select bank0
 26989  0465  00B8               	movwf	number_4@num
 26990  0466  319E  26B8  3180   	fcall	_number_4
 26991                           
 26992                           ;main.c: 1344: lcd(((0xC0)+8),(0));
 26993  0469  0140               	movlb	0	; select bank0
 26994  046A  01A9               	clrf	lcd@b
 26995  046B  30C8               	movlw	200
 26996  046C  31A4  245E  3180   	fcall	_lcd
 26997                           
 26998                           ;main.c: 1345: lcd(0x00F, (0));
 26999  046F  0140               	movlb	0	; select bank0
 27000  0470  01A9               	clrf	lcd@b
 27001  0471  300F               	movlw	15
 27002  0472  31A4  245E  3180   	fcall	_lcd
 27003                           
 27004                           ;main.c: 1346: _delay((unsigned long)(((150))*(8000000/4000.0)));
 27005  0475  3002               	movlw	2
 27006  0476  0141               	movlb	1	; select bank1
 27007  0477  00B4               	movwf	(??_main^(0+128)+1)
 27008  0478  3086               	movlw	134
 27009  0479  00B3               	movwf	??_main^(0+128)
 27010  047A  3099               	movlw	153
 27011  047B                     u7407:	
 27012  047B  0B89               	decfsz	9,f
 27013  047C  2C7B               	goto	u7407
 27014  047D  0BB3               	decfsz	??_main^(0+128),f
 27015  047E  2C7B               	goto	u7407
 27016  047F  0BB4               	decfsz	(??_main^(0+128)+1),f
 27017  0480  2C7B               	goto	u7407
 27018                           
 27019                           ;main.c: 1348: saveConfiguration(SET_ANTI_CLOCKWISE_TIME, antiClockWiseTime);
 27020  0481  0141               	movlb	1	; select bank1
 27021  0482  0849               	movf	(_antiClockWiseTime+1)^(0+128),w
 27022  0483  0140               	movlb	0	; select bank0
 27023  0484  00A3               	movwf	saveConfiguration@value+1
 27024  0485  0141               	movlb	1	; select bank1
 27025  0486  0848               	movf	_antiClockWiseTime^(0+128),w
 27026  0487  0140               	movlb	0	; select bank0
 27027  0488  00A2               	movwf	saveConfiguration@value
 27028  0489  3002               	movlw	2
 27029  048A  31A7  2741  3180   	fcall	_saveConfiguration
 27030                           
 27031                           ;main.c: 1350: break;
 27032  048D  2F45               	goto	l10683
 27033  048E                     l10525:	
 27034                           ;main.c: 1351: case SET_HOLD_TIME:
 27035                           
 27036                           
 27037                           ;main.c: 1353: if(holdTime > 99)
 27038  048E  3064               	movlw	100
 27039  048F  0141               	movlb	1	; select bank1
 27040  0490  0242               	subwf	_holdTime^(0+128),w
 27041  0491  1C03               	skipc
 27042  0492  2C98               	goto	l10529
 27043                           
 27044                           ;main.c: 1354: holdTime = 99;
 27045  0493  3063               	movlw	99
 27046  0494  00B3               	movwf	??_main^(0+128)
 27047  0495  0833               	movf	??_main^(0+128),w
 27048  0496  00C2               	movwf	_holdTime^(0+128)
 27049  0497  2C9C               	goto	l10531
 27050  0498                     l10529:	
 27051                           
 27052                           ;main.c: 1355: else
 27053                           ;main.c: 1356: holdTime++;
 27054  0498  3001               	movlw	1
 27055  0499  00B3               	movwf	??_main^(0+128)
 27056  049A  0833               	movf	??_main^(0+128),w
 27057  049B  07C2               	addwf	_holdTime^(0+128),f
 27058  049C                     l10531:	
 27059                           
 27060                           ;main.c: 1358: lcd(((0xC0)+12),(0));
 27061  049C  0140               	movlb	0	; select bank0
 27062  049D  01A9               	clrf	lcd@b
 27063  049E  30CC               	movlw	204
 27064  049F  31A4  245E  3180   	fcall	_lcd
 27065                           
 27066                           ;main.c: 1359: number_2(holdTime);
 27067  04A2  0141               	movlb	1	; select bank1
 27068  04A3  0842               	movf	_holdTime^(0+128),w
 27069  04A4  31A3  239E  3180   	fcall	_number_2
 27070                           
 27071                           ;main.c: 1360: lcd(((0xC0)+12),(0));
 27072  04A7  0140               	movlb	0	; select bank0
 27073  04A8  01A9               	clrf	lcd@b
 27074  04A9  30CC               	movlw	204
 27075  04AA  31A4  245E  3180   	fcall	_lcd
 27076                           
 27077                           ;main.c: 1361: lcd(0x00F, (0));
 27078  04AD  0140               	movlb	0	; select bank0
 27079  04AE  01A9               	clrf	lcd@b
 27080  04AF  300F               	movlw	15
 27081  04B0  31A4  245E  3180   	fcall	_lcd
 27082                           
 27083                           ;main.c: 1362: _delay((unsigned long)(((150))*(8000000/4000.0)));
 27084  04B3  3002               	movlw	2
 27085  04B4  0141               	movlb	1	; select bank1
 27086  04B5  00B4               	movwf	(??_main^(0+128)+1)
 27087  04B6  3086               	movlw	134
 27088  04B7  00B3               	movwf	??_main^(0+128)
 27089  04B8  3099               	movlw	153
 27090  04B9                     u7417:	
 27091  04B9  0B89               	decfsz	9,f
 27092  04BA  2CB9               	goto	u7417
 27093  04BB  0BB3               	decfsz	??_main^(0+128),f
 27094  04BC  2CB9               	goto	u7417
 27095  04BD  0BB4               	decfsz	(??_main^(0+128)+1),f
 27096  04BE  2CB9               	goto	u7417
 27097                           
 27098                           ;main.c: 1364: cnfHoldTime = holdTime;
 27099  04BF  0141               	movlb	1	; select bank1
 27100  04C0  0842               	movf	_holdTime^(0+128),w
 27101  04C1  00B3               	movwf	??_main^(0+128)
 27102  04C2  01B4               	clrf	(??_main^(0+128)+1)
 27103  04C3  0833               	movf	??_main^(0+128),w
 27104  04C4  0142               	movlb	2	; select bank2
 27105  04C5  00D6               	movwf	_cnfHoldTime^(0+256)
 27106  04C6  0141               	movlb	1	; select bank1
 27107  04C7  0834               	movf	(??_main+1)^(0+128),w
 27108  04C8  0142               	movlb	2	; select bank2
 27109  04C9  00D7               	movwf	(_cnfHoldTime+1)^(0+256)
 27110                           
 27111                           ;main.c: 1366: saveConfiguration(SET_HOLD_TIME, holdTime);
 27112  04CA  0141               	movlb	1	; select bank1
 27113  04CB  0842               	movf	_holdTime^(0+128),w
 27114  04CC  00B3               	movwf	??_main^(0+128)
 27115  04CD  01B4               	clrf	(??_main^(0+128)+1)
 27116  04CE  0833               	movf	??_main^(0+128),w
 27117  04CF  0140               	movlb	0	; select bank0
 27118  04D0  00A2               	movwf	saveConfiguration@value
 27119  04D1  0141               	movlb	1	; select bank1
 27120  04D2  0834               	movf	(??_main+1)^(0+128),w
 27121  04D3  0140               	movlb	0	; select bank0
 27122  04D4  00A3               	movwf	saveConfiguration@value+1
 27123  04D5  3003               	movlw	3
 27124  04D6  31A7  2741  3180   	fcall	_saveConfiguration
 27125                           
 27126                           ;main.c: 1368: break;
 27127  04D9  2F45               	goto	l10683
 27128  04DA                     l10545:	
 27129                           ;main.c: 1369: case SET_DIRECTION:
 27130                           
 27131                           
 27132                           ;main.c: 1370: if(direction < MAX_DIRECTION)
 27133  04DA  3003               	movlw	3
 27134  04DB  0141               	movlb	1	; select bank1
 27135  04DC  0241               	subwf	_direction^(0+128),w
 27136  04DD  1803               	skipnc
 27137  04DE  2CE4               	goto	l10549
 27138                           
 27139                           ;main.c: 1371: direction++;
 27140  04DF  3001               	movlw	1
 27141  04E0  00B3               	movwf	??_main^(0+128)
 27142  04E1  0833               	movf	??_main^(0+128),w
 27143  04E2  07C1               	addwf	_direction^(0+128),f
 27144  04E3  2D13               	goto	l10559
 27145  04E4                     l10549:	
 27146                           
 27147                           ;main.c: 1372: else
 27148                           ;main.c: 1373: direction = CLOCKWISE;
 27149  04E4  01C1               	clrf	_direction^(0+128)
 27150                           
 27151                           ;main.c: 1375: switch(direction)
 27152  04E5  2D13               	goto	l10559
 27153  04E6                     l10551:	
 27154                           ;main.c: 1376: {
 27155                           ;main.c: 1377: case CLOCKWISE:
 27156                           
 27157                           
 27158                           ;main.c: 1378: display((char *)"C",(0xC0)+15);
 27159  04E6  30BC               	movlw	low (STR_16| (0+32768))
 27160  04E7  0140               	movlb	0	; select bank0
 27161  04E8  00AC               	movwf	display@a
 27162  04E9  30A8               	movlw	high (STR_16| (0+32768))
 27163  04EA  00AD               	movwf	display@a+1
 27164  04EB  30CF               	movlw	207
 27165  04EC  0141               	movlb	1	; select bank1
 27166  04ED  00B3               	movwf	??_main^(0+128)
 27167  04EE  0833               	movf	??_main^(0+128),w
 27168  04EF  0140               	movlb	0	; select bank0
 27169  04F0  00AE               	movwf	display@add
 27170  04F1  31A2  2297  3180   	fcall	_display
 27171                           
 27172                           ;main.c: 1379: break;
 27173  04F4  2D1F               	goto	l10561
 27174  04F5                     l10553:	
 27175                           ;main.c: 1380: case ANTICLOCKWISE:
 27176                           
 27177                           
 27178                           ;main.c: 1381: display((char *)"A",(0xC0)+15);
 27179  04F5  30BA               	movlw	low (STR_17| (0+32768))
 27180  04F6  0140               	movlb	0	; select bank0
 27181  04F7  00AC               	movwf	display@a
 27182  04F8  30A8               	movlw	high (STR_17| (0+32768))
 27183  04F9  00AD               	movwf	display@a+1
 27184  04FA  30CF               	movlw	207
 27185  04FB  0141               	movlb	1	; select bank1
 27186  04FC  00B3               	movwf	??_main^(0+128)
 27187  04FD  0833               	movf	??_main^(0+128),w
 27188  04FE  0140               	movlb	0	; select bank0
 27189  04FF  00AE               	movwf	display@add
 27190  0500  31A2  2297  3180   	fcall	_display
 27191                           
 27192                           ;main.c: 1382: break;
 27193  0503  2D1F               	goto	l10561
 27194  0504                     l10555:	
 27195                           ;main.c: 1383: case STOP:
 27196                           
 27197                           
 27198                           ;main.c: 1384: display((char *)"S",(0xC0)+15);
 27199  0504  30BE               	movlw	low (STR_15| (0+32768))
 27200  0505  0140               	movlb	0	; select bank0
 27201  0506  00AC               	movwf	display@a
 27202  0507  30A8               	movlw	high (STR_15| (0+32768))
 27203  0508  00AD               	movwf	display@a+1
 27204  0509  30CF               	movlw	207
 27205  050A  0141               	movlb	1	; select bank1
 27206  050B  00B3               	movwf	??_main^(0+128)
 27207  050C  0833               	movf	??_main^(0+128),w
 27208  050D  0140               	movlb	0	; select bank0
 27209  050E  00AE               	movwf	display@add
 27210  050F  31A2  2297  3180   	fcall	_display
 27211                           
 27212                           ;main.c: 1386: }
 27213                           
 27214                           ;main.c: 1385: break;
 27215  0512  2D1F               	goto	l10561
 27216  0513                     l10559:	
 27217  0513  0141               	movlb	1	; select bank1
 27218  0514  0841               	movf	_direction^(0+128),w
 27219                           
 27220                           ; Switch size 1, requested type "space"
 27221                           ; Number of cases is 3, Range of values is 0 to 2
 27222                           ; switch strategies available:
 27223                           ; Name         Instructions Cycles
 27224                           ; simple_byte           10     6 (average)
 27225                           ; direct_byte           12     6 (fixed)
 27226                           ; jumptable            260     6 (fixed)
 27227                           ;	Chosen strategy is simple_byte
 27228  0515  3A00               	xorlw	0	; case 0
 27229  0516  1903               	skipnz
 27230  0517  2CE6               	goto	l10551
 27231  0518  3A01               	xorlw	1	; case 1
 27232  0519  1903               	skipnz
 27233  051A  2CF5               	goto	l10553
 27234  051B  3A03               	xorlw	3	; case 2
 27235  051C  1903               	skipnz
 27236  051D  2D04               	goto	l10555
 27237  051E  2D1F               	goto	l10561
 27238  051F                     l10561:	
 27239                           
 27240                           ;main.c: 1387: lcd((0xC0) +15,(0));
 27241  051F  0140               	movlb	0	; select bank0
 27242  0520  01A9               	clrf	lcd@b
 27243  0521  30CF               	movlw	207
 27244  0522  31A4  245E  3180   	fcall	_lcd
 27245                           
 27246                           ;main.c: 1388: lcd(0x00F, (0));
 27247  0525  0140               	movlb	0	; select bank0
 27248  0526  01A9               	clrf	lcd@b
 27249  0527  300F               	movlw	15
 27250  0528  31A4  245E  3180   	fcall	_lcd
 27251                           
 27252                           ;main.c: 1389: _delay((unsigned long)(((150))*(8000000/4000.0)));
 27253  052B  3002               	movlw	2
 27254  052C  0141               	movlb	1	; select bank1
 27255  052D  00B4               	movwf	(??_main^(0+128)+1)
 27256  052E  3086               	movlw	134
 27257  052F  00B3               	movwf	??_main^(0+128)
 27258  0530  3099               	movlw	153
 27259  0531                     u7427:	
 27260  0531  0B89               	decfsz	9,f
 27261  0532  2D31               	goto	u7427
 27262  0533  0BB3               	decfsz	??_main^(0+128),f
 27263  0534  2D31               	goto	u7427
 27264  0535  0BB4               	decfsz	(??_main^(0+128)+1),f
 27265  0536  2D31               	goto	u7427
 27266                           
 27267                           ;main.c: 1391: saveConfiguration(SET_DIRECTION, direction);
 27268  0537  0141               	movlb	1	; select bank1
 27269  0538  0841               	movf	_direction^(0+128),w
 27270  0539  00B3               	movwf	??_main^(0+128)
 27271  053A  01B4               	clrf	(??_main^(0+128)+1)
 27272  053B  0833               	movf	??_main^(0+128),w
 27273  053C  0140               	movlb	0	; select bank0
 27274  053D  00A2               	movwf	saveConfiguration@value
 27275  053E  0141               	movlb	1	; select bank1
 27276  053F  0834               	movf	(??_main+1)^(0+128),w
 27277  0540  0140               	movlb	0	; select bank0
 27278  0541  00A3               	movwf	saveConfiguration@value+1
 27279  0542  3004               	movlw	4
 27280  0543  31A7  2741  3180   	fcall	_saveConfiguration
 27281                           
 27282                           ;main.c: 1394: }
 27283                           
 27284                           ;main.c: 1393: break;
 27285                           
 27286                           ;main.c: 1392: default:
 27287  0546  2F45               	goto	l10683
 27288  0547                     l10569:	
 27289  0547  0142               	movlb	2	; select bank2
 27290  0548  0866               	movf	_SetParamCount^(0+256),w
 27291                           
 27292                           ; Switch size 1, requested type "space"
 27293                           ; Number of cases is 5, Range of values is 0 to 4
 27294                           ; switch strategies available:
 27295                           ; Name         Instructions Cycles
 27296                           ; direct_byte           16     6 (fixed)
 27297                           ; simple_byte           16     9 (average)
 27298                           ; jumptable            260     6 (fixed)
 27299                           ;	Chosen strategy is direct_byte
 27300  0549  0084               	movwf	4
 27301  054A  3005               	movlw	5
 27302  054B  0204               	subwf	4,w
 27303  054C  1803               	skipnc
 27304  054D  2F45               	goto	l10683
 27305  054E  31A0               	movlp	high S10825
 27306  054F  3504               	lslf	4,w
 27307  0550  3E0A               	addlw	low S10825
 27308  0551  0082               	movwf	2
 27309                           
 27310                           ;main.c: 1395: break;
 27311  0552  2F45               	goto	l10683
 27312  0553                     l10571:	
 27313                           ;main.c: 1399: {
 27314                           ;main.c: 1400: case SET_RPM:
 27315                           
 27316                           ;main.c: 1398: switch(SetParamCount)
 27317                           
 27318                           ;main.c: 1397: case DEC_KEY:
 27319                           
 27320                           
 27321                           ;main.c: 1402: if(speedRpm)
 27322  0553  0141               	movlb	1	; select bank1
 27323  0554  083F               	movf	_speedRpm^(0+128),w
 27324  0555  0440               	iorwf	(_speedRpm+1)^(0+128),w
 27325  0556  1903               	btfsc	3,2
 27326  0557  2D5C               	goto	l10575
 27327                           
 27328                           ;main.c: 1403: speedRpm--;
 27329  0558  3001               	movlw	1
 27330  0559  02BF               	subwf	_speedRpm^(0+128),f
 27331  055A  3000               	movlw	0
 27332  055B  3BC0               	subwfb	(_speedRpm+1)^(0+128),f
 27333  055C                     l10575:	
 27334                           
 27335                           ;main.c: 1405: lcd(((0xC0)),(0));
 27336  055C  0140               	movlb	0	; select bank0
 27337  055D  01A9               	clrf	lcd@b
 27338  055E  30C0               	movlw	192
 27339  055F  31A4  245E  3180   	fcall	_lcd
 27340                           
 27341                           ;main.c: 1406: number_3(speedRpm);
 27342  0562  0141               	movlb	1	; select bank1
 27343  0563  0840               	movf	(_speedRpm+1)^(0+128),w
 27344  0564  0140               	movlb	0	; select bank0
 27345  0565  00AD               	movwf	number_3@num+1
 27346  0566  0141               	movlb	1	; select bank1
 27347  0567  083F               	movf	_speedRpm^(0+128),w
 27348  0568  0140               	movlb	0	; select bank0
 27349  0569  00AC               	movwf	number_3@num
 27350  056A  31A6  26BB  3180   	fcall	_number_3
 27351                           
 27352                           ;main.c: 1407: lcd(((0xC0)),(0));
 27353  056D  0140               	movlb	0	; select bank0
 27354  056E  01A9               	clrf	lcd@b
 27355  056F  30C0               	movlw	192
 27356  0570  31A4  245E  3180   	fcall	_lcd
 27357                           
 27358                           ;main.c: 1408: lcd(0x00F, (0));
 27359  0573  0140               	movlb	0	; select bank0
 27360  0574  01A9               	clrf	lcd@b
 27361  0575  300F               	movlw	15
 27362  0576  31A4  245E  3180   	fcall	_lcd
 27363                           
 27364                           ;main.c: 1409: _delay((unsigned long)(((150))*(8000000/4000.0)));
 27365  0579  3002               	movlw	2
 27366  057A  0141               	movlb	1	; select bank1
 27367  057B  00B4               	movwf	(??_main^(0+128)+1)
 27368  057C  3086               	movlw	134
 27369  057D  00B3               	movwf	??_main^(0+128)
 27370  057E  3099               	movlw	153
 27371  057F                     u7437:	
 27372  057F  0B89               	decfsz	9,f
 27373  0580  2D7F               	goto	u7437
 27374  0581  0BB3               	decfsz	??_main^(0+128),f
 27375  0582  2D7F               	goto	u7437
 27376  0583  0BB4               	decfsz	(??_main^(0+128)+1),f
 27377  0584  2D7F               	goto	u7437
 27378                           
 27379                           ;main.c: 1411: if(STARTED)
 27380  0585  1FF2               	btfss	_STARTED/(0+8),_STARTED& (0+7)
 27381  0586  2DB0               	goto	l10591
 27382                           
 27383                           ;main.c: 1412: {
 27384                           ;main.c: 1413: if(direction == CLOCKWISE)
 27385  0587  0141               	movlb	1	; select bank1
 27386  0588  0841               	movf	_direction^(0+128),w
 27387  0589  1D03               	btfss	3,2
 27388  058A  2D9E               	goto	l10589
 27389                           
 27390                           ;main.c: 1414: {
 27391                           ;main.c: 1415: PWM4_LoadDutyValue(0);
 27392  058B  3000               	movlw	0
 27393  058C  0140               	movlb	0	; select bank0
 27394  058D  00A0               	movwf	PWM4_LoadDutyValue@dutyValue
 27395  058E  00A1               	movwf	PWM4_LoadDutyValue@dutyValue+1
 27396  058F  31A2  2254  3180   	fcall	_PWM4_LoadDutyValue
 27397                           
 27398                           ;main.c: 1416: PWM3_LoadDutyValue(speedRpm);
 27399  0592  0141               	movlb	1	; select bank1
 27400  0593  0840               	movf	(_speedRpm+1)^(0+128),w
 27401  0594  0140               	movlb	0	; select bank0
 27402  0595  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
 27403  0596  0141               	movlb	1	; select bank1
 27404  0597  083F               	movf	_speedRpm^(0+128),w
 27405  0598  0140               	movlb	0	; select bank0
 27406  0599  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
 27407  059A  31A2  2235  3180   	fcall	_PWM3_LoadDutyValue
 27408                           
 27409                           ;main.c: 1417: }
 27410  059D  2DB0               	goto	l10591
 27411  059E                     l10589:	
 27412                           
 27413                           ;main.c: 1418: else
 27414                           ;main.c: 1419: {
 27415                           ;main.c: 1420: PWM3_LoadDutyValue(0);
 27416  059E  3000               	movlw	0
 27417  059F  0140               	movlb	0	; select bank0
 27418  05A0  00A0               	movwf	PWM3_LoadDutyValue@dutyValue
 27419  05A1  00A1               	movwf	PWM3_LoadDutyValue@dutyValue+1
 27420  05A2  31A2  2235  3180   	fcall	_PWM3_LoadDutyValue
 27421                           
 27422                           ;main.c: 1421: PWM4_LoadDutyValue(speedRpm);
 27423  05A5  0141               	movlb	1	; select bank1
 27424  05A6  0840               	movf	(_speedRpm+1)^(0+128),w
 27425  05A7  0140               	movlb	0	; select bank0
 27426  05A8  00A1               	movwf	PWM4_LoadDutyValue@dutyValue+1
 27427  05A9  0141               	movlb	1	; select bank1
 27428  05AA  083F               	movf	_speedRpm^(0+128),w
 27429  05AB  0140               	movlb	0	; select bank0
 27430  05AC  00A0               	movwf	PWM4_LoadDutyValue@dutyValue
 27431  05AD  31A2  2254  3180   	fcall	_PWM4_LoadDutyValue
 27432  05B0                     l10591:	
 27433                           
 27434                           ;main.c: 1422: }
 27435                           ;main.c: 1423: }
 27436                           ;main.c: 1424: saveConfiguration(SET_RPM, speedRpm);
 27437  05B0  0141               	movlb	1	; select bank1
 27438  05B1  0840               	movf	(_speedRpm+1)^(0+128),w
 27439  05B2  0140               	movlb	0	; select bank0
 27440  05B3  00A3               	movwf	saveConfiguration@value+1
 27441  05B4  0141               	movlb	1	; select bank1
 27442  05B5  083F               	movf	_speedRpm^(0+128),w
 27443  05B6  0140               	movlb	0	; select bank0
 27444  05B7  00A2               	movwf	saveConfiguration@value
 27445  05B8  3000               	movlw	0
 27446  05B9  31A7  2741  3180   	fcall	_saveConfiguration
 27447                           
 27448                           ;main.c: 1426: break;
 27449  05BC  2F45               	goto	l10683
 27450  05BD                     l10593:	
 27451                           ;main.c: 1427: case SET_CLOCKWISE_TIME:
 27452                           
 27453                           
 27454                           ;main.c: 1429: if(clockWiseTime > 1)
 27455  05BD  0141               	movlb	1	; select bank1
 27456  05BE  1BCF               	btfsc	(_clockWiseTime+3)^(0+128),7
 27457  05BF  2DD5               	goto	l10597
 27458  05C0  084F               	movf	(_clockWiseTime+3)^(0+128),w
 27459  05C1  1D03               	btfss	3,2
 27460  05C2  2DCD               	goto	l10595
 27461  05C3  084E               	movf	(_clockWiseTime+2)^(0+128),w
 27462  05C4  1D03               	btfss	3,2
 27463  05C5  2DCD               	goto	l10595
 27464  05C6  084D               	movf	(_clockWiseTime+1)^(0+128),w
 27465  05C7  1D03               	btfss	3,2
 27466  05C8  2DCD               	goto	l10595
 27467  05C9  3002               	movlw	2
 27468  05CA  024C               	subwf	_clockWiseTime^(0+128),w
 27469  05CB  1C03               	btfss	3,0
 27470  05CC  2DD5               	goto	l10597
 27471  05CD                     l10595:	
 27472                           
 27473                           ;main.c: 1430: clockWiseTime--;
 27474  05CD  30FF               	movlw	255
 27475  05CE  07CC               	addwf	_clockWiseTime^(0+128),f
 27476  05CF  30FF               	movlw	255
 27477  05D0  3DCD               	addwfc	(_clockWiseTime+1)^(0+128),f
 27478  05D1  30FF               	movlw	255
 27479  05D2  3DCE               	addwfc	(_clockWiseTime+2)^(0+128),f
 27480  05D3  30FF               	movlw	255
 27481  05D4  3DCF               	addwfc	(_clockWiseTime+3)^(0+128),f
 27482  05D5                     l10597:	
 27483                           
 27484                           ;main.c: 1432: lcd(((0xC0)+3),(0));
 27485  05D5  0140               	movlb	0	; select bank0
 27486  05D6  01A9               	clrf	lcd@b
 27487  05D7  30C3               	movlw	195
 27488  05D8  31A4  245E  3180   	fcall	_lcd
 27489                           
 27490                           ;main.c: 1433: number_4(clockWiseTime);
 27491  05DB  0141               	movlb	1	; select bank1
 27492  05DC  084F               	movf	(_clockWiseTime+3)^(0+128),w
 27493  05DD  0140               	movlb	0	; select bank0
 27494  05DE  00BB               	movwf	number_4@num+3
 27495  05DF  0141               	movlb	1	; select bank1
 27496  05E0  084E               	movf	(_clockWiseTime+2)^(0+128),w
 27497  05E1  0140               	movlb	0	; select bank0
 27498  05E2  00BA               	movwf	number_4@num+2
 27499  05E3  0141               	movlb	1	; select bank1
 27500  05E4  084D               	movf	(_clockWiseTime+1)^(0+128),w
 27501  05E5  0140               	movlb	0	; select bank0
 27502  05E6  00B9               	movwf	number_4@num+1
 27503  05E7  0141               	movlb	1	; select bank1
 27504  05E8  084C               	movf	_clockWiseTime^(0+128),w
 27505  05E9  0140               	movlb	0	; select bank0
 27506  05EA  00B8               	movwf	number_4@num
 27507  05EB  319E  26B8  3180   	fcall	_number_4
 27508                           
 27509                           ;main.c: 1434: lcd(((0xC0)+3),(0));
 27510  05EE  0140               	movlb	0	; select bank0
 27511  05EF  01A9               	clrf	lcd@b
 27512  05F0  30C3               	movlw	195
 27513  05F1  31A4  245E  3180   	fcall	_lcd
 27514                           
 27515                           ;main.c: 1435: lcd(0x00F, (0));
 27516  05F4  0140               	movlb	0	; select bank0
 27517  05F5  01A9               	clrf	lcd@b
 27518  05F6  300F               	movlw	15
 27519  05F7  31A4  245E  3180   	fcall	_lcd
 27520                           
 27521                           ;main.c: 1436: _delay((unsigned long)(((150))*(8000000/4000.0)));
 27522  05FA  3002               	movlw	2
 27523  05FB  0141               	movlb	1	; select bank1
 27524  05FC  00B4               	movwf	(??_main^(0+128)+1)
 27525  05FD  3086               	movlw	134
 27526  05FE  00B3               	movwf	??_main^(0+128)
 27527  05FF  3099               	movlw	153
 27528  0600                     u7447:	
 27529  0600  0B89               	decfsz	9,f
 27530  0601  2E00               	goto	u7447
 27531  0602  0BB3               	decfsz	??_main^(0+128),f
 27532  0603  2E00               	goto	u7447
 27533  0604  0BB4               	decfsz	(??_main^(0+128)+1),f
 27534  0605  2E00               	goto	u7447
 27535                           
 27536                           ;main.c: 1438: saveConfiguration(SET_CLOCKWISE_TIME, clockWiseTime);
 27537  0606  0141               	movlb	1	; select bank1
 27538  0607  084D               	movf	(_clockWiseTime+1)^(0+128),w
 27539  0608  0140               	movlb	0	; select bank0
 27540  0609  00A3               	movwf	saveConfiguration@value+1
 27541  060A  0141               	movlb	1	; select bank1
 27542  060B  084C               	movf	_clockWiseTime^(0+128),w
 27543  060C  0140               	movlb	0	; select bank0
 27544  060D  00A2               	movwf	saveConfiguration@value
 27545  060E  3001               	movlw	1
 27546  060F  31A7  2741  3180   	fcall	_saveConfiguration
 27547                           
 27548                           ;main.c: 1439: break;
 27549  0612  2F45               	goto	l10683
 27550  0613                     l10609:	
 27551                           ;main.c: 1441: case SET_ANTI_CLOCKWISE_TIME:
 27552                           
 27553                           
 27554                           ;main.c: 1443: if(antiClockWiseTime > 1)
 27555  0613  0141               	movlb	1	; select bank1
 27556  0614  1BCB               	btfsc	(_antiClockWiseTime+3)^(0+128),7
 27557  0615  2E2B               	goto	l10613
 27558  0616  084B               	movf	(_antiClockWiseTime+3)^(0+128),w
 27559  0617  1D03               	btfss	3,2
 27560  0618  2E23               	goto	l10611
 27561  0619  084A               	movf	(_antiClockWiseTime+2)^(0+128),w
 27562  061A  1D03               	btfss	3,2
 27563  061B  2E23               	goto	l10611
 27564  061C  0849               	movf	(_antiClockWiseTime+1)^(0+128),w
 27565  061D  1D03               	btfss	3,2
 27566  061E  2E23               	goto	l10611
 27567  061F  3002               	movlw	2
 27568  0620  0248               	subwf	_antiClockWiseTime^(0+128),w
 27569  0621  1C03               	btfss	3,0
 27570  0622  2E2B               	goto	l10613
 27571  0623                     l10611:	
 27572                           
 27573                           ;main.c: 1444: antiClockWiseTime--;
 27574  0623  30FF               	movlw	255
 27575  0624  07C8               	addwf	_antiClockWiseTime^(0+128),f
 27576  0625  30FF               	movlw	255
 27577  0626  3DC9               	addwfc	(_antiClockWiseTime+1)^(0+128),f
 27578  0627  30FF               	movlw	255
 27579  0628  3DCA               	addwfc	(_antiClockWiseTime+2)^(0+128),f
 27580  0629  30FF               	movlw	255
 27581  062A  3DCB               	addwfc	(_antiClockWiseTime+3)^(0+128),f
 27582  062B                     l10613:	
 27583                           
 27584                           ;main.c: 1446: lcd(((0xC0)+8),(0));
 27585  062B  0140               	movlb	0	; select bank0
 27586  062C  01A9               	clrf	lcd@b
 27587  062D  30C8               	movlw	200
 27588  062E  31A4  245E  3180   	fcall	_lcd
 27589                           
 27590                           ;main.c: 1447: number_4(antiClockWiseTime);
 27591  0631  0141               	movlb	1	; select bank1
 27592  0632  084B               	movf	(_antiClockWiseTime+3)^(0+128),w
 27593  0633  0140               	movlb	0	; select bank0
 27594  0634  00BB               	movwf	number_4@num+3
 27595  0635  0141               	movlb	1	; select bank1
 27596  0636  084A               	movf	(_antiClockWiseTime+2)^(0+128),w
 27597  0637  0140               	movlb	0	; select bank0
 27598  0638  00BA               	movwf	number_4@num+2
 27599  0639  0141               	movlb	1	; select bank1
 27600  063A  0849               	movf	(_antiClockWiseTime+1)^(0+128),w
 27601  063B  0140               	movlb	0	; select bank0
 27602  063C  00B9               	movwf	number_4@num+1
 27603  063D  0141               	movlb	1	; select bank1
 27604  063E  0848               	movf	_antiClockWiseTime^(0+128),w
 27605  063F  0140               	movlb	0	; select bank0
 27606  0640  00B8               	movwf	number_4@num
 27607  0641  319E  26B8  3180   	fcall	_number_4
 27608                           
 27609                           ;main.c: 1448: lcd(((0xC0)+8),(0));
 27610  0644  0140               	movlb	0	; select bank0
 27611  0645  01A9               	clrf	lcd@b
 27612  0646  30C8               	movlw	200
 27613  0647  31A4  245E  3180   	fcall	_lcd
 27614                           
 27615                           ;main.c: 1449: lcd(0x00F, (0));
 27616  064A  0140               	movlb	0	; select bank0
 27617  064B  01A9               	clrf	lcd@b
 27618  064C  300F               	movlw	15
 27619  064D  31A4  245E  3180   	fcall	_lcd
 27620                           
 27621                           ;main.c: 1450: _delay((unsigned long)(((150))*(8000000/4000.0)));
 27622  0650  3002               	movlw	2
 27623  0651  0141               	movlb	1	; select bank1
 27624  0652  00B4               	movwf	(??_main^(0+128)+1)
 27625  0653  3086               	movlw	134
 27626  0654  00B3               	movwf	??_main^(0+128)
 27627  0655  3099               	movlw	153
 27628  0656                     u7457:	
 27629  0656  0B89               	decfsz	9,f
 27630  0657  2E56               	goto	u7457
 27631  0658  0BB3               	decfsz	??_main^(0+128),f
 27632  0659  2E56               	goto	u7457
 27633  065A  0BB4               	decfsz	(??_main^(0+128)+1),f
 27634  065B  2E56               	goto	u7457
 27635                           
 27636                           ;main.c: 1452: saveConfiguration(SET_ANTI_CLOCKWISE_TIME, antiClockWiseTime);
 27637  065C  0141               	movlb	1	; select bank1
 27638  065D  0849               	movf	(_antiClockWiseTime+1)^(0+128),w
 27639  065E  0140               	movlb	0	; select bank0
 27640  065F  00A3               	movwf	saveConfiguration@value+1
 27641  0660  0141               	movlb	1	; select bank1
 27642  0661  0848               	movf	_antiClockWiseTime^(0+128),w
 27643  0662  0140               	movlb	0	; select bank0
 27644  0663  00A2               	movwf	saveConfiguration@value
 27645  0664  3002               	movlw	2
 27646  0665  31A7  2741  3180   	fcall	_saveConfiguration
 27647                           
 27648                           ;main.c: 1453: break;
 27649  0668  2F45               	goto	l10683
 27650  0669                     l10625:	
 27651                           ;main.c: 1455: case SET_HOLD_TIME:
 27652                           
 27653                           
 27654                           ;main.c: 1457: if(holdTime > 1)
 27655  0669  3002               	movlw	2
 27656  066A  0141               	movlb	1	; select bank1
 27657  066B  0242               	subwf	_holdTime^(0+128),w
 27658  066C  1C03               	skipc
 27659  066D  2E70               	goto	l10629
 27660                           
 27661                           ;main.c: 1458: holdTime--;
 27662  066E  3001               	movlw	1
 27663  066F  02C2               	subwf	_holdTime^(0+128),f
 27664  0670                     l10629:	
 27665                           
 27666                           ;main.c: 1460: lcd(((0xC0)+12),(0));
 27667  0670  0140               	movlb	0	; select bank0
 27668  0671  01A9               	clrf	lcd@b
 27669  0672  30CC               	movlw	204
 27670  0673  31A4  245E  3180   	fcall	_lcd
 27671                           
 27672                           ;main.c: 1461: number_2(holdTime);
 27673  0676  0141               	movlb	1	; select bank1
 27674  0677  0842               	movf	_holdTime^(0+128),w
 27675  0678  31A3  239E  3180   	fcall	_number_2
 27676                           
 27677                           ;main.c: 1462: lcd(((0xC0)+12),(0));
 27678  067B  0140               	movlb	0	; select bank0
 27679  067C  01A9               	clrf	lcd@b
 27680  067D  30CC               	movlw	204
 27681  067E  31A4  245E  3180   	fcall	_lcd
 27682                           
 27683                           ;main.c: 1464: lcd(0x00F, (0));
 27684  0681  0140               	movlb	0	; select bank0
 27685  0682  01A9               	clrf	lcd@b
 27686  0683  300F               	movlw	15
 27687  0684  31A4  245E  3180   	fcall	_lcd
 27688                           
 27689                           ;main.c: 1465: _delay((unsigned long)(((150))*(8000000/4000.0)));
 27690  0687  3002               	movlw	2
 27691  0688  0141               	movlb	1	; select bank1
 27692  0689  00B4               	movwf	(??_main^(0+128)+1)
 27693  068A  3086               	movlw	134
 27694  068B  00B3               	movwf	??_main^(0+128)
 27695  068C  3099               	movlw	153
 27696  068D                     u7467:	
 27697  068D  0B89               	decfsz	9,f
 27698  068E  2E8D               	goto	u7467
 27699  068F  0BB3               	decfsz	??_main^(0+128),f
 27700  0690  2E8D               	goto	u7467
 27701  0691  0BB4               	decfsz	(??_main^(0+128)+1),f
 27702  0692  2E8D               	goto	u7467
 27703                           
 27704                           ;main.c: 1467: cnfHoldTime = holdTime;
 27705  0693  0141               	movlb	1	; select bank1
 27706  0694  0842               	movf	_holdTime^(0+128),w
 27707  0695  00B3               	movwf	??_main^(0+128)
 27708  0696  01B4               	clrf	(??_main^(0+128)+1)
 27709  0697  0833               	movf	??_main^(0+128),w
 27710  0698  0142               	movlb	2	; select bank2
 27711  0699  00D6               	movwf	_cnfHoldTime^(0+256)
 27712  069A  0141               	movlb	1	; select bank1
 27713  069B  0834               	movf	(??_main+1)^(0+128),w
 27714  069C  0142               	movlb	2	; select bank2
 27715  069D  00D7               	movwf	(_cnfHoldTime+1)^(0+256)
 27716                           
 27717                           ;main.c: 1469: saveConfiguration(SET_HOLD_TIME, holdTime);
 27718  069E  0141               	movlb	1	; select bank1
 27719  069F  0842               	movf	_holdTime^(0+128),w
 27720  06A0  00B3               	movwf	??_main^(0+128)
 27721  06A1  01B4               	clrf	(??_main^(0+128)+1)
 27722  06A2  0833               	movf	??_main^(0+128),w
 27723  06A3  0140               	movlb	0	; select bank0
 27724  06A4  00A2               	movwf	saveConfiguration@value
 27725  06A5  0141               	movlb	1	; select bank1
 27726  06A6  0834               	movf	(??_main+1)^(0+128),w
 27727  06A7  0140               	movlb	0	; select bank0
 27728  06A8  00A3               	movwf	saveConfiguration@value+1
 27729  06A9  3003               	movlw	3
 27730  06AA  31A7  2741  3180   	fcall	_saveConfiguration
 27731                           
 27732                           ;main.c: 1470: break;
 27733  06AD  2F45               	goto	l10683
 27734  06AE                     l1354:	
 27735                           ;main.c: 1472: case SET_DIRECTION:
 27736                           
 27737                           
 27738                           ;main.c: 1473: upDwnKeyPressed = 0;
 27739  06AE  1172               	bcf	_upDwnKeyPressed/(0+8),_upDwnKeyPressed& (0+7)
 27740                           
 27741                           ;main.c: 1474: keyCounter = 0;
 27742  06AF  01DC               	clrf	_keyCounter^(0+256)
 27743  06B0  01DD               	clrf	(_keyCounter+1)^(0+256)
 27744                           
 27745                           ;main.c: 1476: (INTCONbits.GIE = 0);
 27746  06B1  138B               	bcf	11,7	;volatile
 27747                           
 27748                           ;main.c: 1479: (INTCONbits.PEIE = 0);
 27749  06B2  130B               	bcf	11,6	;volatile
 27750                           
 27751                           ;main.c: 1481: TMR0_StopTimer();
 27752  06B3  31A0  208D  3180   	fcall	_TMR0_StopTimer
 27753                           
 27754                           ;main.c: 1483: if(direction > 1)
 27755  06B6  3002               	movlw	2
 27756  06B7  0141               	movlb	1	; select bank1
 27757  06B8  0241               	subwf	_direction^(0+128),w
 27758  06B9  1C03               	skipc
 27759  06BA  2EBE               	goto	l10655
 27760                           
 27761                           ;main.c: 1484: direction--;
 27762  06BB  3001               	movlw	1
 27763  06BC  02C1               	subwf	_direction^(0+128),f
 27764  06BD  2EED               	goto	l10665
 27765  06BE                     l10655:	
 27766                           
 27767                           ;main.c: 1485: else
 27768                           ;main.c: 1486: direction = 0;
 27769  06BE  01C1               	clrf	_direction^(0+128)
 27770                           
 27771                           ;main.c: 1488: switch(direction)
 27772  06BF  2EED               	goto	l10665
 27773  06C0                     l10657:	
 27774                           ;main.c: 1489: {
 27775                           ;main.c: 1490: case CLOCKWISE:
 27776                           
 27777                           
 27778                           ;main.c: 1491: display((char *)"C",(0xC0)+15);
 27779  06C0  30BC               	movlw	low (STR_16| (0+32768))
 27780  06C1  0140               	movlb	0	; select bank0
 27781  06C2  00AC               	movwf	display@a
 27782  06C3  30A8               	movlw	high (STR_16| (0+32768))
 27783  06C4  00AD               	movwf	display@a+1
 27784  06C5  30CF               	movlw	207
 27785  06C6  0141               	movlb	1	; select bank1
 27786  06C7  00B3               	movwf	??_main^(0+128)
 27787  06C8  0833               	movf	??_main^(0+128),w
 27788  06C9  0140               	movlb	0	; select bank0
 27789  06CA  00AE               	movwf	display@add
 27790  06CB  31A2  2297  3180   	fcall	_display
 27791                           
 27792                           ;main.c: 1492: break;
 27793  06CE  2EF9               	goto	l10667
 27794  06CF                     l10659:	
 27795                           ;main.c: 1493: case ANTICLOCKWISE:
 27796                           
 27797                           
 27798                           ;main.c: 1494: display((char *)"A",(0xC0)+15);
 27799  06CF  30BA               	movlw	low (STR_17| (0+32768))
 27800  06D0  0140               	movlb	0	; select bank0
 27801  06D1  00AC               	movwf	display@a
 27802  06D2  30A8               	movlw	high (STR_17| (0+32768))
 27803  06D3  00AD               	movwf	display@a+1
 27804  06D4  30CF               	movlw	207
 27805  06D5  0141               	movlb	1	; select bank1
 27806  06D6  00B3               	movwf	??_main^(0+128)
 27807  06D7  0833               	movf	??_main^(0+128),w
 27808  06D8  0140               	movlb	0	; select bank0
 27809  06D9  00AE               	movwf	display@add
 27810  06DA  31A2  2297  3180   	fcall	_display
 27811                           
 27812                           ;main.c: 1495: break;
 27813  06DD  2EF9               	goto	l10667
 27814  06DE                     l10661:	
 27815                           ;main.c: 1496: case STOP:
 27816                           
 27817                           
 27818                           ;main.c: 1497: display((char *)"S",(0xC0)+15);
 27819  06DE  30BE               	movlw	low (STR_15| (0+32768))
 27820  06DF  0140               	movlb	0	; select bank0
 27821  06E0  00AC               	movwf	display@a
 27822  06E1  30A8               	movlw	high (STR_15| (0+32768))
 27823  06E2  00AD               	movwf	display@a+1
 27824  06E3  30CF               	movlw	207
 27825  06E4  0141               	movlb	1	; select bank1
 27826  06E5  00B3               	movwf	??_main^(0+128)
 27827  06E6  0833               	movf	??_main^(0+128),w
 27828  06E7  0140               	movlb	0	; select bank0
 27829  06E8  00AE               	movwf	display@add
 27830  06E9  31A2  2297  3180   	fcall	_display
 27831                           
 27832                           ;main.c: 1499: }
 27833                           
 27834                           ;main.c: 1498: break;
 27835  06EC  2EF9               	goto	l10667
 27836  06ED                     l10665:	
 27837  06ED  0141               	movlb	1	; select bank1
 27838  06EE  0841               	movf	_direction^(0+128),w
 27839                           
 27840                           ; Switch size 1, requested type "space"
 27841                           ; Number of cases is 3, Range of values is 0 to 2
 27842                           ; switch strategies available:
 27843                           ; Name         Instructions Cycles
 27844                           ; simple_byte           10     6 (average)
 27845                           ; direct_byte           12     6 (fixed)
 27846                           ; jumptable            260     6 (fixed)
 27847                           ;	Chosen strategy is simple_byte
 27848  06EF  3A00               	xorlw	0	; case 0
 27849  06F0  1903               	skipnz
 27850  06F1  2EC0               	goto	l10657
 27851  06F2  3A01               	xorlw	1	; case 1
 27852  06F3  1903               	skipnz
 27853  06F4  2ECF               	goto	l10659
 27854  06F5  3A03               	xorlw	3	; case 2
 27855  06F6  1903               	skipnz
 27856  06F7  2EDE               	goto	l10661
 27857  06F8  2EF9               	goto	l10667
 27858  06F9                     l10667:	
 27859                           
 27860                           ;main.c: 1500: lcd((0xC0) +15,(0));
 27861  06F9  0140               	movlb	0	; select bank0
 27862  06FA  01A9               	clrf	lcd@b
 27863  06FB  30CF               	movlw	207
 27864  06FC  31A4  245E  3180   	fcall	_lcd
 27865                           
 27866                           ;main.c: 1501: lcd(0x00F, (0));
 27867  06FF  0140               	movlb	0	; select bank0
 27868  0700  01A9               	clrf	lcd@b
 27869  0701  300F               	movlw	15
 27870  0702  31A4  245E  3180   	fcall	_lcd
 27871                           
 27872                           ;main.c: 1502: _delay((unsigned long)(((150))*(8000000/4000.0)));
 27873  0705  3002               	movlw	2
 27874  0706  0141               	movlb	1	; select bank1
 27875  0707  00B4               	movwf	(??_main^(0+128)+1)
 27876  0708  3086               	movlw	134
 27877  0709  00B3               	movwf	??_main^(0+128)
 27878  070A  3099               	movlw	153
 27879  070B                     u7477:	
 27880  070B  0B89               	decfsz	9,f
 27881  070C  2F0B               	goto	u7477
 27882  070D  0BB3               	decfsz	??_main^(0+128),f
 27883  070E  2F0B               	goto	u7477
 27884  070F  0BB4               	decfsz	(??_main^(0+128)+1),f
 27885  0710  2F0B               	goto	u7477
 27886                           
 27887                           ;main.c: 1504: saveConfiguration(SET_DIRECTION, direction);
 27888  0711  0141               	movlb	1	; select bank1
 27889  0712  0841               	movf	_direction^(0+128),w
 27890  0713  00B3               	movwf	??_main^(0+128)
 27891  0714  01B4               	clrf	(??_main^(0+128)+1)
 27892  0715  0833               	movf	??_main^(0+128),w
 27893  0716  0140               	movlb	0	; select bank0
 27894  0717  00A2               	movwf	saveConfiguration@value
 27895  0718  0141               	movlb	1	; select bank1
 27896  0719  0834               	movf	(??_main+1)^(0+128),w
 27897  071A  0140               	movlb	0	; select bank0
 27898  071B  00A3               	movwf	saveConfiguration@value+1
 27899  071C  3004               	movlw	4
 27900  071D  31A7  2741  3180   	fcall	_saveConfiguration
 27901                           
 27902                           ;main.c: 1509: }
 27903                           
 27904                           ;main.c: 1508: break;
 27905                           
 27906                           ;main.c: 1507: default:
 27907                           
 27908                           ;main.c: 1505: break;
 27909  0720  2F45               	goto	l10683
 27910  0721                     l10675:	
 27911  0721  0142               	movlb	2	; select bank2
 27912  0722  0866               	movf	_SetParamCount^(0+256),w
 27913                           
 27914                           ; Switch size 1, requested type "space"
 27915                           ; Number of cases is 5, Range of values is 0 to 4
 27916                           ; switch strategies available:
 27917                           ; Name         Instructions Cycles
 27918                           ; direct_byte           16     6 (fixed)
 27919                           ; simple_byte           16     9 (average)
 27920                           ; jumptable            260     6 (fixed)
 27921                           ;	Chosen strategy is direct_byte
 27922  0723  0084               	movwf	4
 27923  0724  3005               	movlw	5
 27924  0725  0204               	subwf	4,w
 27925  0726  1803               	skipnc
 27926  0727  2F45               	goto	l10683
 27927  0728  31A0               	movlp	high S10827
 27928  0729  3504               	lslf	4,w
 27929  072A  3E14               	addlw	low S10827
 27930  072B  0082               	movwf	2
 27931                           
 27932                           ;main.c: 1511: break;
 27933  072C  2F45               	goto	l10683
 27934  072D                     l10677:	
 27935                           ;main.c: 1512: default:
 27936                           
 27937                           
 27938                           ;main.c: 1513: command = 0;
 27939  072D  0144               	movlb	4	; select bank4
 27940  072E  01BC               	clrf	main@command^(0+512)
 27941                           
 27942                           ;main.c: 1515: }
 27943                           
 27944                           ;main.c: 1514: break;
 27945  072F  2F45               	goto	l10683
 27946  0730                     l10681:	
 27947  0730  0144               	movlb	4	; select bank4
 27948  0731  083C               	movf	main@command^(0+512),w
 27949                           
 27950                           ; Switch size 1, requested type "space"
 27951                           ; Number of cases is 6, Range of values is 1 to 7
 27952                           ; switch strategies available:
 27953                           ; Name         Instructions Cycles
 27954                           ; simple_byte           19    10 (average)
 27955                           ; direct_byte           23     9 (fixed)
 27956                           ; jumptable            263     9 (fixed)
 27957                           ;	Chosen strategy is simple_byte
 27958  0732  3A01               	xorlw	1	; case 1
 27959  0733  1903               	skipnz
 27960  0734  2966               	goto	l1293
 27961  0735  3A03               	xorlw	3	; case 2
 27962  0736  1903               	skipnz
 27963  0737  2A97               	goto	l1305
 27964  0738  3A01               	xorlw	1	; case 3
 27965  0739  1903               	skipnz
 27966  073A  2D47               	goto	l10569
 27967  073B  3A07               	xorlw	7	; case 4
 27968  073C  1903               	skipnz
 27969  073D  2F21               	goto	l10675
 27970  073E  3A01               	xorlw	1	; case 5
 27971  073F  1903               	skipnz
 27972  0740  284B               	goto	l1278
 27973  0741  3A02               	xorlw	2	; case 7
 27974  0742  1903               	skipnz
 27975  0743  2966               	goto	l1293
 27976  0744  2F2D               	goto	l10677
 27977  0745                     l10683:	
 27978                           
 27979                           ;main.c: 1516: command = 0;
 27980  0745  0144               	movlb	4	; select bank4
 27981  0746  01BC               	clrf	main@command^(0+512)
 27982  0747  319C  2C31         	goto	l10291
 27983  0749                     __end_of_main:	


Data Sizes:
    Strings     192
    Constant    0
    Data        43
    BSS         130
    Persistent  9
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      11
    BANK0            80     80      80
    BANK1            80     25      48
    BANK2            80      0      80
    BANK3            80      0      77
    BANK4            80     33      33
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           80      0       0
    BANK26           80      0       0
    BANK27           80      0       0
    BANK28           80      0       0
    BANK29           80      0       0
    BANK30           80      0       0
    BANK31           80      0       0
    BANK32           80      0       0
    BANK33           80      0       0
    BANK34           80      0       0
    BANK35           80      0       0
    BANK36           80      0       0
    BANK37           80      0       0
    BANK38           80      0       0
    BANK39           80      0       0
    BANK40           80      0       0
    BANK41           80      0       0
    BANK42           80      0       0
    BANK43           80      0       0
    BANK44           80      0       0
    BANK45           80      0       0
    BANK46           80      0       0
    BANK47           80      0       0
    BANK48           80      0       0
    BANK49           80      0       0
    BANK50           80      0       0

Pointer List with Targets:

    TMR5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    display@a	PTR unsigned char  size(2) Largest target is 17
		 -> STR_41(CODE[2]), STR_40(CODE[2]), STR_39(CODE[2]), STR_38(CODE[2]), 
		 -> STR_37(CODE[2]), STR_36(CODE[2]), STR_35(CODE[13]), STR_34(CODE[11]), 
		 -> STR_33(CODE[12]), STR_32(CODE[13]), STR_31(CODE[11]), STR_30(CODE[12]), 
		 -> STR_29(CODE[2]), STR_28(CODE[2]), STR_27(CODE[2]), STR_26(CODE[2]), 
		 -> STR_25(CODE[2]), STR_24(CODE[2]), STR_23(CODE[13]), STR_22(CODE[13]), 
		 -> STR_21(CODE[17]), STR_20(CODE[17]), STR_19(CODE[4]), STR_18(CODE[4]), 
		 -> STR_17(CODE[2]), STR_16(CODE[2]), STR_15(CODE[2]), STR_14(CODE[17]), 
		 -> STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[17]), STR_10(CODE[17]), 
		 -> STR_9(CODE[17]), STR_8(CODE[17]), STR_7(CODE[17]), STR_6(CODE[17]), 
		 -> STR_5(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> STR_1(CODE[10]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR0_ISR->_TMR0_DefaultInterruptHandler
    _TMR0_DefaultInterruptHandler->_TMR3_ReadTimer
    _TMR0_DefaultInterruptHandler->_TMR5_ReadTimer

Critical Paths under _main in BANK0

    _saveConfiguration->_eeprom_write
    _ouputOnClockwise->_number_5
    _ouputOnAntiClock->_number_5
    _stopMotor->_PWM3_LoadDutyValue
    _stopMotor->_PWM4_LoadDutyValue
    _startMotor->_PWM3_LoadDutyValue
    _startMotor->_PWM4_LoadDutyValue
    _default_menu->_number_5
    _checkCurrentSensor->_number_5
    _number_4->___llmod
    _lcdInit->_lcd
    _initMemRead->_number_3
    _number_3->_lcd
    _number_2->_lcd
    _checkMainSupplyFailure->_number_5
    _checkBatteryVoltage->_number_5
    _number_5->___llmod
    ___llmod->___lldiv
    _display->_lcd
    _lcd->___awdiv
    ___aldiv->___lmul
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_outputOn
    _serialCommand->_ouputOnClockwise
    _outputOn->_ouputOnClockwise
    _ouputOnClockwise->_checkCurrentSensor
    _ouputOnAntiClock->_checkCurrentSensor

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK36

    None.

Critical Paths under _main in BANK37

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK37

    None.

Critical Paths under _main in BANK38

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK38

    None.

Critical Paths under _main in BANK39

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK39

    None.

Critical Paths under _main in BANK40

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK40

    None.

Critical Paths under _main in BANK41

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK41

    None.

Critical Paths under _main in BANK42

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK42

    None.

Critical Paths under _main in BANK43

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK43

    None.

Critical Paths under _main in BANK44

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK44

    None.

Critical Paths under _main in BANK45

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK45

    None.

Critical Paths under _main in BANK46

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK46

    None.

Critical Paths under _main in BANK47

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK47

    None.

Critical Paths under _main in BANK48

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK48

    None.

Critical Paths under _main in BANK49

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK49

    None.

Critical Paths under _main in BANK50

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK50

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                40    40      0 1246362
                                             19 BANK1      6     6      0
                                              0 BANK4     33    33      0
                 _PWM3_LoadDutyValue
                 _PWM4_LoadDutyValue
                  _SYSTEM_Initialize
                    _TMR0_StartTimer
                     _TMR0_StopTimer
                     _TMR2_StopTimer
                            ___aldiv
                             ___lmul
                _checkBatteryVoltage
             _checkMainSupplyFailure
                       _default_init
                       _default_menu
                            _display
                       _eeprom_write
                        _initMemRead
                             _keypad
                                _lcd
                            _lcdInit
                           _number_2
                           _number_3
                           _number_4
                   _ouputOnAntiClock
                   _ouputOnClockwise
                           _outputOn
                              _putch
                  _saveConfiguration
                      _serialCommand
 ---------------------------------------------------------------------------------
 (1) _serialCommand                                        3     3      0  348870
                                             15 BANK1      3     3      0
                            ___aldiv
                             ___lmul
                             ___wmul
                            _display
                              _getch
                                _lcd
                           _number_2
                           _number_3
                   _ouputOnAntiClock
                   _ouputOnClockwise
                  _saveConfiguration
 ---------------------------------------------------------------------------------
 (2) _saveConfiguration                                    5     3      2    4429
                                              2 BANK0      5     3      2
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (2) _getch                                                2     2      0      37
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _putch                                                1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _outputOn                                             4     4      0  339230
                                             15 BANK1      4     4      0
                    _TMR0_StartTimer
                            _display
                                _lcd
                           _number_2
                           _number_3
                   _ouputOnAntiClock
                   _ouputOnClockwise
 ---------------------------------------------------------------------------------
 (2) _ouputOnClockwise                                     7     7      0  148483
                                              8 BANK1      7     7      0
                 _PWM3_LoadDutyValue
                 _PWM4_LoadDutyValue
                    _TMR0_StartTimer
                     _TMR0_StopTimer
                    _TMR2_StartTimer
                     _TMR2_StopTimer
                    _TMR3_WriteTimer
                    _TMR5_WriteTimer
                            ___aldiv
                             ___lmul
                 _checkCurrentSensor
                       _default_menu
                            _display
                       _eeprom_write
                                _lcd
                           _number_5
                         _startMotor
                          _stopMotor
 ---------------------------------------------------------------------------------
 (2) _ouputOnAntiClock                                     4     4      0  146313
                                              8 BANK1      4     4      0
                    _TMR0_StartTimer
                     _TMR0_StopTimer
                    _TMR2_StartTimer
                     _TMR2_StopTimer
                    _TMR3_WriteTimer
                    _TMR5_WriteTimer
                            ___aldiv
                             ___lmul
                 _checkCurrentSensor
                       _default_menu
                            _display
                       _eeprom_write
                                _lcd
                           _number_5
                         _startMotor
                          _stopMotor
 ---------------------------------------------------------------------------------
 (3) _stopMotor                                            8     6      2    2769
                                              2 BANK0      8     6      2
                 _PWM3_LoadDutyValue
                 _PWM4_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _startMotor                                           8     6      2    2754
                                              2 BANK0      8     6      2
                 _PWM3_LoadDutyValue
                 _PWM4_LoadDutyValue
 ---------------------------------------------------------------------------------
 (4) _PWM4_LoadDutyValue                                   2     0      2    1054
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _PWM3_LoadDutyValue                                   2     0      2    1054
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _default_menu                                         1     1      0   57742
                                              0 BANK1      1     1      0
                            _display
                                _lcd
                           _number_2
                           _number_3
                           _number_5
 ---------------------------------------------------------------------------------
 (3) _checkCurrentSensor                                   9     7      2   39236
                                              0 BANK1      8     6      2
           _ADCC_GetSingleConversion
                            ___aldiv
                            _display
                                _lcd
                           _number_5
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8    1984
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) _TMR5_WriteTimer                                      2     0      2     355
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _TMR3_WriteTimer                                      2     0      2     355
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _TMR2_StopTimer                                       0     0      0       0
                          _TMR2_Stop
 ---------------------------------------------------------------------------------
 (4) _TMR2_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
                         _TMR2_Start
 ---------------------------------------------------------------------------------
 (3) _TMR0_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _number_4                                            56    52      4   12140
                                             24 BANK0     48    44      4
                            ___lldiv
                            ___llmod
                                _lcd
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0    8409
                                _lcd
 ---------------------------------------------------------------------------------
 (1) _keypad                                               3     3      0      52
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _initMemRead                                         11    11      0   48823
                                             26 BANK0     11    11      0
                             ___wmul
                            _display
                        _eeprom_read
                       _eeprom_write
                                _lcd
                           _number_2
                           _number_3
 ---------------------------------------------------------------------------------
 (4) _number_3                                            14    12      2   11422
                                             12 BANK0     14    12      2
                            ___lwdiv
                            ___lwmod
                                _lcd
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              6     2      4     540
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              8     4      4     549
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (4) _number_2                                             3     3      0    9719
                                             12 BANK0      3     3      0
                            ___awdiv
                            ___awmod
                                _lcd
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4     587
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4     599
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (3) _eeprom_write                                         2     1      1    2064
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _eeprom_read                                          1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     598
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _default_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkMainSupplyFailure                               4     4      0   39079
                                              0 BANK1      4     4      0
           _ADCC_GetSingleConversion
                            ___aldiv
                            _display
                                _lcd
                           _number_5
 ---------------------------------------------------------------------------------
 (1) _checkBatteryVoltage                                  4     4      0   39079
                                              0 BANK1      4     4      0
           _ADCC_GetSingleConversion
                            ___aldiv
                            _display
                                _lcd
                           _number_5
 ---------------------------------------------------------------------------------
 (3) _number_5                                            64    60      4   13308
                                             24 BANK0     56    52      4
                            ___lldiv
                            ___llmod
                                _lcd
 ---------------------------------------------------------------------------------
 (4) ___llmod                                             10     2      8    1464
                                             14 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             14     6      8    1319
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (3) _display                                              6     3      3   14884
                                             12 BANK0      6     3      3
                                _lcd
 ---------------------------------------------------------------------------------
 (4) _lcd                                                  3     2      1    8409
                                              9 BANK0      3     2      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             15     7      8    2447
                                             12 BANK0     15     7      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _ADCC_GetSingleConversion                             4     1      3      31
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     142
                    _ADCC_Initialize
                    _CWG1_Initialize
                    _CWG2_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM3_Initialize
                    _PWM4_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0       0
                    _TMR5_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR5_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0       0
                    _TMR3_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR3_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                         _TMR2_Start
 ---------------------------------------------------------------------------------
 (4) _TMR2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     108
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     108
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _CWG2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CWG1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           1     1      0      46
                                              5 COMMON     1     1      0
                 _EUSART_Receive_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR0_ISR                                             0     0      0      46
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR0_DefaultInterruptHandler                         1     1      0      46
                                              4 COMMON     1     1      0
                     _TMR3_ReadTimer
                     _TMR5_ReadTimer
 ---------------------------------------------------------------------------------
 (9) _TMR5_ReadTimer                                       4     2      2      23
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (9) _TMR3_ReadTimer                                       4     2      2      23
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART_Receive_ISR                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM3_LoadDutyValue
   _PWM4_LoadDutyValue
   _SYSTEM_Initialize
     _ADCC_Initialize
     _CWG1_Initialize
     _CWG2_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM3_Initialize
     _PWM4_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_Start
     _TMR3_Initialize
       _TMR3_StartTimer
     _TMR5_Initialize
       _TMR5_StartTimer
   _TMR0_StartTimer
   _TMR0_StopTimer
   _TMR2_StopTimer
     _TMR2_Stop
   ___aldiv
     ___lmul (ARG)
   ___lmul
   _checkBatteryVoltage
     _ADCC_GetSingleConversion
     ___aldiv
       ___lmul (ARG)
     _display
       _lcd
         ___awdiv (ARG)
         ___awmod (ARG)
     _lcd
       ___awdiv (ARG)
       ___awmod (ARG)
     _number_5
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       _lcd
         ___awdiv (ARG)
         ___awmod (ARG)
   _checkMainSupplyFailure
     _ADCC_GetSingleConversion
     ___aldiv
       ___lmul (ARG)
     _display
       _lcd
         ___awdiv (ARG)
         ___awmod (ARG)
     _lcd
       ___awdiv (ARG)
       ___awmod (ARG)
     _number_5
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       _lcd
         ___awdiv (ARG)
         ___awmod (ARG)
   _default_init
   _default_menu
     _display
       _lcd
         ___awdiv (ARG)
         ___awmod (ARG)
     _lcd
       ___awdiv (ARG)
       ___awmod (ARG)
     _number_2
       ___awdiv
       ___awmod
       _lcd
         ___awdiv (ARG)
         ___awmod (ARG)
     _number_3
       ___lwdiv
       ___lwmod
       _lcd
         ___awdiv (ARG)
         ___awmod (ARG)
     _number_5
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       _lcd
         ___awdiv (ARG)
         ___awmod (ARG)
   _display
     _lcd
       ___awdiv (ARG)
       ___awmod (ARG)
   _eeprom_write
   _initMemRead
     ___wmul
     _display
       _lcd
         ___awdiv (ARG)
         ___awmod (ARG)
     _eeprom_read
     _eeprom_write
     _lcd
       ___awdiv (ARG)
       ___awmod (ARG)
     _number_2
       ___awdiv
       ___awmod
       _lcd
         ___awdiv (ARG)
         ___awmod (ARG)
     _number_3
       ___lwdiv
       ___lwmod
       _lcd
         ___awdiv (ARG)
         ___awmod (ARG)
   _keypad
   _lcd
     ___awdiv (ARG)
     ___awmod (ARG)
   _lcdInit
     _lcd
       ___awdiv (ARG)
       ___awmod (ARG)
   _number_2
     ___awdiv
     ___awmod
     _lcd
       ___awdiv (ARG)
       ___awmod (ARG)
   _number_3
     ___lwdiv
     ___lwmod
     _lcd
       ___awdiv (ARG)
       ___awmod (ARG)
   _number_4
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     _lcd
       ___awdiv (ARG)
       ___awmod (ARG)
   _ouputOnAntiClock
     _TMR0_StartTimer
     _TMR0_StopTimer
     _TMR2_StartTimer
       _TMR2_Start
     _TMR2_StopTimer
       _TMR2_Stop
     _TMR3_WriteTimer
     _TMR5_WriteTimer
     ___aldiv
       ___lmul (ARG)
     ___lmul
     _checkCurrentSensor
       _ADCC_GetSingleConversion
       ___aldiv
         ___lmul (ARG)
       _display
         _lcd
           ___awdiv (ARG)
           ___awmod (ARG)
       _lcd
         ___awdiv (ARG)
         ___awmod (ARG)
       _number_5
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _lcd
           ___awdiv (ARG)
           ___awmod (ARG)
     _default_menu
       _display
         _lcd
           ___awdiv (ARG)
           ___awmod (ARG)
       _lcd
         ___awdiv (ARG)
         ___awmod (ARG)
       _number_2
         ___awdiv
         ___awmod
         _lcd
           ___awdiv (ARG)
           ___awmod (ARG)
       _number_3
         ___lwdiv
         ___lwmod
         _lcd
           ___awdiv (ARG)
           ___awmod (ARG)
       _number_5
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _lcd
           ___awdiv (ARG)
           ___awmod (ARG)
     _display
       _lcd
         ___awdiv (ARG)
         ___awmod (ARG)
     _eeprom_write
     _lcd
       ___awdiv (ARG)
       ___awmod (ARG)
     _number_5
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       _lcd
         ___awdiv (ARG)
         ___awmod (ARG)
     _startMotor
       _PWM3_LoadDutyValue
       _PWM4_LoadDutyValue
     _stopMotor
       _PWM3_LoadDutyValue
       _PWM4_LoadDutyValue
   _ouputOnClockwise
     _PWM3_LoadDutyValue
     _PWM4_LoadDutyValue
     _TMR0_StartTimer
     _TMR0_StopTimer
     _TMR2_StartTimer
       _TMR2_Start
     _TMR2_StopTimer
       _TMR2_Stop
     _TMR3_WriteTimer
     _TMR5_WriteTimer
     ___aldiv
       ___lmul (ARG)
     ___lmul
     _checkCurrentSensor
       _ADCC_GetSingleConversion
       ___aldiv
         ___lmul (ARG)
       _display
         _lcd
           ___awdiv (ARG)
           ___awmod (ARG)
       _lcd
         ___awdiv (ARG)
         ___awmod (ARG)
       _number_5
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _lcd
           ___awdiv (ARG)
           ___awmod (ARG)
     _default_menu
       _display
         _lcd
           ___awdiv (ARG)
           ___awmod (ARG)
       _lcd
         ___awdiv (ARG)
         ___awmod (ARG)
       _number_2
         ___awdiv
         ___awmod
         _lcd
           ___awdiv (ARG)
           ___awmod (ARG)
       _number_3
         ___lwdiv
         ___lwmod
         _lcd
           ___awdiv (ARG)
           ___awmod (ARG)
       _number_5
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _lcd
           ___awdiv (ARG)
           ___awmod (ARG)
     _display
       _lcd
         ___awdiv (ARG)
         ___awmod (ARG)
     _eeprom_write
     _lcd
       ___awdiv (ARG)
       ___awmod (ARG)
     _number_5
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       _lcd
         ___awdiv (ARG)
         ___awmod (ARG)
     _startMotor
       _PWM3_LoadDutyValue
       _PWM4_LoadDutyValue
     _stopMotor
       _PWM3_LoadDutyValue
       _PWM4_LoadDutyValue
   _outputOn
     _TMR0_StartTimer
     _display
       _lcd
         ___awdiv (ARG)
         ___awmod (ARG)
     _lcd
       ___awdiv (ARG)
       ___awmod (ARG)
     _number_2
       ___awdiv
       ___awmod
       _lcd
         ___awdiv (ARG)
         ___awmod (ARG)
     _number_3
       ___lwdiv
       ___lwmod
       _lcd
         ___awdiv (ARG)
         ___awmod (ARG)
     _ouputOnAntiClock
       _TMR0_StartTimer
       _TMR0_StopTimer
       _TMR2_StartTimer
         _TMR2_Start
       _TMR2_StopTimer
         _TMR2_Stop
       _TMR3_WriteTimer
       _TMR5_WriteTimer
       ___aldiv
         ___lmul (ARG)
       ___lmul
       _checkCurrentSensor
         _ADCC_GetSingleConversion
         ___aldiv
           ___lmul (ARG)
         _display
           _lcd
             ___awdiv (ARG)
             ___awmod (ARG)
         _lcd
           ___awdiv (ARG)
           ___awmod (ARG)
         _number_5
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _lcd
             ___awdiv (ARG)
             ___awmod (ARG)
       _default_menu
         _display
           _lcd
             ___awdiv (ARG)
             ___awmod (ARG)
         _lcd
           ___awdiv (ARG)
           ___awmod (ARG)
         _number_2
           ___awdiv
           ___awmod
           _lcd
             ___awdiv (ARG)
             ___awmod (ARG)
         _number_3
           ___lwdiv
           ___lwmod
           _lcd
             ___awdiv (ARG)
             ___awmod (ARG)
         _number_5
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _lcd
             ___awdiv (ARG)
             ___awmod (ARG)
       _display
         _lcd
           ___awdiv (ARG)
           ___awmod (ARG)
       _eeprom_write
       _lcd
         ___awdiv (ARG)
         ___awmod (ARG)
       _number_5
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _lcd
           ___awdiv (ARG)
           ___awmod (ARG)
       _startMotor
         _PWM3_LoadDutyValue
         _PWM4_LoadDutyValue
       _stopMotor
         _PWM3_LoadDutyValue
         _PWM4_LoadDutyValue
     _ouputOnClockwise
       _PWM3_LoadDutyValue
       _PWM4_LoadDutyValue
       _TMR0_StartTimer
       _TMR0_StopTimer
       _TMR2_StartTimer
         _TMR2_Start
       _TMR2_StopTimer
         _TMR2_Stop
       _TMR3_WriteTimer
       _TMR5_WriteTimer
       ___aldiv
         ___lmul (ARG)
       ___lmul
       _checkCurrentSensor
         _ADCC_GetSingleConversion
         ___aldiv
           ___lmul (ARG)
         _display
           _lcd
             ___awdiv (ARG)
             ___awmod (ARG)
         _lcd
           ___awdiv (ARG)
           ___awmod (ARG)
         _number_5
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _lcd
             ___awdiv (ARG)
             ___awmod (ARG)
       _default_menu
         _display
           _lcd
             ___awdiv (ARG)
             ___awmod (ARG)
         _lcd
           ___awdiv (ARG)
           ___awmod (ARG)
         _number_2
           ___awdiv
           ___awmod
           _lcd
             ___awdiv (ARG)
             ___awmod (ARG)
         _number_3
           ___lwdiv
           ___lwmod
           _lcd
             ___awdiv (ARG)
             ___awmod (ARG)
         _number_5
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _lcd
             ___awdiv (ARG)
             ___awmod (ARG)
       _display
         _lcd
           ___awdiv (ARG)
           ___awmod (ARG)
       _eeprom_write
       _lcd
         ___awdiv (ARG)
         ___awmod (ARG)
       _number_5
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _lcd
           ___awdiv (ARG)
           ___awmod (ARG)
       _startMotor
         _PWM3_LoadDutyValue
         _PWM4_LoadDutyValue
       _stopMotor
         _PWM3_LoadDutyValue
         _PWM4_LoadDutyValue
   _putch
   _saveConfiguration
     _eeprom_write
   _serialCommand
     ___aldiv
       ___lmul (ARG)
     ___lmul
     ___wmul
     _display
       _lcd
         ___awdiv (ARG)
         ___awmod (ARG)
     _getch
     _lcd
       ___awdiv (ARG)
       ___awmod (ARG)
     _number_2
       ___awdiv
       ___awmod
       _lcd
         ___awdiv (ARG)
         ___awmod (ARG)
     _number_3
       ___lwdiv
       ___lwmod
       _lcd
         ___awdiv (ARG)
         ___awmod (ARG)
     _ouputOnAntiClock
       _TMR0_StartTimer
       _TMR0_StopTimer
       _TMR2_StartTimer
         _TMR2_Start
       _TMR2_StopTimer
         _TMR2_Stop
       _TMR3_WriteTimer
       _TMR5_WriteTimer
       ___aldiv
         ___lmul (ARG)
       ___lmul
       _checkCurrentSensor
         _ADCC_GetSingleConversion
         ___aldiv
           ___lmul (ARG)
         _display
           _lcd
             ___awdiv (ARG)
             ___awmod (ARG)
         _lcd
           ___awdiv (ARG)
           ___awmod (ARG)
         _number_5
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _lcd
             ___awdiv (ARG)
             ___awmod (ARG)
       _default_menu
         _display
           _lcd
             ___awdiv (ARG)
             ___awmod (ARG)
         _lcd
           ___awdiv (ARG)
           ___awmod (ARG)
         _number_2
           ___awdiv
           ___awmod
           _lcd
             ___awdiv (ARG)
             ___awmod (ARG)
         _number_3
           ___lwdiv
           ___lwmod
           _lcd
             ___awdiv (ARG)
             ___awmod (ARG)
         _number_5
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _lcd
             ___awdiv (ARG)
             ___awmod (ARG)
       _display
         _lcd
           ___awdiv (ARG)
           ___awmod (ARG)
       _eeprom_write
       _lcd
         ___awdiv (ARG)
         ___awmod (ARG)
       _number_5
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _lcd
           ___awdiv (ARG)
           ___awmod (ARG)
       _startMotor
         _PWM3_LoadDutyValue
         _PWM4_LoadDutyValue
       _stopMotor
         _PWM3_LoadDutyValue
         _PWM4_LoadDutyValue
     _ouputOnClockwise
       _PWM3_LoadDutyValue
       _PWM4_LoadDutyValue
       _TMR0_StartTimer
       _TMR0_StopTimer
       _TMR2_StartTimer
         _TMR2_Start
       _TMR2_StopTimer
         _TMR2_Stop
       _TMR3_WriteTimer
       _TMR5_WriteTimer
       ___aldiv
         ___lmul (ARG)
       ___lmul
       _checkCurrentSensor
         _ADCC_GetSingleConversion
         ___aldiv
           ___lmul (ARG)
         _display
           _lcd
             ___awdiv (ARG)
             ___awmod (ARG)
         _lcd
           ___awdiv (ARG)
           ___awmod (ARG)
         _number_5
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _lcd
             ___awdiv (ARG)
             ___awmod (ARG)
       _default_menu
         _display
           _lcd
             ___awdiv (ARG)
             ___awmod (ARG)
         _lcd
           ___awdiv (ARG)
           ___awmod (ARG)
         _number_2
           ___awdiv
           ___awmod
           _lcd
             ___awdiv (ARG)
             ___awmod (ARG)
         _number_3
           ___lwdiv
           ___lwmod
           _lcd
             ___awdiv (ARG)
             ___awmod (ARG)
         _number_5
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           _lcd
             ___awdiv (ARG)
             ___awmod (ARG)
       _display
         _lcd
           ___awdiv (ARG)
           ___awmod (ARG)
       _eeprom_write
       _lcd
         ___awdiv (ARG)
         ___awmod (ARG)
       _number_5
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         _lcd
           ___awdiv (ARG)
           ___awmod (ARG)
       _startMotor
         _PWM3_LoadDutyValue
         _PWM4_LoadDutyValue
       _stopMotor
         _PWM3_LoadDutyValue
         _PWM4_LoadDutyValue
     _saveConfiguration
       _eeprom_write

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART_Receive_ISR
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
       _TMR3_ReadTimer
       _TMR5_ReadTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FF0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       3       1       21.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     19      30       7       60.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      4D      11       96.3%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50     21      21      13       41.3%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITBANK8            50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BANK8               50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITBANK9            50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK9               50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITBANK10           50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK10              50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITBANK11           50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK11              50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
ABS                  0      0     149      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              50      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BANK22              50      0       0      50        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BANK23              50      0       0      52        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BANK24              50      0       0      54        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITBANK25           50      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BANK25              50      0       0      56        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITBANK26           50      0       0      57        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BANK26              50      0       0      58        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
DATA                 0      0     149      59        0.0%
BITBANK27           50      0       0      60        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BANK27              50      0       0      61        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITBANK28           50      0       0      62        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BANK28              50      0       0      63        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITBANK29           50      0       0      64        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%
BANK29              50      0       0      65        0.0%
BITBANK30           50      0       0      66        0.0%
BANK30              50      0       0      67        0.0%
BITBANK31           50      0       0      68        0.0%
BANK31              50      0       0      69        0.0%
BITBANK32           50      0       0      70        0.0%
BANK32              50      0       0      71        0.0%
BITBANK33           50      0       0      72        0.0%
BANK33              50      0       0      73        0.0%
BITBANK34           50      0       0      74        0.0%
BANK34              50      0       0      75        0.0%
BITBANK35           50      0       0      76        0.0%
BANK35              50      0       0      77        0.0%
BITBANK36           50      0       0      78        0.0%
BANK36              50      0       0      79        0.0%
BITBANK37           50      0       0      80        0.0%
BANK37              50      0       0      81        0.0%
BITBANK38           50      0       0      82        0.0%
BANK38              50      0       0      83        0.0%
BITBANK39           50      0       0      84        0.0%
BANK39              50      0       0      85        0.0%
BITBANK40           50      0       0      86        0.0%
BANK40              50      0       0      87        0.0%
BITBANK41           50      0       0      88        0.0%
BANK41              50      0       0      89        0.0%
BITBANK42           50      0       0      90        0.0%
BANK42              50      0       0      91        0.0%
BITBANK43           50      0       0      92        0.0%
BANK43              50      0       0      93        0.0%
BITBANK44           50      0       0      94        0.0%
BANK44              50      0       0      95        0.0%
BITBANK45           50      0       0      96        0.0%
BANK45              50      0       0      97        0.0%
BITBANK46           50      0       0      98        0.0%
BANK46              50      0       0      99        0.0%
BITBANK47           50      0       0     100        0.0%
BANK47              50      0       0     101        0.0%
BITBANK48           50      0       0     102        0.0%
BANK48              50      0       0     103        0.0%
BITBANK49           50      0       0     104        0.0%
BANK49              50      0       0     105        0.0%
BITBANK50           50      0       0     106        0.0%
BANK50              50      0       0     107        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Thu Apr 26 18:34:25 2018

                                       pc 0002                               __CFG_CP$OFF 0000  
                                      _IR 0380                                        _WR 40F1  
                            ___awdiv@sign 0026                       ___wmul@multiplicand 0022  
                       ??_TMR5_WriteTimer 0022                         _sensorPeriodicity 01E3  
                   saveConfiguration@temp 0026                               __CFG_LVP$ON 0000  
                                     l620 211F                                       _GIE 005F  
                                     _RB0 0068                                       _RC0 0070  
                                     _RB2 006A                                       _RA5 0065  
                                     _RC1 0071                                       _RB3 006B  
                                     _RC2 0072                                       _RC4 0074  
                                     _RE0 0080                                       _RE1 0081  
                                     _RE2 0082                                       _RD4 007C  
                                     _RD5 007D                                       _RD6 007E  
                                     _RD7 007F                                       _PR2 028D  
                            __CFG_CPD$OFF 0000                                       _lcd 245E  
                                     _min 00C6                                       _sec 00C7  
                            ___awmod@sign 0026                     ??_checkBatteryVoltage 00A0  
                         _TMR2_Initialize 20E4                           _PWM4_Initialize 20D9  
                            __CFG_BORV$LO 0000                                       wreg 0009  
                  saveConfiguration@value 0022                           _CWG2_Initialize 2105  
                             main@cmpName 0231                              __CFG_ZCD$OFF 0000  
                             main@command 023C                                      l1212 0A43  
                                    l1220 1D75                                      l1300 0289  
                                    l1205 0A26                                      l1206 0B1B  
                                    l1223 1C48                                      l1209 0A2F  
                                    l1305 0297                                      l1252 19DF  
                                    l1229 1CCB                      __end_of_default_init 2179  
                                    l1239 1D5C                                      l1354 06AE  
                                    l1266 1AE5                                      l1283 0141  
                         _timer3ReloadVal 016B                                      l1452 1FD4  
                                    l1196 1338                                      l1284 00B2  
                                    l1461 11DD                                      l1525 2563  
                                    l1293 0166                                      l1526 255E  
                    __end_of_default_menu 1A2D                                      l1294 0191  
                                    l1286 013A                                      l1278 004B  
                                    l1279 0078                                      l1536 25A8  
                                    l1296 0192                                      l1641 0CD9  
                                    l1297 0295                                      l1642 0D25  
                                    l1634 0BD0                                      l1539 25C1  
                                    l1635 0C1C                                      l1804 22BE  
                                    l1644 0DBB                                      l1637 0CB2  
                                    l1670 0FFF                                      l1808 22D9  
                                    ?_lcd 0029                                      l1950 264A  
                                    l1782 212D                                      l1895 21E6  
                                    l8201 242A                                      l8123 2467  
                                    l8211 243C                                      l8223 2459  
                                    l8215 2448                                      l8311 232B  
                                    l8233 250B                                      l8401 1190  
                                    l8153 24B3                                      l8209 2430  
                                    l8305 2313                                      l8243 2539  
                                    l8235 2519                                      l8403 11A1  
                                    l8171 24D2                                      l8219 2451  
                                    l8307 231F                                      l8315 2334  
                                    l8405 11AE                                      l8181 24ED  
                                    l8333 224B                                      l8247 2544  
                                    l8263 2404                                      l8407 11BF  
                                    l8159 24BE                                      l9223 0AF6  
                                    l8257 23DE                                      l8409 11CC  
                                    l9401 1E12                                      l8185 24F5  
                                    l8177 24E4                                      l8169 24C6  
                                    l8281 2372                                      l8433 271A  
                                    l9305 2744                                      l8371 229F  
                                    l8259 23EC                                      l8267 240F  
                                    l9411 1E3D                                      l8451 23A8  
                                    l8283 237E                                      l8435 2721  
                                    l8515 2187                                      l8531 219E  
                                    l8347 226A                                      l9413 1E4D  
                                    l8197 2423                                      l8293 2399  
                                    l8437 2727                                      l8621 25EC  
                                    l8605 1896                                      l9229 0B2B  
                                    l9341 27CA                                      l9317 2770  
                                    l8471 266B                                      l8463 265B  
                                    l9423 1E78                                      l8551 0863  
                                    l9239 0B3D                                      l9503 1CCE  
                                    l8481 2699                                      l8473 2679  
                                    l9441 18E1                                      l8289 2390  
                                    l8705 2342                                      l8641 2605  
                                    l8625 25CE                                      l9329 279D  
                                    l9353 27F4                                      l8643 2632  
                                    l8627 25FB                                      l9347 27E1  
                                    l8485 26A4                                      l8397 1173  
                                    l9429 1E9E                                      l8709 234C  
                                    l8637 2623                                      l8629 2602  
                                    l9189 0A82                                      l9541 1D5F  
                                    l9533 1D32                                      l8399 1184  
                                    l9391 1DAB                                      l9455 1966  
                                    l9367 21E0                                      l8559 08C0  
                                    l8567 08E7                                      l8583 1843  
                                    l9535 1D4B                                      l9551 1D6C  
                                    l8489 26B2                                      l8569 08F8  
                                    l8593 1862                                      l9545 1CDA  
                                    l8691 19CD                                      l9813 2599  
                                    l9805 2587                                      l8589 1852  
                                    l9399 1E03                                      l8687 19C4  
                                    l8599 187D                                      l9495 1CA1  
                                    l8927 07FD                                      l9497 1CBA  
                                    l9755 1775                                      l9763 179C  
                                    l9819 25AF                                      l9757 1782  
                                    l9765 17A8                                      l9759 178F  
                                    l9679 1631                                      STR_1 28A8  
                                    STR_2 28B2                                      l9929 0DC4  
                                    STR_3 28B2                                      STR_4 28B2  
                                    l9963 0E3B                                      l9939 0DE2  
                                    STR_5 28B6                                      STR_6 2833  
                                    l9797 2575                                      l9981 0E96  
                                    l9965 0E40                                      l9973 0E6D  
                                    l9949 0E0A                                      STR_7 2811  
                                    STR_8 2833                                      l8999 135D  
                                    l9991 0ECD                                      l9983 0E9A  
                                    l9967 0E4F                                      l9975 0E79  
                                    l9959 0E31                                      l9879 0CBB  
                                    STR_9 2822                                      l9977 0E88  
                                    l9969 0E5E                                      l9995 0ED8  
                                    _LATA 0016                                      _LATB 0017  
                                    _LATC 0018                                      _LATD 0019  
                                    _LATE 001A                                      _T2PR 028D  
                                    u5115 250E                                      u5205 23FA  
                                    u5045 2433                                      u5135 251A  
                                    u5215 2405                                      u5145 252E  
                                    u6121 212C                                      u5065 2442  
                                    u5155 253A                                      u5075 2449  
                                    u5315 2316                                      u5420 1063  
                                    u5245 2375                                      u5335 2325  
                                    u5185 23E1                                      u6145 21E7  
                                    u5265 237F                                      u5345 232C  
                                    u6155 21EC                                      u5275 2389  
                                    u6235 1CB5                                      u5285 2391  
                                    u8007 1658                                      u5375 223F  
                                    u7207 1B39                                      u5545 266E  
                                    u4905 248A                                      u8017 166E  
                                    u6345 14C8                                      u5705 1860  
                                    u7217 1B65                                      u8107 17E5  
                                    u8027 16A8                                      u6355 1527  
                                    u5395 225E                                      u5715 1873  
                                    u6275 1D46                                      u7307 0188  
                                    u7227 1B79                                      u5565 267A  
                                    u8117 2473                                      u8037 16BE  
                                    u6365 15F2                                      u5725 1894  
                                    u7317 0274                                      u7237 1C12  
                                    u5575 268E                                      u8127 247E  
                                    u8047 16FA                                      u7407 047B  
                                    u7327 0281                                      u7247 1C26  
                                    u4880 2465                                      u5585 269A  
                                    u8137 2497                                      u4945 24C9  
                                    u8057 1710                                      u5745 25E3  
                                    u7417 04B9                                      u7337 02CD  
                                    u7257 0053                                      u7177 1A6E  
                                    u6730 1A3B                                      u8147 24A2  
                                    u8067 174D                                      u5755 25D4  
                                    u5675 1826                                      u5923 135A  
                                    u7507 0DCA                                      u7427 0531  
                                    u7347 02F2                                      u7267 006E  
                                    u7187 1ACE                                      u6740 1A49  
                                    u4965 24D3                                      u8077 176F  
                                    u5765 261A                                      u5685 1839  
                                    u7517 0DD7                                      u7437 057F  
                                    u7357 0317                                      u7277 014F  
                                    u6805 1BF9                                      u7197 1B25  
                                    u4975 24DD                                      u8087 17B5  
                                    u5775 260B                                      u7607 1CC4  
                                    u7527 2754                                      u7447 0600  
                                    u7367 033C                                      u7287 015C  
                                    u4985 24E5                                      u8097 17CF  
                                    u5865 234D                                      u5953 0B18  
                                    u5945 13E8                                      u7617 1CD5  
                                    u7537 276A                                      u7457 0656  
                                    u7377 0364                                      u7297 016D  
                                    u5890 1056                                      u6690 1EC3  
                                    u5875 2354                                      u7707 0AA3  
                                    u7627 1D55                                      u7547 2781  
                                    u7467 068D                                      u7387 03A6  
                                    u6755 1AC8                                      u7717 0AB0  
                                    u7637 1D66                                      u7557 2797  
                                    u7477 070B                                      u7397 0426  
                                    u6765 1AE3                                      u7807 2557  
                                    u7727 0ABD                                      u7647 13B9  
                                    u7567 27AE                                      u7487 0CC1  
                                    u6775 1B14                                      u7817 2569  
                                    u7737 0B4A                                      u7657 13D1  
                                    u7577 27C4                                      u7497 0CCE  
                                    u6785 1B55                                      u7907 14EC  
                                    u7827 257B                                      u7747 0BA3  
                                    u7667 13FF                                      u7587 27DB  
                                    u7917 1502                                      u7837 258D  
                                    u7757 0BB2                                      u7677 1421  
                                    u7597 27EE                                      u7927 154B  
                                    u7847 25A1                                      u7767 1847  
                                    u7687 1430                                      u7937 1561  
                                    u7857 25B5                                      u7777 1881  
                                    u7697 0A35                                      u7947 1599  
                                    u7867 144E                                      u7787 25F0  
                                    u7957 15B9                                      u7877 1464  
                                    u7797 2627                                      u7967 15CD  
                                    u7887 148D                                      u7977 1616  
                                    u7897 14A3                                      u7987 162C  
                                    u7997 1642                                      _TMR2 028C  
                                    _WPUA 1F39                                      _WPUB 1F44  
                                    _WPUC 1F4F                            ??_eeprom_write 0021  
                                    _WPUD 1F5A                                      _WPUE 1F65  
                            __CFG_WRT$OFF 0000                             __CFG_FCMEN$ON 0000  
                           _addIntegValue 038A                                      _main 1A2D  
                                    lcd@a 002B                                      lcd@b 0029  
                         _TMR0_StartTimer 208A                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      indf1 0001  
                                    fsr1l 0006                                      btemp 007E  
                             main@txParam 0237                                      start 001D  
                         _timer5ReloadVal 0169                              _totalRunTime 01D7  
                         _TMR3_Initialize 213B                             __CFG_CSWEN$ON 0000  
                           __CFG_MCLRE$ON 0000                              ?_initMemRead 0073  
                                   S10823 2000                                     S10825 200A  
                                   S10827 2014                                     S10829 201E  
                            main@cmpName1 0220                                     ??_lcd 002A  
                 __end_of_TMR0_Initialize 21DD            ??_TMR0_DefaultInterruptHandler 0077  
          __size_of_OSCILLATOR_Initialize 0009             __end_of_OSCILLATOR_Initialize 20B1  
                                   l10011 0F35                                     l10003 0F0B  
                                   l10031 0F9C                                     l10023 0F6E  
                                   l10015 0F49                                     l10017 0F51  
                                   l10035 0FB0                                     l10037 0FB8  
                                   l10045 0FD5                                     l10071 1F87  
                                   l10047 0FFA                                     l10207 1B44  
                                   l10073 1F98                                     l10401 026E  
                                   l10209 1B71                                     l10075 1FA5  
                                   l10411 0291                                     l10315 0076  
                                   l10163 1ACA                                     l10077 1FB6  
                                   l10079 1FC3                                     l10511 0448  
                                   l10351 0148                                     l10191 1B03  
                                   l10513 0450                                     l10425 02A5  
                                   l10353 0149                                     l10193 1B31  
                                   l10611 0623                                     l10531 049C  
                                   l10451 031E                                     l10443 02F9  
                                   l10435 02D4                                     l10427 02AC  
                                   l10291 1C31                                     l10613 062B  
                                   l10525 048E                                     l10509 0439  
                                   l10551 04E6                                     l10471 0377  
                                   l10295 1C36                                     l10625 0669  
                                   l10609 0613                                     l10553 04F5  
                                   l10561 051F                                     l10545 04DA  
                                   l10529 0498                                     l10385 01BD  
                                   l10289 1C2E                                     l10571 0553  
                                   l10555 0504                                     l10491 03D7  
                                   l10475 0383                                     l10459 0343  
                                   l10299 1C3B                                     l10661 06DE  
                                   l10629 0670                                     l10549 04E4  
                                   l10493 03E4                                     l10469 036B  
                                   l10397 025A                                     l10655 06BE  
                                   l10591 05B0                                     l10575 055C  
                                   l10559 0513                                     l10495 03F3  
                                   l10657 06C0                                     l10665 06ED  
                                   l10593 05BD                                     l10497 03FB  
                                   l10489 03C5                                     l10569 0547  
                                   l10681 0730                                     l10659 06CF  
                                   l10667 06F9                                     l10595 05CD  
                                   l10675 0721                                     l10683 0745  
                                   l10677 072D                                     l10597 05D5  
                                   l10589 059E                           __end_of___aldiv 26BB  
                                   _ADACQ 009D                                     _ADACT 0099  
                                   _ADCAP 009B                                     ?_main 0073  
                                   _ADCLK 0098                                     _ADCNT 010C  
                                   _ADPCH 009E                                     _ADREF 009A  
                         __end_of___awdiv 24FA                                     _ADPRE 009C  
                                   STR_10 2800                                     STR_11 2855  
                                   STR_12 2800                                     STR_20 2844  
                                   STR_13 2855                                     STR_21 2866  
                                   STR_14 2800                                     STR_30 2891  
                                   STR_22 2884                                     STR_23 2884  
                                   STR_15 28BE                                     STR_31 289D  
                                   STR_40 28BA                                     STR_24 28BC  
                                   STR_16 28BC                                     STR_32 2877  
                                   STR_25 28BA                                     STR_41 28BE  
                                   STR_33 2891                                     STR_17 28BA  
                           __CFG_WDTE$OFF 0000                                     STR_18 28B2  
                                   STR_26 28BE                                     STR_34 289D  
                                   STR_19 28B6                                     STR_27 28BC  
                                   STR_35 2877                                     STR_28 28BA  
                                   STR_36 28BC                           __end_of___awmod 245E  
                                   STR_37 28BA                                     STR_29 28BE  
                                   STR_38 28BE                                     STR_39 28BC  
                                   _ADRPT 010D                           __end_of___lldiv 254D  
                         ___awdiv@divisor 0020                           __end_of___llmod 2418  
                                   _T3CLK 0217                                     _T2CON 028E  
                                   _T3CON 0214                                     _T5CLK 021D  
                                   _T2HLT 028F                                     _T5CON 021A  
                          __CFG_DEBUG$OFF 0000                          _mainsVoltSamples 0120  
                         __end_of___lwdiv 239E                                     _T2TMR 028C  
                                   _T2RST 0291                           __end_of___lwmod 2339  
                                   i1l436 078C                                     i1l462 0011  
                                   i1l466 0018                           ___awdiv@counter 0025  
                                   _OSCEN 0891                        _PWM4_LoadDutyValue 2254  
                                   _TMR0H 001D                                     _TMR0L 001C  
                                   _TMR3H 0213                                     _TMR3L 0212  
                                   _TMR5H 0219                                     _TMR5L 0218  
                                   _PORTB 000D                                     _PORTC 000E  
                                   _PORTD 000F                                     _TRISA 0011  
                                   _TRISB 0012                                     _TRISC 0013  
                                   _TRISD 0014                                     _TRISE 0015  
       __size_of_TMR0_SetInterruptHandler 0009                       ___lmul@multiplicand 0024  
               ?_TMR0_SetInterruptHandler 0020                           __end_of_lcdInit 2235  
                        __end_of_TMR0_ISR 2163                           __end_of_display 22BC  
                              _DoorClosed 0395                      _tempMainsVoltSamples 0124  
                                   _getch 07E7                        __size_of_TMR2_Stop 0003  
                             ?_TMR2_Start 0073                       ?_PWM4_LoadDutyValue 0020  
                                   _putch 2096                                     main@i 023A  
                 __end_of_PWM3_Initialize 20D9                            __pbitbssCOMMON 0380  
                          __CFG_BOREN$OFF 0000                                     pclath 000A  
                 __end_of_CWG1_Initialize 2105                                     status 0003  
                                   wtemp0 007E                           _TMR2_StartTimer 2090  
                         _TMR5_Initialize 1800                           __initialization 001F  
                   TMR5_ReadTimer@readVal 0075                              __end_of_main 0749  
                    ??_PWM4_LoadDutyValue 0022                        _checkCurrentSensor 081A  
                 __end_of_PWM4_Initialize 20E4                   __end_of_TMR2_Initialize 20F3  
             ?_INTERRUPT_InterruptManager 0073                   __end_of_CWG2_Initialize 2117  
                                  ??_main 00B3                           _TMR3_StartTimer 2084  
                   _TMR3_InterruptHandler 015A                       ?_checkCurrentSensor 00A0  
                                  _ADACCH 0091                                    _ADACCL 0090  
                 __end_of_TMR0_StartTimer 208D                                    ?_getch 0073  
                                  _ADCON0 0093                                    _ADCON1 0094  
                                  _ADCON2 0095                                    _ADCON3 0096  
                                  _ADERRH 0117                                    _ADERRL 0116  
                        ___llmod@dividend 0032                                    _ADLTHH 010F  
                                  _ADLTHL 010E                                    _ADRESH 008D  
                                  _ADRESL 008C                                    _CCPR3H 0315  
                                  _CCPR4H 0319                                    _CCPR3L 0314  
                                  _CCPR4L 0318                                    _ADSTAT 0097  
                                  _ADUTHH 0111                          ___awdiv@dividend 0022  
                                  _ADUTHL 0110                                    _ANSELA 1F38  
                                  ?_putch 0073                                    _ANSELB 1F43  
                                  _ANSELC 1F4E                                    _ANSELD 1F59  
                                  _ANSELE 1F64                        __CFG_RSTOSC$HFINT1 0000  
                                  _T0CON0 001E                                    _T0CON1 001F  
                                  _T3GATE 0216                                    _T3GCON 0215  
                                  _T5GATE 021C                                    _T5GCON 021B  
                                  _RC1REG 0119                                    _RC1STA 011D  
                                  _RD0PPS 1F28                                    _RD1PPS 1F29  
                                  _RD2PPS 1F2A                                    _RD3PPS 1F2B  
                                  _ODCONA 1F3A                                    _ODCONB 1F45  
                                  _ODCONC 1F50                                    _RC6PPS 1F26  
                                  _ODCOND 1F5B                                    _ODCONE 1F66  
                 __end_of_TMR3_Initialize 214E                                    i1l6121 07D7  
                                  i1l6113 07A9                                    i1l6125 07E1  
                          __CFG_WDTCCS$SC 0000                                    i1l6091 0783  
                                  i1l6085 076C                                    i1l6089 0775  
                                  _OSCFRQ 0893                                    _TX1REG 011A  
                                  _TX1STA 011E                      ??_checkCurrentSensor 00A2  
                         _TMR3_WriteTimer 2179                            __CFG_PWRTE$OFF 0000  
                    __size_of_eeprom_read 0012                              _CCPTMRS0bits 021E  
                                  ___lmul 2339               __size_of_PWM3_LoadDutyValue 001F  
                               ??___aldiv 0034                                    ___wmul 21DD  
                               ??___awdiv 0024                                 ??___awmod 0024  
                       __end_of_TMR2_Stop 2096                                 ??___lldiv 0028  
                               ??___llmod 0036                                 ??___lwdiv 0024  
                        _irSensorDetected 0385                                 ??___lwmod 0024  
                     __size_of_TMR2_Start 0003                          ?_TMR0_Initialize 0073  
                                  _keypad 254D                           _battVoltSamples 00B9  
                        ___awdiv@quotient 0027                           ___awmod@divisor 0020  
                    __end_of_eeprom_write 22E1                                 ??_lcdInit 002C  
                         ___awmod@counter 0025                                 ??_display 002F  
                         _TMR5_StartTimer 2087                    _adcSamplingTimeExpired 0391  
                         _ADCC_Initialize 0800                     __size_of_default_init 0016  
                   __size_of_default_menu 00C5                          __end_of_number_2 23D5  
                        __end_of_number_3 2741                          __end_of_number_4 2000  
                        __end_of_number_5 1210         __size_of_ADCC_GetSingleConversion 0012  
               ?_ADCC_GetSingleConversion 0020                   __end_of_TMR2_StartTimer 2093  
TMR0_SetInterruptHandler@InterruptHandler 0020                          __end_of_outputOn 1D78  
                   __end_of_serialCommand 1000                          ?_PWM3_Initialize 0073  
                 __end_of_TMR5_Initialize 1814                         _SYSTEM_Initialize 2273  
                 __end_of__initialization 0047                          ?_CWG1_Initialize 0073  
                         eeprom_read@addr 0020                         ?_ouputOnAntiClock 0073  
                      ?_SYSTEM_Initialize 0073                      _currentSensorSamples 012C  
                         _TMR5_WriteTimer 2190                         ?_ouputOnClockwise 0073  
                      ??_ouputOnAntiClock 00A8                            __pcstackCOMMON 0073  
                      ??_ouputOnClockwise 00A8                              __pidataBANK3 22E1  
                     ??_SYSTEM_Initialize 0022                   __end_of_TMR3_StartTimer 2087  
                               ?_TMR0_ISR 0073                      _sampleCountMainsVolt 0162  
                ??_checkMainSupplyFailure 00A0                             __end_of_getch 0800  
                    __size_of_initMemRead 03C4                              _default_init 2163  
                            _default_menu 1968                             __end_of_putch 209C  
                        ?_TMR2_Initialize 0073                          ?_PWM4_Initialize 0073  
                     _preClockWiseDistace 01DF                          ?_CWG2_Initialize 0073  
             PWM4_LoadDutyValue@dutyValue 0020                              _CWG1CON0bits 0610  
                            _CWG2CON0bits 061A                         eeprom_write@value 0020  
                                 ??_getch 0020                          ?_TMR0_StartTimer 0073  
               __end_of_SYSTEM_Initialize 2297                   __end_of_TMR3_WriteTimer 2190  
                                 ??_putch 0020                                __pbssBANK1 00B9  
                              __pbssBANK2 0120                                __pbssBANK3 01CB  
                        ?_TMR3_Initialize 0073                            _disToBeCovered 0134  
             __size_of_EUSART_Receive_ISR 001B                          startMotor@i_2076 0028  
                         _upDwnKeyPressed 0392                   __size_of_TMR3_ReadTimer 000A  
                         _adcValueChanged 0150                                __pmaintext 1A2D  
                            stopMotor@dir 0025          __end_of_TMR0_SetInterruptHandler 20BA  
                 __size_of_TMR0_StopTimer 0003                                   ?___lmul 0020  
                                 ?___wmul 0020                                ??_TMR0_ISR 0078  
                 __end_of_TMR5_StartTimer 208A                           __CFG_PPS1WAY$ON 0000  
                 __end_of_ADCC_Initialize 081A              _doNotOperateWhileOpeningDoor 0386  
                              __pintentry 0004                            stopMotor@speed 0022  
                                 _CCP3CON 0316                                   _CCP4CON 031A  
                                 _ADFLTRH 0115                                   _ADFLTRL 0114  
                                 ?_keypad 0073               __end_of_checkBatteryVoltage 1EB8  
                        _mainPowerFailure 0382                            ___lmul@product 0028  
                                 _ADPREVH 008F                                   _ADPREVL 008E  
                                 _ADSTPTH 0113                                   _ADSTPTL 0112  
                __CFG_SCANE$not_available 0000                                   _CWG1DBF 060F  
                                 _CWG1AS0 0612                                   _CWG1AS1 0613  
                                 _CWG2DBF 0619                                   _CWG2AS0 061C  
                                 _CWG2AS1 061D                                   _CWG1DBR 060E  
                                 _CWG2DBR 0618                                   _CWG1ISM 060D  
                                 _CWG2ISM 0617                                   _CWG1STR 0614  
                                 _CWG2STR 061E                              _T3CKIPPSbits 1E94  
                           _eusartRxCount 00C3                                   _SP1BRGH 011C  
                                 _SP1BRGL 011B                   __size_of_TMR5_ReadTimer 000A  
                                 _OSCCON1 088D                                   _OSCCON3 088F  
                                 _NVMADRH 081B                                   _NVMADRL 081A  
                                 _NVMDATH 081D                                   _OSCTUNE 0892  
                                 _NVMDATL 081C                                   _NVMCON2 081F  
                                 _PPSLOCK 1E8F                              ??_TMR2_Start 0020  
                 __size_of_TMR2_StopTimer 0003                                   _STARTED 0397  
                          initMemRead@var 0040                          ?_TMR2_StartTimer 0073  
                              _onByFootSw 0387                   __end_of_TMR5_WriteTimer 21A7  
                              _doorOpened 0396                        __size_of_stopMotor 0092  
                              _doorStatus 0165                          ?_TMR5_Initialize 0073  
                 _preAntiClockWiseDistace 01DB                                _keyCounter 015C  
                            _T5CKIPPSbits 1E96                                 ?_number_2 0073  
                               ?_number_3 002C                                 ?_number_4 0038  
                               ?_number_5 0038                     __size_of_eeprom_write 0025  
                           _integralValue 014E                             _SetParamCount 0166  
                                 ___aldiv 2639                                   ___awdiv 24A8  
                         __size_of___lmul 0030                                   ___awmod 2418  
                        ?_TMR3_StartTimer 0073                                   ___lldiv 24FA  
                         __size_of___wmul 001C                                   ___llmod 23D5  
                                 ___lwdiv 2369                                   ___lwmod 230C  
         __size_of_checkMainSupplyFailure 00C2                           number_5@tenThou 0056  
                         __CFG_STVREN$OFF 0000                        __end_of_TMR2_Start 2084  
                               ?_outputOn 0073                           __size_of_keypad 0076  
                           startMotor@dir 0025                       _battVoltPeriodicity 0148  
                                 _lcdInit 2217                                   __ptext1 0BBE  
                                 __ptext2 2741                                   __ptext3 07E7  
                                 __ptext4 2096                                   __ptext5 1C47  
                                 __ptext6 1210                                   __ptext7 08FA  
                                 __ptext8 1814                                   __ptext9 25C3  
                                 _display 2297                     _OSCILLATOR_Initialize 20A8  
                               _T2CONbits 028E                              __size_of_lcd 004A  
                               _T3CONbits 0214                      _mainsVoltPeriodicity 0144  
                        ___awmod@dividend 0022                     checkCurrentSensor@dir 0073  
                        ___aldiv@dividend 0030                  ??_PIN_MANAGER_Initialize 0020  
                               _T2HLTbits 028F                                 _T5CONbits 021A  
              __size_of_SYSTEM_Initialize 0024                                   clrloop0 209D  
                                 main@tmp 0238                      end_of_initialization 0047  
                        ?_TMR3_WriteTimer 0020                                 _T2RSTbits 0291  
                                 init_ram 20A2                              _eeprom_write 22BC  
                                 initloop 20A3                         _EUSART_Initialize 21F9  
                         ___lldiv@divisor 0020                               number_4@arr 0040  
                             number_5@arr 0040                               number_2@num 002E  
                             number_4@hun 004E                               number_3@num 002C  
                             number_5@hun 004E                               number_4@ten 004A  
                             number_4@num 0038                               number_5@ten 004A  
                             number_5@num 0038                           ___lldiv@counter 002D  
                            keypad@retKey 0022                        ?_EUSART_Initialize 0073  
                              ??_number_2 002C                                ??_number_3 002E  
                              ??_number_4 003C                                ??_number_5 003C  
                   TMR3_ReadTimer@readVal 0075                          ___aldiv@quotient 0037  
                                 psplit$0 24006C                                   psplit$1 6C006D  
                        ?_TMR5_StartTimer 0073               __size_of_PWM4_LoadDutyValue 001F  
                              main@F15465 01C5                                main@F15467 01A0  
                        ?_ADCC_Initialize 0073          __end_of_ADCC_GetSingleConversion 2129  
                   __CFG_WDTCPS$WDTCPS_31 0000                                ??_outputOn 00AF  
                     ??_EUSART_Initialize 0020                         __end_of_stopMotor 18A6  
                _TMR0_SetInterruptHandler 20B1                                 _TMR2_Stop 2093  
                   _TMR5_InterruptHandler 0158                                _updateTime 0383  
                    pnum$maintext_split_1 006C                      pnum$maintext_split_2 006D  
                              main@i_2125 023D                                main@i_2127 023E  
                  _checkMainSupplyFailure 18A6                          __CFG_FEXTOSC$OFF 0000  
                              _startMotor 25C3                          ?_TMR5_WriteTimer 0020  
                 TMR5_WriteTimer@timerVal 0020                 __end_of_EUSART_Initialize 2217  
             saveConfiguration@configTYpe 0025                             ??_eeprom_read 0020  
                              display@add 002E                               _CCP3CONbits 0316  
             __size_of_checkCurrentSensor 00E0                               _CCP4CONbits 031A  
                   _adcSamplingMainSupply 038F                         _saveConfiguration 2741  
              __end_of_PWM3_LoadDutyValue 2254                            _TMR3_ReadTimer 20BA  
                    _timer0ReloadVal16bit 016D                            _TMR0_StopTimer 208D  
                      ?_saveConfiguration 0022                            __end_of___lmul 2369  
                          __end_of___wmul 21F9                         __size_of_TMR0_ISR 0015  
                     ??_saveConfiguration 0024                 __size_of_ouputOnAntiClock 02C4  
                              ?_TMR2_Stop 0073                    ?_OSCILLATOR_Initialize 0073  
                          __end_of_keypad 25C3                 __size_of_ouputOnClockwise 022C  
                          _TMR5_ReadTimer 20C4                       start_initialization 001F  
                __size_of_TMR0_Initialize 001B           __size_of_PIN_MANAGER_Initialize 0055  
                             __end_of_lcd 24A8                            _TMR2_StopTimer 1000  
                             putch@txData 0020                 __end_of_saveConfiguration 2800  
                  __end_of_TMR3_ReadTimer 20C4                           ___llmod@divisor 002E  
                         ___llmod@counter 0037                    __end_of_TMR0_StopTimer 2090  
                        __CFG_LPBOREN$OFF 0000                             ??_initMemRead 003A  
                __size_of_PWM3_Initialize 000B                               startMotor@i 0026  
                                ??___lmul 0028                  __size_of_CWG1_Initialize 0012  
                                ??___wmul 0024                       __end_of_eeprom_read 213B  
                             __pdataBANK3 01A0                                  ??_keypad 0020  
                  __size_of_serialCommand 0442                       _sampleCountBattVolt 0163  
                  __end_of_TMR5_ReadTimer 20CE                  _ADCC_GetSingleConversion 2117  
                  __end_of_TMR2_StopTimer 1003                               __pbssCOMMON 0079  
                               ___latbits 0004                             __pcstackBANK0 0020  
                           __pcstackBANK1 00A0                             __pcstackBANK4 0220  
                             _cnfHoldTime 0156                  __size_of_PWM4_Initialize 000B  
                __size_of_TMR2_Initialize 000F                    _doorOpenedWhileClosing 0393  
                __size_of_CWG2_Initialize 0012                               ?_startMotor 0022  
                             _CWG1AS0bits 0612                               _CWG2AS0bits 061C  
                        eeprom_write@addr 0021                __end_of_EUSART_Receive_ISR 21C2  
              __size_of_EUSART_Initialize 001E                            number_4@F15349 01BB  
                         ?_TMR3_ReadTimer 0073                            number_5@F15364 01B1  
                   _TMR0_InterruptHandler 01EB                                 __pnvBANK2 0169  
                               __pnvBANK3 01EB                  __size_of_TMR0_StartTimer 0003  
                               _diffValue 014C                           ?_TMR0_StopTimer 0073  
                        ___lwdiv@dividend 0022                    _PIN_MANAGER_Initialize 1003  
                         stopMotor@i_2071 0028                  __size_of_TMR3_Initialize 0013  
                                ?___aldiv 002C           ADCC_GetSingleConversion@channel 0023  
                                ?___awdiv 0020                                  ?___awmod 0020  
                         startMotor@speed 0022                                  ?___lldiv 0020  
                    _preAntiClockWiseTime 0138                                  ?___llmod 002E  
                                ?___lwdiv 0020                                  ?___lwmod 0020  
                            _eusartRxHead 007A                         __size_of_number_2 0037  
                       __size_of_number_3 0086                         __size_of_number_4 0148  
                       __size_of_number_5 01B8                              _eusartTxHead 00C5  
                               _direction 00C1                              _eusartRxTail 00C4  
                            _eusartTxTail 0168              ??_INTERRUPT_InterruptManager 0078  
                     __end_of_initMemRead 1800                                  ?_lcdInit 0073  
                             ??_TMR2_Stop 0020                                 __pswtext1 2000  
                               __pswtext2 200A                                 __pswtext3 2014  
                               __pswtext4 201E                                  ?_display 002C  
                         ?_TMR5_ReadTimer 0073                   _eusartTxBufferRemaining 016F  
                                _BAUD1CON 011F                         __size_of_outputOn 0131  
                         ?_TMR2_StopTimer 0073                                 _forceStop 0381  
                             _incDecSpeed 0388              __size_of_checkBatteryVoltage 0140  
                        ___lwdiv@quotient 0026                                  _CWG1CON0 0610  
                                _CWG1CON1 0611                                  _CWG2CON0 061A  
                                _CWG2CON1 061B                            __size_of_getch 0019  
                                _T2CLKCON 0290                            __size_of_putch 0006  
                          _eusartRxBuffer 0079                             _serialCommand 0BBE  
                         ___aldiv@divisor 002C                         ??_TMR0_Initialize 0022  
                          _eusartTxBuffer 01CB                           ___aldiv@counter 0035  
              __size_of_saveConfiguration 00BF                            ___wmul@product 0024  
                 checkCurrentSensor@speed 00A0                       _tempBattVoltSamples 0128  
                               clear_ram0 209C                               _eeprom_read 2129  
                             _encoderTmr3 01E7                               _encoderTmr5 0140  
                                _PIE0bits 0716                                  _PIE3bits 0719  
                __size_of_TMR2_StartTimer 0003       __size_of_INTERRUPT_InterruptManager 0019  
              ??_TMR0_SetInterruptHandler 0022                                  _PIR0bits 070C  
                                _PIR3bits 070F                                  _PIR4bits 0710  
                     serialCommand@rcvCmd 00B1                  __size_of_TMR5_Initialize 0014  
                                _TMR0_ISR 214E                           initMemRead@incR 0044  
                         initMemRead@temp 0042                       __size_of_startMotor 0076  
                            _preDirection 0167                         ??_PWM3_Initialize 0020  
                        _ouputOnAntiClock 08FA                                _ADCON0bits 0093  
                              _ADCON1bits 0094                                _ADCON2bits 0095  
                              _ADCON3bits 0096                         ___wmul@multiplier 0020  
                       ??_CWG1_Initialize 0020                          _ouputOnClockwise 1210  
                               _stopCount 0154                  __size_of_TMR3_StartTimer 0003  
                               _stopMotor 1814                   ?_checkMainSupplyFailure 0073  
                             _mainVoltRef 01D3                         ___lmul@multiplier 0020  
                          ?_serialCommand 0073                         ??_TMR2_Initialize 0020  
                       ??_PWM4_Initialize 0020                         ??_CWG2_Initialize 0020  
                              _ADSTATbits 0097                  __size_of_TMR3_WriteTimer 0017  
          ouputOnAntiClock@tempEncoderVal 00AA                __end_of_PWM4_LoadDutyValue 2273  
                           _clockWiseTime 00CC                               _initMemRead 143C  
                 ??_OSCILLATOR_Initialize 0020                             ?_default_init 0073  
                           ?_default_menu 0073                         ??_TMR0_StartTimer 0020  
                        __size_of___aldiv 0082                              pnum$maintext 0024  
                        __size_of___awdiv 0052                          __size_of___awmod 0046  
        checkCurrentSensor@tempEncoderVal 00A6                          __size_of___lldiv 0053  
                        __size_of___llmod 0043                          __size_of___lwdiv 0035  
                        __size_of___lwmod 002D                              _openedByFoot 0394  
                       ??_TMR3_Initialize 0020                                _CWG1CLKCON 060C  
                           _speedReduced1 038D                             _speedReduced2 038C  
                      _PWM3_LoadDutyValue 2235                                _CWG2CLKCON 0616  
                        __size_of_lcdInit 001E            __end_of_checkMainSupplyFailure 1968  
                        __size_of_display 0025                  __size_of_TMR5_StartTimer 0003  
                              _T0CON0bits 001E                                ?_stopMotor 0022  
                __size_of_ADCC_Initialize 001A                           ___lwdiv@divisor 0020  
                              stopMotor@i 0026                           ___lwdiv@counter 0025  
                                __ptext10 2254                                  __ptext11 2235  
                                __ptext20 208D                                  __ptext12 1968  
                                __ptext21 208A                                  __ptext13 081A  
                                __ptext30 2418                                  __ptext22 1EB8  
                                __ptext14 2339                                  __ptext31 24A8  
                                __ptext23 2217                                  __ptext15 2190  
                                __ptext40 24FA                                  __ptext32 22BC  
                                __ptext24 254D                                  __ptext16 2179  
                                __ptext41 2297                                  __ptext33 2129  
                                __ptext25 143C                                  __ptext17 1000  
                                __ptext50 20E4                                  __ptext42 245E  
                                __ptext34 21DD                                  __ptext26 26BB  
                                __ptext18 2093                                  __ptext51 2081  
                                __ptext43 2639                                  __ptext35 2163  
                                __ptext27 230C                                  __ptext19 2090  
                                __ptext60 20F3                                  __ptext52 21C2  
                                __ptext44 2117                                  __ptext36 18A6  
                                __ptext28 2369                                  __ptext61 0800  
                                __ptext53 20B1                                  __ptext45 2273  
                                __ptext37 1D78                                  __ptext29 239E  
                                __ptext54 20D9                                  __ptext46 1800  
                                __ptext38 1058                                  __ptext63 214E  
                                __ptext55 20CE                                  __ptext47 2087  
                                __ptext39 23D5                                  __ptext64 0749  
                                __ptext56 1003                                  __ptext48 213B  
                                __ptext65 20C4                                  __ptext57 20A8  
                                __ptext49 2084                                  __ptext66 20BA  
                                __ptext58 21F9                       ?_PWM3_LoadDutyValue 0020  
                                __ptext67 21A7                                  __ptext59 2105  
                              _T3GCONbits 0215                   TMR3_WriteTimer@timerVal 0020  
                                _holdTime 00C2                __end_of_checkCurrentSensor 08FA  
                           __size_of_main ED1C                                _T5GCONbits 021B  
                            _subDiffValue 0389      __end_of_TMR0_DefaultInterruptHandler 07E7  
   __size_of_TMR0_DefaultInterruptHandler 009E              _TMR0_DefaultInterruptHandler 0749  
                    __CFG_WDTCWS$WDTCWS_7 0000                  __size_of_TMR5_WriteTimer 0017  
                               number_3@a 0038                                 number_3@b 0036  
                            _tempSpeedRpm 00BD                                  _timeInMs 015E  
                              _RC1STAbits 011D                                  _number_2 239E  
                                _number_3 26BB                                  _number_4 1EB8  
                                _number_5 1058                      ouputOnClockwise@temp 00AE  
                    ??_PWM3_LoadDutyValue 0022                                  _speedRpm 00BF  
              ??_ADCC_GetSingleConversion 0023                            ??_default_init 0020  
                          ??_default_menu 00A0                                  int$flags 007E  
                       ??_TMR2_StartTimer 0020        __end_of_INTERRUPT_InterruptManager 001D  
              _INTERRUPT_InterruptManager 0004                                  _stopByIR 038B  
                                _stopFlag 0384                                  _outputOn 1C47  
                                display@a 002C                                  display@i 0030  
                                main@temp 023F               PIN_MANAGER_Initialize@state 0020  
                       ??_TMR5_Initialize 0020                                _INTCONbits 000B  
                             _NVMCON1bits 081E                               _sampleCount 0164  
                          __pstringtext10 2891                            __pstringtext11 289D  
                          __pstringtext12 28A8                            __pstringtext13 28B2  
                          __pstringtext14 28B6                            __pstringtext15 28BA  
                          __pstringtext16 28BC                            __pstringtext17 28BE  
                          __pstringtext18 0000                           ??_serialCommand 00AF  
                        ??_TMR3_ReadTimer 0075                              ??_startMotor 0024  
                              _INTPPSbits 1E90                              _speedReduced 038E  
                       ??_TMR3_StartTimer 0020                          _preClockWiseTime 013C  
                                intlevel1 0000                          ??_TMR0_StopTimer 0020  
                       _antiClockWiseTime 00C8                          ___lwmod@dividend 0022  
                        ___lldiv@dividend 0024                   ?_PIN_MANAGER_Initialize 0073  
                       __CFG_CLKOUTEN$OFF 0000                              number_3@num1 002E  
                            number_3@num2 0030                              number_3@num3 0032  
                            number_4@num1 0058                              number_4@num2 005C  
                            number_4@num3 0060                              number_4@num4 0064  
                             _PPSLOCKbits 1E8F                              number_3@temp 0034  
                            number_5@num1 005C                              number_5@num2 0060  
                            number_5@num3 0064                              number_5@num4 0068  
                            number_5@num5 006C                              number_4@thou 0052  
                            number_4@unit 0056                              number_5@thou 0052  
                            number_5@unit 005A                               _tempSamples 0130  
           ?_TMR0_DefaultInterruptHandler 0073                       _checkBatteryVoltage 1D78  
                        ??_TMR5_ReadTimer 0075                        _EUSART_Receive_ISR 21A7  
             PWM3_LoadDutyValue@dutyValue 0020                          ??_TMR2_StopTimer 0020  
                       ??_TMR3_WriteTimer 0022                        __end_of_startMotor 2639  
                           __pstringtext1 2800                             __pstringtext2 2811  
                           __pstringtext3 2822                             __pstringtext4 2833  
                           __pstringtext5 2844                             __pstringtext6 2855  
                           __pstringtext7 2866                             __pstringtext8 2877  
                           __pstringtext9 2884                       ?_EUSART_Receive_ISR 0073  
                        ___lldiv@quotient 0029                           ___lwmod@divisor 0020  
                         _TMR0_Initialize 21C2                               ??_stopMotor 0024  
                         ___lwmod@counter 0025                      ?_checkBatteryVoltage 0073  
                            ___aldiv@sign 0036                               _pretimeInMs 0152  
                              _TMR2_Start 2081                         ??_TMR5_StartTimer 0020  
          __end_of_PIN_MANAGER_Initialize 1058                         ??_ADCC_Initialize 0020  
                           ?_eeprom_write 0020                  __end_of_ouputOnAntiClock 0BBE  
                              _STATUSbits 0003                      ??_EUSART_Receive_ISR 0073  
                            ?_eeprom_read 0073                     _TMR2_InterruptHandler 0160  
                __end_of_ouputOnClockwise 143C                           _PWM3_Initialize 20CE  
                             getch@retVal 0021                           _CWG1_Initialize 20F3  
          _adcSamplingBattVoltTimeExpired 0390  
